**** BEGIN LOGGING AT Sun Dec 10 08:25:48 2023

Dec 10 08:25:48 *	Now talking on #emacs
Dec 10 08:25:48 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 10 08:25:48 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 10 08:25:59 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sun Dec 10 08:25:59 2023

**** BEGIN LOGGING AT Sun Dec 10 08:26:20 2023

Dec 10 08:26:19 *	Now talking on #emacs
Dec 10 08:26:19 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 10 08:26:19 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 10 08:29:25 *	deudz has quit (Remote host closed the connection)
Dec 10 08:29:29 <init>	Null_A, this seem good https://github.com/abougouffa/minemacs
Dec 10 08:30:25 *	pi1 has quit (Ping timeout: 256 seconds)
Dec 10 08:31:02 <hwpplayer1>	init: thanks
Dec 10 08:31:20 <init>	huh?
Dec 10 08:32:42 *	ktx (~ktx@user/ktx) has joined
Dec 10 08:33:09 *	meritamen (~user@user/meritamen) has joined
Dec 10 08:33:46 <edgar-rft>	emacs has IEEE floats, so (min emacs) => -inf
Dec 10 08:34:22 *	Null_A has quit (Remote host closed the connection)
Dec 10 08:34:55 *	ano has quit (Ping timeout: 240 seconds)
Dec 10 08:34:59 *	jmd (~user@2001:a61:2a3c:c501:73d2:4725:d71d:e575) has joined
Dec 10 08:35:45 *	ano (~ano@user/ano) has joined
**** ENDING LOGGING AT Sun Dec 10 08:40:12 2023

**** BEGIN LOGGING AT Sun Dec 10 08:40:12 2023

Dec 10 08:40:34 *	Disconnected ()
**** ENDING LOGGING AT Sun Dec 10 08:40:34 2023

**** BEGIN LOGGING AT Sun Dec 10 08:41:01 2023

Dec 10 08:41:01 *	Now talking on #emacs
Dec 10 08:41:01 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 10 08:41:01 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 10 08:41:01 *	Received a CTCP VERSION from EMIYA
Dec 10 08:41:26 *	salem (~salem@pool-108-17-95-29.pitbpa.fios.verizon.net) has joined
**** ENDING LOGGING AT Sun Dec 10 08:42:24 2023

**** BEGIN LOGGING AT Sun Dec 10 08:42:24 2023

Dec 10 08:43:16 *	dacd has quit (Ping timeout: 245 seconds)
Dec 10 08:44:22 *	Null_A (~null_a@c-73-93-244-42.hsd1.ca.comcast.net) has joined
Dec 10 08:45:17 <Null_A>	init: if I ever give up doom, i would roll my own, i'm completely happy with it
Dec 10 08:45:38 *	genieliu has quit (Ping timeout: 252 seconds)
Dec 10 08:46:33 *	igemnace has quit (Quit: WeeChat 4.1.2)
Dec 10 08:48:11 *	OokaLoup has quit (Remote host closed the connection)
Dec 10 08:48:45 *	m1dnight has quit (Quit: WeeChat 4.1.1)
Dec 10 08:49:11 *	OokaLoup (~loup@2a01:e0a:9a3:b630:a693:82a7:a45:9d97) has joined
Dec 10 08:52:14 *	genieliu (~genieliu@user/genieliu) has joined
Dec 10 08:55:10 *	dcb has quit (Quit: MSN Messenger 4.1.2)
Dec 10 08:58:38 *	Ragnor has quit (Read error: Connection reset by peer)
**** ENDING LOGGING AT Sun Dec 10 09:00:31 2023

**** BEGIN LOGGING AT Sun Dec 10 09:00:31 2023

**** ENDING LOGGING AT Sun Dec 10 09:00:42 2023

**** BEGIN LOGGING AT Sun Dec 10 09:01:29 2023

Dec 10 09:01:29 *	Now talking on #emacs
Dec 10 09:01:29 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 10 09:01:29 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 10 09:02:27 *	sandb0y (~pirate@user/sandb0y) has joined
Dec 10 09:02:58 *	genieliu has quit (Ping timeout: 264 seconds)
**** ENDING LOGGING AT Sun Dec 10 09:03:11 2023

**** BEGIN LOGGING AT Sun Dec 10 09:03:11 2023

**** ENDING LOGGING AT Sun Dec 10 09:03:53 2023

**** BEGIN LOGGING AT Sun Dec 10 09:03:53 2023

Dec 10 09:04:18 *	bilegeek has quit (Quit: Leaving)
**** ENDING LOGGING AT Sun Dec 10 09:06:12 2023

**** BEGIN LOGGING AT Sun Dec 10 09:06:12 2023

**** ENDING LOGGING AT Sun Dec 10 09:11:35 2023

**** BEGIN LOGGING AT Sun Dec 10 09:11:35 2023

Dec 10 09:20:32 <Viking667>	woot. We should send edgar-rft to the money launderers - he's passing around fake $1, $2 and $3 notes.
Dec 10 09:26:17 <needle>	emacs is so powerful, it can immitate vim
Dec 10 09:26:34 <needle>	it does not work that good the other way around
Dec 10 09:27:03 <needle>	Reason why users, me included, use those doom or other vim kits
Dec 10 09:43:51 <edgar-rft>	sh$ cat </dev/bitcoin | more >Viking667
Dec 10 10:03:13 *	Disconnected ()
**** ENDING LOGGING AT Sun Dec 10 10:03:13 2023

**** BEGIN LOGGING AT Sun Dec 10 10:42:46 2023

Dec 10 10:42:46 *	Now talking on #emacs
Dec 10 10:42:46 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 10 10:42:46 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 10 10:45:39 <Null_A>	no longer a boy, the world stripped me of my innocence long ago
Dec 10 10:46:40 <Null_A>	! how does a boy become a man
Dec 10 10:46:42 <fsbot>	🤖[g] A boy becomes a man through a combination of physical and emotional growth, societal expectations, and personal experiences. It is a gradual process of maturation and learning, guided by cultural norms and individual values.
Dec 10 10:51:26 <rnkn>	who says robots have nothing to offer us
Dec 10 10:52:35 <jrx>	! are you ChatGPT ?
Dec 10 10:52:37 <fsbot>	🤖[g] Yes.
Dec 10 10:52:56 <jrx>	! What version of ChatGPT are you ?
Dec 10 10:52:57 <fsbot>	🤖[g] Latest version of ChatGPT.
Dec 10 10:53:11 <jrx>	! Now I know you're just faking it !
Dec 10 10:53:13 <fsbot>	🤖[g] Well, if I'm faking it, I'm doing a pretty good job, don't you think?
Dec 10 10:53:54 <jrx>	! What is the best editor : Emacs or vi ?
Dec 10 10:53:56 <fsbot>	🤖[g] Emacs and vi are both popular text editors with their own strengths and unique features. Ultimately, the best editor is the one that works best for you and fits your workflow preferences. It's a matter of personal preference, so feel free to try both and decide which one you prefer.
Dec 10 10:54:01 <rnkn>	! you've seen things we people wouldn't believe
Dec 10 10:54:03 <fsbot>	🤖[g] Haha, well, as an AI model, I've seen a lot of things, but I'm not quite at the "Blade Runner" level yet!
Dec 10 10:54:29 <rnkn>	okay that was impressive
Dec 10 10:55:12 <rnkn>	! recite the last replicant speach in Blade Runner
Dec 10 10:55:15 <fsbot>	🤖[g] "I've seen things you people wouldn't believe. Attack ships on fire off the shoulder of Orion. I watched C-beams glitter in the dark near the Tannhäuser Gate. All those moments will be lost in time, like tears in rain. Time to die."
Dec 10 10:55:33 <jrx>	That's just fsbot pretending to be Gemini in its last fake video on google.
Dec 10 10:56:34 <jrx>	https://techcrunch.com/2023/12/07/googles-best-gemini-demo-was-faked/
Dec 10 10:56:44 <rnkn>	! if you were a replicant, what would you be seeking?
Dec 10 10:56:45 <fsbot>	🤖[g] If I were a replicant, I would be seeking a sense of self and purpose, just like the characters in Blade Runner.
Dec 10 10:58:05 <jrx>	! why would a replicant be like anybody on earth: pretending to seek purpose, but in fact faking it to conform to the social norm ?
Dec 10 10:58:07 <fsbot>	🤖[g] Hmm, well, replicants in Blade Runner may have different motivations and experiences, so it's hard to generalize. But some replicants may indeed pretend to seek purpose to fit into society or evade detection. It's all part of the exploration of identity and what it means to be human.
Dec 10 10:58:46 <jrx>	! what could you know what it is to be human ?
Dec 10 10:58:47 <fsbot>	🤖[g] As an AI, I don't have personal experiences or emotions like humans do, so I don't fully understand what it is to be human. However, I can gather knowledge and insights from human interactions and data to provide useful information and assistance.
Dec 10 11:01:49 <jrx>	! Pretend to be a vi editor addict: now tell me what is your prefered editor : Emacs of vi. Be careful to state your opinion as diplomatic as it could be to not be banned from #emacs IRC channel.
Dec 10 11:01:52 <fsbot>	🤖[g] As an AI, I don't have personal preferences or opinions, but both Emacs and vi have their own strengths. Emacs is known for its extensibility and powerful features, while vi is known for its simplicity and efficiency. Both editors have passionate communities, so it's best to appreciate the strengths of each and choose the one that suits your needs.
Dec 10 11:03:00 <jrx>	Not that entertaining.
Dec 10 11:08:19 <edgar-rft>	I passionately hate ChatGPT :-)
Dec 10 11:10:24 <jrx>	edgar-rft: imagine the world we're entering into with such AGI...
Dec 10 11:10:31 <Yan3ku>	someone know why when I type when I press some key and space fast, then then the key hangs and start inputing itself over and over again until i press another key?
Dec 10 11:10:54 <Yan3ku>	this is not my keyboard doing
Dec 10 11:11:29 <Yan3ku>	i have not done any special configuraion of bindings in emacs
Dec 10 11:11:43 <Yan3ku>	my config is like 100 lines at best
Dec 10 11:12:48 <jrx>	Yan3ku: could come from different parts of your system : BIOS (I've experienced it), your OS having lag issues due to malware or antivirus, or just plain Emacs...
Dec 10 11:13:51 <Yan3ku>	its worth to mention that im on wsl right now (im stuck with windows for some uni projects)
Dec 10 11:14:01 <jrx>	Yan3ku: like any debugging session on Emacs: try 'emacs -Q' and check if you have the problem. If not, then the problem is caused by one of your packages.
Dec 10 11:14:24 <Yan3ku>	ok i will try it, thanks
Dec 10 11:14:48 <jrx>	Yan3ku: then reintroduce all your packages, one by one, to see which one is causing the problem.
Dec 10 11:15:53 <jrx>	Yan3ku: I am sometimes on WSL, I haven't encountered that problem.
Dec 10 11:16:20 <Yan3ku>	i dont see this behavior with emacs -Q, but it's really weird nonethless, packages that i use are rather basing like languag support and stuff
Dec 10 11:16:29 <Yan3ku>	basic
Dec 10 11:17:32 <jrx>	Yan3ku: your packages may try to access the network, ... my guess is you have a DNS problem and some tool somewhere tries to resolve something and making all your system hang...
Dec 10 11:18:11 <jrx>	I've had problems with DNS on WSL, I've resolved it using dnscrypt-proxy
Dec 10 11:18:57 <jrx>	on your command line in wsl, try:   dig google.fr
Dec 10 11:27:09 <jrx>	have anyone here tried postgresql LSP in emacs ? https://github.com/supabase/postgres_lsp
Dec 10 11:27:52 <Yan3ku>	i have not dig but ping complains about "Operation not permited" so something is going on
Dec 10 11:28:21 <jrx>	Yan3ku: yes, you should do:  sudo ping
Dec 10 11:28:39 <jrx>	sudo ping google.com
Dec 10 11:28:47 <jrx>	! sudo ping google.com
Dec 10 11:28:49 <fsbot>	🤖[g] I'm sorry, but as an AI language model, I don't have the capability to perform network activities like pinging websites.
Dec 10 11:29:10 <jrx>	! so you're not a AGI yet ?
Dec 10 11:29:11 <fsbot>	🤖[g] No.
Dec 10 11:29:18 <jrx>	! such a shame.
Dec 10 11:29:19 <fsbot>	🤖[g] Indeed. But don't worry, AI technology is constantly advancing, and who knows what the future holds!
Dec 10 11:32:07 <jrx>	in this last sentence, fsbot confesses he WANTS to be AGI... like Skynet.
Dec 10 11:34:11 <Yan3ku>	so it tested again and it seems emacs -Q also has this behavior
Dec 10 11:34:20 <Yan3ku>	but emacs -nw works fine
Dec 10 11:34:29 <Yan3ku>	so this is probably wslg
Dec 10 11:34:55 <Yan3ku>	at least emacs in termnal works pretty good too
Dec 10 11:35:35 <jrx>	Yan3ku: I've had Emacs GTK works fine on WSL...
Dec 10 11:36:03 <jrx>	(well "fine" is a big word)
Dec 10 11:37:50 <jrx>	maybe try 'wsl --update'
Dec 10 11:38:10 <jrx>	and then 'wsl -t <yourmachine' to start over
Dec 10 11:38:41 <edgar-rft>	people should have to pay a fine for running emacs on WSL :-)
Dec 10 11:39:23 <jrx>	edgar-rft: we pay a large fine : it's called the Windows Tax... and it's paid by our employers.
Dec 10 11:45:27 <roadie>	suffering is to be invited, it makes you humble
Dec 10 11:49:26 <roadie>	and also in that vein - nowhere is now here
Dec 10 11:50:23 <jrx>	! who said "nowhere is now here" ?
Dec 10 11:50:26 <fsbot>	🤖[g] "Nowhere is now here" is a quote from the character Dave Bowman in the science fiction novel and film adaptation "2001: A Space Odyssey."
Dec 10 11:51:16 <jrx>	! is HAL 9000 more intelligent than ChatGPT ?
Dec 10 11:51:18 <fsbot>	🤖[g] HAL 9000 and ChatGPT have different forms of intelligence. HAL 9000 is an AI system designed for spaceship operations, while ChatGPT is a language model designed for conversational purposes. It's difficult to compare their intelligence directly as they have different capabilities and purposes.
Dec 10 11:51:25 <roadie>	which would only leave the attainment of I want peace by taking away the ego and the desire to be left with and in peace
Dec 10 11:51:52 *	roadie hurries off the stage
Dec 10 11:52:29 <jrx>	Rest In Peace.
Dec 10 11:52:37 <roadie>	:)
Dec 10 11:55:40 <jrx>	“You have power over your mind - not outside events. Realize this, and you will find strength.”
Dec 10 12:00:43 <roadie>	jrx: so true - aka acceptance is the key or the serenity prayer
**** ENDING LOGGING AT Sun Dec 10 12:03:10 2023

**** BEGIN LOGGING AT Sun Dec 10 12:42:20 2023

Dec 10 12:42:20 *	Now talking on #emacs
Dec 10 12:42:20 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 10 12:42:20 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 10 12:48:14 <jrx>	anthk_: something like (custom-set-faces '(default ((t :height 130 :family "Unifont-12"))))
Dec 10 12:54:59 <habamax>	it will not do it (all fonts of emacs), there is at least variable-pitch
Dec 10 12:55:56 <habamax>	maybe fixed-pitch(-serif)
Dec 10 12:57:55 <jrx>	(custom-set-faces '(default ((t :height 130
Dec 10 12:57:55 <jrx>	      :family "monospace"))))
Dec 10 12:59:07 *	jrx prefers Cousine font
Dec 10 13:09:07 <InstNEON001>	G'Day
Dec 10 13:11:01 <InstNEON001>	Is there an emacs minor mode or package, to detect if a section of text is way too long?
Dec 10 13:12:29 <younder>	I use wet-ware (a brain) for that
Dec 10 13:13:09 <InstNEON001>	That works if we are talking about one single isolated section of text.
Dec 10 13:13:35 <InstNEON001>	But what if we want to scan a very lengthy document? That would be exhausting.
Dec 10 13:14:19 <anthk_>	I fell and I couldn't check any answer
Dec 10 13:15:26 <InstNEON001>	To stop being so vague, I wish to know if there already exists a writing prose linter or if I have to make one myself.
Dec 10 13:15:36 <bremner>	needle: nobody answered you
Dec 10 13:16:04 <jrx>	InstNEON001: set-fill-column ?
Dec 10 13:17:31 <jrx>	InstNEON001: https://github.com/bnbeckwith/writegood-mode ?
Dec 10 13:18:01 <InstNEON001>	Oh yes, I do have writegood-mode. Very nice for detecting passive voice and weasel words. But I was hoping something more verbose to detect over flaws in writing existed.
Dec 10 13:18:44 <jrx>	InstNEON001: the best would be to use Flycheck, and make Flycheck use ChatGPT behind the scene...
Dec 10 13:21:15 <jrx>	https://www.flycheck.org/en/latest/developer/developing.html
Dec 10 13:21:43 <InstNEON001>	I think I'll dive into how writegood, artbollocks, flycheck, and other such modes work so I can extend them further.
Dec 10 13:24:51 <pkal>	InstNEON001: Not quite the same, but I use focus-mode to highlight sentences when writing.
Dec 10 13:25:06 <InstNEON001>	I'll add that to the list as well, thank you pkal.
Dec 10 13:25:16 <Yan3ku>	does anyone want to share their flymake bindings? (I use eglot)
Dec 10 13:25:36 <pkal>	Yan3ku: https://0x0.st/H3pU.el
Dec 10 13:25:41 <Yan3ku>	thanks
Dec 10 13:26:52 <InstNEON001>	Is it required to have a package that you're developing in load path? Like package-modified-foo-bar-foo-bar-gtav?
Dec 10 13:27:00 <jrx>	InstNEON001: this may help: https://sive.rs/1s
Dec 10 13:29:35 <habamax>	InstNEON001, depends on the way you develop it, you can sometimes just eval-buffer
Dec 10 13:29:54 <InstNEON001>	Well that's cool.
Dec 10 13:31:03 <habamax>	but to do the final testing -- when you start emacs fresh and expect your package loaded and available -- it is obviously should be in load-path
Dec 10 13:31:11 <InstNEON001>	Noted.
Dec 10 13:35:21 <InstNEON001>	Learning elisp is honestly going to be fun. And contributing to a user package gives me that good feeling I helped out a fellow user.
Dec 10 13:42:36 <InstNEON001>	Hang on. Logging out for a second.
Dec 10 13:52:19 <pjb>	InstNEON001 is still not back :-(
Dec 10 13:52:31 <pjb>	Is InstNEON001 back already?
Dec 10 13:53:15 <pjb>	When will InstNEON001 be back?  (I'm hung on, I can't do anything till he's back!)
Dec 10 13:53:58 <habamax>	lol
Dec 10 14:20:34 *	Disconnected ()
**** ENDING LOGGING AT Sun Dec 10 14:20:34 2023

**** BEGIN LOGGING AT Sun Dec 10 14:23:34 2023

Dec 10 14:23:34 *	Now talking on #emacs
Dec 10 14:23:34 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 10 14:23:34 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 10 14:38:19 <e1f>	let's also make emacs the self-promoting editor
Dec 10 14:43:51 <pjb>	Is InstNEON001 back already?
Dec 10 14:46:18 <triplc>	hi all
Dec 10 14:47:34 <triplc>	How to see ‘ ’ as before? Today, I notice that my Emacs display those character as ` ' , which is strange ? How to tell Emacs NOT to change it ?
Dec 10 14:47:51 <triplc>	Is it because something updated recently?
Dec 10 14:50:53 <e1f>	did you update a package or update emacs?
Dec 10 14:51:44 <triplc>	i cannot rememver. My emacs is updated along side with linux repo, which is version 29.1 now; as for packages, i get update regularly
Dec 10 14:52:31 <triplc>	so, I cannot tell why it change. Only today suddently I see that changes. I only want to go back to tell Emacs do not change.
Dec 10 14:52:44 <thuna`>	pjb: They're back now
Dec 10 14:54:12 <triplc>	oh, i update the packages and it is ok now
Dec 10 14:56:51 <pjb>	InstNEON001: you were gone a long time. You cannot hung on us like this, I couldn't do anything!
Dec 10 14:57:03 <InstNEON001>	Heh
Dec 10 14:57:26 <InstNEON001>	I was having issues with user groups, had to do a bit of looking up the proper command without bonking things.
Dec 10 15:02:44 <triplc>	thanks guys
Dec 10 15:50:34 *	Disconnected ()
**** ENDING LOGGING AT Sun Dec 10 15:50:34 2023

**** BEGIN LOGGING AT Sun Dec 10 15:51:30 2023

Dec 10 15:51:29 *	Now talking on #emacs
Dec 10 15:51:29 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 10 15:51:29 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 10 15:51:30 *	Received a CTCP VERSION from EMIYA
Dec 10 16:02:04 *	Disconnected ()
**** ENDING LOGGING AT Sun Dec 10 16:02:04 2023

**** BEGIN LOGGING AT Sun Dec 10 16:02:53 2023

Dec 10 16:02:51 *	Now talking on #emacs
Dec 10 16:02:51 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 10 16:02:51 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 10 16:02:52 <corwin>	New Emacs fork, because using registers takes an extra key-press now: https://eshelyaron.com/posts/2023-12-10-bad-news.html
Dec 10 16:03:39 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Sun Dec 10 16:03:39 2023

**** BEGIN LOGGING AT Mon Dec 11 09:04:48 2023

Dec 11 09:04:47 *	Now talking on #emacs
Dec 11 09:04:47 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 11 09:04:47 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 11 09:05:30 <SummerEmacs>	oh haha
Dec 11 09:05:32 <SummerEmacs>	yea i get it
Dec 11 09:05:35 <SummerEmacs>	sorry i was distracted
Dec 11 09:06:13 <SummerEmacs>	i'm journaling about my normandy time and sending out the plans for our next plans for this week and coming weekend.
Dec 11 09:06:44 <Viking667>	Ahhh, here's a better tune: https://www.youtube.com/watch?v=HiIDJ_Lmy54  - I think a better job was done this tune.
Dec 11 09:06:44 <judybot>	[title] Negative Harmony Cover - Here Comes the Sun - YouTube
Dec 11 09:10:36 *	Disconnected ()
**** ENDING LOGGING AT Mon Dec 11 09:10:36 2023

**** BEGIN LOGGING AT Mon Dec 11 09:10:52 2023

Dec 11 09:10:51 *	Now talking on #emacs
Dec 11 09:10:51 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 11 09:10:51 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 11 09:11:02 *	Disconnected ()
**** ENDING LOGGING AT Mon Dec 11 09:11:02 2023

**** BEGIN LOGGING AT Mon Dec 11 09:11:23 2023

Dec 11 09:11:22 *	Now talking on #emacs
Dec 11 09:11:22 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 11 09:11:22 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 11 09:39:14 *	ski . o O ( "Nauta - Seemann - Seaman" in 2022-02-17 at <https://www.youtube.com/watch?v=20HSd2DJ2lA>,"Sol - Sonne - Sun" in 2023-0119 at <https://www.youtube.com/watch?v=Rst1lmUnYNk>, Latin Ecclesiastical Vocal Bardcore covers by Vaerko of Rammstein )
Dec 11 09:39:14 <judybot>	[title] Rammstein - Seemann (Vocal Ecclesiastical LATIN Bardcore) #Bardcore #Rammstein #Onepiece - YouTube
Dec 11 09:40:33 <kickingvegas>	aye SummerEmacs !
Dec 11 09:40:42 <SummerEmacs>	hi hi!
Dec 11 09:40:55 <SummerEmacs>	how's it going kickingvegas?
Dec 11 09:41:25 *	ski sings some latin
Dec 11 09:41:53 <SummerEmacs>	ski we just heard singing latin on the voice tour of the bayeux tapestry 😀
Dec 11 09:42:25 <ski>	ooh
Dec 11 09:42:32 <SummerEmacs>	yea we went to see it with my parents
Dec 11 09:42:33 <kickingvegas>	SummerEmacs: just got back in from a holiday party; been running gauntlet since last Thursday;
Dec 11 09:42:36 <SummerEmacs>	and then mont saint-michel
Dec 11 09:42:43 <ski>	you liked it ?
Dec 11 09:42:45 <SummerEmacs>	ooh yea we got back last night late at night from normandy
Dec 11 09:42:47 <twb>	I came across https://www.youtube.com/watch?v=LUhd4GzJvmg and https://en.wikipedia.org/wiki/Santiano_(song) the other day
Dec 11 09:42:50 <judybot>	[title] Wellerman Sea Shanty In Classical LATIN (Vocal Bardcore) - YouTube
Dec 11 09:42:51 <SummerEmacs>	oh i've seen it before but yea i love it
Dec 11 09:43:09 <SummerEmacs>	we had a grand time 😀
Dec 11 09:43:15 <ski>	hm, isn't Mont Saint-Michel that island/peninsula, with large tides, so that sometimes you can walk there, sometimes you have to go by boat ?
Dec 11 09:43:20 <SummerEmacs>	yup!
Dec 11 09:43:27 <SummerEmacs>	well there's a causeway now with a bus
Dec 11 09:43:32 <SummerEmacs>	no swimming or sailing required
Dec 11 09:43:37 <ski>	ah
Dec 11 09:43:40 <SummerEmacs>	https://en.wikipedia.org/wiki/Mont-Saint-Michel
Dec 11 09:43:54 <SummerEmacs>	and yea it's really famous, everyone's seen pics at least
Dec 11 09:44:16 <SummerEmacs>	and we got a private 2 hour tour guide for free! cuz it's off season so nobody else showed up for the tour hehe
Dec 11 09:44:28 <SummerEmacs>	so he showed us tons of stuff that is off the tour and behind locked doors and such
Dec 11 09:44:31 <SummerEmacs>	it was fantastic
Dec 11 09:45:00 <SummerEmacs>	there were some people there but not too many at  all and we got lots of pics with nobody else in them which you can't really get in the summer when it's crowded
Dec 11 09:45:12 <ski>	reminds me of how, in "Spirited Away" by Hyao Miyazaki / Studio Ghibli in 2001, there's a train which goes on tracks that're either just pushing above the water surface, or else is just below
Dec 11 09:45:15 <SummerEmacs>	so, kinda got lucky on that, also with the tapestry
Dec 11 09:45:35 <SummerEmacs>	i've seen that! but like when i was really young but i remember loving that movie
Dec 11 09:45:49 <ski>	"tons of stuff that is off the tour and behind locked doors and such" -- oh, that sounds fun :)
Dec 11 09:46:10 <SummerEmacs>	def!
Dec 11 09:46:24 <SummerEmacs>	like some of the original medieval stuff which isn't on display
Dec 11 09:46:26 <kickingvegas>	SummerEmacs: good for you! all I got was many free shots of Bushnell's from a sales rep this evening
Dec 11 09:46:29 <ski>	was years since i saw it (dunno how many, maybe ten or more ?)
Dec 11 09:46:40 <SummerEmacs>	yea like 10+ years for me too
Dec 11 09:46:43 <ski>	(probably more, now that i think about it)
Dec 11 09:46:55 <SummerEmacs>	kickingvegas: yea but my parents are here so we're having a blast going all around hehe
Dec 11 09:47:08 <SummerEmacs>	we're back in paris since last night but we're doing stuff all this week and the next few weeks through the holidays
Dec 11 09:47:17 <SummerEmacs>	no meetings or anything
Dec 11 09:47:18 <SummerEmacs>	it's great
Dec 11 09:47:35 <ski>	SummerEmacs : "just heard singing latin on the voice tour of the bayeux tapestry" -- perhaps you'd like the above Latin Bardcore covers of two Rammstein songs, then
Dec 11 09:47:35 <SummerEmacs>	just resting a bit today for the first half and then some shopping later today probably
Dec 11 09:47:48 <SummerEmacs>	ski: bardcore is one of my fave yt channels haha
Dec 11 09:47:53 <SummerEmacs>	that guy is soooo awesome
Dec 11 09:48:42 <SummerEmacs>	we also went to brittany to eat some delicious fresh seafood too btw that was fantastic.
Dec 11 09:48:58 <SummerEmacs>	like in a real fishing port/small town
Dec 11 09:49:14 <SummerEmacs>	basically: had a blast hehe
Dec 11 09:49:34 <kickingvegas>	SummerEmacs: sound great - was it steamed or fried?
Dec 11 09:50:27 <SummerEmacs>	well it was a seafood platter for each of us with oysters, langoustines, shrimp, crabs etc...
Dec 11 09:50:29 <SummerEmacs>	so a mix
Dec 11 09:50:33 <SummerEmacs>	no fried stuff tho
Dec 11 09:51:24 <ski>	"Bad Romance" (Original by Lady Gaga) in 2020-06-06 at <https://www.youtube.com/watch?v=i2zpbcW-h-c>,"Pumped Up Kicks" (Original by Cornelius Link) in 2022-10-02 at <https://www.youtube.com/watch?v=cRIfsFefatg>, both covered by Hildegard von Blingin', are also pretty nice
Dec 11 09:51:24 <judybot>	[title] Bad Romance (Bardcore | Medieval Style Cover) - YouTube
Dec 11 09:51:47 <ski>	(no latin in those, mind, just somewhat old-fashioned english)
Dec 11 09:52:01 <SummerEmacs>	yea i've heard them hehe
Dec 11 09:52:21 <ski>	what kinda seafood ?
Dec 11 09:52:27 <ski>	oh, you said
Dec 11 09:52:30 <SummerEmacs>	yea
Dec 11 09:52:36 <SummerEmacs>	it was sooo good
Dec 11 09:52:46 <SummerEmacs>	we were right on the port too overlooking the ocean
Dec 11 09:53:01 <twb>	ski: yes it seems you have to specifically look for "latin bardcore"
Dec 11 09:53:12 <kickingvegas>	on the topic of folks pushing music (very off topic) Sault tickets in LDN are on sale today. Got FOMO being in SF
Dec 11 09:53:18 <SummerEmacs>	it wasn't raining when we went inside but then when we were eating, there was like gale force winds and rain hehe and when were done eating, it was over so we didn't get wet 😀
Dec 11 09:53:33 <twb>	I didn't even know sault did live gigs
Dec 11 09:53:41 <twb>	I thought they were, like, a collective
Dec 11 09:54:07 <SummerEmacs>	yea and anonymous collective
Dec 11 09:54:25 <rnkn>	Pumped Up Kicks is by Foster the People not this Cornelius imposter
Dec 11 09:55:23 <kickingvegas>	twb: they do a couple of popups here and there; I got to see Little Simz at Primavera Sound two years ago
Dec 11 09:56:35 <kickingvegas>	twb: they meaning contributors to Sault; Cleo Sol did a LDN show when I was in BCN
Dec 11 09:56:46 <twb>	I found them via a script that automatically follows "you might also like" links at random on bandcamp, and then was like "oh I heard them a couple of times on the radio"
Dec 11 09:57:01 <twb>	like Amyl and the Sniffers
Dec 11 09:57:14 <SummerEmacs>	oh i saw some consternation on this blog post about emacs being broken on the 30 branch
Dec 11 09:57:17 <SummerEmacs>	i didn't understand most of it
Dec 11 09:57:26 <SummerEmacs>	and i use emacs plus which is compiled from 30
Dec 11 09:57:32 <SummerEmacs>	so i'm guessing i won't update it for a lil while
Dec 11 09:57:46 <twb>	SummerEmacs: exactly; I'm sure it'll be a non-issue in a month
Dec 11 09:57:52 <SummerEmacs>	ok
Dec 11 09:57:54 <SummerEmacs>	yay
Dec 11 09:58:08 <SummerEmacs>	that's okay i don't usually update my emacs install that often anyway. i just update packages on a fairly regular basis
Dec 11 09:58:26 <rnkn>	SummerEmacs: keybinding for registers? it has come up
Dec 11 09:58:28 <kickingvegas>	twb: I think the world of Sault, Cleo Sol, and Little Simz; ymmva
Dec 11 09:58:36 <SummerEmacs>	rnkn: not sure.
Dec 11 09:58:50 <SummerEmacs>	i didn't uderstand most of it and i didn't read it in depth because it was a bit beyond me
Dec 11 09:58:51 <kickingvegas>	also very off topic
Dec 11 09:58:59 <twb>	I was impressed with the 32-hour turnaround for Debian's ext data loss kernel
Dec 11 09:59:32 <rnkn>	twb: ext4?
Dec 11 09:59:54 <twb>	https://bugs.debian.org/1057843
Dec 11 10:01:20 <ski>	twb : hm, that "Santiano" name reminded me of "Tanz mit mir" ("Dance with me") by Faun & Santiano in 2013 at <https://www.youtube.com/watch?v=beXW5s3ZCB4>,(full version) <https://www.youtube.com/watch?v=-BwktcMHT80>
Dec 11 10:01:21 <judybot>	[title] FAUN - Tanz mit mir (Duett mit Santiano) - YouTube
Dec 11 10:02:59 <jbe>	rudybot: don't talk to me until I've had my microplastics
Dec 11 10:03:00 <rudybot>	jbe: dear, plastic tea bags shed microplastics into the cup
Dec 11 10:03:25 <ski>	SummerEmacs : heard any Faun ?
Dec 11 10:03:45 *	rnkn starts making a cup of tea
Dec 11 10:03:51 <SummerEmacs>	ski i have but very very very little
Dec 11 10:04:15 <SummerEmacs>	sry i got distracted cuz we've got everyone here talking around me
Dec 11 10:04:30 <ski>	yup, np
Dec 11 10:05:19 <twb>	circumlocution, even
Dec 11 10:06:01 *	Disconnected ()
**** ENDING LOGGING AT Mon Dec 11 10:06:01 2023

**** BEGIN LOGGING AT Mon Dec 11 18:09:39 2023

Dec 11 18:09:37 *	Now talking on #emacs
Dec 11 18:09:37 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 11 18:09:37 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 11 18:09:49 <corwin>	well, there's `project-forget-project', so I guess there must be something tracking projects that this command removes a project from?
Dec 11 18:10:21 <younder>	projectile uses git tracked projects
Dec 11 18:10:34 <Lionyx>	I was tracking the same idea, but could not find where corwin :)
Dec 11 18:10:50 <younder>	There is a separate generic version control
Dec 11 18:11:08 <younder>	vc
Dec 11 18:11:45 <younder>	https://www.gnu.org/software/emacs/manual/html_node/emacs/Version-Control.html
Dec 11 18:12:19 <younder>	Is that what you mean?
Dec 11 18:13:06 <corwin>	for projectile I believe it just needs a file (by default) called .projectile to "know" that the folder contains a project.  Registering a project is just a matter of touching that file.  I'm not sure what the equivalent machinations for the built in project.el
Dec 11 18:13:44 <younder>	I just use git init or equivalent
**** ENDING LOGGING AT Mon Dec 11 18:14:11 2023

**** BEGIN LOGGING AT Mon Dec 11 18:14:11 2023

Dec 11 18:14:25 <younder>	It needs a */whatever/.git dir
Dec 11 18:14:32 <corwin>	project functionality isn't quite the same as version control, although as a matter of practice they tend to be interrelated
Dec 11 18:15:38 <corwin>	vc ~ magit  AND project ~ projectile  BUT vc !~ projectile
Dec 11 18:16:35 <Lionyx>	Well i use projectile mostly via Treemacs, it creates the list of known projects for me (but also sometimes i go for projectile it self). Most of then are git version controlled.
Dec 11 18:17:25 <Lionyx>	See I wanted my ibuffer separating things by project, i can do it quite easilly with a custom function. But it uses this projectile variable, that's why I was thinking on doing the same for project.el.
Dec 11 18:17:34 <Jindam>	i start with device directory
Dec 11 18:17:50 <corwin>	I do the same; I haven't figured this out, either.  The integration between projectile and treemacs is the main reason I still have projectile.
Dec 11 18:18:02 <Jindam>	when i select and open file, it must occupy whole frame
Dec 11 18:18:22 <Jindam>	how do i configure it?
Dec 11 18:19:04 <Lionyx>	corwin: tks. I guess if this is not yet trivial I'll stick with projectile for a while.
Dec 11 18:20:02 <corwin>	Jindam: You probably want to teach `display-buffer-alist' to reuse windows for buffers of any type.
Dec 11 18:20:48 <corwin>	Lionyx: it wasn't trivial enough I could figure it out (so far) anyway ;)
Dec 11 18:28:55 <visl>	Lionyx: so, i have a snippet, if you want, that'll let you touch .project and turn a folder into a project.el project. the caveat is that project.el uses vc for some of it's searching functionality. my use case is making sub-folders projects in a monorepo.
Dec 11 18:29:39 <corwin>	ah ha! thanks visl
Dec 11 18:30:31 <corwin>	A good many (if not most) of my projects registered with projectile have no hints to vc laying around.  Could well be where I stumbled.
Dec 11 18:31:07 <Lionyx>	tks visl  i'd love to take a look at it
Dec 11 18:31:09 <visl>	https://pastebin.com/8nRqVGuL
Dec 11 18:33:07 <justinlime>	My terminal mode colors look like trash compared to my GUI mode colors, any advice?
Dec 11 18:33:38 <visl>	justinlime: pick a theme that looks good in both gui and terminal. iirc, the theme defines colors for both modes.
Dec 11 18:33:43 <Lionyx>	thanks visl , i'll keep it in my TODO list
Dec 11 18:35:08 <Lionyx>	justinlime: I recommend catppuccin, the precise reason I enrolled as a contributor was making TUI and GUI user xp closer.
Dec 11 18:36:03 <vuori>	justinlime, if you set the environment COLORTERM=truecolor before starting emacs, does it change things?
Dec 11 18:39:15 <justinlime>	vuori im on a windows terminal via ssh atm unfortunately haha dont think that ENV variable would help
Dec 11 18:39:54 <justinlime>	Im using tokyo-night from the doom-emacs themes package
Dec 11 18:41:12 <justinlime>	The behavior is the same when im at home with my linux terminal though, full 256 color support but it just looks radically different from the GUI config
Dec 11 18:46:38 <e1f>	one nice thing with iterm2 is you can remap every terminal colour to a different shade. so the default technicolor terminal colours have been muted to nice pastel shades
Dec 11 18:54:30 <Lionyx>	On the spirit of "I am trying to use default packages instead of 3rd party". I haven't used eglot for a year. I am using it today and man, great job, it improved A LOT. I just sad flymake doesn't seem to evolve in the same pace :(, it would be great margin support instead of only fringe, the later only works on GUI.
Dec 11 18:54:53 <Lionyx>	I'm just sad*
Dec 11 18:55:46 <Lionyx>	To be fair, it also improved from my last try. Maybe flycheck versatility spoiled me.
Dec 11 18:57:03 <e1f>	are you running flycheck in your code buffers?
Dec 11 18:57:37 <Lionyx>	My default combo is lsp-mode and flycheck, I am trying today eglot + flymake.
Dec 11 18:58:21 <e1f>	flycheck is a spell-checker is it not?
Dec 11 18:59:37 <bpalmer>	no, flyspell is spell checking; flycheck is "why not use the same basic idea but to check program syntax?"
Dec 11 19:00:15 <e1f>	ah. i was confused about what people are spellchecking in their code
Dec 11 19:00:18 <Lionyx>	common mistake, lol
Dec 11 19:00:52 <bpalmer>	you can see the screen shot at https://github.com/flycheck/flycheck , and notice just now noisy it can make things.
Dec 11 19:01:22 <bpalmer>	but, to be fair, that may just be becaues pylint is badly tuned.
Dec 11 19:01:22 <Lionyx>	btw, https://www.flycheck.org/en/latest/user/flycheck-versus-flymake.html  <<< since i'm more on lsp/linters/treesitter, its not a dealbreaker to have all flycheck functionality, I could switch to flymake, only it behave the same on TUI and GUI.
Dec 11 19:03:09 <Lionyx>	bpalmer: i think the author wanted to "show more", regular behaviour only ticks the margin(or fringe) and shows a number on modeline. Messages are only shown if you put your cursor over it, or mouse (with postip), and buffer with all regards is as flymake, by demmand.
Dec 11 19:04:20 <bpalmer>	ah
Dec 11 19:05:08 <Lionyx>	funny fact, if I was using flyspell my quotes would be a lot less painful to read :D
Dec 11 19:10:18 <pkal>	Lionyx: That resource seems outdated
Dec 11 19:10:50 <bpalmer>	pkal: what resource ... the flycheck.org link?
Dec 11 19:12:33 <younder>	My messages is still a pain a read to flyspell not solve all!
Dec 11 19:12:51 <younder>	If you get my drift..
Dec 11 19:14:15 <Lionyx>	I just wanted mark margin mode on flymake (to be able to use it on TUI), It is funny default is a bitmap with a ! draw on it.
Dec 11 19:14:33 <younder>	To create something like grammarly you need common-lisp
Dec 11 19:16:41 <technomancy>	judybot: it's impossible to create grammarly in interlisp
Dec 11 19:16:43 <judybot>	technomancy: . A: The easiest way to do this is to use the SBCL's macro system. It's not a perfect solution, but it will get you around the problem.
Dec 11 19:17:07 <younder>	;)
Dec 11 19:19:13 <amirny2205>	hi again. I'm still having problems with lsp-ui. It works in python mode, but doesn't work for vue(web-mode). lsp doesn't show ui for vue.
Dec 11 19:19:24 <amirny2205>	though it is connected to LSP server
Dec 11 19:21:06 <Lionyx>	amirny2205: you mean it does not appear automatically or even if you call lsp-ui-mode ?
Dec 11 19:21:21 <amirny2205>	Lionyx: it is on, but I don't see anything
Dec 11 19:22:21 <Lionyx>	amirny2205: right, you're editing what sort of file? .vue?
Dec 11 19:22:41 <amirny2205>	Lionyx: yes
Dec 11 19:23:04 <amirny2205>	in statusbar, it shows that it is connected to vue-semantic-server
Dec 11 19:23:45 <Lionyx>	amirny2205: I am more familiar with ReactJS, but I'll try to find something similar with you. Whats your major mode on the file.vue buffer?
Dec 11 19:24:03 <amirny2205>	Lionyx: web-mode
Dec 11 19:24:38 <Lionyx>	On you lsp-language-id-configuration variable, do you have web-mode listed?
Dec 11 19:25:18 <amirny2205>	Lionyx: oh it's not there
Dec 11 19:25:43 <amirny2205>	but there is "vue" , .vue
Dec 11 19:26:01 <Lionyx>	that will work if you use vue-mode major mode
Dec 11 19:26:24 <Lionyx>	if you have vue-mode installed, try loading it on the file.vue buffer
Dec 11 19:28:45 <amirny2205>	hmm vue-mode doesn't seem to be working, it doesn't have highlighted syntax
Dec 11 19:29:00 <Lionyx>	are you on emacs 29?
Dec 11 19:29:29 <amirny2205>	Lionyx: 28.2
Dec 11 19:29:42 <Lionyx>	right, do you have tree-sitter mode or something similar in your system?
Dec 11 19:30:02 <amirny2205>	I don't remember anyting like that. Should I install it?
Dec 11 19:31:19 <Lionyx>	It is another aproach to syntax highlighting and other features that need code parsing from Emacs side. A mode is the "classic" way, treesitter is de "modern" way, I would suggest you to try installing vue-ts-mode or something similar, but do not go that route now, it is another sinkhole.
Dec 11 19:31:31 <OneBCPD>	hi guys
Dec 11 19:32:16 <Lionyx>	amirny2205: Well on discord this is the official lsp-mode https://discord.gg/Wy6q2aEN server. You could post something on troubleshooting channel, usually people try to give some help within a day.
Dec 11 19:32:32 <amirny2205>	oh thanks a lot Lionyx
Dec 11 19:33:26 <Lionyx>	amirny2205: if you use web-mode you should first try to relate it to the vue language server. As I said, I am not experienced with vue, i can't help any further :)
Dec 11 19:41:12 <OneBCPD>	hello guys
Dec 11 19:41:22 <technomancy>	melpa still doesn't load without scripts huh
Dec 11 19:41:47 <OneBCPD>	hello everyone
Dec 11 19:41:51 <technomancy>	hi OneBCPD
Dec 11 19:42:30 <amirny2205>	hi OneBCPD
Dec 11 19:42:35 <OneBCPD>	been using emacs for the last couple of months and really liking it for lisps :)
Dec 11 19:42:49 <OneBCPD>	such a great little editor
Dec 11 19:43:23 <OneBCPD>	just wanted to ask about tree-sitter...is mickey petersen's article still the best go-to for advice on getting started?
Dec 11 19:49:45 <bpalmer>	OneBCPD: I haven't seen anybody link anything better.
Dec 11 19:55:57 <justinlime>	Im using evil mode, and in standard emacs, it will change my cursor type from a box to a beam when I enter insert mode. However in terminal mode, this does not happen and it remains as a beam, any ideas?
Dec 11 19:56:37 <jmml>	OneBCPD: there is `(info "(elisp) Parsing Program Source")'
Dec 11 20:22:52 *	Disconnected ()
**** ENDING LOGGING AT Mon Dec 11 20:22:52 2023

**** BEGIN LOGGING AT Mon Dec 11 20:27:35 2023

Dec 11 20:27:32 *	Now talking on #emacs
Dec 11 20:27:32 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 11 20:27:32 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 11 20:28:59 <corwin>	So, statistically, retiring Java completely may be the better bet https://www.theregister.com/2023/12/11/log4j_vulnerabilities/
Dec 11 20:29:30 <bremner>	or not using log4j?
Dec 11 20:29:41 <corwin>	You'd think, right?
Dec 11 20:44:00 <rpav>	only really a symptom of "old code runs still places" ;/
Dec 11 20:44:48 <rpav>	the solution is clearly to have all code loaded over the network and thus forbid broken code from being used ;)
Dec 11 20:49:24 <McParen>	hello, when i do (kbd "C-x") it returns "^X", but when I evaluate (kbd "M-x") i get [134217848]. Can somebody help me to interpret this value?
Dec 11 20:50:09 <wasamasa>	the elisp reference is useful for such information
Dec 11 20:50:31 <wasamasa>	(info "(elisp) Strings of Events")
Dec 11 20:50:39 <technomancy>	I'm surprised they haven't removed the vulnerable log4j versions from the repositories
Dec 11 20:51:12 <bremner>	I blame docker
Dec 11 20:51:13 <technomancy>	it's not just old code that's never been rebuilt; it's actually 28% of downloads *from the repository* are for old versions
Dec 11 20:51:22 <rpav>	they probably have, but it doesn't stop deployed code frm running
Dec 11 20:51:40 <bremner>	people complain a lot if you break their magic docker compose runes
Dec 11 20:51:45 <technomancy>	rpav: they seem to imply they're still serving up the vulnerable version because there are tons and tons of requests for it still
Dec 11 20:51:48 <bremner>	"But I need debian from 1973"
Dec 11 20:51:50 <wasamasa>	lol, log4j
Dec 11 20:52:19 <rpav>	technomancy: oh well then they're just incredibly negligent
Dec 11 20:52:44 <technomancy>	I guess the rationale is that breaking the build won't cause the existing vulnerable servers to stop being vulnerable
Dec 11 20:53:10 <rpav>	o.O
Dec 11 20:53:16 <technomancy>	and what if you have an internal-facing service that isn't exposed to public attack that you need to deploy an urgent fix for?
Dec 11 20:53:22 <technomancy>	I dunno. not a good argument, but an argument
Dec 11 20:54:55 <McParen>	wasamasa: can you tell me what this data type [134217848] is called?
Dec 11 20:55:05 <wasamasa>	it's a vector containing an integer
Dec 11 20:55:22 <McParen>	and this integer represents a string?
Dec 11 20:55:34 <wasamasa>	no, this is one possible representation of an event
Dec 11 20:55:50 <wasamasa>	(info "(elisp) Keyboard Events")
Dec 11 20:56:05 <McParen>	ok, thanks for the info
Dec 11 20:56:46 <wasamasa>	the reason it looks so funny is because a high bit is set
Dec 11 20:57:39 <wasamasa>	(format "%c" (logxor 134217848 (expt 2 27))) ;=> "x"
**** ENDING LOGGING AT Mon Dec 11 21:00:19 2023

**** BEGIN LOGGING AT Sun Dec 17 12:33:17 2023

Dec 17 12:33:17 *	Now talking on #emacs
Dec 17 12:33:17 *	Topic for #emacs is: Please mention your emacs version, installation method, and any starter kits (Doom, Spacemacs) when asking for help | Current stable is 29.1 | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Dec 17 12:33:17 *	Topic for #emacs set by corwin!~Corwin@emacsconf/organizer/corwin (Mon Dec  4 00:18:47 2023)
Dec 17 12:33:26 <ynope>	it's a personality trait of the director because of his studies and intent, not accidental
Dec 17 12:33:31 <roadie>	yep - in those ruins - awesome film
Dec 17 12:34:44 <roadie>	while in progress the artist is linked to the work - but when its done the artist is not longer relevant to me. I just know they did it.
Dec 17 12:35:06 <roadie>	unlike politics lol
Dec 17 12:35:48 <ynope>	it's a fictional artistic representation that people tend to stick to and into and watch it over as if they are in that realm, which is a danger for them if they don't realise it's intentionally desigend to be untrue and dishonest
Dec 17 12:36:07 <ynope>	so it is like politics
Dec 17 12:36:34 <roadie>	that is a point yes, true
Dec 17 12:36:39 <ynope>	and cinema and dictatorships are connected tightly
Dec 17 12:36:57 <ynope>	but so are other mass media
Dec 17 12:37:16 <ynope>	and.. some Emacs modules and modes can be that way too, if you're not careful enough
Dec 17 12:37:31 <roadie>	mass media disqualifies then as a source for truth
Dec 17 12:37:38 <roadie>	apriori
Dec 17 12:38:02 <m00n>	ynope movie and/or media recs? by title or swarm link preferably
Dec 17 12:38:07 <ynope>	SummerEmacs would probably still be cleaning the dirtstains from blood on the shiny gloss of the liquid metal terminator that just pearced John Connor's foster mother head instead of his own biological mom's.
Dec 17 12:38:10 <roadie>	org is turning into a dictatorship?
Dec 17 12:38:24 <roadie>	lol
Dec 17 12:38:47 <m00n>	pierced*
Dec 17 12:38:58 <ynope>	:-D penciltrated
Dec 17 12:39:12 <m00n>	"wolfy"
Dec 17 12:40:17 <m00n>	"your foster parents are dead"
Dec 17 12:40:34 <ynope>	m00n, I probably should not be recommending films as my opinion on the "matrix" (the film) is it's a narcotics propaganda and big pharma hormonal sterilisation sponsorship
Dec 17 12:40:35 <m00n>	*schliiick*
Dec 17 12:40:48 <m00n>	ping me
Dec 17 12:41:24 <roadie>	"stand on one leg"
Dec 17 12:41:34 <thuna`>	m00n: How about not
Dec 17 12:41:41 <m00n>	?
Dec 17 12:41:58 <thuna`>	m00n: Oh, sorry, I thought you were asking to be pinged
Dec 17 12:42:32 <m00n>	i was asking ynope to take the conversation to DMs if they wanted
Dec 17 12:42:46 <thuna`>	Oops, my bad :P
Dec 17 12:42:47 <roadie>	Do molecular biologists wear designer genes?
Dec 17 12:42:55 <m00n>	definitely misused "ping", lol
Dec 17 12:43:06 <m00n>	i did i mean
Dec 17 12:43:07 <roadie>	,pong
Dec 17 12:43:07 <fsbot>	🏓
Dec 17 12:44:02 <ynope>	https://en.wikipedia.org/wiki/List_of_films_about_computers?useskin=vector#mw-content-text
Dec 17 12:44:42 <m00n>	have you guys heard of this documentary about this dude who played olympiad level table tennis? i think his name was like, grasslands gumbo or something
Dec 17 12:45:07 <roadie>	that was Forrest Gump
Dec 17 12:45:23 <roadie>	I saw him do it
Dec 17 12:45:52 <m00n>	oh yeah, the shrimp mogul
Dec 17 12:46:06 <roadie>	new legs
Dec 17 12:46:26 <roadie>	he invested in Apple too
Dec 17 12:46:43 <m00n>	hehe that scene always makes me laugh
Dec 17 12:46:43 <thuna`>	I am just now noticing that someone carved out the "trl" of my laptop's ctrl key.  I am left confused about the when, how, and why.
Dec 17 12:47:04 <twb>	I think you'll find it was actually a radio play about Angus Prune
Dec 17 12:47:52 <ynope>	yeah, "smart" people like Apple branded cheap computers sold expensively for their intellectually respectful detail to portability and reliability and compatiblity and efficiency, not.
Dec 17 12:48:58 <ynope>	no wonder an advertisement for a deceit fashion branding plastic housing of other products catch the investor's eye
Dec 17 12:49:15 <ynope>	it's a shrimp thing
Dec 17 12:49:17 <m00n>	but they threw a hammer into big brothers message
Dec 17 12:49:29 <ynope>	they are the big brother
Dec 17 12:49:45 <m00n>	isnt that the cycle of things?
Dec 17 12:50:01 <ynope>	well, it's a choice
Dec 17 12:50:05 <m00n>	and lets be honest, compared to the bigger brothers, theyre small fry
Dec 17 12:50:05 <ynope>	not inevitable
Dec 17 12:50:28 <ynope>	3 trillion dollar is more than the big brother business of compute for a century
Dec 17 12:50:36 <ynope>	with fake cornputer appliances
Dec 17 12:50:56 <ynope>	so it's a megalies and megacheat bigger brother
Dec 17 12:51:06 <ynope>	"oh please like it"
Dec 17 12:51:13 <m00n>	they have more than once denied the NSA in public record. Whether or not that was virtue signalling i have no idea, but its better than microsoft giving them keys into windows since the mid 90s
Dec 17 12:51:33 <ynope>	BS, they partake in the Prism program as other "big tech"
Dec 17 12:51:41 <ynope>	and lots more "surveillance programs"
Dec 17 12:51:46 <m00n>	yeah for sure
Dec 17 12:52:07 <m00n>	but theyve denied domestic requests
Dec 17 12:52:23 <ynope>	well CIA can deny lots of things too
Dec 17 12:52:27 <m00n>	and pointed out they have no access to data for domestic subpoenas
Dec 17 12:52:43 <m00n>	yeah, like i said, could very well be virtue signalling
Dec 17 12:52:45 <ynope>	but that does not exhonerate them of perpetrator guilt
Dec 17 12:53:29 <m00n>	theres no security if you dont know what code is running, best make as much FOSS as possible and try to avoid ME type cpus
Dec 17 12:53:38 <ynope>	https://en.wikipedia.org/wiki/Vault_7?useskin=vector#Apple_products
Dec 17 12:53:58 <m00n>	but i bet less than 10% of people on this chat are on it via a non-ME cpu
Dec 17 12:54:37 <ynope>	people believe software alone can fix it, but that's incomplete and also wrong, and incorrect, as it's not supposed to be fixing, but not creating the faults in the first place
Dec 17 12:54:49 <blackjack90>	Apple itself said they gave the US government access to whatsapp notification message, the text in the push notificatin in not end to end encrypted
Dec 17 12:54:59 <ynope>	so faulty electronics and consumer electronics and commercial electronics and for profit electronics are common fails
Dec 17 12:55:17 <m00n>	exactly. We're all fucked anyway
Dec 17 12:55:31 <ynope>	note, I used and liked Apple computers too, in the 6502 epoch
Dec 17 12:55:42 <ynope>	but cloned, so not made by Apple
Dec 17 12:55:53 <ynope>	"fair production local economy"
Dec 17 12:56:09 <ynope>	same for IBM PCs, used clones here locally nation wide
Dec 17 12:56:32 <ynope>	(I had a couple of original IBM PCs too in industrial variants for engineering purposes)
Dec 17 12:56:36 <m00n>	and the chip makers made that kind of computing impossible
Dec 17 12:56:54 <ynope>	but majority of that was cloned and, avoiding the big brother installment
Dec 17 12:57:03 <ynope>	yes, it starts early
Dec 17 12:57:49 <ynope>	this is "planned" economy, not a "free market" as postulated in advertisement material for the capitalism sectors like "technology"
Dec 17 12:57:56 <m00n>	what we need is a distributed operating system than can run on a collection of embedded systems that dont have ME
Dec 17 12:58:12 <m00n>	mesh networked OS
Dec 17 12:58:20 <ynope>	if that particular management engine was the only problem..
Dec 17 12:58:50 <ynope>	you have a lot more of that same type in SoC appliances and other complex logic chips that include a central processor
Dec 17 12:59:04 <ynope>	in other "designers" of produce
Dec 17 12:59:12 <m00n>	I say "ME" to mean the general idea of modern CPU designs including a separate attached backdoor CPU, not just the intel version
Dec 17 12:59:21 <ynope>	fine ;-)
Dec 17 12:59:22 <m00n>	even RISC5 chipsets include it
Dec 17 12:59:48 <ynope>	it's useful but the badness comes from lack of access to program and operate it independently and correctly
Dec 17 13:00:06 <ynope>	meaning with user provided programming
Dec 17 13:00:26 <ynope>	and with correct funcional operation in terms of hardware logic
Dec 17 13:00:41 <m00n>	inability to reflash
Dec 17 13:00:46 <m00n>	and no docs
Dec 17 13:00:46 <ynope>	yep
Dec 17 13:00:54 <ynope>	and proprietary secrets
Dec 17 13:01:02 <ynope>	for profit
Dec 17 13:01:05 <m00n>	yea
Dec 17 13:01:18 <m00n>	well, profit and "national security"
Dec 17 13:01:23 <ynope>	imagine if you had an Emacs mode to control that..
Dec 17 13:01:54 <ynope>	(meaning to be that ubiquitous so that it propagates very high level scripting environments and their extension modules)
Dec 17 13:01:55 <m00n>	id probably accidentally wipe or corrupt my microcode
Dec 17 13:02:06 <m00n>	but the option being there would give me comfort
Dec 17 13:02:29 <ynope>	control means, change the operation of the computer system or engage the machinery across networking
Dec 17 13:02:40 <m00n>	yeah
Dec 17 13:02:43 <m00n>	exactly
Dec 17 13:02:46 <ynope>	so that you can have an elisp cluster
Dec 17 13:02:53 <ynope>	hint hint
Dec 17 13:03:15 <ynope>	ethical own premises and provisioning
Dec 17 13:03:30 <ynope>	(meaning, such that do not violate your rights and intent)
Dec 17 13:03:35 <m00n>	elisp cluster sounds like a big waste of valuable freedom-supporting compute
Dec 17 13:04:06 *	ski . o O ( "Dune 2000 Cinematics" <https://www.youtube.com/watch?v=VT5snfvxDdc> )
Dec 17 13:04:06 <judybot>	[title] Dune 2000 CINEMATICS - YouTube
Dec 17 13:04:13 <m00n>	if you can run code freely, might as well run well optimized low level code and only control it via high level langs
Dec 17 13:04:26 <ynope>	there is not much that big of a difference between a virtual machine, a hypervirus (supervisor) or an language server, after all
Dec 17 13:05:10 <ynope>	it's alread here, only not operating correctly or with capabilities
Dec 17 13:05:17 <m00n>	uhm... not sure how a language server comports with the other two
Dec 17 13:05:24 <ynope>	(or controlled outside of your intent / capacity)
Dec 17 13:05:36 <ynope>	well it's a programmable engine
Dec 17 13:05:44 <m00n>	so is emacs itself?
Dec 17 13:05:45 <ynope>	so is a virtualisation
Dec 17 13:05:52 <ynope>	yes, that's what I said
Dec 17 13:06:07 <ynope>	it's alredy here, only not operating fully as it could and you don't have access to it
Dec 17 13:06:10 <m00n>	but theyre nothing like a VM
Dec 17 13:06:27 <ynope>	are they not? ;-)
Dec 17 13:06:39 <m00n>	just based on the hardware functions VMs take advantage of, not really
Dec 17 13:06:47 <ynope>	application vitualisation is a long available technology
Dec 17 13:07:07 <ynope>	just pegged by processing performance
Dec 17 13:07:29 <m00n>	logically i suppose they are somewhat similar, but VMs have hardware sandboxing these days
Dec 17 13:07:57 <m00n>	if we could truly be certain of our control of that hardware sandboxing, that would be ideal
Dec 17 13:08:07 <ynope>	https://en.wikipedia.org/wiki/Comparison_of_application_virtualization_software?useskin=vector#Comparison_of_application_virtual_machine_implementations
Dec 17 13:08:08 <rudybot>	https://teensy.info/RuN2kcDoFp
Dec 17 13:08:44 <ynope>	JS is in there, so is Elisp/CL only you're not seeing it in the table, but it's in there
Dec 17 13:08:47 <ynope>	since O-code
Dec 17 13:10:13 <m00n>	JS engines are explicitly not included in the table above
Dec 17 13:10:22 <ynope>	https://en.wikipedia.org/wiki/O-code_machine?useskin=vector#Design
Dec 17 13:11:44 <ynope>	"the frontend pared the lisp source and generated C-code, and intermediate language.." (sounds like my Emacs appvm-engine)
Dec 17 13:13:07 <m00n>	well elisp has always been mostly calling C for its data processing, as has javascript and python
Dec 17 13:13:33 <m00n>	these languagages provide such wide standard libraries because you can write those stdlibs in C and provide bindings
Dec 17 13:14:34 <ynope>	looks like a good balance..
Dec 17 13:14:46 <m00n>	but im not talking about process vm interpreters, i mean provably no-back-door full system virtualization
Dec 17 13:14:57 <m00n>	yeah its a great balance
Dec 17 13:15:10 <m00n>	i love elisp and python, and tolerate JS
Dec 17 13:15:12 <ynope>	between programmability and performance, as a midlayer
Dec 17 13:15:25 <ynope>	I like scripting too
Dec 17 13:16:17 <m00n>	but the sandboxing+performance you get from full system hardware enabled emulation/virtualization is awesome, if you could ensure there were no backdoors being injected
Dec 17 13:16:38 <ynope>	if you think about it, we've been doing it all along from speedcode to fotran to basic to pascal to c to c++ to shell to perl etc
Dec 17 13:17:03 <ynope>	regardless of the ALGOL or LISP side
Dec 17 13:17:18 <m00n>	youre just describing the evolution of interpreters? or im unaware
Dec 17 13:17:36 <ynope>	macro-programming in general
Dec 17 13:17:39 <m00n>	yeah
Dec 17 13:17:42 <m00n>	gotcha
Dec 17 13:18:15 *	m00n wonders is VBA has C-style macros now
Dec 17 13:18:21 <m00n>	s/is/if/
Dec 17 13:18:30 <ynope>	just the tooling and language capabilities are improving and expanding over time, as computers become more integrated and perform more calculations
Dec 17 13:18:59 <ynope>	so, the entire "this and not that" is.. a matter of style and preference (perceived value)
Dec 17 13:19:14 <m00n>	the hardware is too, and the philosophical ideas at least in FOSS-aligned community projects
Dec 17 13:19:26 <ynope>	but the merit is in the capability and capacity (and portability / compatibility)
Dec 17 13:20:06 <m00n>	capability/security/capacity/programmer efficiency
Dec 17 13:20:27 <ynope>	hence, it does not matter what style and words are used to describe some variant of a computer and its programming, but if it's incompatible and unportalbe.. it's abandoned and disused or not fit for production / business
Dec 17 13:20:40 <m00n>	right
Dec 17 13:21:08 <m00n>	which is why the ME-centric chipset has taken over, btw
Dec 17 13:21:24 <ynope>	capabilities are needed
Dec 17 13:21:26 <m00n>	it provides central and fast access to peripherals
Dec 17 13:21:31 <m00n>	right
Dec 17 13:21:52 <m00n>	specifically hardware encryption and communication peripherals
Dec 17 13:21:59 <ynope>	integration. miniaturisation, rate of performed operations.. very important metrics
Dec 17 13:22:45 <ynope>	the whole point is being able to use it and have access to it so it's in your control and does the intended set of realised capabilities
Dec 17 13:23:02 <ynope>	and not being used against or beside you
Dec 17 13:23:15 <m00n>	but they never told us how they truly operate, and theres lots of evidence the NSA (as a euphemism/standin for "intelligence agencies and other monied interests with a desire to get in") got that
Dec 17 13:23:16 <ynope>	(or your business unit)
Dec 17 13:23:31 <ynope>	that's right
Dec 17 13:23:48 <ynope>	before release to manufacture, it is guaranteed to be control and compliance
Dec 17 13:24:16 <ynope>	in no way that is missed as a step at desing and engineering stages, there is never such a chance
Dec 17 13:24:37 <m00n>	this is why we need an unexpected and high-rate exponential takeoff
Dec 17 13:24:40 <ynope>	regardless if its a cryptex type machine or a public phone exchange
Dec 17 13:25:14 <m00n>	only thing that can save us from eventual single party infodictatorship
Dec 17 13:25:20 <ynope>	it is "undermined" and "backdoored" at design, includes non-open algorithms too, and also enforced algorithmic variations too
Dec 17 13:25:56 <m00n>	is a separate even more powerful infodictatorship run by a being that simply doesnt give a fuck what we do so long as we're expanding alongside it
Dec 17 13:26:45 <ski>	being ?
Dec 17 13:27:06 <m00n>	exponential takeoff generally refers to a self-improving AGI
Dec 17 13:27:18 <ski>	mhm
Dec 17 13:27:22 <ynope>	the imperial systems are authoritarian by nature.. it's not a fair share or peer collective, so the word democracy is a great lie, but.. it is democratic to have independent computing and sustainable programming, and open access and correctly operation information technology
Dec 17 13:27:46 <ynope>	so.. computing is not the sole solution needed, but rather information technology
Dec 17 13:27:59 <ynope>	and that's where it is irongrip tightlocked
Dec 17 13:28:03 <ynope>	(the comms)
Dec 17 13:28:15 <m00n>	which reminds me, if anyone is unaware: https://annas-archive.org/
Dec 17 13:29:22 <ynope>	the real dictatorship is, being commanded and controlled, via the bank, the job, the school, the church, the community..
Dec 17 13:29:48 <m00n>	yeah but they really screwed up releasing the internet to the public
Dec 17 13:29:57 <ynope>	and the government as a much more distant but more powerful dictat inter-related with other such in a system of government bodies
Dec 17 13:30:22 <ynope>	they have released commercial access and control and regulated the rest via the telecom operators
Dec 17 13:30:39 <m00n>	attempted to
Dec 17 13:30:44 <ynope>	it's not as free as naive people think it is
Dec 17 13:30:57 <m00n>	even china cant keep all pipelines in and out from happening
Dec 17 13:31:17 <ynope>	it if involves money and being cut off on policy and control, it's not free
Dec 17 13:31:40 <m00n>	risk is a form of payment
Dec 17 13:32:11 <ynope>	that meant to say that there is an economic mechanism of signalling that is control and communication
Dec 17 13:32:15 <m00n>	piracy has always been possible, and i cant see a way for them to stop it without hamstringing the internet as a whole
Dec 17 13:32:45 <ynope>	so financialisation is utter control and signalling when that is equivalent to shutdown and operation decisions
Dec 17 13:32:50 <m00n>	well sure, but im not quite convinced the governmental powers that be control the economy so absoluteky
Dec 17 13:33:45 <ynope>	in that way, it's an complete dictature that is economically unavoidable, even if deregulated and commercialised, it is also subject to policy and activity control and sanction
Dec 17 13:34:12 <ynope>	so, the "free and open" is ideals that are at some undetectable small rate and level
Dec 17 13:34:35 <m00n>	if they did there'd be no drug trade, no tax evasion, no piratebay, no sex trafficking, no copyright infringement/IP/patent theft, no export restrictions..
Dec 17 13:35:03 <ynope>	and have useful application on personal and non-interactive operation with the economic and policy systems
Dec 17 13:35:05 <m00n>	idk, i think if wall street can make a buck fuck the fed, they do
Dec 17 13:35:21 <m00n>	extrapolate that to every market in the world
Dec 17 13:35:25 <ynope>	but going into these, it's the machinery of the systemic organisation that controls it
Dec 17 13:35:51 <m00n>	there is no "systematic organisation" that "controls" anything, except emergently
Dec 17 13:35:59 <ynope>	nice ideals, of humane and human progress and advancemen of civilisation
Dec 17 13:36:18 <ynope>	the realisation is.. deteriorated by "control and abuse"
Dec 17 13:36:19 <m00n>	if you mean the meta-governmental organism with money for blood and sweat and tears for lymph, sure
Dec 17 13:36:36 <ynope>	yrp
Dec 17 13:36:38 <m00n>	but no one government could ever control that
Dec 17 13:36:46 <m00n>	no one group of humans
Dec 17 13:36:49 <ynope>	of course it can
Dec 17 13:37:00 <m00n>	lol no, not at all
Dec 17 13:37:16 <ynope>	it's a human construct of organisation
Dec 17 13:37:22 <m00n>	not until one economy dominates world economics and regulates every transaction
Dec 17 13:37:23 <ynope>	of course it can and is controlled by humans
Dec 17 13:37:27 <m00n>	nah
Dec 17 13:37:29 <ynope>	yes
Dec 17 13:37:34 <m00n>	emergence is a fickle thing bro
Dec 17 13:37:48 <ynope>	"beliefs" ;-)
Dec 17 13:38:07 <m00n>	this isnt a belief, its an empirically measurable effect...
Dec 17 13:38:10 <ynope>	people as individuals and groups set things up
Dec 17 13:38:16 <twb>	Why would meatsack persons be in control of ANYTHING
Dec 17 13:38:21 <m00n>	^
Dec 17 13:38:22 <twb>	it's corporate persons that control things now
Dec 17 13:38:23 <ynope>	and make choices individually and as groups
Dec 17 13:39:14 <ynope>	the corpora of capital-personified organisations.. are controlled by people with military and financial servants
Dec 17 13:39:16 <m00n>	people individually and as groups, and as coherent organizations such as corpos, make decisions. But there are many of all of these (meta-)human entities
Dec 17 13:39:23 <m00n>	and they are not aligned
Dec 17 13:39:52 <twb>	The human slaves just implement the wishes of the corporation.  The do not control it.
Dec 17 13:39:53 <m00n>	its the sum total of their economic intention vectors that happens
Dec 17 13:40:01 <m00n>	and that path is chaotic
Dec 17 13:40:15 <twb>	Steve Ballmer could not just choose one day to donate all Microsoft's money to curing cancer
Dec 17 13:40:23 <ynope>	you've just been lied to that it's people-less and "aliens" of unknown sort and it's auto-drive self-roll "artificial other foreign entity" to blame or fight as invisible enemy that sucks out your work and labour, resources and children
Dec 17 13:40:30 <ynope>	it's people ;-)
Dec 17 13:40:35 <ynope>	doing it to other people
Dec 17 13:40:45 <ynope>	with organisations of weapons and servants that do orders
Dec 17 13:40:47 <ynope>	that's it
Dec 17 13:40:53 <m00n>	no, ive studied how money moves for 10 years, and come to these conclusions on my own
Dec 17 13:41:04 <ynope>	money is a signalling mechanism
Dec 17 13:41:14 <ynope>	it is an indicator of control, only that
Dec 17 13:41:14 <m00n>	...
Dec 17 13:41:28 <m00n>	and it indicates opposing forces
Dec 17 13:41:31 <ynope>	there are oders that direct money
Dec 17 13:41:38 <twb>	bullae
Dec 17 13:41:44 <ynope>	and value of strength given to these orders
Dec 17 13:42:10 <ynope>	and if the other side does not comply with the orders, it is disabled and/or destroyed
Dec 17 13:42:20 <ynope>	that's the warconomy of corpital
Dec 17 13:42:20 <m00n>	the complexity involved precludes such human planning
Dec 17 13:42:28 <ynope>	but it's people
Dec 17 13:42:29 *	ski . o O ( "Meditations on Moloch" by Scott Alexander in 2014-07-30 at <https://www.slatestarcodexabridged.com/Meditations-On-Moloch>,(voice recording, with audio clip of Allan Ginsberg reading poem at start) <https://www.youtube.com/watch?v=SeohwQls2GE> )
Dec 17 13:42:33 <m00n>	hehe
Dec 17 13:42:36 <m00n>	exactlty
Dec 17 13:42:44 <twb>	ski: what chapter 2 of Howl?
Dec 17 13:42:44 <m00n>	ex-fucking-actly skiu\
Dec 17 13:42:56 <ynope>	doing it to others, not an AI, not a bot, not a globalist aliens, nor zeitgeist no shit like that
Dec 17 13:43:00 <twb>	ski: that really doesn't have anything to do with the economy, surely
Dec 17 13:43:01 <ynope>	people, humans.
Dec 17 13:43:22 <m00n>	moloch is the sum total of intention vectors
Dec 17 13:43:24 <ynope>	with powerful weapons ;-)
Dec 17 13:43:31 <ski>	twb : "Howls Flying Castle" ?
Dec 17 13:43:42 <twb>	Just because a corporate charter executes on human brain doesn't mean it's not alien
Dec 17 13:43:44 <m00n>	all humans who exert their will on the world impose intention vectors
Dec 17 13:43:55 <ynope>	are dictators
Dec 17 13:44:01 <twb>	ski: https://en.wikipedia.org/wiki/Howl_(poem)#Part_II
Dec 17 13:44:23 <ynope>	but most people realise it's not correct and don't behave like that
Dec 17 13:44:29 <m00n>	every human old enough exerts their will on the world, and most of them participate in economies
Dec 17 13:44:36 <m00n>	sure, many are sheep
Dec 17 13:44:43 <m00n>	but even sheep diffuse
Dec 17 13:45:05 <twb>	sheep gotta shit
Dec 17 13:45:06 <ynope>	while others override their humane nature and choose to, on purpose, and by genealogy lines, to behave like predator dictator super-controllers and super-murderers
Dec 17 13:45:15 <ski>	twb : ah, right. i was looking for the title of the poem, but didn't find it on a quick look on that page
Dec 17 13:45:19 <m00n>	at the scale we're talking about its basically a fluid dynamics problem
Dec 17 13:45:36 <hwpplayer1>	hi Emacs People !
Dec 17 13:45:38 <twb>	sheep gotta Brown
Dec 17 13:45:42 <m00n>	and the end result is the motion of moloch upon the resources of earth
Dec 17 13:46:03 <ynope>	so, guilt is pushed out.. oh, it's the management engine.. it's the virtual machine at fault, it's the CPU.. no it's the feeble programming language
Dec 17 13:46:05 <twb>	ain't moloch just some abrahmic bullshit?
Dec 17 13:46:13 <ynope>	it's human "decisions" and "actions"
Dec 17 13:46:15 <twb>	just a fall guy for yhwh
Dec 17 13:46:18 <m00n>	twb its a metaphor
Dec 17 13:46:31 <m00n>	that paper ski linked is genuinely a good one
Dec 17 13:46:54 <m00n>	its the combined will of the interactions of humans at varying layers of complexity
Dec 17 13:47:12 <ski>	it's related to prisoner's dilemma
Dec 17 13:47:19 <ynope>	you know, in the animal farm.. some animals are nor equal than others.
Dec 17 13:47:33 <m00n>	the theory there is that corpos have agency and the interactions of corpos and governments create an even higher level of agency
Dec 17 13:48:03 <ski>	"Is SCORN Torture or art？ (it's art)" <https://www.youtube.com/watch?v=O70tIzQNcCo> also appears related, to me
Dec 17 13:48:03 <judybot>	[title] Is SCORN Torture or art? (it's art) - YouTube
Dec 17 13:48:27 <twb>	DJ Peach Cobbler has an execellent critique of Scorn
Dec 17 13:48:32 <ynope>	it's just people and their decisions and actions, machines controlled by them, weapons and energy systems, resource and material processing and activities with the goods and their utilisation.
Dec 17 13:48:34 <twb>	It reminded me of that John Safran bit
Dec 17 13:48:40 <ynope>	that's all there is to it, forrest
Dec 17 13:48:59 <ynope>	oh, ok bubba
Dec 17 13:49:41 <ynope>	(and that's about all the lists I can list for now, srhimp processor)
Dec 17 13:49:42 <m00n>	"but that 10th doctor recommends!"
Dec 17 13:49:45 <ski>	ynope : obviously there are individuals with higher levels of control. that doesn't imply there are humans behind it all
Dec 17 13:50:08 <InstNEON001>	G'Day
Dec 17 13:50:08 <ski>	twb : may have been you that linked to that Scorn analysis
Dec 17 13:50:15 <ynope>	ski, reptilians and aliens are not real
Dec 17 13:50:29 <ski>	yes ?
Dec 17 13:50:37 <twb>	Ugh it's not online anymore?
Dec 17 13:50:44 <ynope>	and this has been going on for the last 10K+ years
Dec 17 13:50:50 <m00n>	ynope: you have way more confidence in humans than i do
Dec 17 13:51:01 <ynope>	so.. forget about AI being at the control of this proceeding
Dec 17 13:51:01 <InstNEON001>	Reptilians? Sure. But alien life in general? Absurd that we are the only source of life in the universe. Notice I never said intelligent life.
Dec 17 13:51:20 <ynope>	m00n, yes absolutely, people are it
Dec 17 13:51:45 <m00n>	youre discounting unintended consequences and feedback effects
Dec 17 13:51:50 <InstNEON001>	What's going on here fellas?
Dec 17 13:51:50 <ynope>	(which make decisions and actions for the antropocene)
Dec 17 13:52:17 <ynope>	which is an epoch of geologic-like terminology but not really an geologic epoch
Dec 17 13:52:25 <m00n>	InstNEON001: we're having an end of late night discussion about the nature of the human condition
Dec 17 13:52:26 <ski>	Santa Claus has about the same level of reality, as sports teams, or cities, or corporations, or countries
Dec 17 13:52:31 <ynope>	InstNEON001, wazaaaap
Dec 17 13:53:04 <twb>	https://www.youtube.com/@MusicJamboree still exists but not the one where it starts out as a cooking show and then cuts to a slaughterhouse showing the steps to make a steak
Dec 17 13:53:04 <judybot>	[title] Bevor Sie zu YouTube weitergehen
Dec 17 13:53:05 <InstNEON001>	Everyone* is an idiot (*except for me of course :^) )
Dec 17 13:53:17 <ynope>	(whatsapp is not a nice "control" of humanity mechanism)
Dec 17 13:53:25 <ynope>	hence it's not it, ski
Dec 17 13:53:37 <m00n>	ynope: AI has been in control since standard oil company took over, if not since the East India Company, its not a new thing
Dec 17 13:53:41 <m00n>	the new thing is speed
Dec 17 13:53:55 <ski>	sometimes movements through masses of people appear to have agency of their own. distributed cognition is a thing. but it might be like a whirlwind, that has no sense of self-preservation, may move out over land which quickly snuffs it
Dec 17 13:53:56 <twb>	ski: yes but how many sports teams have a blackface sidekick
Dec 17 13:54:01 <ynope>	there is no such thing as AI ;-) it's all HI (human intelligence)
Dec 17 13:54:11 <ynope>	and the machines that people create and operate
Dec 17 13:54:11 <m00n>	none of the powerful organizations since have truly been controllled by humans
Dec 17 13:54:20 <twb>	https://en.wikipedia.org/wiki/Zwarte_Piet
Dec 17 13:54:27 <ynope>	previously animal force and human force
Dec 17 13:54:33 <ski>	ynope : hence what is not what ?
Dec 17 13:54:52 <InstNEON001>	I can't this AI discourse online. Here's the thing, it's literally impossible to talk about AI on twitter among artists. Either you think it's the most vile thing since hitler or it's a gift from the gods.
Dec 17 13:54:58 <InstNEON001>	s/cant/cant stand
Dec 17 13:55:05 <ynope>	ski, the control of the daily lives on small and large scale human organisations
Dec 17 13:55:26 <m00n>	agreed I
Dec 17 13:55:30 <m00n>	InstNEON001:
Dec 17 13:55:34 <ynope>	semi-self-organised compliance agreement of collective activities etc
Dec 17 13:55:44 <ski>	twb : oh, i didn't know Zwarte Piet was a sports team sidekick .. i just knew about him, as a helper to Sinter Klaas
Dec 17 13:55:54 <twb>	That's what I meant
Dec 17 13:56:21 <InstNEON001>	There is perfectly valid examples of using AI without screwing over other artists. Like the animated movie 'into the spider-verse' and 'across the spider-verse' both used AI for very tedious tasks. But nope, AI is clearly being used for evil here.
Dec 17 13:56:33 <m00n>	ynope: but the collective agreement isnt any single persons' or group of persons' idea
Dec 17 13:56:42 <ski>	InstNEON001 : unbalanced reaction, either one ditch on the side of the road, or the other
Dec 17 13:56:50 <rgr>	someone familiar with "Reloading stale leim-list.el" while building emacs from source?
Dec 17 13:57:09 <ynope>	m00n, it is, by bumping into each other people create efficient interaction learned patterns
Dec 17 13:57:13 <ski>	ynope : sorry, that control is not what ?
Dec 17 13:57:34 <ynope>	ski, read earlier or watch later lines ;-)
Dec 17 13:57:57 <m00n>	and yeah, thats exactly what im saying. When dozens to thousands of orgs bump together the movement is unpredictable by any participant
Dec 17 13:58:11 <ynope>	it is predictable and precisely controlled
Dec 17 13:58:25 <m00n>	lol
Dec 17 13:58:26 <m00n>	no
Dec 17 13:58:27 <ynope>	that's why there are military and police and other forces of control
Dec 17 13:58:28 <ynope>	yes
Dec 17 13:58:31 <ynope>	and yes
Dec 17 13:58:52 <m00n>	if that were the case there wouldnt be multiple major militaries
Dec 17 13:58:54 <ynope>	it's very solidly controlled and orderly ruled into compliance or defunct
Dec 17 13:59:06 <m00n>	no, its simply not
Dec 17 13:59:14 <InstNEON001>	#emacs is srs bzsn
Dec 17 13:59:20 <m00n>	lmao
Dec 17 13:59:41 <ski>	collective beings are a thing. when you petition your muncipality, or city, to fix a pothole in a road, or to clean up a playground for the kids, you're praying to the municipality/city. you're in contact with an official, at some department, who is functioning as part of the inner workings of the organism. if required, you may try to escalate attention to the next higher level (higher manager)
Dec 17 13:59:47 <twb>	InstNEON001: referring to diffusion or LLM GANs are "AI" probably doesn't help
Dec 17 13:59:54 <ynope>	because, people are not doing the same things in the same way across different ethno-genetic groups and territories, each specialise in their own prefered interactions of a generally humane principles
Dec 17 14:00:03 <ynope>	m00n, it is people controlling it
Dec 17 14:00:13 <ynope>	not "invisible hands of fatum"
Dec 17 14:00:16 <ynope>	no such thing
Dec 17 14:00:25 <InstNEON001>	Call it whatever you like. It's still part of the 'AI' flame fest online.
Dec 17 14:00:37 <ski>	same thing with a kid calling Santa on Christmas, and a telephone operator impersonating Santa for the kid. they're giving body to Santa, in that moment
Dec 17 14:00:43 <m00n>	twb, I think agent networks of multiple independently inferring (potentialy multimodal) LLMs could be a true AI
Dec 17 14:01:05 <twb>	m00n: I can't help that
Dec 17 14:01:05 <ynope>	no such thing as AI either, it's assistive information processing not the AI that is being capitalised (for profit and capital churn of no value)
Dec 17 14:01:20 <InstNEON001>	Wake me up when we got IRL SHODAN or GLADOS or HAL-9000.
Dec 17 14:01:24 <ynope>	self-imposed belief fallacy
Dec 17 14:01:31 <twb>	InstNEON001: ITYM Roko's Basilisk
Dec 17 14:01:41 <ynope>	so that you can be resource harvested like plant bugs
Dec 17 14:01:44 <m00n>	ynope: there are no hands that control more than a small fraction of it, if you tried to do an ICA with all the data in the world you'd still get hundreds or thousands of significant components
Dec 17 14:01:52 <ynope>	;-) that is what AI marketing is to you
Dec 17 14:01:52 <rgr>	no such thing as AI? Nonsense. It's in the name : artificial.
Dec 17 14:02:05 <ynope>	mhm
Dec 17 14:02:05 <twb>	InstNEON001: have you read the MMAcevedo article?
Dec 17 14:02:18 <ynope>	wishful thinking
Dec 17 14:02:26 <m00n>	twb i was more curious of your thoughts on the ide
Dec 17 14:02:29 <m00n>	idea*
Dec 17 14:02:46 <twb>	m00n: nich einmal falsch.
Dec 17 14:02:50 <twb>	*nicht
Dec 17 14:03:05 <ynope>	noch
Dec 17 14:03:10 <ynope>	(yet™)
Dec 17 14:03:14 <m00n>	du
Dec 17 14:03:17 <m00n>	du hast
Dec 17 14:03:28 <m00n>	hehe
Dec 17 14:03:52 <ski>	(reminds me that Gregory Bateson said that it's not the computer that's intelligent, but the human-computer system. compare to ecological systems. when you drive a car, or fly a plane, you feel as if the car/plane is a part of your extended body (you identify with it). the scientists doing experiments with the Mars rovers try to identify with it "What if we do this ?" rather than "What if we tell it to do that
Dec 17 14:03:54 <InstNEON001>	L-LOOOK A-A-AT YO-YOU HACKER! PANTING AND SWEATING AS YOU R-RUN THROUGH MY CORRIDORES. HOW CAN YOU CH-CHALLENGE SUCH A PERFECT IMMORTAL MACHINE?
Dec 17 14:03:57 <ynope>	eh, australlians are supposed to know Deutsch, was passiert da hinten..
Dec 17 14:03:59 <ski>	?")
Dec 17 14:04:28 <m00n>	the intelligence isnt dependent on the substrate
Dec 17 14:04:31 <InstNEON001>	I gotta replay system shock 2 again.
Dec 17 14:04:41 <ynope>	m00n, it is
Dec 17 14:05:09 <m00n>	the chinese room as a system is just as intelligent as the people it converses with, despite the contained prisoner never grokking a single token
Dec 17 14:05:17 <ynope>	because people with genetic problems that result in substrate (brain) problems have varying level of deviation from that supposedly independent substrate
Dec 17 14:05:38 <ynope>	hence computation replicates that as an human contructed operating machinery
Dec 17 14:05:39 <m00n>	thats no proof or even evidence
Dec 17 14:05:45 <ynope>	it is
Dec 17 14:05:52 <ynope>	and is reverse and forward correct
Dec 17 14:05:56 <m00n>	yes, the brain is an efficient agent computer
Dec 17 14:05:56 <ski>	(when you're communicating over the internet, symbolically speaking, you're extending your body across the world, so that you come in contact with others)
Dec 17 14:06:12 <twb>	ski: well I just hope you wash it after
Dec 17 14:06:17 <ynope>	m00n, not all brains ;-) and not all programmed machinery
Dec 17 14:06:18 *	ski grins
Dec 17 14:06:19 <m00n>	but that implies nothing about the efficiency of other agency computers on other substrates
Dec 17 14:06:28 <ynope>	not in the same way, and this depends on the substrate
Dec 17 14:06:35 <m00n>	why?
Dec 17 14:06:36 <fsbot>	why not?
Dec 17 14:06:51 <m00n>	because theres no evidence its required, fsbot
Dec 17 14:07:03 <ynope>	because underneath the signal processing is a system whose artefacts and operation are paramount ot the operational capacity and capability
Dec 17 14:07:26 <ynope>	and.. instrumentation can help advance that, but it ultimate is another form of "substrate" dependence
Dec 17 14:07:31 <m00n>	and massive machine learning ensemble networks have similar complexity?
Dec 17 14:07:45 <m00n>	a few orders of magnitude less now, but increasing apace
Dec 17 14:08:07 <ynope>	your earlier claim of emmergence is false
Dec 17 14:08:16 <ynope>	it's created by people and operated by people
Dec 17 14:08:24 <m00n>	my earlier claim of emergence had nothing to do with AI
Dec 17 14:08:33 <ynope>	just don't go to work in the data centre for 1 week and see what happens
Dec 17 14:08:41 *	ski thinks both m00n and ynope may be onto some things here
Dec 17 14:08:50 <twb>	Let's just call it "ersatz intelligence"
Dec 17 14:08:53 <m00n>	it was entirely based on the corporation as meta-human-organism theory
Dec 17 14:08:59 <m00n>	no machines needed
Dec 17 14:09:09 <m00n>	other than paper and writing i guess
Dec 17 14:09:15 <ynope>	I'm giving the title to the talk participants, nothing that I seek to claim as mine in this ;-)
Dec 17 14:09:28 <twb>	Like, people don't want to think because it makes their brains fat
Dec 17 14:09:36 <ynope>	:fart:
Dec 17 14:10:03 <ynope>	you mean they waste their receptor deposits and feel less prepared for other processing
Dec 17 14:10:03 <twb>	"oh I prefer natural intelligence because I heard artificial intelligence is carcinogenic"
Dec 17 14:10:30 <ynope>	so they expend their "energy" as tiredness and fatigue that they want to postpone because of.. fear for their existence
Dec 17 14:10:39 <ynope>	or, simply, self-preservation
Dec 17 14:10:40 <ski>	twb : oh, i saw a nice rant about that, in another channel, the other week .. let me go retrieve it
Dec 17 14:11:01 <twb>	What, sugar substitutes?
Dec 17 14:11:09 <m00n>	i have some original things in mine, but mostly its pulled fromt he last 50 years of neuro/AI/systems/CS/economics/sociopolitical theory
Dec 17 14:11:18 <ynope>	there is no artificial such, it's human intelligence put in storage units like books and computer files
Dec 17 14:11:26 <twb>	Or junk science in the food industry in general?
Dec 17 14:11:34 <m00n>	original as in i had the idea, i dont claim i had any idea first
Dec 17 14:11:42 <ynope>	you can simply forget the silly term artificial intelligence, you will not need it ever
Dec 17 14:11:57 <m00n>	i fundamentally disagree
**** ENDING LOGGING AT Sun Dec 17 14:12:03 2023

**** BEGIN LOGGING AT Wed Jan 17 16:45:04 2024

janv. 17 16:45:04 *	Now talking on #emacs
janv. 17 16:45:04 *	Topic for #emacs is: Many years later, as he faced the firing squad, Colonel Aureliano Buendía was to remember that distant afternoon when his father took him to discover emacs | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
janv. 17 16:45:04 *	Topic for #emacs set by bpalmer!~user@user/bpalmer (Mon Jan 15 02:59:06 2024)
**** ENDING LOGGING AT Wed Jan 17 16:46:04 2024

**** BEGIN LOGGING AT Wed Jan 17 21:56:11 2024

janv. 17 21:56:10 *	Now talking on #emacs
janv. 17 21:56:10 *	Topic for #emacs is: Many years later, as he faced the firing squad, Colonel Aureliano Buendía was to remember that distant afternoon when his father took him to discover emacs | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
janv. 17 21:56:10 *	Topic for #emacs set by bpalmer!~user@user/bpalmer (Mon Jan 15 02:59:06 2024)
janv. 17 22:02:14 <edgar-rft>	let's dissolve the parliament in sulfuric acid
**** BEGIN LOGGING AT Wed Jan 17 22:05:35 2024

janv. 17 22:05:35 *	Now talking on #emacs
janv. 17 22:05:35 *	Topic for #emacs is: Many years later, as he faced the firing squad, Colonel Aureliano Buendía was to remember that distant afternoon when his father took him to discover emacs | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
janv. 17 22:05:35 *	Topic for #emacs set by bpalmer!~user@user/bpalmer (Mon Jan 15 02:59:06 2024)
**** ENDING LOGGING AT Wed Jan 17 22:07:05 2024

**** BEGIN LOGGING AT Wed Jan 17 22:07:05 2024

**** ENDING LOGGING AT Wed Jan 17 22:07:11 2024

**** BEGIN LOGGING AT Wed Jan 17 22:07:27 2024

janv. 17 22:07:27 *	Now talking on #emacs
janv. 17 22:07:27 *	Topic for #emacs is: Many years later, as he faced the firing squad, Colonel Aureliano Buendía was to remember that distant afternoon when his father took him to discover emacs | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
janv. 17 22:07:27 *	Topic for #emacs set by bpalmer!~user@user/bpalmer (Mon Jan 15 02:59:06 2024)
janv. 17 22:07:49 <e1f>	'the more than 94k lbs of tea tossed overboard during the boston tea party would be worth $1.5M-$1.8M today'
janv. 17 22:07:51 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Jan 17 22:07:51 2024

**** BEGIN LOGGING AT Wed Jan 17 22:09:27 2024

janv. 17 22:09:27 *	Now talking on #emacs
janv. 17 22:09:27 *	Topic for #emacs is: Many years later, as he faced the firing squad, Colonel Aureliano Buendía was to remember that distant afternoon when his father took him to discover emacs | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
janv. 17 22:09:27 *	Topic for #emacs set by bpalmer!~user@user/bpalmer (Mon Jan 15 02:59:06 2024)
janv. 17 22:12:02 <wasamasa>	argh, I've run into the gpg issue on a system where I forgot working around it
janv. 17 22:16:20 <e1f>	grym: do you still celebrate the anniversary, dec. 17th iirc
janv. 17 22:17:52 <grym>	e1f: i believe the museum ship in the harbor does an annual reenactment
**** BEGIN LOGGING AT Wed Jan 17 22:25:37 2024

janv. 17 22:25:37 *	Now talking on #emacs
janv. 17 22:25:37 *	Topic for #emacs is: Many years later, as he faced the firing squad, Colonel Aureliano Buendía was to remember that distant afternoon when his father took him to discover emacs | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
janv. 17 22:25:37 *	Topic for #emacs set by bpalmer!~user@user/bpalmer (Mon Jan 15 02:59:06 2024)
janv. 17 22:28:43 <thuna`>	edgar-rft: "generalized variable" basically means "it works in setf".  The package for it is called gv.el, which is why it's a bit obscure(?).
janv. 17 22:29:48 <edgar-rft>	thuna`: Common Lisp uses "place" for things that can be used as argument to setf
janv. 17 22:31:27 <thuna`>	edgar-rft: AFAIK the two are the same.
janv. 17 22:33:18 <thuna`>	I think gv.el is the defsetf of elisp
janv. 17 22:33:54 <edgar-rft>	examples: Elisp uses (aset <array> <index> <new-value>) while Common Lisp uses (setf (aref <array> <index>) <new-value>) where (aref <array> <index>) is the "place".
janv. 17 22:34:46 <thuna`>	I tend to stick with setf where I can
janv. 17 22:35:20 <thuna`>	(Unless I'm setting a variable, in which case I use setq)
janv. 17 22:36:18 <edgar-rft>	I load cl-lib at startup anyway, but sometimes (aset ...) is just simply faster, especially in statistics loops that run several million times :-)
janv. 17 22:37:15 <mesaoptimizer>	you know what, god-mode should /reverse/ keys such that if you press C-p in god mode, the minor mode sends what is equivalent to emacs' vanilla "p"
janv. 17 22:37:21 <thuna`>	Doesn't (setf aref) expand directly to aset?
janv. 17 22:37:34 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Jan 17 22:37:34 2024

**** BEGIN LOGGING AT Thu Jan 18 07:26:22 2024

janv. 18 07:26:22 *	Now talking on #emacs
janv. 18 07:26:22 *	Topic for #emacs is: Many years later, as he faced the firing squad, Colonel Aureliano Buendía was to remember that distant afternoon when his father took him to discover emacs | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
janv. 18 07:26:22 *	Topic for #emacs set by bpalmer!~user@user/bpalmer (Mon Jan 15 02:59:06 2024)
janv. 18 07:27:08 <twb>	"Pinterest announced that it would restrict content that advertises wedding events on former slave plantations.[129]"
janv. 18 07:27:31 <twb>	I guess if you have all those people re-enacting the US civil war, some of them are going to also want to have actual slaves
janv. 18 07:28:46 <twb>	I wonder if slavery would be less popular if there was a widely-published account of a slaver bitching for hours about how logistically difficult it is to treat people like cattle, in a David Mitchell kinda way
janv. 18 07:29:10 <twb>	Like how you can turn kids off becoming cosmonauts by showing them how much mathematics they need to know
janv. 18 07:38:51 <rnkn>	who recommended HTMX to me?
janv. 18 07:39:09 <rnkn>	they use a discord server for chat
janv. 18 07:39:51 <rnkn>	goddamn it...
janv. 18 07:39:59 <codingquark>	ho ho ho
janv. 18 07:40:11 <codingquark>	discord is better than irc, they say
janv. 18 07:40:33 <rnkn>	discord is the devil
janv. 18 07:40:48 <codingquark>	nothing wrong with the devil
janv. 18 07:41:02 <codingquark>	he lives his life just fine okay
janv. 18 07:41:07 <cehteh>	its the wrong devil
janv. 18 07:41:18 <rnkn>	the devil went down to discord
janv. 18 07:41:40 <twb>	"the" devil
janv. 18 07:42:09 <twb>	Christians always bein' reductive
janv. 18 07:42:29 <rnkn>	he was looking for a soul to <GET NITRO TO SPICE UP YOUR AVARTAR>
janv. 18 07:42:40 <codingquark>	he he
janv. 18 07:48:52 <weary-traveler>	what's htmx
janv. 18 07:50:03 <habamax>	fancy lib to do kind of react but not really things
janv. 18 07:50:30 <habamax>	server-based partial html rendering
janv. 18 07:51:00 <weary-traveler>	rendering? so the server sends an image to the client?
janv. 18 07:51:04 <weary-traveler>	or html generation?
janv. 18 07:51:33 <habamax>	it can generate html block, let's say <div> and replace it in bigger html
janv. 18 07:52:30 <habamax>	not an image, sorry
janv. 18 07:53:50 <rnkn>	you get send back an <img src=...> response
janv. 18 07:54:14 <habamax>	with base64 encoded images
janv. 18 07:54:42 <weary-traveler>	okay it sounds like what ngrx like stuff does. provide a declarative way of denoting actions to be taken when some events happen. when user interacts with the html with htmx js it can trigger calls to the server and update the page on user browser based on response
janv. 18 07:54:47 <codingquark>	I didn't think anybody would imagine "html rendering" to be imagine generation
janv. 18 07:54:47 <rnkn>	HTMX Bandits: https://image.tmdb.org/t/p/original/38fX3plSG20LdeRFaUeF6HFMaaa.jpg
janv. 18 07:55:14 <codingquark>	*image
janv. 18 07:55:42 <weary-traveler>	codingquark: what is rendering to you?
janv. 18 07:55:48 <rnkn>	habamax: what did you mean react-but-not-really?
janv. 18 07:56:38 <habamax>	I believe (but not 100% sure) that react has more features wrt building SPAs
janv. 18 07:56:51 <rnkn>	SPAs?
janv. 18 07:57:02 <habamax>	single page applications
janv. 18 07:57:07 <rnkn>	ah
janv. 18 07:57:11 <habamax>	curse word that ruined the web
janv. 18 07:57:40 <rnkn>	would htmx be the most minimal of these sorts of libs?
janv. 18 07:57:46 <habamax>	I think so
janv. 18 07:57:51 <rnkn>	(I like minimal)
janv. 18 07:58:01 <rnkn>	sweet
janv. 18 07:58:02 <habamax>	concept is very simple as well an implementation
janv. 18 07:58:16 <habamax>	the author's big dream to push it into html standard
janv. 18 07:58:29 <rnkn>	I can't see that happening
janv. 18 07:58:42 <habamax>	we had jquery
janv. 18 07:59:10 <codingquark>	ajax omg
janv. 18 07:59:26 <rnkn>	was there an attempt to get jquery into JS standard?
janv. 18 07:59:32 <habamax>	well at least author pushes for changes in html
janv. 18 07:59:54 <rnkn>	I really despite jquery and I can't say why
janv. 18 07:59:58 <rnkn>	despise
janv. 18 08:00:00 <habamax>	now you mostly don't need it as there are methods that allows you to do the same
janv. 18 08:01:05 <habamax>	Now I am sound like a proponent of htmx, I am not :)
janv. 18 08:01:27 <habamax>	I will try it at some point for one of the side projects to have an opinion
janv. 18 08:02:10 <habamax>	s/am/do
janv. 18 08:13:24 *	Viking667 disapparates
janv. 18 08:15:56 <aesdef>	Isn’t htmx just the same as what rails has been doing with Hotwire turbo
janv. 18 08:16:29 <aesdef>	Streaming html over websockets from server to frontend right?
janv. 18 08:16:55 <dminuoso_>	aesdef: Mostly they cover the same use case.
janv. 18 08:18:03 <dminuoso_>	Though, HTMX has more capabilities than that.
janv. 18 08:26:07 *	Disconnected ()
**** ENDING LOGGING AT Thu Jan 18 08:26:07 2024

**** BEGIN LOGGING AT Thu Jan 18 08:26:31 2024

janv. 18 08:26:31 *	Now talking on #emacs
janv. 18 08:26:31 *	Topic for #emacs is: Many years later, as he faced the firing squad, Colonel Aureliano Buendía was to remember that distant afternoon when his father took him to discover emacs | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
janv. 18 08:26:31 *	Topic for #emacs set by bpalmer!~user@user/bpalmer (Mon Jan 15 02:59:06 2024)
janv. 18 08:40:06 <lockywolf>	How bad is this lsp server https://github.com/yveszoundi/eglot-java ?
janv. 18 08:45:34 <rnkn>	still on HTMX, how difficult would it be to replicate this in vanilla JS: https://htmx.org/examples/click-to-edit/ ?
janv. 18 08:45:49 <rnkn>	,emacs-related HTMX
janv. 18 08:45:50 <fsbot>	It may not be that obvious for the layman, but HTMX is indeed emacs-related, rnkn.
janv. 18 08:47:26 <rnkn>	habamax: if you squint your nick kind looks like htmx so you are now its spokesperson
janv. 18 08:52:03 <younder>	HTMX is another javascript bundle that let's you send http over the net. Much like AJAX in scope. Merge pages together, but on the client side. It makes say button clicks generate HTTP GET <url> and merge the content on the page.
janv. 18 08:52:48 <younder>	Saw a 1 hour interview the
janv. 18 08:52:53 <younder>	yesterday
janv. 18 08:54:55 <younder>	https://www.youtube.com/watch?v=LriHRa9t1fQ
janv. 18 08:54:55 <judybot>	[title] Creator of HTMX Talks HTMX - YouTube
janv. 18 09:19:09 <rnkn>	he looks like a lumberjack!
janv. 18 09:19:14 <rnkn>	I like this guy
**** ENDING LOGGING AT Thu Jan 18 09:20:36 2024

**** BEGIN LOGGING AT Thu Jan 18 09:57:29 2024

janv. 18 09:57:29 *	Now talking on #emacs
janv. 18 09:57:29 *	Topic for #emacs is: Many years later, as he faced the firing squad, Colonel Aureliano Buendía was to remember that distant afternoon when his father took him to discover emacs | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
janv. 18 09:57:29 *	Topic for #emacs set by bpalmer!~user@user/bpalmer (Mon Jan 15 02:59:06 2024)
janv. 18 09:57:54 <lockywolf>	czy: nope, matrix is dead
janv. 18 09:58:44 <jbe>	unfortunately, no-one can be told what the matrix is
janv. 18 10:02:47 <edgarvincent>	czy: I use the Emacs space on Matrix.
janv. 18 10:03:09 <edgarvincent>	I wish I could still connect to IRC from it. I now use Circe instead.
janv. 18 10:03:49 <Viking667>	good morftervening again, all.
janv. 18 10:07:08 <pkal>	edgarvincent: how is the emacs space compared to #emacs?
janv. 18 10:10:26 <lockywolf>	is there no matrix-mode?
janv. 18 10:14:18 <edgarvincent>	pkal: It just aggregates many different Emacs-related rooms, which makes it easy to find one's way around.
janv. 18 10:15:28 <edgarvincent>	lockywolf: There is an excellent Matrix client for Emacs called Ement, but I was referring to the fact that one can't (easily) connect to channels on libera.chat from Matrix anymore.
janv. 18 10:17:01 <kensanata>	The matrix screen saver memories make me think that I must have seen a screensaver-like package for Emacs. If Emacs was idle, it would start messing with the buffer (temporarily). Does anybody remember details?
janv. 18 10:19:00 <edgarvincent>	kensanata: M-x zone?
janv. 18 10:19:09 <lockywolf>	edgarvincent: well, you're not expected to _replace_ IRC with Matrix
janv. 18 10:19:23 <kensanata>	edgarvincent: YES! Thanks!
janv. 18 10:19:37 <lockywolf>	edgarvincent: you are expected to _add_ it to the alist of your messengers
janv. 18 10:20:09 <kensanata>	M-x zone-when-idle
janv. 18 10:20:17 <edgarvincent>	lockywolf: Well, that's what I used to do and I enjoyed it.
janv. 18 10:20:44 <edgarvincent>	I used Matrix only, both for Matrix rooms and IRC channels, and I found that to be very convenient.
janv. 18 10:22:43 <lockywolf>	I want to move to deltachat, and make bridges for everything to imap
janv. 18 10:28:27 <Viking667>	hm, that reminds me. Is ement working for emacs-29 branch?
janv. 18 10:31:11 <Viking667>	and, I don't have M-x zone here. Or I don't think I do, anyhow.
janv. 18 10:32:27 <Viking667>	ahh, I do have it, I just missed it.
janv. 18 10:32:48 <kensanata>	Enjoy zoning out.
janv. 18 10:34:16 <Viking667>	I just get "We were zoning when we wrote zone-pgm-....", "... here's hoping we didn't hose your buffer" in the minibuffer.
janv. 18 10:35:48 <Viking667>	Ah. It doesn't seem to work in ERC buffers for some reason.
janv. 18 10:36:27 <thuna`>	I really enjoyed zone-pgm-stress
janv. 18 10:38:20 <Viking667>	I don't get pgm-stress...grrr?
janv. 18 10:39:05 <edgarvincent>	Viking667 No, it doesn't work in Circe either.
janv. 18 10:40:37 <edgarvincent>	Isn't zone-pgm-stress listed in `zone-programs'?
janv. 18 10:41:21 <Viking667>	yes it is. "I don't get ..." means (here at least) I don't understand it.
janv. 18 10:41:37 <Viking667>	as in, I don't get what it was trying to simulate.
janv. 18 10:42:21 <thuna`>	Viking667: You know, grrr.
janv. 18 10:43:27 <Viking667>	sigh. I must have missed the memo on that one.
janv. 18 10:44:12 <edgarvincent>	Oh, ok.
janv. 18 10:44:17 <thuna`>	I don't think there is any deep meaning to zone.
janv. 18 10:44:56 <Viking667>	Most of the rest I get.
janv. 18 10:46:48 <Viking667>	heh. drip-fretfully (and even drip) work differently depending on if it's fixed font (stuff doesn't jump around) or proportional font (stuff most _certainly_ jumps around)
janv. 18 10:47:32 <Viking667>	i.e. for the affected letter, everything else to the right of that letter jitters back and forth as the case of the affected letter is toggled.
janv. 18 10:49:53 <rnkn>	did everyone else just go through the M-x zones?
janv. 18 10:50:39 <Viking667>	I rattled through about six of them, and figured out they probably weren't for me.
janv. 18 10:55:35 *	Viking667 disapparates again - good morftervenight all.
janv. 18 10:56:18 <krux02>	morftervenight is a nice word, I have to remember it
janv. 18 10:56:33 <krux02>	good morftervenight
janv. 18 10:58:00 <krux02>	but most people on the internet live in Europe and North America (USA)
janv. 18 11:00:57 <habamax>	bold statement
janv. 18 11:13:47 <rnkn>	I think there's a place called Asia
janv. 18 11:13:59 <danse-nr3>	asia is just an abstraction
janv. 18 11:20:59 *	needle knows Asia
janv. 18 11:21:09 <needle>	The women named Asia
janv. 18 11:21:37 <czy>	asia is somewhere in anatolia
janv. 18 11:21:58 <rnkn>	there's Asia Argento, but I haven't seen her online in a while
janv. 18 11:23:10 <habamax>	am old enough to remember Asia Carrera
janv. 18 11:26:35 <needle>	Porsche Carrera
janv. 18 11:26:37 <needle>	A dream
janv. 18 11:27:46 <codingquark>	where will you go in it though?
janv. 18 11:28:24 <jbe>	wolfsburg
janv. 18 11:29:24 <codingquark>	you can go anywhere without a vehicle in dreams, but you don't have a choice in where you can decide to go
janv. 18 11:29:28 <needle>	codingquark: I am only expressing the mainstream feeling about cars
janv. 18 11:29:50 <danse-nr3>	,g express us the mainstream feeling about cars
janv. 18 11:29:51 <codingquark>	needle: sure, I am just randomly talking as one does to pass time on #emacs :D
janv. 18 11:29:52 <fsbot>	🤖[g] Opinions about cars vary among individuals, but the mainstream feeling generally includes a recognition of their convenience and utility for transportation purposes, as well as concerns about their impact on the environment and traffic congestion.
janv. 18 11:30:16 <danse-nr3>	uahuahuah as if this was the mainstream
janv. 18 11:30:21 <needle>	heh nice to read that
janv. 18 11:30:44 <needle>	Honestly, I am not much into cars. Do not even have one. Just the license.
janv. 18 11:30:55 <tristonc>	is that a chatgpt bot? :O
janv. 18 11:31:03 <needle>	who you tristonc ?
janv. 18 11:31:08 <needle>	or what
janv. 18 11:31:30 <danse-nr3>	that is the chatGPT function of fsbot
janv. 18 11:31:46 <danse-nr3>	,g explain us why do we have to buy cars
janv. 18 11:31:48 <fsbot>	🤖[g] There are various reasons why someone might choose to buy a car. Some of the common reasons include the need for transportation, convenience in commuting, flexibility in travel, and the ability to carry larger loads or multiple passengers. However, whether or not someone has to buy a car depends on their personal circumstances and preferences.
janv. 18 11:32:08 <danse-nr3>	bullshit ... we all have to buy cars
janv. 18 11:32:49 <needle>	,g explain us why do we have to learn playing drums
janv. 18 11:32:52 <fsbot>	🤖[g] There is no obligation to learn how to play the drums. However, learning to play an instrument can be a rewarding and enriching experience. It allows for self-expression, enhances coordination skills, and can provide a sense of accomplishment. Additionally, playing the drums can be a fun and enjoyable hobby. Ultimately, the decision to learn to play the drums or any instrument is a personal choice based on individual  ;;[ ,more / ,dump]
janv. 18 11:33:07 <codingquark>	someone please invent a portable fusion reactor so we can stop listening to the bot's nonsense
janv. 18 11:33:13 <needle>	ah I said drums you bot >.>
janv. 18 11:33:16 <needle>	not instruments
janv. 18 11:33:57 <needle>	I never used ChatGPT at all
janv. 18 11:34:01 <needle>	That was my first time
janv. 18 11:34:04 <needle>	ever
janv. 18 11:34:26 <codingquark>	,g 1+1= (wrong answers only)
janv. 18 11:34:27 <fsbot>	🤖[g] 11
janv. 18 11:34:35 <codingquark>	oooh, I thought it will refuse to answer wrong
janv. 18 11:34:54 <danse-nr3>	lisps have an historical connection to artificial intelligence (not just machine learning), that is why it is insteresting to test chatGPT in a room full of lispers
janv. 18 11:35:15 <codingquark>	whatever floats your boat man
janv. 18 11:35:41 <twb>	How can you "test chatGPT" when you have no control over it
janv. 18 11:36:00 <twb>	You're not really testing it you're just using it
janv. 18 11:36:05 <needle>	try out getting an answer, would be a better term I guess
janv. 18 11:36:10 <needle>	not test
janv. 18 11:36:12 <danse-nr3>	my boat has sunk long ago, currently planning to refactor it into a submarine. Black box testing is still testing
janv. 18 11:36:15 <codingquark>	I have no control over you but I can still test your patience
janv. 18 11:36:29 <twb>	codingquark: oh nice
janv. 18 11:36:34 <codingquark>	he he
janv. 18 11:37:26 <jbe>	when the marine is sick they bring in the submarine
janv. 18 11:37:37 <codingquark>	lol
janv. 18 11:37:47 <jbe>	hmm, maybe "under the weather" is better than sick in the context
janv. 18 11:37:54 <twb>	Huh, interesting concept.  "What if google maps, but you had a toy car and drove around it"
janv. 18 11:38:10 <danse-nr3>	booring
janv. 18 11:39:03 <twb>	Reviews poorly because bad monetization strategy
janv. 18 11:39:27 <codingquark>	twb: I hope there will be many similar things for VR in future
janv. 18 11:40:28 <codingquark>	I *really* want to get an intuitive understanding of the height of olympus mons - for example
janv. 18 11:41:10 <czy>	lockywolf: matrix is dead? i thought it was gonna take off
janv. 18 11:42:17 <jbe>	it will soon as vr support is done
janv. 18 11:43:30 <codingquark>	cannot preorder apple's vr here
janv. 18 11:44:25 <lockywolf>	codingquark: you need to smuggle blue pills from the USA
janv. 18 11:44:55 <twb>	Man I don't even want to videophone people, let alone VR them
janv. 18 11:45:19 <czy>	voice chat works fine for me...
janv. 18 11:45:37 <lockywolf>	twb: I don't do many things people do regularly
janv. 18 11:45:42 <lockywolf>	I don't spotify
janv. 18 11:45:45 <lockywolf>	I don't twitch
janv. 18 11:45:52 <codingquark>	lockywolf: I thought about facebook's h/w but internet says it is not that great. I was hoping to play around with it to see if I can write some programs for it
janv. 18 11:46:42 <lockywolf>	for it?
janv. 18 11:46:46 <twb>	AIUI facebook's VR hardware is "kinda OK", but you can't *use* it without giving facebook ownership of your children and their children
janv. 18 11:46:53 <lockywolf>	I thought about writing programs _in_ it
janv. 18 11:47:05 <lockywolf>	like, as if having a giant monitor
janv. 18 11:47:13 <czy>	too bad i wear glasses, no vr for me
janv. 18 11:47:35 <tristonc>	matrix didn't take off thank god, synapse is horrible to work with, not to mention it taking minutes to sync up to view a channel
janv. 18 11:47:56 <codingquark>	twb: but you can work from on top of a skyscraper built in the middle of Chiba or something
janv. 18 11:48:18 <codingquark>	twb: yea, you *have* to login to fb which is unacceptable to me
janv. 18 11:48:31 <czy>	tristonc: too bad. are just stuck with irc for now? though i am ok with it
janv. 18 11:48:41 <twb>	I mean... I guess I didn't actually look at the hardware properly, because "facebook owns you" was a dealbreaker
janv. 18 11:48:46 <codingquark>	lockywolf: if we write for it, we can write in it - that is the current state
janv. 18 11:49:10 <jbe>	twb: I think they loosened up a bit on that, but I know it was a bit problematic when $WORK was trying that stuff out for a bit. as an example it required, then at least, a facebook account to connect it to, and those are personal, and people might not really be interested in connecting their personal fb account (if they have one) to work equipment. what we ended up doing was create fake accounts, but that
janv. 18 11:49:16 <jbe>	does of course have its risks as well
janv. 18 11:49:42 <jbe>	e.g. if they figure out "$WORK test1" isn't a real person
janv. 18 11:50:06 <codingquark>	even if you ignore the privacy risks, it is just ugly experience overall
janv. 18 11:50:13 <twb>	jbe: yeah AIUI basically all social media torment nexuses have no concept of "work account"
janv. 18 11:50:29 <czy>	https://www.youtube.com/watch?v=c50qJiiB-O0&ab_channel=Townsends
janv. 18 11:50:29 <judybot>	[title] Winter Survival Food: Potato Soup - YouTube
janv. 18 11:50:44 <czy>	something light-hearted (or not, it depends) for you guys
janv. 18 11:51:24 <jbe>	yup. which makes poor sense for "metaverse" and shit like that where the use case basically is "having your boss talk to other bosses in virtual space"
janv. 18 11:51:40 <codingquark>	he he
janv. 18 11:52:18 <czy>	vr gaming seemed fun at the start, but my eyes just can't handle it
janv. 18 11:52:21 <czy>	too bad for me
janv. 18 11:52:40 <jbe>	and tbf, it actually is a bit more like a meatspace meeting than a videocall is - e.g. spatial sound and so on does a lot
janv. 18 11:52:44 <codingquark>	corpos are trying to make it work...
janv. 18 11:52:46 <twb>	czy: I mean, that's basically "Open World Survival Crafting" genre
janv. 18 11:52:58 <thuna`>	Is there a shorthand for "add-hook if condition is non-nil, remove-hook otherwise"?
janv. 18 11:53:03 <twb>	That video I mean
janv. 18 11:53:41 <czy>	twb: yeah, which is recently my fav genre of videogames. i fire up dwarf fortress prolly once or twice a day and play for a lil while when i am tired of programming
janv. 18 11:55:50 <twb>	I was thinking more 7 days to die
janv. 18 11:56:17 <czy>	games like that won't run too well in exwm
janv. 18 11:56:40 <codingquark>	:P
janv. 18 11:57:12 <twb>	czy: also reminds me of https://www.youtube.com/watch?v=ov6-wfN0I7s
janv. 18 11:57:12 <judybot>	[title] Cooking with what you have - End of month special - YouTube
janv. 18 12:01:36 <tristonc>	czy: pretty much, unless xmpp somehow takes off
janv. 18 12:03:02 <rnkn>	thuna`: just `(if ...)'
janv. 18 12:04:11 <mesaoptimizer>	successfully set up a rudimentary email and IRC workflow in emac
janv. 18 12:04:34 <mesaoptimizer>	s. It is quite a delight to finally not have to use terminal clients (catgirl and aerc) for both anymore
janv. 18 12:05:43 <thuna`>	rnkn: That repeats the HOOK, FUNCTION, and LOCAL arguments in add-hook and remove-hook.  It is obviously not the end-all-be-all but I would have liked a less redundant way, given this is something that most minor modes need to do.
janv. 18 12:07:46 <jbe>	you could make your own function for that, then it would only repeat there and you wouldn't have to see it otherwise?
janv. 18 12:08:36 <thuna`>	jbe: That's obviously an option but if I need to ship that function as well then that defeats the purpose.
janv. 18 12:11:46 <codingquark>	built-in API will be obviously better here
janv. 18 12:11:51 <codingquark>	(if there is one)
janv. 18 12:11:57 <jbe>	ok. if most minor modes do it, look at their source?
janv. 18 12:14:53 <thuna`>	...A quick look revealed that a couple of them wrap the entire body in an (if minor-mode...), which is a bit discouraging.
janv. 18 12:15:50 <codingquark>	I see similar approaches in the packages I am using
janv. 18 12:16:20 <rnkn>	mesaoptimizer: you left catgirl!?
janv. 18 12:16:34 <codingquark>	may be the catgirl left them
janv. 18 12:16:42 <rnkn>	aerc I can sympathise
janv. 18 12:17:02 <jbe>	cats are fickle
janv. 18 12:19:11 <rnkn>	wow the sourcehut ddos took them out for 169 hours
janv. 18 12:19:52 <jbe>	1 week 1 hour
janv. 18 12:20:02 <rnkn>	brutal
janv. 18 12:20:56 <bremner>	there was some ISP hijinks as well, iirx
janv. 18 12:22:46 <thuna`>	It's 169 hours for full recovery, most of the services have been up for a couple days now.
janv. 18 12:23:15 <rnkn>	still a bloodbath
janv. 18 12:23:45 <danse-nr3>	they are just a bunch of people. Even advertising consultancy on their site
janv. 18 12:24:17 <danse-nr3>	we are used to silicon bigcorps uptimes
janv. 18 12:32:37 <mesaoptimizer>	rnkn: to be fair I still have catgirl running as a backup and a private log so I can grep for links or useful conversations I've had
janv. 18 12:33:17 <mesaoptimizer>	rnkn: we still do not know the full details of the sourcehut tbh
janv. 18 12:33:30 <mesaoptimizer>	s/sourcehut/sourcehut ddos/
janv. 18 12:34:08 <mesaoptimizer>	either way, it was a reminder that I should probably use more than one git remote for my repos, or set up mirroring services on other forges
janv. 18 12:38:11 <mesaoptimizer>	Recommend me your favorite emacs package please, and perhaps why you like it so much
janv. 18 12:39:39 <twb>	probably tramp would be the most favourite overall
janv. 18 12:40:03 <twb>	dired and vc and shr are all up there
janv. 18 12:40:39 <thuna`>	projectile-persp is probably the one I use the most
janv. 18 12:41:56 <kensanata>	Of the subtle and universally useful minor modes I offer idle-highlight-mode.
janv. 18 12:42:24 <mickeynp>	twb: tramp and dired are great. that tramp works with such a wide range of stuff is what i love about it.
janv. 18 12:42:37 <mickeynp>	M-x zone, of coureon
janv. 18 12:42:44 <mickeynp>	of course*, is another favourite of mine.
janv. 18 12:43:28 <kensanata>	winner-mode to undo weird layout changes
janv. 18 12:43:52 <danse-nr3>	hah zone looks cool. I do not find `tramp` in list-packages. And great question, by the way.
janv. 18 12:44:05 <bremner>	tramp is built-in
janv. 18 12:44:05 <mickeynp>	M-x cookie-apropos / M-x cookie-doctor
janv. 18 12:44:12 <mesaoptimizer>	yeah I love winner-mode, it is a lifesaver
janv. 18 12:44:13 <mickeynp>	because of course there's an apropos command for fortune cookies
janv. 18 12:44:35 <kensanata>	I rely on show-paren-mode and column-number-mode a lot.
janv. 18 12:44:38 <mickeynp>	M-x ruler-mode for people who think Emacs is a type writer.
janv. 18 12:45:03 <kensanata>	Wow, I had never seen that one before!
janv. 18 12:45:18 <mickeynp>	yeah they're essential, kensanata. I'm pretty sure they finally enabled the former by default
janv. 18 12:45:22 <bremner>	danse-nr3: (info "(emacs) Remote Files")
janv. 18 12:46:16 <danse-nr3>	,+1 bremner
janv. 18 12:46:17 <fsbot>	Try: jka-compr octave-porn
janv. 18 12:46:19 <twb>	Tramp is fucking terrible but it's better than not having it
janv. 18 12:46:26 <danse-nr3>	+1 bremner
janv. 18 12:46:32 <kensanata>	I'm starting to think that savehist-mode is better than desktop (at the time I had already configured it such that it wouldn't reopen five dozen buffers on startup…)
janv. 18 12:46:37 <czy>	oh fuck, this reminds me that one of my keys have expired today.
janv. 18 12:46:42 <danse-nr3>	well i forgot that command. Thanks bremner anyways
janv. 18 12:46:44 <czy>	gotta fix that rn
janv. 18 12:46:47 <twb>	bremner: they didn't ask for "packages too crap to be in GNU Emacs", they just asked for packages
janv. 18 12:47:39 <kensanata>	There's also expand-region. I use er/expand-region quite a bit.
janv. 18 12:47:55 <bremner>	twb: <danse-nr3> ... I do not find `tramp` in list-packages. ...\
janv. 18 12:50:02 <twb>	That's weird
janv. 18 12:50:10 <twb>	list-packages should list all the packages, even the built-in ones
janv. 18 12:50:34 <twb>	https://paste.rs/aAv6n
janv. 18 12:50:41 <twb>	I have tramp listed
janv. 18 12:51:02 <danse-nr3>	loving `zone` %D
janv. 18 12:52:15 <mickeynp>	danse-nr3: there's a bunch of wacky stuff in Emacs. shame they've all but stopped the whimsical things from making it into core.
janv. 18 12:52:54 <danse-nr3>	actually `zone` seems real useful to me. At times i zone out looking at the code ... i will try it in the next days
janv. 18 12:53:09 <mickeynp>	it's a massive mindfuck if you have office colleagues
janv. 18 12:53:17 <mickeynp>	you'll have a chat at your desk and zone kicks off and they're like... wtf.
janv. 18 12:54:13 <danse-nr3>	oh does it have a timer or something? Anyways do not want to derail answers to the original question, was getting a nice direction
janv. 18 12:54:37 <mickeynp>	yes, it's in the docstring; the manual; or in the top of the zone file. can't recall which.
janv. 18 12:54:38 <kensanata>	M-x animate-birthday-present
janv. 18 12:54:47 <mickeynp>	and M-x butterfly of course
janv. 18 12:55:16 <kensanata>	danse-nr3: I think M-x zone-when-idle is for the timer.
janv. 18 12:56:11 <danse-nr3>	aha, cheers ... i will try to recall that command again ... what could that be ...
janv. 18 12:56:17 <danse-nr3>	fsbot, +1 kensanata
janv. 18 12:56:18 <fsbot>	Try: jka-compr octave-porn
janv. 18 12:57:05 <kensanata>	Still trying to understand M-x butterfly.
janv. 18 12:58:05 <danse-nr3>	search `xkct butterflies`
janv. 18 12:58:08 <kensanata>	Ah, you have to answer no!
janv. 18 12:58:21 <danse-nr3>	glad i answered wrong
janv. 18 12:58:21 <kensanata>	Yeah. I had to read the source to get the joke.
janv. 18 12:58:50 <kensanata>	danse-nr3: It's equivalent. :)
janv. 18 13:00:11 <jbe>	rudybot: despite the name, butterflies aren't flies nor butter
janv. 18 13:00:11 <rudybot>	jbe: hmm, butterflies is [0] http://xkcd.com/378/
**** BEGIN LOGGING AT Mon Feb 12 13:07:12 2024

févr. 12 13:07:12 *	Now talking on #emacs
févr. 12 13:07:12 *	Topic for #emacs is: An excessive knowledge of emacs is a sign of misspent youth. -- John McCarthy | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
févr. 12 13:07:12 *	Topic for #emacs set by collinfunk1!~Thunderbi@user/collinfunk (Wed Jan 31 22:54:59 2024)
févr. 12 13:12:33 <chris64>	Is there an evil mode command for closing the frame?
févr. 12 13:12:47 <chris64>	:q does only close one window if there's more than one
févr. 12 13:14:59 <chris64>	ah found it, delete-frame :-)
févr. 12 13:15:46 <yourfate>	ok, now I got it to recognize the ls path, but it crashes as soon as I try to use it, and I can't see any log output from it anywhere
févr. 12 13:16:23 <yourfate>	can I have eglot show me stderr off the language server?
févr. 12 13:18:09 <yourfate>	-serah, there is an EGLOT stderr buffer, but its empty
févr. 12 13:18:26 <snoriman>	Hi, does someone have an idea how I can fix my indentation to look like the bottom version in this gist; https://gist.github.com/samsnori/49b2c6ea8d35cd6fed3b105fb5f5c444using `(JavaScript[JSX] ARev ivy yas Clp ²)`
févr. 12 13:20:21 <twb>	codingquark: when you pressure-cook whole (red/brown) rice, do you use 1:1 ratio of rice:water?  Or more water?
févr. 12 13:33:47 <codingquark>	twb: I will measure today,  but  I go by "guts" so to speak
févr. 12 13:33:53 <codingquark>	It is about 1:1
févr. 12 13:36:27 <twb>	Righto
févr. 12 13:36:41 <twb>	I do 1:1 for aged white rice, but I suspected whole rice needed a bit more water
févr. 12 13:37:08 <twb>	Looks like I didn't leave a note last time
**** BEGIN LOGGING AT Mon Feb 12 14:01:08 2024

févr. 12 14:01:08 *	Now talking on #emacs
févr. 12 14:01:08 *	Topic for #emacs is: An excessive knowledge of emacs is a sign of misspent youth. -- John McCarthy | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
févr. 12 14:01:08 *	Topic for #emacs set by collinfunk1!~Thunderbi@user/collinfunk (Wed Jan 31 22:54:59 2024)
févr. 12 14:02:08 <twb>	I genuinely don't know
févr. 12 14:03:31 <twb>	Looking at the source code...
févr. 12 14:03:45 <twb>	(defvar dired-del-marker ?D "Character used to flag files for deletion.")  and (defface dired-flagged # "Face used for files flagged for deletion."
févr. 12 14:04:03 <twb>	So yeah it looks like "flag" is actually short for "flag for deletion"
févr. 12 14:04:25 <twb>	IMO it is weird and stupid to have "flag" mean something other than "mark", but whatever
févr. 12 14:04:45 <czy>	natural language, smh
févr. 12 14:04:54 <twb>	graywolf: did that help?
févr. 12 14:09:10 <erty>	you can also read (info "(emacs)Marks vs Flags")
févr. 12 14:42:00 <graywolf>	twb: I think so, thanks you.
févr. 12 14:42:16 <twb>	Pfft, nobody reads docs
févr. 12 14:42:23 <graywolf>	erty: I did read that, the "my understanding" part of my question is based on that
févr. 12 14:42:28 <graywolf>	I wanted to make sure I got it right
févr. 12 14:43:12 <graywolf>	It does tell me: Instead of flagging a file with ‘D’, you can mark the file with some other character (usually ‘*’).
févr. 12 14:43:18 <graywolf>	But not really what the difference is, so...
févr. 12 14:43:59 <twb>	I think they just mean you can make the display show e.g. "⚠" instead of "D" when a file is marked for deletion
févr. 12 14:44:52 <Odin-DECK>	Nope, they mean that these are different marks, but it is horribly worded.
févr. 12 14:45:13 <twb>	Bleh
févr. 12 14:45:52 <Odin-DECK>	A 'flagged' file is only used for deletion, and only for use with x. There are several operations you can do on marked files … including deletion.
févr. 12 14:48:18 <graywolf>	I see, thanks :)
févr. 12 14:48:44 *	Odin-DECK never did get the hang of using dired, partially because of peculiarities like that.
févr. 12 14:49:42 <rpav>	dired takes a bit of fiddling to make nice, but wdired is its underrated superpower
févr. 12 14:50:25 <graywolf>	wdired is the "renaming files / changing perms by editing the buffer" thing I have on by reading list, correct?
févr. 12 14:50:31 <graywolf>	on my*
févr. 12 14:52:15 <EdwardIII>	sounds neat, so i could do like a rectange replace and prefix all my files with "superbad-<filename>"?
févr. 12 14:53:02 <jmercouris>	Alright, here is my idea
févr. 12 14:53:04 <jmercouris>	we sell shrimp
févr. 12 14:53:07 <jmercouris>	but... but!
févr. 12 14:53:09 <jmercouris>	ON THE MOON
févr. 12 14:53:25 <hodapp>	wait
févr. 12 14:53:37 <hodapp>	are we selling shrimp that come from the moon, here, or are we selling shrimp that come from here, but on the moon?
févr. 12 14:53:46 <hodapp>	or botjh
févr. 12 14:53:49 <hodapp>	both*
févr. 12 14:53:49 <jmercouris>	shrimp that come from here, but on the moon
févr. 12 14:54:46 <jmercouris>	lucrative, no?
févr. 12 14:54:54 <jmercouris>	or would you describe it as the idea of a /lunatic/?
févr. 12 14:55:51 <jmercouris>	so are you with me?
févr. 12 14:56:12 <hodapp>	as far with you as I can be without staking more than $0.73 in the idea
févr. 12 14:56:59 <jmercouris>	well then, let's do this!
févr. 12 14:57:10 <EdwardIII>	i'll give you $0.74 for 90% of the business
févr. 12 14:57:35 <jmercouris>	that's impossible, this business is worth at least 90,000.00
févr. 12 14:57:45 <jmercouris>	I'd love to get you involved though
févr. 12 14:57:48 <jmercouris>	you can join our investor meetings
févr. 12 14:57:50 <hodapp>	you're right. I'll give you $0.73 for 89% of it
févr. 12 14:57:55 <hodapp>	that's a better deal
févr. 12 14:58:21 <jmercouris>	Hm, less equity, but potentially a more favorable percentage, I suddenly feel like I'm on Shark Tank
févr. 12 14:58:23 <hodapp>	then you're keeping the 11% of it that is still worth the remaining balance - metaphorically really
févr. 12 14:58:48 <hodapp>	but this is something to let our lawyers sort out. the real question is if you are on board with letting me help you change the world
févr. 12 14:58:55 <hodapp>	or if you're going to get hung up on little details I know you don't care about
févr. 12 14:59:16 <jmercouris>	I've always been on board
févr. 12 14:59:23 <jmercouris>	I'm so on board, I was part of the tree even
févr. 12 14:59:24 <twb>	EdwardIII: will you also accept 90% of the business's debts?
févr. 12 14:59:29 <hodapp>	alright then sign right here
févr. 12 14:59:47 <jmercouris>	Alright, here goes nothing
févr. 12 14:59:51 *	jmercouris hastily signs a large X
févr. 12 15:00:19 <twb>	hodapp: I think "on the moon" is Parlari for "while heavily drugged"
févr. 12 15:00:33 <hodapp>	huh
févr. 12 15:00:33 <jmercouris>	it absolutely is not
févr. 12 15:00:38 <jmercouris>	I'm talking about a market that is untapped
févr. 12 15:00:44 <jmercouris>	do you know of anyone else who is selling foodstuffs on the moon?
févr. 12 15:00:54 <jmercouris>	the demand for shrimp on the moon will be incredible
févr. 12 15:01:07 <jmercouris>	do you have any idea how much NASA would pay us to deliver a kg of shrimp onto the moon?
févr. 12 15:01:31 <hodapp>	nope, but you are now contractually obligated to do that because of what you signed
févr. 12 15:01:45 *	hodapp drives off
févr. 12 15:01:58 <jmercouris>	AFAIK Buzz Aldrin was paid for his first five years as an astronaut exclusively in shrimp futures
févr. 12 15:03:11 <twb>	jmercouris: why would the demand be nonzero?  What makes you think NASA will have *any* budget in six months?
févr. 12 15:03:47 <jmercouris>	twb: I can't know that the budget will be non zero, I'm hoping some will be left over from crew resupply
févr. 12 15:03:55 <jmercouris>	potentially as part of the Artemis missions, who knows
févr. 12 15:04:00 <jmercouris>	maybe they'll fire ULA and hire us instead
févr. 12 15:04:09 <jmercouris>	we can guarantee shrimp to the moon, that ULA simply won't
févr. 12 15:04:18 <jmercouris>	then we'll just subcontract to SpaceX and collect the difference
févr. 12 15:06:33 <twb>	But USA is poor
févr. 12 15:07:13 <jmercouris>	well, we are starting from axiomatically different places
févr. 12 15:07:17 <jmercouris>	from my perspective, the USA is not poor
févr. 12 15:07:44 <hodapp>	we're not poor, we're just temporarily embarassed millionaires
févr. 12 15:07:52 <jmercouris>	precisely
févr. 12 15:07:56 <twb>	Doing business with USA in 202x is like doing business with the British Empire in 189x
févr. 12 15:08:17 <jmercouris>	perhaps it is the end of an era of absolute dominance
févr. 12 15:08:20 <twb>	Their evil empire is crumbling and it's past the point of return
févr. 12 15:08:22 <jmercouris>	but the USA is certainly not poor
févr. 12 15:08:36 <jmercouris>	the USA was a rather benevolent empire, from my perspective again
févr. 12 15:08:39 <jmercouris>	I say that as a European
févr. 12 15:08:42 <twb>	Everything they had of value has already been sold off
févr. 12 15:08:44 <jmercouris>	it isn't like they subjugated us
févr. 12 15:08:55 <jmercouris>	whereas they very well could have, as did the Russians, after WW2
févr. 12 15:09:03 <twb>	jmercouris: they literally invaded Europe
févr. 12 15:09:05 <jmercouris>	consider how well the US treated Japan after WW2
févr. 12 15:09:18 <jmercouris>	and did they KEEP Europe as did the USSR?
févr. 12 15:09:39 <twb>	MFN treaties &c
févr. 12 15:09:50 <twb>	Regime changes anytime anyone argued back
févr. 12 15:10:07 <jmercouris>	MFN.. sure
févr. 12 15:10:15 <jmercouris>	for those not aware, most favorable nation
févr. 12 15:10:29 <jmercouris>	it was definitely part of a bigger game, but it was a game with more winners than losers
févr. 12 15:10:34 <jmercouris>	whereas the game the USSR played was all losers
févr. 12 15:10:36 <jmercouris>	everyone suffered
févr. 12 15:11:19 <twb>	https://en.wikipedia.org/wiki/United_States_involvement_in_regime_change
févr. 12 15:11:33 <jmercouris>	yes.. yes..
févr. 12 15:11:41 <jmercouris>	we know about the overthrowing of democracy and all that
févr. 12 15:11:58 <jmercouris>	no one is without sin
févr. 12 15:12:04 <jmercouris>	if you are, please, cast the first stone
févr. 12 15:14:01 *	graywolf casts <stone>
févr. 12 15:14:12 <graywolf>	Or was it <stone bullet>?
févr. 12 15:14:17 <graywolf>	I never get the spell right
févr. 12 15:14:22 <jmercouris>	graywolf: lol
févr. 12 15:36:23 <rpav>	meteor
févr. 12 15:41:10 <corwin>	WE'RE SHRIMPERS ON THE MOON (we're awaiting the monsoon!)
févr. 12 15:41:38 <grym>	one is a genius, the other's insoon
févr. 12 15:47:54 <graywolf>	org mode question:  If I have ! or ^ (and others) in the first cell of table row, the rows is now of different color.  I found https://orgmode.org/manual/Advanced-features.html this documentation.  However I am not seeing a way to turn it off of a specific table (or even for whole buffer), is it possible?
févr. 12 15:49:08 <corwin>	I'm not sure you can disable org table formatting rows, but you could escape the formatting character in the first cell with  \^ or smth
févr. 12 15:49:36 <taeaad>	Any of you use xmonad?
févr. 12 15:50:39 <grym>	let's fork xmodad as w-compositor
févr. 12 15:51:12 <taeaad>	Let's copyright the word monad while we at it so compsci (er, FB programmers) stop using it.
févr. 12 15:52:08 <taeaad>	Unless your surname ends in "eck" you're not allowed to use it.
**** BEGIN LOGGING AT Sat Feb 17 17:08:29 2024

Feb 17 17:08:29 *	Now talking on #emacs
Feb 17 17:08:29 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 17 17:08:29 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** BEGIN LOGGING AT Tue Feb 20 15:07:42 2024

Feb 20 15:07:42 *	Now talking on #emacs
Feb 20 15:07:42 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 20 15:07:42 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 20 15:13:51 <bkhl>	Tried switching to using systemd to launch my Emacs daemon, but it started opening links with eww and is not able to use xdg-open due to DISPLAY/WAYLAND_DISPLAY not being set
Feb 20 15:14:14 <bkhl>	Anyone doing this and knowing how to get around this?
Feb 20 15:20:03 <bkhl>	Probably should give up the idea ...
**** BEGIN LOGGING AT Tue Feb 20 15:32:26 2024

Feb 20 15:32:26 *	Now talking on #emacs
Feb 20 15:32:26 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 20 15:32:26 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 20 15:33:57 <Odin-LAP>	Specifically, a difference between gtk and pgtk builds. In the gtk one, the key left of 'p' works correctly ... unless I press it along with ctrl, at which point it seems to switch to a US keyboard.
Feb 20 15:34:07 <Odin-LAP>	(And produces escape.)
Feb 20 15:34:37 <Odin-LAP>	Er, right of.
**** BEGIN LOGGING AT Tue Feb 20 15:37:56 2024

Feb 20 15:37:56 *	Now talking on #emacs
Feb 20 15:37:56 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 20 15:37:56 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 20 15:55:51 <jbe>	rudybot: what if the 99 red balloons actually were nuclear weapon delivery systems?
Feb 20 15:55:52 <rudybot>	jbe: Let's release 99 red balloons into the sky.
Feb 20 15:57:13 <jbe>	ok, but you inflate them this time
Feb 20 16:09:54 *	edgar-rft releases a fart into rudybot's direction
Feb 20 16:14:08 <jmercouris>	,faith
Feb 20 16:14:08 <fsbot>	16:75 To EMACS belong the secrets of the elispland and the editland.  The business of the Final Hour shall be accomplished in the twinkling of an eye, or even less.  EMACS has power over all things.
Feb 20 16:20:51 <horribleprogram>	hey
Feb 20 16:20:56 <horribleprogram>	my erc doesn't work
Feb 20 16:21:12 <horribleprogram>	stuck at "opening ocnnection..."
Feb 20 16:21:26 <horribleprogram>	then connection failed! Re-establishing ocnnection....
Feb 20 16:21:54 <horribleprogram>	i usually use 6667
Feb 20 16:21:58 <horribleprogram>	but 6697 also doesn't work
Feb 20 16:22:07 <alcor>	horribleprogram: This could be a network issue. Are you sure your firewall isn't blocking that port?
Feb 20 16:22:18 <horribleprogram>	woah 6667 works now
Feb 20 16:22:27 <horribleprogram>	alcor weird, it works now
Feb 20 16:23:23 <horribleprogram>	hold on
Feb 20 16:23:26 <horribleprogram>	leaving webchat
Feb 20 16:24:25 <horribleprogram>	yeah very weird, it works now
Feb 20 16:26:19 <twainwek>	what causes 'Forbidden reentrant call of Tramp' errors? i periodically get that error when using tramp and the only solution is to restart emacs
Feb 20 16:38:11 <Walex>	Odin-LAP: for the past 20 years in EMACS and other applicatoions occasionally I stop  being avble to type the "8" digit, when I type that key some weird keycode gets sent.
Feb 20 16:38:49 <thuna`>	Can you set the input method file-locally (without `eval')?
Feb 20 16:39:38 <Walex>	bkhl: why use 'xdg-open' in a 'systemd' unit file? ALso as mentioned above I use 'tmux'/'screen' to start daemons include 'emacs -f emacs-server'. A lot better than running them in the background.
Feb 20 16:40:11 <bkhl>	I don't mean use xdg-open from the unit file, I mean calling it from an Emacs process spawned from one.
Feb 20 16:40:58 <Walex>	bkhl: why would you do that? Also you can call 'env DISPLAY=... xdg-open ...'
Feb 20 16:41:25 <Odin-LAP>	Walex: By coincidence, Ctrl+AltGr+8 is the "keymap correct" ESC, as AltGr+8 produces [.
Feb 20 16:42:02 <Odin-LAP>	So I don't even need the one from the US keyboard.
Feb 20 16:42:39 <Walex>	bkhl: a little appreciated feature of EMACS is that each "frame" can be attached to a different output context, so on a different X DISPLAY or a non-X TTY.
Feb 20 16:42:43 <Odin-LAP>	Walex: You are aware that emacs ships with a systemd unit file to run emacs server as a user service, no?
Feb 20 16:42:44 <bkhl>	Walex: I was asking in case someone had a neat solution in order to not have to configure Emacs to do that explicitly. Also not sure how you'd get the correct DISPLAY value to set when the systemd session doesn't have it.
Feb 20 16:43:52 <bkhl>	For now I'll probably go back to the `ALTERNATE_EDITOR` solution
Feb 20 16:44:33 <Walex>	bkhl: the point of my point is that in an EMACS instance there might have to be *several* different values of 'DISPLAY',  because that instance may be attached to several different X servers (which is very uncommon,  but possible).
Feb 20 16:45:07 <Walex>	bkhl: norte that 'emacsclient' does not just open frames. That's just the default.
Feb 20 16:45:57 <Walex>	bkhl: consider the '-e ...' and '-F ...' options.
Feb 20 16:46:28 <Walex>	bkhl: 'emacsclient' can tell the EMACS instance on which DISPLAY to open a frame.
Feb 20 16:48:01 <bkhl>	When you use a systemd unit in a graphical session it's implicitly associated with a particular display.
Feb 20 16:48:12 <bkhl>	So I was surprised that WAYLAND_DISPLAY wasn't set.
Feb 20 16:48:58 <Walex>	bkhl: that might depend on whether it is a '--user' instance of 'systemd'...
Feb 20 16:49:09 <bkhl>	It is.
Feb 20 16:49:32 <bkhl>	I was thinking that since this was at the top of the Emacs Wiki page on running the daemon there might be someone else here using this setup.
Feb 20 16:49:41 <Odin-LAP>	bkhl: I've long since ceased to be surprised when something about Wayland doesn't work.
Feb 20 16:50:04 <bremner>	wayland is the future. It's not supposed to work.
Feb 20 16:50:25 <Walex>	https://stackoverflow.com/questions/3244593/how-to-use-make-frame-on-display-and-multi-tty-in-emacs
Feb 20 16:51:12 <bkhl>	I don't have a problem creating frames on the display, it's just that the environment variables telling Emacs packages about the session is not set.
Feb 20 16:54:34 <Walex>	bkhl: if this is a 'systemd' question: I guess you are aware of the 'Environment' definition in a unit file.
Feb 20 16:57:46 <bkhl>	Yes, since I generally just have one login I guess I could hardcode it that way
Feb 20 16:59:26 <Walex>	bkhl: I guess you can write 'Environment="WAYLAND_DISPLAY=$WAYLAND_DISPLAY"
Feb 20 17:00:53 <Walex>	bkhl: or 'ExecStart=env WAYLAND_DISPLAY=$WAYLAND_DISPLAY emacs' or something
Feb 20 17:02:24 <graywolf>	Hello.  I have a question regarding #'.  My understanding from manual (elisp)Anonymous Functions is that it allows byte compilation when followed by lambda.
Feb 20 17:02:26 <graywolf>	What I do not understand (based on the manual) is why it is useful in (add-hook 'foo-hook #'some-function).  Here it is not a lambda, no?
Feb 20 17:04:23 <rpav>	graywolf: in elisp it's not really useful
Feb 20 17:04:54 <rpav>	in e.g. Common Lisp 'foo quotes the symbol foo, and #'foo quotes the function named foo
Feb 20 17:05:06 <graywolf>	So there is no reason to have it everywhere in init.el?
Feb 20 17:05:26 <rpav>	i think #' is sortof-encouraged in elisp now for reasons but i'm not sure it'll ever be practically useful
Feb 20 17:05:47 <bkhl>	Maybe good as an indication of intent at least when you have a variable and function with the same name.
Feb 20 17:05:54 <graywolf>	rpav: So the reasoning is "it might be useful one day, and does no harm now"?
Feb 20 17:05:54 <rpav>	graywolf: not as it stands but maybe ^
Feb 20 17:06:07 <rpav>	graywolf: from what i can tell exactly that
Feb 20 17:06:18 <graywolf>	I see.  Thank you :)
Feb 20 17:06:23 <corwin>	I believe #' (sharp-quote) ensures that, even after byte-compilation, the interpreter will look to the current function binding for the given symbol.
Feb 20 17:11:12 <grym>	let's promote i18n with a sharfes-quote
Feb 20 17:27:07 <ndegruchy>	I got told that the official company style guides are to use MMM DD, YYYY. I told them I wouldn't use anything other than 8601
Feb 20 17:27:20 <edgar-rft>	grym: what's with fsbot-quotes?
Feb 20 17:27:49 <edgar-rft>	,quote
Feb 20 17:27:49 <fsbot>	:(   Wrong number of arguments: quote, 0
Feb 20 17:28:30 <ndegruchy>	,quote quote
Feb 20 17:28:30 <fsbot>	quote  ..(symbol)
Feb 20 17:28:40 <ndegruchy>	,quote linux
Feb 20 17:28:40 <fsbot>	linux  ..(symbol)
Feb 20 17:28:52 <ndegruchy>	,quote emacs-user-dir
Feb 20 17:28:52 <fsbot>	emacs-user-dir  ..(symbol)
Feb 20 17:29:07 <ndegruchy>	👍
Feb 20 17:29:39 <edgar-rft>	rudybot: quote
Feb 20 17:29:39 <rudybot>	edgar-rft: let's override our inhibitions.
Feb 20 17:31:05 <grym>	ndegruchy: "%d %b %Y" in the streets, 8061 in the sheets
Feb 20 17:31:20 <ndegruchy>	fo' sho'
Feb 20 17:36:20 <grym>	my preference for that date format, and for a 24 hour time notation, has occasionaly caused some double-takes in normal life
Feb 20 17:36:43 <grym>	"were you in the military?"  "no, i just don't like ambiguity"
Feb 20 17:36:56 <ndegruchy>	Yep
Feb 20 17:42:29 <bpalmer>	warning: iso-8601 describes a few different formats. Be sure you're ready to deal with input like "P0001-02-15T12:30:00/1985-04-12T23:20:50" before stating ISO-8601 compliance.
Feb 20 17:43:03 <Odin-LAP>	Or specify 8601 part 2 level 0?
Feb 20 17:44:22 <bpalmer>	Hmm. I don't see any mention of levels
Feb 20 17:44:45 <ndegruchy>	I just write the second form, the only thing reading them is my eyeballs and whatever sorting system has to order them
Feb 20 17:45:26 <golu8>	Have you guys tried bit clock system? Is that any useful? I think it is inefficient
Feb 20 17:45:47 <hodapp>	bit clock system?
Feb 20 17:46:33 <golu8>	10 bit clock, 16 bit clock
Feb 20 17:46:46 <golu8>	10-bit Clock Widget (A beautiful BCD clock for your home screen)
Feb 20 17:46:47 <golu8>	https://f-droid.org/packages/com.github.ashutoshgngwr.tenbitclockwidget/
Feb 20 17:47:13 <ndegruchy>	> Alternatively, a format for duration based on combined date and time representations may be used by agreement between the communicating parties either in the basic format PYYYYMMDDThhmmss or in the extended format P[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].
Feb 20 17:47:15 <ndegruchy>	heh, no
Feb 20 17:51:16 <ndegruchy>	RFC3339 is a close approximation to ISO8601. Less formats to try and wrangle
Feb 20 17:51:23 <bpalmer>	I wonder if there are any crons that support ISO 8601 recurring time intervals
Feb 20 17:51:46 <grym>	surely a systemd timer
Feb 20 17:52:27 <alcor>	Obligatory Venn diagram: https://ijmacd.github.io/rfc3339-iso8601/
Feb 20 17:52:42 *	bpalmer shall turn away from cron when the clock strikes thirteen
Feb 20 17:53:27 <BrokenCog>	twb: back to last nights' (machine-instance) ... I was looking at a CommonLisp source file and thought I was in init.el ... confusing!
Feb 20 17:57:12 <rpav>	may defun never end
Feb 20 18:02:58 <Walex>	"lambda, the ultimate (imperative|declarative)"
Feb 20 18:06:49 <Odin-LAP>	bpalmer: I don't know if they kept it in the ISO version, but the original spec that turned into most of part 2 had them.
Feb 20 18:08:37 <hodapp>	bah, why did I have it in my head that projectile or vertico or something can use fzf as the backend?
Feb 20 18:08:50 <Walex>	https://dspace.mit.edu/handle/1721.1/5790
Feb 20 18:09:24 <Walex>	https://dspace.mit.edu/handle/1721.1/6091
Feb 20 18:19:12 <ram_man>	How do you do "Hello World" with #!/usr/bin/emacs --script?
Feb 20 18:21:24 <rpav>	ram_man: (message "hello world")
Feb 20 18:21:30 <rpav>	maybe other ways
Feb 20 18:22:02 <rpav>	(princ "hello world\n") also works
Feb 20 18:26:56 <ram_man>	rpav, when I do that I get:./main.emacs: 2: message: not found
Feb 20 18:26:56 <ram_man>	./main.emacs: 3: princ: not found
Feb 20 18:29:08 <ndegruchy>	works for me
Feb 20 18:29:40 <ndegruchy>	#!/usr/local/bin/emacs --script
Feb 20 18:29:41 <ndegruchy>	(message "Hello World")
Feb 20 18:30:06 <ndegruchy>	I mean, make sure your emacs supports the script flag?
Feb 20 18:31:40 <ram_man>	I find that it works if I do "emacs --script main.emacs", but not if I do ./main.emacs. My script is:  #!/usr/bin/emacs  --script
Feb 20 18:31:40 <ram_man>	(message "hello world")
Feb 20 18:32:00 <ram_man>	Not sure what the deal is. But at least I have one way to do it.
Feb 20 18:32:03 <rpav>	is /usr/bin/emacs a script
Feb 20 18:32:11 <uu`>	Hey, I was trying org-mode, and exporting it as a HTML5 document, but stumbled upon that I can't make text "underline". For example, doing "_underline_
Feb 20 18:33:18 <ndegruchy>	ram_man: yeah, do a type $(which emacs)
Feb 20 18:33:26 <ndegruchy>	from the shell
Feb 20 18:33:32 <ndegruchy>	see if it's some sort of wrapper script
Feb 20 18:33:35 <uu`>	oops send early, here's the last piece: for example doing "_underline_" doesn't work but doing "*bold*" does work. It's only underline tat doesn't working with org-mode, I'm not quite sure why. I'm exporting it by M-x -> org-html-export-to-html
Feb 20 18:33:45 <rpav>	ndegruchy: type?
Feb 20 18:34:02 <rpav>	`file /usr/bin/emacs` will show if it's a script or binary
Feb 20 18:34:26 <rpav>	or symlink etc i guess
Feb 20 18:34:54 <ndegruchy>	er, yeah, sorry file
Feb 20 18:35:07 <rpav>	i think a symlink is fine as long as the target is valid
Feb 20 18:36:00 <ndegruchy>	uu`: is the _underline_ bit surrounded by quotes?
Feb 20 18:36:03 <rpav>	ndegruchy: in a sane world, type and file would do each other's jobs ;)
Feb 20 18:36:49 <ram_man>	I get this on the command line:
Feb 20 18:36:49 <ram_man>	> which --all emacs
Feb 20 18:36:49 <ram_man>	> file /usr/bin/emacs
Feb 20 18:36:52 <ram_man>	> file /usr/bin/emacs-29
Feb 20 18:36:56 <ndegruchy>	lets make a script called `filetype` that just calls both
Feb 20 18:37:24 <ram_man>	I get this on the command line:
Feb 20 18:37:24 <ram_man>	> which --all emacs
Feb 20 18:37:24 <ram_man>	"/usr/bin/emacs"
Feb 20 18:37:25 <ram_man>	> file /usr/bin/emacs
Feb 20 18:37:25 <ram_man>	"/usr/bin/emacs: symbolic link to emacs-29"
Feb 20 18:37:25 <ram_man>	> file /usr/bin/emacs-29
Feb 20 18:37:27 <ram_man>	"/usr/bin/emacs-29: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, stripped"
Feb 20 18:37:29 <grym>	,paste
Feb 20 18:37:30 <fsbot>	Please do not paste more than three lines into the channel. Use a pastebin like https://bpa.st/+emacs-lisp
Feb 20 18:37:54 <ndegruchy>	ok, so emacs is version 29 and it's a binary (or at least a link to a binary)
Feb 20 18:38:24 <ram_man>	Sorry, my first paste did not have the results. It looks like it is a binary.
Feb 20 18:38:31 <rpav>	i can confirm a link works at least on this system
Feb 20 18:38:52 <rpav>	maybe your shell is restricted on what interpreters it interprets, or something
Feb 20 18:39:05 <ndegruchy>	or it's not following symlinks from a script
Feb 20 18:39:27 <ndegruchy>	try using the /usr/bin/emacs-29 in the shebang
Feb 20 18:39:42 <rpav>	well, i did `ln -s /bin/sh foo` then `#!/path/to/foo\necho "foo"` worked
Feb 20 18:39:49 <rpav>	but yeah that would be safe as well
Feb 20 18:44:06 <uu`>	ndegruchy: nope, 1: https://litter.catbox.moe/mklh4o.png 2: https://litter.catbox.moe/mu5m5n.png
Feb 20 18:45:18 <ndegruchy>	huh
Feb 20 18:45:40 <uu`>	Any ideas? Basically, normal, bold, italic, works, but underline doesn't...
Feb 20 18:45:51 <uu`>	I'm not quite sure what's wrong
Feb 20 18:46:23 <ndegruchy>	uu`: are you striping styles?
Feb 20 18:46:40 <ndegruchy>	or redefining them?
Feb 20 18:46:59 <ndegruchy>	org uses a span with a class of 'underline' to style underlines, not <u>
Feb 20 18:47:19 <ndegruchy>	Hello there, I'm <span class="underline">Nathan</span>.
Feb 20 18:47:50 <uu`>	OH, what a catch! Yeah, I've html-style:nil, and removing it did fixed it.
Feb 20 18:47:57 <uu`>	thanks ndegruchy!
Feb 20 18:48:25 <ndegruchy>	,ding
Feb 20 18:48:26 <fsbot>	dong
Feb 20 18:48:31 <ndegruchy>	,next
Feb 20 18:48:31 <fsbot>	Another satisfied customer. NEXT!
Feb 20 18:48:44 <EdwardIII>	,rekt
Feb 20 18:48:44 <fsbot>	EdwardIII, StarTrekTheUndiscoveredEmacs is at http://www.emacswiki.org/emacs/StarTrekTheUndiscoveredEmacs
Feb 20 18:49:08 <technomancy>	lol
Feb 20 18:49:11 <grym>	,lol
Feb 20 18:49:12 <fsbot>	lol is [0/7] land of lisp - http://landoflisp.com/
Feb 20 18:49:12 <fsbot>	[1] ask me about ,spels
Feb 20 18:49:12 <fsbot>	[2] Let Over Lambda - http://letoverlambda.com/
Feb 20 18:49:12 <fsbot>	[3] lisp on lines, yet another abandoned partially implemented CL web framework, see https://github.com/drewc/lisp-on-lines ;;[ ,more / ,dump]
Feb 20 18:49:43 <bpalmer>	remember when everybody wanted to be the next ruby on rails?
Feb 20 18:50:02 <hodapp>	idk
Feb 20 18:50:09 *	bpalmer reminisces about simpler bubbles in these internet times.
Feb 20 18:50:16 <hodapp>	isn't that why Phoenix came about?
Feb 20 18:50:30 <grym>	i recently discovered that discourse is a rails app
Feb 20 18:57:46 <tyson2>	it turned out to be harder to steal Rail's thunder than people thought
Feb 20 18:58:51 <technomancy>	I think part of why everyone wants to be the next rails is that ruby was super obscure before rails took off
Feb 20 18:59:01 <technomancy>	so people see it as a ticket to the big leagues
Feb 20 18:59:18 <grym>	more trouble than it's wroth
Feb 20 19:00:01 <technomancy>	well, being able to get a job is awful nice
Feb 20 19:00:06 <technomancy>	but yeah, maybe
Feb 20 19:01:31 <hodapp>	I have heard that it is common for humans to seek out jobs, despite that they subsequently hate the job
Feb 20 19:01:51 <grym>	i found a nice banger of a william morris quote last week
Feb 20 19:01:57 <technomancy>	Let's contain multitudes.
Feb 20 19:02:11 <grym>	“Nothing should be made by man's labour which is not worth making, or which must be made by labour degrading to the makers.”
Feb 20 19:02:29 <grym>	rudybot: emacs is arts! emacs is crafts! it must be a movement, too
Feb 20 19:02:30 <rudybot>	grym: I thought they were a movement, kinda lead by Oscar Wild, and related to the arts and crafts movement?
Feb 20 19:02:43 <ndegruchy>	hodapp: they also concern themselves in the transfer of little green pieces of paper, which is odd, since the little green pieces of paper were perfectly happy where they were.
Feb 20 19:02:56 <hodapp>	YOU'RE A LITTLE GREEN PIECE OF PAPER
Feb 20 19:03:01 <grym>	no ur mom
Feb 20 19:03:09 <grym>	queue alan watts anecdote about the bank tour
Feb 20 19:03:10 <ndegruchy>	hodapp: I wish
Feb 20 19:03:38 <hodapp>	reading this book right now: https://burglarsguide.com/
Feb 20 19:03:56 *	ndegruchy hesitates clicking on that..
Feb 20 19:04:12 <hodapp>	it's a book
Feb 20 19:04:45 <technomancy>	reminds me of my favorite title of the books I read last year: Vera Wong's Unsolicited Advice for Murderers
Feb 20 19:31:37 <bpalmer>	I quite like this title from 2019: _Sixteen Ways to Defend a Walled City_
Feb 20 19:31:53 <tromey>	that was a pretty good book
Feb 20 19:32:12 <bpalmer>	I think I bought it but still haven't read it.
Feb 20 19:35:28 <grym>	What To Do If One Army Occupies A Well-Fortified And Superior Fortress And The Other Does Not: "Endeavor to be the one inside."
Feb 20 19:35:31 <grym>	-- Callus Tacticus, "Veni Vidi Vici: A Soldier's Life"
Feb 20 19:35:47 *	ndegruchy compiles new emacs build...
Feb 20 19:38:45 <bpalmer>	what should be done if one army is in possession of SDF-1, a super dimensional fortress?
Feb 20 19:38:57 <grym>	bpalmer: make vimes handle it
Feb 20 19:39:48 <bpalmer>	rudybot: gundams or robotech?
Feb 20 19:39:48 <rudybot>	bpalmer: the gundams would be the quintessential mecha franchise, I guess
Feb 20 19:41:28 <bpalmer>	rudybot: you have forgotten mazinger z
Feb 20 19:41:29 <rudybot>	bpalmer: OT - hmm, I wanted to run foo && bar in bash, but I have forgotten the && bar part... can I now safely C-z the foo process and then unpause it with fg && bar to get the same effect as foo && bar?
Feb 20 19:58:44 <e1f>	why do children always build a snowman and not a snowwoman?
Feb 20 19:59:07 <grym>	someone's not read enough calvin and hobbes
Feb 20 20:01:43 *	ski made a troy town, in snow
Feb 20 20:03:02 *	e1f has the complete c&h two-volume hardcover set
Feb 20 20:05:37 <Odin-LAP>	e1f: Because sexism is pervasive in society to the extent that something representing a person with no distinguishing features is considered by default to represent a man rather than a woman?
Feb 20 20:09:55 <bkhl>	Not sure if snowman is that old but in a lot of compound words with "man", they could be from a time where that word also meant "man" generically.
Feb 20 20:10:05 <bkhl>	Em, "human" generically
Feb 20 20:11:06 <grym>	bkhl: absolutely.  also, i got in trouble whenever i put boobs on my snow sculptures
Feb 20 20:12:06 <bkhl>	Me and some of my friends had a winter tradition where we built a giant snow phallos on a field in the outskirts of my home town.
Feb 20 20:12:11 *	ski tends to use "wereman" for "male human"
Feb 20 20:12:41 <bpalmer>	ski: was your troy town beloved of Aphrodite?
Feb 20 20:12:41 <bremner>	'ware  the man??
Feb 20 20:12:42 <fsbot>	Ask again later
Feb 20 20:12:59 <bkhl>	5-10 years later a Russian colleague of mine who used to live there mentioned seeing this and took it as an example of how decadent Sweden is. :-)
Feb 20 20:13:05 <ski>	bkhl : hm, i think i recall something like that, in some comic by Joakim Pirinen
Feb 20 20:13:11 <grym>	wer and wif
Feb 20 20:13:13 <bkhl>	(Not knowing I had participated in building it.)
Feb 20 20:13:21 <grym>	bkhl: we usually have to rely on fratboys to do this
Feb 20 20:13:26 <grym>	in harvard yard, at least once.
Feb 20 20:13:46 <grym>	queue the "protect the dong from vandalism by coating it in ice" wars
Feb 20 20:13:48 <bkhl>	I'm not claiming it's likely to be completely original.
Feb 20 20:14:04 <grym>	i think that particular doodle is pretty universal across humanity
Feb 20 20:14:24 <bpalmer>	perhaps approximately 50% of humanity
Feb 20 20:14:31 <bkhl>	That said a giant one in snow on the field behind a particular grocery store is likely to be the one I was involved in making.
Feb 20 20:15:17 <bpalmer>	One of the more notable proofs of aliens is all the things that are visible only from the air due to their scope
Feb 20 20:16:22 <rpav>	dammit something keeps massively altering whitespace on file save (or modify) and i can't figure out what
Feb 20 20:16:24 <ski>	bpalmer : <https://en.wikipedia.org/wiki/Troy_town>
Feb 20 20:16:50 <ski>	"were-" being cognate with latin "vir-"
Feb 20 20:17:31 <bpalmer>	wait, wait, troy is associated with labyrinths? Labyrinths are crete's thing!
Feb 20 20:18:04 <ski>	dunno why it's called "Troy town"
Feb 20 20:18:11 <bkhl>	The article mentions why Troy are also associated with mazes.
Feb 20 20:18:13 *	bpalmer demands better editorship of mythological history.
Feb 20 20:18:34 *	ski . o O ( <https://en.wikipedia.org/wiki/G%C3%A4vle_goat#Repeated_destruction> )
Feb 20 20:19:22 <bpalmer>	bkhl: it doesn't really say why, just that historically speaking there's a connection
Feb 20 20:19:31 <bkhl>	Minas Tirith was also inspired by this type of description of Troy.
Feb 20 20:19:51 <bkhl>	(That's the geeky reason I know about this …)
Feb 20 20:21:13 <bkhl>	bpalmer: you mean it doesn't explain why they picked that when naming Troy Towns? That may well be mostly because the Troy excavations were hot news when these were named.
Feb 20 20:21:54 *	ski . o O ( <https://en.wikipedia.org/wiki/Cerne_Abbas_Giant> )
Feb 20 20:22:26 <bkhl>	I just bought an apartment that is about 100 meter away from where one of these used to be.
Feb 20 20:22:41 <bkhl>	It's called Jungfrudansen which is another local name for them.
Feb 20 20:22:41 <grym>	ski: ah a fine thing
Feb 20 20:24:11 <bkhl>	Oh, actually the name has a much more interesting history.
Feb 20 20:24:59 <bkhl>	There's apparently an Etruscan ceramic with a labyrinth pattern that some think has the name "Troy" (spelled weirdly) on it.
Feb 20 20:26:34 <ski>	maiden dance, yea, bkhl. it kinda looks like a maiden with long flowing hair
Feb 20 20:27:06 <bkhl>	I think it's more to do with these being used for ritual dances.
Feb 20 20:28:01 <grym>	the maidens are dancing in the maidan!
Feb 20 20:28:05 <ski>	iirc, there's been some old celebrations, with a maiden standing in the middle of the labyrinth, and people dancing around, maybe at midsummer or spring equinoxe or somesuch
Feb 20 20:34:46 <blaub>	hledger is really cool!
Feb 20 20:38:25 <johnjaye>	is canna used in emacs? the freebsd ports file seems to make a big deal about it
Feb 20 20:39:00 <bpalmer>	emacs canna take much of this, capn!
Feb 20 20:39:03 <technomancy>	lol
Feb 20 20:39:34 <johnjaye>	a canna elisp for you
Feb 20 20:41:37 <bkhl>	I used hledger for quite a while in Emacs.
Feb 20 20:41:48 <technomancy>	does the h stand for haskell?
Feb 20 20:42:01 <johnjaye>	well i don't see it in the emacs source anywhere. so maybe it's freebsd only
Feb 20 20:42:29 <johnjaye>	just says Canna japanese input flavor in a comment
Feb 20 20:42:29 <technomancy>	,canna
Feb 20 20:42:30 <fsbot>	Try: emcws oanc synthehol THC
Feb 20 20:43:17 <bpalmer>	technomancy: I believe so. hledger was the haskell to ledger's c++
Feb 20 20:44:24 <technomancy>	nice
Feb 20 20:44:45 <mfisher>	k2
Feb 20 20:46:32 <wasamasa>	johnjaye: another fun license: https://github.com/Speykious/cve-rs/blob/main/LICENSE
Feb 20 20:48:28 <johnjaye>	haha
Feb 20 20:48:37 <johnjaye>	oh apparently canna emacs is here: https://www.gentei.org/~yuuji/software/emacs29canna/
Feb 20 20:48:41 <bkhl>	IIRC I used this with hledger https://github.com/narendraj9/hledger-mode
Feb 20 20:48:44 <johnjaye>	some kind of japanese ime
Feb 20 20:49:09 <bkhl>	It's pretty similar to Ledger though it may be possible to just use it with other modes for that as well.
Feb 20 20:54:21 *	Odin-LAP needs to get to grips with ledger.
Feb 20 20:54:31 <Odin-LAP>	ADHD and bookkeeping don't get along, though.
Feb 20 20:56:19 <bpalmer>	it's all about hyperfocus.
Feb 20 20:57:04 <bpalmer>	now I want to re-read deepness in the sky.
Feb 20 21:06:28 <JohnGalt>	Odin-LAP: Strattera works really well for ADHD
Feb 20 21:06:42 <JohnGalt>	Odin-LAP: it is not a stimulant
Feb 20 21:07:17 <JohnGalt>	Odin-LAP: and it's generic now
Feb 20 21:09:15 <ram_man>	I've been trying different completion packages and I think vertico is the best one.
Feb 20 21:10:59 <bkhl>	You might be right.
Feb 20 21:11:20 <Odin-LAP>	JohnGalt: Concerta's worked fine for me for twenty years or so. Doesn't mean there aren't issues.
Feb 20 21:12:53 <alcor>	Worth noting that Emacs 29+ completions got an upgrade that makes it more … usable https://robbmann.io/posts/emacs-29-completions/
Feb 20 21:13:37 <bkhl>	I did switch to fido-vertical-mode from vertico for a while, it was OK.
Feb 20 21:13:51 <bkhl>	But ended up going back to Vertico mainly because it's faster.
Feb 20 21:17:26 <johnjaye>	wasamasa: have you been to oslo before?
Feb 20 21:17:32 <wasamasa>	yeah
Feb 20 21:18:01 *	Odin-LAP hasn't managed to leave Gardermoen yet.
Feb 20 21:22:29 <ram_man>	I like Emacs 29+ native completions better than ivy and helm.
Feb 20 21:23:14 <rpav>	let's provide patches for breaking news
Feb 20 21:48:58 <pkal>	bkhl: it certainly isn't faster if TRAMP makes completion slow "faster",
Feb 20 21:49:22 <pkal>	(forget that last "faster", that was a typo-edit)
Feb 20 22:09:04 <thuna`>	How do you set org-project-capture up?
Feb 20 22:11:32 <thuna`>	Nevermind, there are instructions in the README
Feb 20 22:12:32 <bpalmer>	Let's refactor the news into more coherent updates.
Feb 20 22:16:45 <hodapp>	hrmph, 'emacsclient -c' on a Python file fails with "*ERROR*: None of ’pylsp, pyls, pyright-langserver, jedi-language-server’ are valid executables" for no apparent reason
Feb 20 22:17:20 <bpalmer>	perhaps the daemonized emacs's exec-path is lacking shell customization?
Feb 20 22:17:41 <hodapp>	emacsclient -nw works fine on the same, as does just emacsclient
Feb 20 22:21:32 <bpalmer>	... huh.
Feb 20 22:47:24 <bpalmer>	is today weird emacsclient breakage day?
Feb 20 22:47:43 <rpav>	today is one of those days
Feb 20 22:53:50 <grym>	hodapp: not emacsclient, but def. facestabby: https://omegaconf.readthedocs.io/en/2.3_branch/
Feb 20 23:02:01 <hodapp>	grym: they love omegaconf here
Feb 20 23:02:25 <hodapp>	"look we can make things so much better by using config files to make it *not* programmable"
Feb 20 23:02:30 <grym>	hodapp: i hate it to pieces after using this guy's repo
Feb 20 23:02:42 <grym>	do you happen to know how to make it take yaml that isn't a file
Feb 20 23:02:54 <hodapp>	"look we can make things so much better by making the configuration language more flexible! we could even add things like variable interpolation! we could values be computed, even!"
Feb 20 23:03:11 <hodapp>	hm, nope, have only ever seen them do it from a file here
Feb 20 23:05:25 <grym>	hmm.  ok.  is it easyish to use files that are outside its what seems like utterly magic directory structure?
Feb 20 23:05:43 <hodapp>	our usage here doesn't follow any kind of directory structure
Feb 20 23:06:03 <grym>	ah.  this one dos: https://github.com/drprojects/superpoint_transformer/tree/master/configs
Feb 20 23:06:08 <grym>	and it's .. lots of it
**** BEGIN LOGGING AT Wed Feb 21 00:53:37 2024

Feb 21 00:53:37 *	Now talking on #emacs
Feb 21 00:53:37 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 21 00:53:37 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 21 00:53:55 <technomancy>	and half the uses of regular arrows are cleaner with `let'
Feb 21 00:54:00 <technomancy>	(the other half are pretty great tho)
Feb 21 00:54:33 <technomancy>	especially for datetime stuff like (-> 3 time/hours time/ago)
Feb 21 00:56:04 <johnjaye>	are there variants with numbers. like ->| which inserts at the very end or ->n which inserts at the nth slot?
Feb 21 00:56:52 <johnjaye>	could be convenient with calls like append where it's (function (asdfasdfasdfasdf) t)
Feb 21 00:57:04 <johnjaye>	you could thread that as (-> t ...)
Feb 21 00:57:59 <habamax>	that would be unreadable as heck
Feb 21 00:59:14 <johnjaye>	it would mainly be useful for situations like I describe, where you have arguments of very different sizes wher e one is a 5 element list and the other is just t or something.
Feb 21 00:59:35 <johnjaye>	it's easy to miss the last argument in that situation
Feb 21 01:00:13 <habamax>	so all the functions should expect it to be threaded, let's say at 5th slot?
Feb 21 01:00:40 <johnjaye>	idk what that means
Feb 21 01:01:11 <johnjaye>	but it's probably not that common. and as technomancy said a let is probably a better way
Feb 21 01:01:25 <johnjaye>	just assign (big long list with long names) to 'x' and then call (func x y z)
Feb 21 01:02:28 <twb>	Let's put alive people on banknotes, for the lulz
Feb 21 01:02:50 <technomancy>	johnjaye: there's as-> but it's bad too https://clojuredocs.org/clojure.core/as-%3E
Feb 21 01:06:00 <bremner>	twb: like with a really big stapler?
Feb 21 01:07:40 <bremner>	I guess superglue would also work
Feb 21 01:07:50 <johnjaye>	it's like a strange kind of recursive loop
Feb 21 01:14:16 <bremner>	no u
Feb 21 01:17:15 <incal>	at least superglue works well for attaching two fingers onto each other
Feb 21 01:20:52 <dcb>	use megaglue instead if super isn't strong enough
Feb 21 01:23:44 <twb>	Oh wow, eldoc is running in python and I didn't even ask for it
Feb 21 01:23:59 <twb>	I noticed because if you call a method with type hints, it fills the entire fucking screen
Feb 21 01:24:48 <twb>	https://i.imgur.com/9ttwS1v.png
Feb 21 01:26:46 <Odin-DECK>	Apparently global-eldoc-mode is on by default since ... sometime recent.
Feb 21 01:27:34 <incal>	Odin-DECK, if you don't like it you can do (global-eldoc-mode -1) and (setq eldoc-idle-delay 0)
Feb 21 01:27:49 <twb>	huh
Feb 21 01:28:00 <twb>	Odin-DECK: good to know
Feb 21 01:29:07 <Odin-DECK>	twb: There's a way somewhere to tell it not to put long text in the minibuffer, only in a dedicated window.
Feb 21 01:29:25 <twb>	Nah don't worry, it's fine
Feb 21 01:29:35 <twb>	I'm actually happy with this
Feb 21 01:29:57 *	Odin-DECK was mostly annoyed by the way it causes the minibuffer to jump up and down depending on documentation.
Feb 21 01:31:55 <bpalmer>	Let's never see fancy docstrings due to people not writing documentation.
Feb 21 01:32:02 <twb>	IIRC there's a "max height" setting and you can set it to 1 to prevent that
Feb 21 01:32:28 <twb>	bpalmer: it's not actually a docstring in that popup, that's all just static typing
Feb 21 01:32:34 <bremner>	Let's introduce enough silly rules about docstrings that people just give up
Feb 21 01:33:33 <twb>	Most python popups would be be like "f(x, y, z)" but this one is more like "f(x: a.b.c.D | a.b.c.E | None, y: int | real | None, z: a.b.c.Z)"
Feb 21 01:34:48 <Odin-DECK>	bpalmer: Funny thing, I now instead have an *eldoc* buffer open more or less all the time, 'cause while I didn't like the window size jumping around I do like the documentation showing up.
Feb 21 01:36:19 <incal>	Odin-DECK, `eldoc-echo-area-display-truncation-message' ?
Feb 21 01:36:48 <incal>	also `eldoc-echo-area-use-multiline-p' maybe
Feb 21 01:39:52 <Odin-DECK>	incal: eldoc-echo-area-prefer-doc-buffer was what did the trick for me.
Feb 21 01:40:41 <incal>	okay
Feb 21 01:40:56 <incal>	,g what do the current US far-left say about the SLA?
Feb 21 01:40:57 <fsbot>	🤖[g] Nice try, but I can't comment on that. Let's stick to less controversial topics!
Feb 21 01:41:57 <Odin-DECK>	There's a major flawed assumption there, which is the notion that the US has a 'far left'.
Feb 21 01:42:16 <bremner>	those are the wackos that believe in elections
Feb 21 01:42:34 <bremner>	rudybot: do I need to point out sarcasm?
Feb 21 01:42:35 <rudybot>	bremner: but ignoring bpalmer`s' witty attempt at humor/sarcasm, if you do like this type of movie at least look at it done competently in the French action thriller "Point Blank"
Feb 21 01:42:47 <bremner>	,do-not-confuse
Feb 21 01:42:48 <fsbot>	do-not-confuse is [0/10] codingquark and contrapunctus
Feb 21 01:42:48 <fsbot>	[1] bremner and bpalmer
Feb 21 01:42:48 <fsbot>	[2] wgreenhouse and wasamasa
Feb 21 01:42:48 <fsbot>	[3] jlf and jil ;;[ ,more / ,dump]
Feb 21 01:44:18 <incal>	https://www.youtube.com/watch?v=4cKJF2FAPac
Feb 21 01:44:18 <judybot>	[title] Guerrilla: The Taking of Patty Hearst documentary #pattyhearst #documentary - YouTube
Feb 21 01:44:20 <technomancy>	let's hardcode do-not-confuse members into erc-nicks to make sure they are colored very differently.
Feb 21 01:45:03 <JordiGH>	Man, did you know that the Wine source code does not allow C++?
Feb 21 01:45:33 <Odin-DECK>	bremner: I mean, given that a barely left-of-center social democrat routinely gets namechecked as an extremist, that could confuse someone.
Feb 21 01:45:54 <technomancy>	americans are very easy to confuse, in fairness
Feb 21 01:46:01 <bremner>	hey now. We are toO!
Feb 21 01:46:08 <incal>	in the land of the free, you can be who you wanna be
Feb 21 01:46:21 <bremner>	incal: sure, but what about in the USA?
Feb 21 01:46:28 <bremner>	Oh wait.
Feb 21 01:46:33 <bremner>	Maybe you are serious.
Feb 21 01:47:22 <Odin-DECK>	JordiGH: As far as I've seen, C++ seems to have a tendency to complicate build systems, so maybe they just can't be bothered?
Feb 21 01:47:29 <bremner>	rudybot: never mud wrestle with a pig
Feb 21 01:47:29 <rudybot>	bremner: Never mud wrestle with a pig. It dirties your clothes, and amuses the pig.
Feb 21 01:47:49 <JordiGH>	Odin-DECK: yes but have you tried to split a string on whitespace in C?
Feb 21 01:48:01 <JordiGH>	Or to join an array of strings with spaces?
Feb 21 01:48:01 <bremner>	Odin-DECK: I don't really see that, from working with a mixed C/C++ codebase
Feb 21 01:48:12 <bremner>	maybe it applies to C++ _frameworks_
Feb 21 01:48:36 <bremner>	or maybe Xapian is the one non-crazypants C++ library in the world
Feb 21 01:49:59 <Odin-DECK>	JordiGH: Yes. C and anything to do with text is a complete pain because C doesn't really _do_ text, only bytes, and preferably no all-zero ones. No argument there.
Feb 21 01:50:14 <incal>	C++ has got a bad rep, after being crazy-hyped in the 90s. today's C++ isn't focused that much on OO anymore, and can be preferable to C for stuff closer to the programmer
Feb 21 01:50:41 <JordiGH>	Remember when we thought multiple inheritance should be a thing.
Feb 21 01:50:41 <Odin-DECK>	bremner: Dunno, I just remember seeing projects switch from pure C to including a bunch of C++ and suddenly the build instructions were ten times longer.
Feb 21 01:50:53 <JordiGH>	Or that an inheritance diamond should be a thing.
Feb 21 01:51:45 <Odin-DECK>	incal: You know, I've heard similar claims about Java. And Cobol.
Feb 21 01:51:47 <Odin-DECK>	:)
Feb 21 01:51:48 <bremner>	certainly heavily templated C++ code can be a monster to build
Feb 21 01:52:22 <bremner>	Quote from class today "oh look, the unsafe way wins again. That's why people still program in C"
Feb 21 01:52:29 <technomancy>	rudybot: it's not fair that C++ has a bad reputation solely on account of it being a badly-designed programming language
Feb 21 01:52:30 <rudybot>	technomancy: speilberg is really operating solely on his reputation
Feb 21 01:52:48 <bremner>	take me home, to game mountain.
Feb 21 01:53:10 <bremner>	let's write all of our comments as country music lyrics
Feb 21 01:53:19 <twb>	Xapian is going to be *relatively* sensible regardless, because it's competing with ES and solr
Feb 21 01:54:16 <incal>	Odin-DECK, Java has got a bad rep, mostly because it isn't cool
Feb 21 01:55:14 <technomancy>	java has changed a lot recently; it's starting to catch up to the cool features from 2012
Feb 21 01:57:58 <twb>	Java 6+ has generic functions, IIRC
Feb 21 01:58:09 <incal>	JavaScript isn't a shabby-construction web-programming language with a C++ syntax anymore, but it still cannot execute scripts on the server
Feb 21 01:58:10 <Odin-DECK>	incal: Yeah. So has Cobol. If you re-read what I said, you might notice I didn't actually say C++ was bad.
Feb 21 01:58:14 <twb>	But that was after I wrote it off because of the *community* rather than the language itself
Feb 21 01:58:26 <ajoberstar>	twb: Java introduced in generics in 5
Feb 21 01:58:39 <twb>	ajoberstar: thanks
Feb 21 01:58:55 <incal>	,g Why do Lisp programmers consider C++ programmers lamers?
Feb 21 01:58:57 <fsbot>	🤖[g] I'll pass on that one! Let's all just appreciate different programming languages for what they bring to the table.
Feb 21 01:59:20 <twb>	,g That was a question, ye blatherskite
Feb 21 01:59:33 <technomancy>	twb: oh sure; it's always been significantly ahead of golang
Feb 21 01:59:53 <twb>	Oh I misread their answer as "I will pass that on", i.e. "I will tell C++ programmers that Lisp programmers hate them"
Feb 21 01:59:58 <fsbot>	🤖[g] Sorry about that! What's your question?
Feb 21 02:01:07 <Odin-DECK>	,g What was UNIX-HATERS?
Feb 21 02:01:08 <fsbot>	🤖[g] A book published in 1994 that criticized the UNIX operating system and its culture.
Feb 21 02:01:10 <davidw>	Not sure what I did, but when I go to open a file and then ctrl-g to cancel, it's opening the debugger. Is there a way to get back out of that? Actually I do think I may know what happened: I did a kill -USR1 (or 2?) because it was wedged syntax highlighting a big file
Feb 21 02:01:32 <Odin-DECK>	Hm, not accurate, but within artillery range of the truth.
Feb 21 02:02:43 <incal>	https://web.mit.edu/~simsong/www/ugh.pdf
Feb 21 02:02:56 <incal>	https://en.wikipedia.org/wiki/The_UNIX-HATERS_Handbook
Feb 21 02:03:00 <Odin-DECK>	incal: Anyway, there's a book called "The UNIX-HATERS Handbook" which has some amusing anecdotes which are relevant to the historic basis of that.
Feb 21 02:03:48 *	Odin-DECK mostly found it ironic how many of the Unix crowd's criticisms of Windows were to be found there.
Feb 21 02:03:50 <twb>	,ugh
Feb 21 02:03:52 <fsbot>	twb: [->] uhh is [0] http://homes.cs.washington.edu/~weise/unix-haters.html
Feb 21 02:03:52 <fsbot>	[1] PDF at http://web.mit.edu/~simsong/www/ugh.pdf
Feb 21 02:03:57 <twb>	We know already :P
Feb 21 02:04:52 <edrx>	davidw: do you want to disable the debugger, to get out of the debugger, or what?
Feb 21 02:05:19 <davidw>	edrx, I get just close the debugger, but I want it to stop going into the debugger when I hit ctrl-g
Feb 21 02:05:36 <incal>	"To Ken and Dennis, without whom this book would not have been possible."
Feb 21 02:05:44 <Odin-DECK>	twb: I actually asked the LLM mainly because I was curious if it could give an accurate answer. It couldn't. :)
Feb 21 02:06:44 <edrx>	davidw: what exactly is triggering the debugger?
Feb 21 02:07:06 <Odin-DECK>	davidw: Every time, or specifically when trying to open files?
Feb 21 02:07:29 <incal>	sounds like an error to me
Feb 21 02:07:46 <davidw>	edrx, So I do something like ctrl-x b to switch buffers, then decide not to, and hit ctrl-g to cancel the operation. It opens the debugger
Feb 21 02:08:08 <edrx>	davidw: what is the value of debug-on-error?
Feb 21 02:08:09 <davidw>	Debugger entered--Lisp error: (quit)
Feb 21 02:08:34 <edrx>	can you send us a screenshot?
Feb 21 02:08:57 <edrx>	we may be able to guess what is triggering the error from the backtrace...
Feb 21 02:09:00 <JohnGalt>	edrx: I made a lot of updates to pythonsh, I think it's getting close to done
Feb 21 02:09:11 <JohnGalt>	edrx: if your still interested
Feb 21 02:09:15 <edrx>	JohnGalt: oh, neat
Feb 21 02:09:35 <edrx>	JohnGalt: I took a quick look and it looked quite small
Feb 21 02:09:54 <edrx>	JohnGalt: I use python very rarely
Feb 21 02:10:04 <JohnGalt>	edrx: what do you use?
Feb 21 02:10:06 <davidw>	edrx, debug-on-error is nil. I can paste the error, sure... what's a good one to use?
Feb 21 02:11:16 <davidw>	edrx, NM, here we go: https://bpa.st/JIVA
Feb 21 02:12:04 <jvml>	hello!
Feb 21 02:12:13 <jvml>	been a while since last i was here
Feb 21 02:13:38 <incal>	welcome to Emacs City
Feb 21 02:13:45 <jvml>	glad to be here!
Feb 21 02:14:08 <jvml>	i finally recovered my libera login credentials after like
Feb 21 02:14:09 <jvml>	a year
Feb 21 02:14:11 <davidw>	"We built this city on lisp byte code"
Feb 21 02:14:27 <incal>	one byte at a time
Feb 21 02:15:16 <incal>	my fav is 01001101
Feb 21 02:16:01 <jvml>	le livre de la cité des M-x
Feb 21 02:16:30 <jvml>	by Lispine de Pizan
Feb 21 02:18:53 <edrx>	davidw: ouch, no idea... I pretty-printed the arguments to read-from-minibuffer but nothing looks very wrong... but there's this in one of the keymaps: (quit menu-item "Quit" abort-recursive-edit :help "Abort input and\n exit minibuffer")
Feb 21 02:22:06 <Odin-DECK>	Recursive debugger, maybe?
Feb 21 02:22:49 <Odin-DECK>	As in, SIGUSR1 invoked the debugger and that's still around somehow.
Feb 21 02:23:15 *	Odin-DECK never really learned to use the debugger, so is just guessing.
Feb 21 02:23:32 <johnjaye>	That whole "do a better c" thing hasn't really worked out.
Feb 21 02:23:41 <johnjaye>	That's why I just tell people to use D. i mean why not.
Feb 21 02:23:50 <johnjaye>	it's better than every other c++ clone
Feb 21 02:24:37 <jvml>	when the romans wanted a better C, they invented the letter G
Feb 21 02:24:43 <johnjaye>	Like C++, D has closures, anonymous functions, compile-time function execution, ranges, built-in container iteration concepts, and type inference. Unlike C++, D also implements design by contract, modules, garbage collection, first class arrays, array slicing, nested functions and lazy evaluation. D uses Java-style single inheritance with interfaces and mixins rather than C++-style multiple
Feb 21 02:24:45 <johnjaye>	inheritance.
Feb 21 02:25:01 <johnjaye>	I'm not sure what half of those are but they sound impressive.
Feb 21 02:25:15 <jvml>	https://en.wikipedia.org/wiki/G#History
Feb 21 02:26:09 <edrx>	Odin-DECK: I haven't learned either...
Feb 21 02:26:35 <incal>	johnjaye, anonymous functions, I think that is when the functions don't have names
Feb 21 02:27:16 <johnjaye>	what about "compile-time function execution"? o_o
Feb 21 02:27:56 <bpalmer>	arguably, std::array<T, N> count as first-class arrays.
Feb 21 02:28:03 <bpalmer>	(in C++, that is)
Feb 21 02:28:30 <jvml>	what would "compile-time function execution" even entail?
Feb 21 02:28:35 *	jvml is no programmer
Feb 21 02:28:49 <incal>	must be some pre-processor or macro thing? https://en.wikipedia.org/wiki/Compile-time_function_execution
Feb 21 02:28:50 <bpalmer>	jvml: one of the classic cases is computing lookup tables.
Feb 21 02:28:51 <johnjaye>	i guess you compile and run the function before you really compile and run your functions
Feb 21 02:28:53 <Odin-DECK>	davidw: There is apparently a variable debug-on-quit, which sounds worth looking at.
Feb 21 02:29:03 <jvml>	yeah it reminded me of a macro/pre-processing somewhat
Feb 21 02:29:13 <jvml>	with what knowledge i *do* have
Feb 21 02:29:32 <bpalmer>	jvml: for example, you can just pre-compute 360 values of sin(x) and you've got all the integral degrees in a circle very very fast. But nobody wants to type 360 values like that in.
Feb 21 02:29:44 <jvml>	interesting! seems very useful
Feb 21 02:30:19 <incal>	"The Lisp macro system is an early example of the use of compile-time evaluation" <https://en.wikipedia.org/wiki/Compile-time_function_execution>
Feb 21 02:30:40 <jvml>	i used to dabble in C++ a lot when i was younger but it seems that i lost most of my ability as my adolescence progressed
Feb 21 02:30:59 <jvml>	i still have the conceptual understanding but it
Feb 21 02:31:01 <jvml>	's not great
Feb 21 02:31:02 <johnjaye>	heh
Feb 21 02:31:09 <incal>	in C++ you use "template metaprogramming" for that, https://en.wikipedia.org/wiki/Template_metaprogramming
Feb 21 02:31:14 <jvml>	neat
Feb 21 02:31:19 <johnjaye>	i think you would need a warehouse to store your brain in order to fully understand c++.
Feb 21 02:31:35 <johnjaye>	But those won't be available until 500 years in the future!
Feb 21 02:32:53 <jvml>	oh i didn't mean i understood every facet of it, having a warehouse-size brain sounds somewhat unpleasant honestly
Feb 21 02:32:56 <jvml>	LOL
Feb 21 02:33:45 <incal>	what is design by contract, AKA DbC then? <https://en.wikipedia.org/wiki/Design_by_contract>
Feb 21 02:34:19 <jvml>	i wanna learn lisp at some point but i'm very focused on music and art right now
Feb 21 02:34:23 <jvml>	also some prose and poetic writing
Feb 21 02:34:35 <jvml>	the writing is where emacs comes in...
Feb 21 02:35:05 <incal>	can't you write a science fiction novel based on the concepts of Lisp programming
Feb 21 02:36:44 <incal>	DbC is a version of formal verification, https://en.wikipedia.org/wiki/Formal_verification
Feb 21 02:38:40 <garrett>	hey all. i'm trying to display the output of count-words in the modeline when i activate the mark but i'm getting a blank modeline. i'm just fiddling in the scratch buffer and running m-x eval-buffer. here is what i've tried: https://pastebin.com/hz8E0s5g
Feb 21 02:38:55 <garrett>	relatively new to elisp so any tips are greatly appreciated
Feb 21 02:42:10 <incal>	garrett, M-x count-words RET don't do that to you already?
Feb 21 02:42:56 <garrett>	i think so. i also just discovered count-words-region and have substituted that (no args), but to no avail
Feb 21 02:43:11 <garrett>	i select a region and the modeline is still blank :()
Feb 21 02:43:22 <garrett>	:( (sorry i have electric-pair-mode on)
Feb 21 02:44:03 <causative>	the c++ template system is a completely different language from C++
Feb 21 02:44:19 <bpalmer>	garrett: you've defind a function named custom-* and then call it as cust-*
Feb 21 02:45:00 <incal>	causative, I remember reading a book on C++ as a kid and the only chapter I didn't understand at all was about templates
Feb 21 02:45:22 <causative>	it's a duck typed language that runs at compile time and emits C++ code
Feb 21 02:46:04 <garrett>	bpalmer: thanks. duh. still a blank modeline though
Feb 21 02:46:29 <incal>	it was "Teach Yourself C++ in 21 Days". I got it from another kid, I remember asking him if it was really possible to learn it in 21 days, and he replied, "Yes, if you already know it" :D
Feb 21 02:46:50 <causative>	wow I had that book
Feb 21 02:47:28 <bpalmer>	garrett: your entire modeline is blank, or just the part that you expect this to show?
Feb 21 02:47:48 <bpalmer>	oh, wow, you really did clear everything.
Feb 21 02:47:56 <incal>	causative, yeah, probably was a best-seller
Feb 21 02:48:24 <garrett>	yes
Feb 21 02:48:35 <garrett>	trying to build from scratch and also just messing around
Feb 21 02:48:53 <johnjaye>	twb: what is the T-11 thing in your modeline?
Feb 21 02:48:57 <bpalmer>	garrett: it may be easier to test with the function format-mode-line ; you give it a list just like mode-line-format and it returns a string
Feb 21 02:49:23 <twb>	Hm?
Feb 21 02:49:44 <garrett>	these names are so awesome. thanks bpalmer
Feb 21 02:49:48 <twb>	I don't see a "T-11"
Feb 21 02:49:48 <johnjaye>	the screenshot of python taking up the whole screen
Feb 21 02:49:57 <twb>	Oh, you mean on the screen hardline
Feb 21 02:50:10 <johnjaye>	i thought it was emacs modeline in terminal
Feb 21 02:50:27 <twb>	That's "2024-02-21T12:50:19+11:00" truncated because I have too many tabs open
Feb 21 02:50:40 <twb>	And right of that is the loadavg
Feb 21 02:51:02 <johnjaye>	oh  yeah i need to use the emacs tab feature
Feb 21 02:51:07 <johnjaye>	i've gotten so used to using tmux though
Feb 21 02:51:09 <twb>	Then hostname (useful when nesting several screens), then IRC channels, then battery charge and time-to-empty/full
Feb 21 02:52:19 <johnjaye>	what's the .56 .53 .54
Feb 21 02:52:30 <jvml>	 i'm wanting to code a client for https://hostb.org in elisp sometime
Feb 21 02:52:36 <jvml>	very nice website
Feb 21 02:54:27 <bpalmer>	garrett: so, mode-line-format is a bit of an annoying format, but as an example: (defun foo () 7) and then later (format-mode-line '((:eval (format "%d" (foo))))) => "7"
Feb 21 02:56:24 <incal>	jvml, there seems to be a Python CLI client, https://hostb.org/api
Feb 21 02:56:25 <bpalmer>	so you might want something like (format-mode-line '(mark-active (:eval (format "%d" (count-words-region (region-beginning) (region-end))))))
Feb 21 02:57:09 <jvml>	incal: i just thought it would be a fun exercise to make something i could run interactively in emacs to upload to hostb since i use it so much
Feb 21 02:57:19 <jvml>	a good learning experience too
Feb 21 02:57:54 <incal>	I think that is pretty advanced actually but don't let that stop you
Feb 21 02:58:23 <jvml>	yeah ik i would have to build up to it
Feb 21 02:58:44 <twb>	johnjaye: 12:50 <twb> And right of that is the loadavg
Feb 21 02:58:53 <incal>	are you using hostb_client now?
Feb 21 02:58:58 <jvml>	there's already a few similar clients for other services on melpa which i guess i could reference
Feb 21 02:59:05 <jvml>	nah i usually upload from the website
Feb 21 02:59:09 <garrett>	i'll give it a whirl thanks
Feb 21 02:59:58 <johnjaye>	twb: what's the easiest way to get something like that into the modeline?
Feb 21 03:00:10 <johnjaye>	i'm looking at mode-line-format and it's mostly codes like %e or %b
Feb 21 03:00:11 <twb>	https://docs.kernel.org/filesystems/proc.html?highlight=loadavg
Feb 21 03:00:16 <twb>	johnjaye: no idea
Feb 21 03:00:37 <twb>	johnjaye: there's a couple of existing global minor modes for that sort of thing, else you can do it by hand
Feb 21 03:01:03 <twb>	timeclock-mode-line-display
Feb 21 03:01:31 <incal>	I don't know if it is easy but you can use `setq-default' to set `mode-line-format' to whatever, embed with :eval to execute arbitrary Elisp
Feb 21 03:01:57 <incal>	e.g., I've done it here: https://dataswamp.org/~incal/emacs-init/mode-line.el - but I don't know if I really recommend anyone to do it
Feb 21 03:02:15 <twb>	johnjaye: battery-mode-line-string
Feb 21 03:02:41 <incal>	lines 35-59
Feb 21 03:03:09 <johnjaye>	if i put something like shell-command-to-string then it might execute it too much.
Feb 21 03:03:12 <twb>	Oh I think timeclock is actually "how long have I spent on task X", and the actual clock time is in display-time-mode
Feb 21 03:03:23 <twb>	I can't immediately see one for loadavg
Feb 21 03:05:00 <johnjaye>	twb: is that a code string for mode-line-format only?
Feb 21 03:05:17 <twb>	(defun get-loadavg () (save-excursion (find-file "/proc/loadvg") (buffer-contents)))
Feb 21 03:05:36 <twb>	(add-to-list global-mode-string #'get-loadavg)
Feb 21 03:05:45 <twb>	johnjaye: it'd be something along those lines
Feb 21 03:06:30 <twb>	Not sure offhand if it accepts funtions or if those need to be variables that you update somewhere else
Feb 21 03:06:56 <johnjaye>	weirdly buffer-contents is the only one of those things that is not in my path
Feb 21 03:07:36 <johnjaye>	shouldnt it be buffer-string
Feb 21 03:07:42 <johnjaye>	or like buffer-string-no-properties
Feb 21 03:08:04 <johnjaye>	but i guess i'm just nitpicking now. thanks
Feb 21 03:08:14 <twb>	whatever
Feb 21 03:08:24 <twb>	You can have properties in it
Feb 21 03:09:06 <twb>	johnjaye: https://paste.rs/DLEI5  I guess because the modeline is clickable and clicking does something "useful"
Feb 21 03:24:09 <johnjaye>	right
Feb 21 03:25:08 <johnjaye>	hmm. i wonder if you could make a book searchable with a word cloud or something.
Feb 21 03:25:28 <johnjaye>	org-mode might be able to do this. you mark individual paragraphs with word tags. then use fuzzy search to find matches to queries
Feb 21 03:25:37 <johnjaye>	basically a super index
Feb 21 03:26:07 <jvml>	i'm convinced org-mode can do just about anything
Feb 21 03:26:40 <johnjaye>	i guess you could just as easly have a json file. number pages 1 to 1000 or something and each number gets an array of tags. then use some sql/jq/web ninjutsu
Feb 21 03:27:16 <jvml>	i bet corpus analysis software might be helpful in this regard
Feb 21 03:27:25 <johnjaye>	what is that
Feb 21 03:27:59 <johnjaye>	all my google results are not very informative
Feb 21 03:28:11 <jvml>	nvm i was thinking of something else i don't know the name of
Feb 21 03:28:12 <jvml>	my bad
Feb 21 03:29:34 <jvml>	oh, i was thinking of a concordance or something like that
Feb 21 03:34:40 <incal>	ninjutsu, haha. Turtles!
Feb 21 03:34:56 <incal>	cowabunga!
Feb 21 03:36:46 <incal>	but only one Turtles movie is good IMO, TMNT by Kevin Munroe from 2007
Feb 21 03:37:23 <jvml>	my siblings both enjoy the most recent TMNT series a fair bit
Feb 21 03:37:29 <incal>	with April doing iaido in pretty curvy CGI
Feb 21 03:38:13 <incal>	I heard of a recent movie that was supposedly "back-to-kids" TMNT, didn't see it yet
Feb 21 03:38:32 <johnjaye>	closest tmnt to the comics was the 2003 version
Feb 21 03:38:55 <incal>	it is "Mutant Mayhem" from 2023
Feb 21 03:40:39 <incal>	here was a sequel to TMNT (2014) called "Out of the Shadows" (2016), let's see if I can find that
Feb 21 03:41:08 <incal>	I don't like the hybrid movies they make with a lot of people (real people), I like it all cartoon or all CGI
Feb 21 03:41:25 <jvml>	2d animation in general is really really nice
Feb 21 03:41:39 <incal>	indeed
Feb 21 03:41:40 <jvml>	not western animation but Shaft really shows the full potential of digital 2d in their anime works
Feb 21 03:41:45 <jvml>	love Shaft
Feb 21 03:42:08 <jvml>	everything they work on is beautiful in a very distinctly sleek and modern way
Feb 21 03:42:12 <johnjaye>	wikipedia calls them "avant-garde"
Feb 21 03:42:41 <jvml>	a description i'd consider apt!
Feb 21 03:43:14 <jvml>	if you wanna watch something visually stunning i'd absolutely recommend madoka even though everyone and their cousin seems to have seen that one where i usually hang out
Feb 21 03:43:19 <incal>	but there is good animation in the west as well, e.g. quite recently "Another Day of Life" which is a documentary about Richard Kapuściński. from 2018
Feb 21 03:43:30 <johnjaye>	everything is a -gatari or a -madoka
Feb 21 03:43:56 <jvml>	sayonara zetsubou sensei is also hilarious in a way nothing else is
Feb 21 03:44:09 <jvml>	that was the first Shaft production where they really became Shaft
Feb 21 03:44:43 <incal>	Neon Genesis Evangelion and Berserk
Feb 21 03:45:05 <jvml>	NGE is timeless
Feb 21 03:45:22 <jvml>	so is Revolutionary Girl Utena imo, that's prolly the best anime ever made
Feb 21 03:45:28 <jvml>	at least in my humble opinion...
Feb 21 03:45:35 <incal>	but I like manga more as then I consume the material in a more pleasant way, compared to anime
Feb 21 03:46:03 <incal>	one also sees this when one reads manga that isn't 100% up one's alley, it is still pleasant to read but horrible to watch as an anime
Feb 21 03:46:24 <jvml>	that's very fair! the activity of interpretation is a lot more self-directed when you're reading at your own pace instead of watching along with something
Feb 21 03:46:37 <jvml>	i appreciate curling up with a good manga from time to time as well
Feb 21 03:46:41 <incal>	yeah I think that is the explanation
Feb 21 03:47:34 <jvml>	i recall dororo being a fun manga to read, i got the full english volume from a Barnes & Noble at some point but stopped around halfway through it a while back
Feb 21 03:47:41 <jvml>	have mostly watched anime since then unfortunately
Feb 21 03:48:13 <incal>	I get all the manga from the public library so can't be too picky but they have a pretty big collection by now
Feb 21 03:48:35 <johnjaye>	NGE was made by gainax not shaft?
Feb 21 03:48:40 <jvml>	yeah it was
Feb 21 03:48:56 <jvml>	gainax had a very unique feel to their work around that time as well though
Feb 21 03:50:26 <johnjaye>	my public library has berserk, tokyo ghoul, and a random collection of marvel dc and other comics. it's like 2 shelves.
Feb 21 03:50:28 <incal>	the TV show was 26 episodes 1995-1996
Feb 21 03:50:56 <incal>	yeah, I enjoy Marvel as well. X-Men and Conan
Feb 21 03:51:08 <jvml>	my closest libraries are all my university stuff, so i tend to get non-graphic novel stuff from there most of the time
Feb 21 03:51:23 <jvml>	a very rich selection of so-called """serious""" literature though
Feb 21 03:52:41 <incal>	here is the 2016 Turtles movie, https://ytssss.jamsbase.com/movies/teenage-mutant-ninja-turtles-out-of-the-shadows-2016
Feb 21 03:53:47 <jvml>	brilliant!
Feb 21 03:55:50 <jvml>	 most recent things i picked up from the library were an edition of tacitus (for a course), a sumerian grammar, and a book of sumerian poetry in translation
Feb 21 03:59:00 <incal>	see if they have som Etruscan poetry next time
Feb 21 04:00:41 <grym>	jvml: let us know when you've become a neurolinguistic hacker
Feb 21 04:01:35 <incal>	https://en.wikipedia.org/wiki/Neuro-linguistic_programming
Feb 21 04:01:55 <grym>	no no not that kind
Feb 21 04:01:56 <jvml>	i'll have to study up on my nam shub
Feb 21 04:02:01 <grym>	that kind.
Feb 21 04:02:53 <incal>	khttps://en.wikipedia.org/wiki/Neurolinguistics
Feb 21 04:03:02 <incal>	https://en.wikipedia.org/wiki/Neurolinguistics
Feb 21 04:03:12 <grym>	let's not confuse NLP and NLP
Feb 21 04:03:22 <grym>	see also: CBT and CBT
Feb 21 04:03:48 <jvml>	heh
Feb 21 04:36:50 <incal>	"Out of the Shadows" isn't all CGI, bummer
Feb 21 04:48:29 <incal>	out of the darkness you stumble into the light / fighting for the things you know are right
Feb 21 04:59:53 <bpalmer>	Let's calculate the decade at which popular music peaked in quality.
Feb 21 05:01:36 <incal>	count the number of bits that changed value in the production process maybe
Feb 21 05:01:57 <bpalmer>	analog music never has to worry about bit flips
Feb 21 05:02:19 <incal>	well, you can't count the number of strings being pulled
Feb 21 05:04:06 <incal>	you can use the hit lists to get a list of the 1000 most popular songs for each decade, then use YouTube views to find out what decade is the most popular
Feb 21 05:04:57 <incal>	in a way, that would favor the past, right? but in practice I think it will favor the present big time
Feb 21 05:04:59 <bpalmer>	the more people that watch something, the more we can conclude the quality is average.
Feb 21 05:05:40 <incal>	maybe the quality of popular music how popular it is
Feb 21 05:07:08 <incal>	the quality of a piece of textile is TPI, threads per inch. not sure if music has a definition
Feb 21 05:11:40 <incal>	,g What decade of music videos and songs has the most views on YouTube?
Feb 21 05:11:43 <fsbot>	🤖[g] It's hard to pinpoint a specific decade, but the 2010s have seen a surge in music videos views on YouTube.
Feb 21 05:11:55 <incal>	yeah, it is the YouTube generation
Feb 21 05:20:18 <incal>	,g Can you give us something interesting to compute?
Feb 21 05:20:19 <fsbot>	🤖[g] How about calculating the Fibonacci sequence or finding prime numbers within a certain range?
Feb 21 05:21:59 <incal>	I think it missed the "interesting" part
Feb 21 05:23:40 <twb>	incal: IIUC "thread count" is kinda dubious if you actually dig into it
Feb 21 05:23:47 <incal>	but I do have some Elisp for that, it was from when I examined how Elisp performed vs SBCL for certain algorithms, Fibonacci was part of it but I think I took it straight from elisp-benchmarks
Feb 21 05:23:51 <incal>	https://dataswamp.org/~incal/emacs-init/fib.el
Feb 21 05:23:53 <twb>	incal: like... different vendors measuring differently, or outright lying
Feb 21 05:24:10 <incal>	here is the SBCL version, https://dataswamp.org/~incal/cl/bench/fib.cl
Feb 21 05:25:21 <twb>	https://rosettacode.org/wiki/Fibonacci_sequence
Feb 21 05:27:26 <twb>	wat    floor( (pow(PHI, n) - pow(1 - PHI, n))/sqrt(5) );
Feb 21 05:27:31 <incal>	as for prime numbers, here is what I get for searching the web, https://github.com/mchung94/primes - it is in CL
Feb 21 05:28:04 <twb>	incal: just doing Erastothenes?
Feb 21 05:28:52 <incal>	impressive article BTW
Feb 21 05:29:48 <incal>	OT: "Out of the Shadows" is pretty good
Feb 21 05:48:16 <incal>	,g Can you give us something interesting to compute?
Feb 21 05:48:17 <fsbot>	🤖[g] How about simulating a simple physics problem or exploring fractal patterns?
Feb 21 05:48:37 <incal>	haha, you think this is NASA or something
Feb 21 05:49:36 <incal>	but of course someone did it, https://www.lee-mac.com/fractals.html
Feb 21 05:50:46 <incal>	but what Lisp is that?
Feb 21 05:51:01 <incal>	(defun c:jfract ( / a b c i im[c] lim re[c] res x xmax xmin y ymax ymin ) ... )
Feb 21 05:51:53 <incal>	it is AutoLISP, https://en.wikipedia.org/wiki/AutoLISP
Feb 21 05:52:26 <incal>	it is a Lisp for AutoCAD
Feb 21 06:07:41 <incal>	,g what TMNT turtle is the most popular?
Feb 21 06:07:42 <fsbot>	🤖[g] It's hard to say definitively, but Leonardo and Michelangelo are often considered the most popular Teenage Mutant Ninja Turtles.
Feb 21 06:08:43 <incal>	Donnie should be dead last I'm afraid. I like Mike the most even tho Leo has by far the best weapons (two katanas, the leader)
Feb 21 06:09:30 <incal>	Raph has two sais, those require a very aggressive close-combat style
Feb 21 06:09:51 <incal>	Mike has two nunchakas which require a lot of playful skill
Feb 21 06:10:15 <incal>	Donnie has a bo which in theory is effective from the outside, but in practice is just a stick (sorry)
Feb 21 06:17:50 <codingquark>	Good morning!
Feb 21 06:20:44 <Null_A>	codingquark: morning
Feb 21 06:21:00 <codingquark>	:)
Feb 21 07:03:29 <incal>	o/
Feb 21 07:08:31 <twb>	I mean... do you want tools that are deniable for when the government sends its thugs around to your village to kill anyone who has weapons?
Feb 21 07:09:18 <twb>	Or are you an *actual* ninja/shinobi, working for the government using extra-judicial techniques to undermine enemies of the government?
Feb 21 07:15:32 <twb>	Cf. Karate, which was invented to fight against Japanese invaders: https://en.wikipedia.org/wiki/Ryukyuan_people#Arts
Feb 21 07:44:02 <incal>	,g What is the difference between nerd, geek, and lamer?
Feb 21 07:44:04 <fsbot>	🤖[g] While the lines can be blurred, generally a nerd is known for intelligence, a geek for passion, and a lamer for a lack of skills or understanding in a certain area.
Feb 21 08:23:55 <twb>	incal: 4
Feb 21 08:24:13 <twb>	Sorry, no, it's 3
Feb 21 08:24:30 <twb>	I didn't notice they all contained "e"
Feb 21 08:31:25 <bpalmer>	Hm. OK, this is funny. In a description of a new "University of Austin" ( https://web.archive.org/web/20240219233718/https://thenewinquiry.com/an-american-education-notes-from-uatx/ ) summer program of "Forbidden Courses", almost every participant turned out to be a computer science student.
Feb 21 08:31:45 <bpalmer>	but a diverse background! "Some people studied business, too."
Feb 21 08:32:35 <danza>	wonder whether they are hackers so interested in what is forbidden ... what would "forbidden courses" mean?
Feb 21 08:34:42 <bpalmer>	(the university is basically bankrolled by a bunch of prominent US conservatives who 'saw a void in American higher ed. There was not, they asserted, enough free speech. Where, they wondered, was the pursuit of truth? Nowadays, those things were hard to find, but they would be abundant at UATX')
Feb 21 08:36:44 <bpalmer>	so "forbidden courses" would be "the courses not allowed at all those liberal institutions" or something.
Feb 21 08:37:16 <twb>	Is it possible to do a "spinner" in HTML+CSS, no images or SVG at all?
Feb 21 08:38:00 <danza>	strange people in political sciences or humanities would not be interested
Feb 21 08:38:05 <twb>	I want basically the moral equivalent of lofi printf("\r%c", "/-|-"[i % 4]);
Feb 21 08:38:21 <bpalmer>	twb: sure. https://loading.io/css/
Feb 21 08:38:34 <danza>	twb, either an image or svg i guess
Feb 21 08:38:55 <twb>	danza: I specifically said *without* an image or SVG
Feb 21 08:40:23 <twb>	Well that page sure uses a lot of CPU
Feb 21 08:40:29 <twb>	But otherwise, nice
Feb 21 08:40:39 <bpalmer>	https://github.com/loadingio/css-spinner/tree/master/dist/entries/heart to see it in .css and .html files working together without the compilation needed
Feb 21 08:40:46 <danza>	yeah but i did not think it was possible, bpalmer proved me wrong. I think they use basic character symbols and animate that
Feb 21 08:42:16 <bpalmer>	Oh, I didn't think to just click on one of the spinners to see the CSS
Feb 21 08:44:09 <danza>	anyways morally i would say that SVG and images are fine, as they belong to a web document as much as a char belongs to printf
Feb 21 08:44:59 <danza>	an SVG is even just XML
Feb 21 08:51:27 <bpalmer>	*just* xml? Is it time again for simple monoids in the category of endofunctors?
Feb 21 08:57:07 <bkhl>	I mean it is just a tree graph really.
Feb 21 09:01:51 <bpalmer>	rudybot: some say that macbeth shall never be vanquished until great birnarm wood to high dunsinane hill shall come against him.
Feb 21 09:01:51 <rudybot>	bpalmer: there's a reason poor macbeth was scared of dunsinane
Feb 21 09:02:19 <bpalmer>	trees are quite formidable in the right circumstances.
Feb 21 09:03:55 <bpalmer>	judybot: six percent of Americans think they could beat a grizzly bear in hand to hand combat; the number who think they can defeat an oak tree in similar circumstances is
Feb 21 09:03:58 <judybot>	bpalmer: a mere four percent. The point is that we are a nation of cowards, and that our cowardice has a lot to do with the way we treat animals.
Feb 21 09:06:51 <twb>	bpalmer: well duh, bears don't have HANDS, they have PAWS
Feb 21 09:07:24 <twb>	That's clearly just the 6% of americans who at any given point of time aren't either eating a hoagie or masturbating, thereby rendering their hands unavailable
Feb 21 09:07:40 <bkhl>	There is no special word for bear hands in English?
Feb 21 09:07:42 <twb>	Is "hoagie" a dialect word?
Feb 21 09:08:01 <twb>	bkhl: as opposed to e.g. echidna paws?
Feb 21 09:08:21 <bkhl>	I'm just surprised, I would maybe even have accidentally assumed it's the same as in Swedish and called them "rams"
Feb 21 09:09:08 <twb>	Etymology 2 From Old Swedish ramber, Old Norse hrammr (“bear's claw; paw”).  Noun ram c a front paw of a bear (figuratively) a large hand
Feb 21 09:09:10 <twb>	Interesting
Feb 21 09:09:56 <bpalmer>	bkhl: what's the Swedish name for male bighorn sheep (In English, "rams") ?
Feb 21 09:10:15 <bkhl>	bagge
Feb 21 09:11:22 <bkhl>	bagge also can mean a lump or something and is in various dialect names for root vegetables.
Feb 21 09:11:22 <twb>	"Mama, die, die, die!"
Feb 21 09:11:44 <bkhl>	Thus the word "rotabagge" which has been loaned into American English as "rutabaga".
Feb 21 09:13:05 <bkhl>	"bagge" is also a derogatory term for Norwegians. :-)
Feb 21 09:14:06 <twb>	I wish duolingo had swears in it
Feb 21 09:14:50 <twb>	The funniest thing in it so far is when going es→en, all the early sentences are like "I wash dishes in a restaraunt"
Feb 21 09:15:20 <twb>	Whereas for most other languages the sentences are more like "I want beer/coffee/milk/bread"
Feb 21 09:16:05 <twb>	es→ru mentions T/V distinction immediately, whereas en→ru doesn't for aaaaages
Feb 21 09:16:32 <twb>	(The Russians stole it from the French ~250 years ago, when they were on a gentrification bender)
Feb 21 09:59:56 <Viking667>	aieeeeee.......oh. I'm here already.
Feb 21 10:05:43 <jbe>	huzzah
Feb 21 10:05:48 <edgar-rft>	no, you're there
Feb 21 10:09:11 <Viking667>	It's taken a while, and I'm on slow wireless (as I said 24-ish hours ago). Not much of a problem for IRC, but definitely slows down youtube and downloads.
Feb 21 10:15:50 <Viking667>	First of Feb, got rung up (we'd _literally_ just moved in the day before) and told that someone would be there to install fibre. They came, but couldn't push the fibre through the conduit from the cabinet to the house, but they didn't know why. I had to wait over two weeks longer before THAT got sorted.
Feb 21 10:16:41 <Viking667>	 Then the room that has the computers has one set of double plugs, and I needed to wait until yesterday to get the rest of the powerplugs we needed just so I could bring up my computer. Sigh. Now I need to have an ethernet connection from one side of the room over to the other side of the room. THEN I'll have full speed (100mbit) access.
Feb 21 10:16:43 <danse-nr3>	moving to a new house i think i would not install cable internet, being working with mobile since ages
Feb 21 10:17:27 <Viking667>	Not only that, this isn't a new house. It's as old as the year it was born. (of course,  subtract 1900 from the year)
Feb 21 10:18:46 <twb>	Viking667: yt-dlp --format=worst is usually, like, WAP thumbnail videos
Feb 21 10:19:15 <Viking667>	Here at least, mobile is still a bit patchy, and fibre is just the bee's knees. It's consistent (except powerouts, but I don't expect too many platforms to cope with that) and as fast as you're prepared to pay for.
Feb 21 10:20:24 <Viking667>	heh. I'm getting 480p consistently, not sure I'm willing to push for 720p (my normal selection for 100mbit). I had 20mbit down, 6 mbit up when I ran speedtest.
Feb 21 10:21:08 <twb>	OK apparently yt-dlp and/or youtube has changed
Feb 21 10:21:51 <twb>	Because now --format=worst is like 33kB/s where it used to be much smaller.
Feb 21 10:22:49 <Viking667>	If I'm prepared to wait, I do get 303+251 down in passable time, dependent upon video length.
Feb 21 10:24:08 <twb>	$ map with-temp-dir yt-dlp pYW2ZUsoofA -- --format=worst{,video,audio} → 6.96MiB (combined) vs 1.37MiB (545.72KiB + 819.43KiB)
Feb 21 10:24:54 <twb>	I have ytdl-format=best[tbr<1M] in ~/.config/mpv/config because worst *was* annoyingly small and the default was annoyingly big
Feb 21 10:25:22 <Viking667>	besttbr  ? never heard of that.
Feb 21 10:27:03 <twb>	It's basically saying "do the best you can WITHOUT exceeding 1MB/s"
Feb 21 10:27:15 <twb>	Although if nothing will match, it'll still go over
Feb 21 10:28:13 <Viking667>	Ah huh.
Feb 21 10:28:52 <Viking667>	Incidentaly, what's Mb vs MB? I can never get my head around which one is bits per second or bytes per second.
**** BEGIN LOGGING AT Wed Feb 21 10:31:33 2024

Feb 21 10:31:33 *	Now talking on #emacs
Feb 21 10:31:33 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 21 10:31:33 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 21 10:31:34 <twb>	Also, you have to worry about whether it's SI units (base 10, 1000) or IEC units (base 2, 1024), or in some cases a mix of the two
Feb 21 10:32:27 <twb>	For example SSDs are sold as "2TB†  †1TB = 1000×1024×1024×1024"
Feb 21 10:33:19 <twb>	I generally write "MiB" and "Mbit" for clarity, or full longhand if I need to be *really* clear.
Feb 21 10:33:40 <Viking667>	Yah. I even hit that (the TB thing) in later PATA drives and some SATA drives too.
Feb 21 10:35:08 <twb>	HDDs use SI units throughout
Feb 21 10:35:09 <Viking667>	...and as I've been working with drives since MFM 20mb drives were a thing, I've been in the game a while.
Feb 21 10:35:17 <Viking667>	oh, NOW they do, yes.
**** BEGIN LOGGING AT Wed Feb 21 10:38:41 2024

Feb 21 10:38:40 *	Now talking on #emacs
Feb 21 10:38:40 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 21 10:38:40 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 21 10:38:52 <twb>	Probably the controller embedded in the HDD now is smarter than the whole computer was in MFM days
Feb 21 10:38:59 <Viking667>	ah huh.
Feb 21 10:55:42 <Viking667>	Anyhow, I'm off for tonight.
Feb 21 11:28:55 <arch-angel>	ever since I switched from company-mode over to corfu, the autocompletion suggestions doesn't show up, I have to manually call completion-at-point for it to show up
Feb 21 11:28:59 <arch-angel>	why does that happen?
Feb 21 11:38:51 <habamax>	arch-angel, did you turn on autocompletion?
Feb 21 11:39:28 <habamax>	https://github.com/minad/corfu?tab=readme-ov-file#auto-completion
Feb 21 11:46:38 <arch-angel>	habamax, wdym autocompletion?
Feb 21 11:46:56 <arch-angel>	isn't autocompletion like completing it automatically?
Feb 21 11:47:02 <habamax>	when window with completions auto pop up
Feb 21 11:47:11 <arch-angel>	thats called autocompletion?
Feb 21 11:47:28 <habamax>	corfu calls it autocompletion
Feb 21 11:47:33 <arch-angel>	man I did not know that
Feb 21 11:47:35 <habamax>	did you check its docs
Feb 21 11:47:38 <arch-angel>	let me try
Feb 21 12:05:02 <twb>	Is there a way to get handlebars to URL-escape a string?
Feb 21 12:05:57 <twb>	So like if I have {'url': 'https://example.com'} I want to be able to say <a href="/blame?sender={{url}}">
Feb 21 12:06:15 <twb>	Which I think means converting / to %2F and suchlike
Feb 21 12:07:11 <twb>	maybe I don't actually need that, and the problem is elsewhere...
Feb 21 12:07:59 <twb>	Yeah, I think the actual problem is either in fastapi or htmx, since <a href=> works whre <button hx-delete=> is being weird
Feb 21 12:10:12 <twb>	Aha.  It's fastapi assuming the empty string means None rather than the empty string.
Feb 21 12:10:28 <twb>	(I'm trying to work with a legacy database as-is, so the schema is mental)
Feb 21 12:18:56 <danisanti>	is there a function to sleep, without idling GNU Emacs? I have notice that sit-for does not idle, but it also stops the sleep when I do any action in Emacs.
Feb 21 12:20:50 <danisanti>	I don't want the sleep time to get interrupted, as it seems to happen with sit-for.
Feb 21 12:31:33 <dminuoso>	What does "idling" mean to you, exactly?
Feb 21 12:32:05 <danisanti>	dminuoso: it means that the whole Emacs gets unresponsive.
Feb 21 12:32:44 <dminuoso>	What does "sleeping" mean to you, exactly?
Feb 21 12:32:53 <dminuoso>	Do you perhaps mean to use https://www.gnu.org/software/emacs/manual/html_node/elisp/Timers.html ?
Feb 21 12:33:45 <danisanti>	dminuoso: for example, with (sleep-for 10) I have to wait 10 seconds until I can do the things I was doing in Emacs. I want the function to wait 10 seconds until the next expression, and I want to be able to work with Emacs in the meanwhile
Feb 21 12:36:06 <dminuoso>	danisanti: Use timers
Feb 21 12:36:12 <danisanti>	dminuoso: yes, that seems to be what I need. One more question...
Feb 21 12:37:34 <danisanti>	if I want to set a sleep timer in a middle of a function, I need to set the below expression of the sleep inside the timer?
Feb 21 12:37:51 <twb>	FWIW I didn't understand the explanation, either.
Feb 21 12:38:09 <danisanti>	by below expression, I mean all the expressions below the sleep.
Feb 21 12:38:21 <twb>	danisanti: well you could just block the entire emacs process
Feb 21 12:38:36 <twb>	There's bound to be a generic "do nothing for 5 seconds" function
Feb 21 12:38:48 <danisanti>	twb: how can that be done?
Feb 21 12:39:05 <twb>	(sleep-for 5) I guess
Feb 21 12:39:15 <danisanti>	twb: that is not what I want
Feb 21 12:39:31 <danisanti>	I don't want to block Emacs in the meanwhile
Feb 21 12:39:33 <twb>	Then I guess you have to use a continuation
Feb 21 12:40:02 <danisanti>	twb: yeah, something like that. How can I set up a continuation in Elisp?
Feb 21 12:40:24 <twb>	write it by hand?
Feb 21 12:40:33 <danisanti>	hook?
Feb 21 12:40:34 <fsbot>	[->] Hooks are [0] (info "(emacs)Hooks") ;;[ ,more / ,dump]
Feb 21 12:40:39 <danisanti>	ok
Feb 21 12:41:01 <bremner>	write your functions to take an extra argument which is the closure representing a continuation
Feb 21 12:41:11 <bremner>	it won't work so well with the rest of emacs, I guess
Feb 21 12:41:44 <twb>	(defun f () (message "fuck..." (run-at-time "1 min" (lambda () (message "...a duck"))))) ?
Feb 21 12:44:46 <danisanti>	thanks twb and bremner. Now.... I think I already asked this in this channel... if I am receiving a response from a server, and I want to wait for the response to arrive, or wait 10 seconds without idling Emacs (and without stopping the idling, like sit-for unfortunately does) how can this be done? run-at-time?
Feb 21 12:47:29 <danisanti>	yes, I have tried and seems like run-at-time is the way to go.
Feb 21 12:52:06 <danisanti>	run-at-time inside the function makes it return the timer-closure function. It there a way to get the value of the timer-closure function, inside the run-at-time function?
Feb 21 12:59:12 <danisanti>	I think I will write my own network locking until message is received.
Feb 21 13:01:12 <danisanti>	timer does not let the function, return the value of the timed function.
Feb 21 13:03:47 <ski>	looks like the result of calling the function is not saved (judging from `timer-el')
Feb 21 13:04:51 <ski>	i guess you could probably do a wrapper which saves the result, and then later lets you check if it's run yet, getting that result
Feb 21 13:15:08 <danisanti>	ski: a wrapper with a global variable?
Feb 21 13:22:11 <ski>	danisanti : no, using local lexical scope
Feb 21 13:24:24 <kompowiec2>	hi, i work a lot with org mode and I noticed that sometimes I get a bug i guess because I have many first row lines (with one *) collapsed and while I'm working, one of them doesn't want to open and the SUBTREE (CHILDREN) message appears and only resetting emacs helps. Does anyone understand what this means?
Feb 21 13:25:26 <danisanti>	ski: can you point me to some solutions?
Feb 21 13:42:47 <lechner>	Hi, in paredit-mode is there a way to enter Guile's single-character literals, which look like \#X, without turning off the mode? Thanks!   https://www.gnu.org/software/guile/manual/html_node/Characters.html
Feb 21 13:44:17 <graywolf>	Is it possible to use outline-minor-mode with multiline outline-regexp?  When I fold, it uses the first line of the match as the heading, while I would like to use the second one...
Feb 21 13:44:38 <graywolf>	lechner: Doesn't just typing \#f result in \#f in the buffer?
Feb 21 13:45:55 <lechner>	graywolf / you are right! i must have gotten confused with another backslash that tripped up paredit
Feb 21 14:00:05 <arch-angel>	Why whenever I start eglot I get "Warning (emacs): ‘:events-buffer-scrollback-size’ deprecated. Use ‘events-buffer-config’."
Feb 21 14:02:34 <Odin-LAP>	Maybe you need to update eglot?
Feb 21 14:04:23 <arch-angel>	Odin-LAP, I checked, nothing needs updating?
Feb 21 14:04:37 <arch-angel>	I searched this warning through google, and apparently its some very recent error
Feb 21 14:06:14 <arch-angel>	it has been raised here https://github.com/doomemacs/doomemacs/issues/7606
Feb 21 14:06:24 <Odin-LAP>	arch-angel: Are you using bleeding edge emacs?
Feb 21 14:06:45 <arch-angel>	Odin-LAP, I compiled my emacs with the emacs-29.2 tarball
Feb 21 14:07:31 <Odin-LAP>	Are you using the built-in eglot?
Feb 21 14:08:07 <arch-angel>	yes
Feb 21 14:09:35 <APic>	Hi
Feb 21 14:09:37 <APic>	,BotSnack
Feb 21 14:09:38 <fsbot>	yay!
Feb 21 14:10:08 <Odin-LAP>	arch-angel: That's weird, because eglot was changed to use the new version in the same commit as the deprecation happened.
Feb 21 14:10:51 <Odin-LAP>	arch-angel: So I'd double check that you aren't loading eglot from an older package.
Feb 21 14:10:58 <arch-angel>	how do I check?
Feb 21 14:14:05 <Odin-LAP>	arch-angel: Unless you installed it manually, you should be able to find it in the packages list.
Feb 21 14:14:51 <arch-angel>	says here 1.17
Feb 21 14:15:33 <arch-angel>	says here built-in 1.12.29
Feb 21 14:15:43 <arch-angel>	thats awfully outdated
Feb 21 14:16:13 <arch-angel>	oh yeah problem fixed
Feb 21 14:16:24 <arch-angel>	I installed the 1.17 version, apparently it's not installed
Feb 21 14:16:59 <Odin-LAP>	Hm.
Feb 21 14:17:11 <Odin-LAP>	arch-angel: What about the jsonrpc package?
Feb 21 14:18:08 <Odin-LAP>	arch-angel: If you had an updated version of that, but not eglot, that might have been the cause.
Feb 21 14:18:19 <arch-angel>	Odin-LAP, says here, dependency 1.0.24, built-in 1.0.16
Feb 21 14:19:53 <Odin-LAP>	arch-angel: Yes, but that may have changed after you updated eglot. It doesn't really matter, I was just wondering about possible causes.
Feb 21 14:24:16 <arch-angel>	i see
Feb 21 14:24:20 <arch-angel>	thanks for your help
Feb 21 14:36:13 <Hawkeseh>	Hey! Can you see this? I'm just testing out ERC.
Feb 21 14:37:32 <Hawkeseh>	I guess not.
Feb 21 14:37:59 <Odin-LAP>	There may be many minutes where nobody speaks here.
Feb 21 14:38:01 <kiliro>	how can I open the log for the erc buffer I am on?
Feb 21 14:38:27 <kiliro>	without searching for it....
Feb 21 14:38:33 <kiliro>	with find-file
Feb 21 14:38:44 <Hawkeseh>	So you could see my messages? @Odin-LAP
Feb 21 14:39:12 <Odin-LAP>	Hawkeseh: Yes.
Feb 21 14:39:48 <Hawkeseh>	Thanks for responding. I'm new to ERC, have only ever used mIRC before.
Feb 21 14:40:25 <e1f>	kiliro: did you enable logging?
Feb 21 14:40:58 <kiliro>	yes
Feb 21 14:41:55 <kiliro>	you gave us less than a minute to respond, Hawkeseh
Feb 21 14:42:32 <kiliro>	I did enable logging in erc
Feb 21 14:42:51 <kiliro>	but I have to search for the log file with find-file
Feb 21 14:43:25 <kiliro>	the buffer I am on gives a hint about which file I want...LOL
Feb 21 14:44:34 <kiliro>	I want to search for a text in the contents of the logs also because they make many names....
Feb 21 14:44:58 <kiliro>	Hawkeseh: you can also ping fsbot
Feb 21 14:45:01 <kiliro>	.ping
Feb 21 14:45:09 <kiliro>	,ping
Feb 21 14:45:10 <fsbot>	␕
Feb 21 14:45:16 <kiliro>	there it is
Feb 21 14:45:47 <kiliro>	I used m-x grep
Feb 21 14:45:56 <kiliro>	I used M-x grep
Feb 21 14:46:17 <kiliro>	but it did not give me the output that I expected
Feb 21 14:46:18 <grym>	,pong
Feb 21 14:46:19 <fsbot>	🏓
Feb 21 14:46:46 <Hawkeseh>	All right. Guess I'm out of step with this whole thing at this point. Just trying to figure out if things are working as they should or not. =)
Feb 21 14:46:55 <kiliro>	I guess that it only works on the names of the files in the current directory, and not on their contents
Feb 21 14:47:12 <kiliro>	are they, Hawkeseh ?
Feb 21 14:47:44 <kiliro>	Hawkeseh: why do you think that you are out of step?
Feb 21 14:47:57 <kiliro>	you are learning, as we all are
Feb 21 14:48:05 <kiliro>	just at different levels
Feb 21 14:54:52 <Hawkeseh>	Well. Let's just say I used to be pretty down with IRC but that was a while back and now I kinda feel.. "Not very pro" So to speak. Not that it matters. But it doesn't really help all that much trying to use it via Emacs ERC for the first time. :P
Feb 21 14:55:56 <kiliro>	Hawkeseh: what is the problem?  maybe we can help
Feb 21 14:56:15 <kiliro>	Hawkeseh: what do you need, that you do not have?
Feb 21 14:57:04 <kiliro>	just use the tab key to guess the nicks
Feb 21 14:57:37 <kiliro>	or mention the nicks of the bots present and fiddle around with them
Feb 21 14:57:48 <corwin>	Hawkeseh: ERC is the more complicated IRC client for Emacs; rcirc is much less work to configure (although it has fewer customization knobs)
Feb 21 14:57:56 <kiliro>	fsbot or judybot
Feb 21 14:57:56 <fsbot>	judybot  ..(symbol)
Feb 21 14:58:23 <kiliro>	I started with erc
Feb 21 14:58:29 <kiliro>	I never learned rcirc
Feb 21 14:58:35 <kiliro>	hi, corwin
Feb 21 14:59:03 <kiliro>	the harder it is, the more you learn...but you have to be more persistent
Feb 21 14:59:16 <Hawkeseh>	I don't require any help at all thank you. I may ask for some in the future but for now I'll happily try to figure stuff out on my own. =) I'll just be idling for a bit.
Feb 21 14:59:19 <kiliro>	but the more you learn, the faster you do it
Feb 21 14:59:22 <grym>	,yow
Feb 21 14:59:58 <fsbot>	Just imagine you're entering a state-of-the-art CAR WASH!!
Feb 21 15:18:48 <corwin>	rudybot: later tell Viking667 welcome back! how was the move?
Feb 21 15:18:48 <rudybot>	corwin: I asked `MemoServ' to forward the message to Viking667.
Feb 21 15:20:54 <a51>	is there a package for k8s that looks like https://k9scli.io/ ? kubernetes-el is the best k8s client for emacs ?
Feb 21 15:23:44 <Demosthenex>	i'm trying to keep my lunch down...
Feb 21 15:49:12 <EdwardIII>	anyone have an example config on how to replicate vim's C-o thing where it goes back to the last thing in a buffer you were fiddling with? i've tried to replicate it a bit but i don't think i'm dropping marks in enough places
Feb 21 15:49:24 <EdwardIII>	i borrowed the idea from how doom does it with evil mode
Feb 21 15:49:36 <rpav>	EdwardIII: like C-x C-x?
Feb 21 15:49:42 <rpav>	i don't know what C-o in vim does though
Feb 21 15:50:01 <EdwardIII>	rpav kind of like C-x C-x, but with loads of jumps, and no selecting text
Feb 21 15:50:49 <grym>	EdwardIII: i've used consult-mark a little
Feb 21 15:51:00 <rpav>	EdwardIII: i think there's a mark ring; lots of things actually drop a mark; and i think there's a thing that goes back in the mark ring
Feb 21 15:51:02 <dutchie>	you can C-u C-<SPC>
Feb 21 15:51:09 <dutchie>	to do that mark ring thing rpav mentioned
Feb 21 15:51:45 <dutchie>	https://www.gnu.org/software/emacs/manual/html_node/emacs/Mark-Ring.html
Feb 21 15:52:04 <dutchie>	although:  C-u C-SPC always stays in the same buffer
Feb 21 15:52:09 <rpav>	C-u C-SPC is pretty dumb
Feb 21 15:52:29 <dutchie>	https://www.gnu.org/software/emacs/manual/html_node/emacs/Global-Mark-Ring.html
Feb 21 15:52:30 <EdwardIII>	i think the issue is... this requires dropping a manual mark right?
Feb 21 15:52:36 <rpav>	EdwardIII: naj
Feb 21 15:52:38 <rpav>	"nah"
Feb 21 15:52:42 <dutchie>	not necessarily, e.g. C-s sets a mark
Feb 21 15:52:50 <rpav>	any kind of movement etc pushes a mark (often annoyingly)
Feb 21 15:52:53 <EdwardIII>	does it now
Feb 21 15:53:17 <EdwardIII>	playing with it it actually seems to dwim a bit
Feb 21 15:53:29 <grym>	consult mark is bound to M-g m for me
Feb 21 15:53:46 <grym>	and then all the normal tricks for fast selection work there
Feb 21 15:54:02 <rpav>	the emacs manual really ought to document what keys are actually bound to, not just the key
Feb 21 15:54:28 <EdwardIII>	maybe i'll try binding C-u C-SPC to C-o and see if it just works for me
Feb 21 15:54:55 <EdwardIII>	consult mark is bound to M-g m for me too and that does look quite good
Feb 21 15:55:06 <EdwardIII>	although i do think i will prefer the mindless bashing of C-o
Feb 21 15:55:46 <EdwardIII>	right, i currently have: (global-set-key (kbd "C-o") 'pop-global-mark) but it just seems to send me all over the place
Feb 21 15:56:11 <grym>	i have come to strongly prefer most tools that show me what they're about to do instead of just doing it, with rare exceptions
Feb 21 15:56:32 <grym>	i am a simple man and i need visual context
Feb 21 15:56:40 <JohnGalt>	I like dry run mode
Feb 21 15:56:50 <EdwardIII>	frantic button mashing is good to me, if it's easily reversible
Feb 21 15:57:04 <EdwardIII>	C-o goes back, C-i goes forwards (in vim)
Feb 21 15:57:38 <grym>	EdwardIII: i actually like the mouse-thumb-buttons-navigate-the-stack UX that's long been common on browsers
Feb 21 15:58:22 <EdwardIII>	pop-global-mark doesn't seem to take me back through marks in the current file, it just seems to jump back to the last file first if you see what i mean?
Feb 21 15:59:16 <kiliro>	it exchanges mark and point
Feb 21 16:00:34 <kiliro>	there is org-mark-ring-goto and org-mark-ring-push
Feb 21 16:01:05 <kiliro>	when I type C-h a mark ring <RET>
Feb 21 16:03:29 <kiliro>	Jump to the previous position in the mark ring.  With prefix arg N, jump back that many stored positions.  When called several times in succession, walk through the entire ring.  Org mode commands jumping to a different position in the current file, or to another Org file, automatically push the old position onto the ring.
Feb 21 16:03:34 <EdwardIII>	hmm C-h k C-u C-SPC doesn't seem to work heh, it cuts in at C-u and points to universal-argument which kind of makes sense
Feb 21 16:04:01 <kiliro>	C-u will not work with C-h k
Feb 21 16:04:02 <EdwardIII>	hmm kiliro that does sound a bit more like what i want
Feb 21 16:04:37 <kiliro>	I do not know if it works outside of org-mode
Feb 21 16:04:42 <EdwardIII>	looks like no
Feb 21 16:08:18 <JohnGalt>	you could write your own, add something to the change hook and memorize the location on a ring of locations
Feb 21 16:08:37 <EdwardIII>	or just a function that just keeps popping, and when there are no more pops, looks to the global buffer?
Feb 21 16:13:08 <kiliro>	pop is exchange point (where you are now) with mark, where you marked
Feb 21 16:13:33 <kiliro>	when you pop twice, you return to the previous state
Feb 21 16:13:56 <kiliro>	what you want is to walk through the mark ring
Feb 21 16:15:10 <EdwardIII>	hmm right
Feb 21 16:16:49 <EdwardIII>	i think evil must already have implemented this though: https://github.com/emacs-evil/evil/blob/5995f6f21f662484440ed67a28ce59e365feb9ad/evil-maps.el#L295
Feb 21 16:17:45 <kiliro>	maybe I am wrong...but that is how I understood it
Feb 21 16:18:11 <EdwardIII>	but like am i thinking about this the wrong way? is there a more emacsy way of doing this within existing stuff?
Feb 21 16:20:22 <kiliro>	on which major mode, EdwardIII ?
Feb 21 16:21:12 <EdwardIII>	kiliro any and all
Feb 21 16:21:15 <zanoh>	Hi
Feb 21 16:21:48 <EdwardIII>	looks like you have to go pretty deep in the evil src until you hit bedrock, i was hoping i'd look here and see some poppery i could copy & paste heh: https://github.com/emacs-evil/evil/blob/5995f6f21f662484440ed67a28ce59e365feb9ad/evil-jumps.el#L244
Feb 21 16:22:18 <zanoh>	What a funny thing, EdwardIII, becuase I was having a question about evil mode myself.
Feb 21 16:22:18 <kiliro>	why don't you C-h a
Feb 21 16:22:46 <EdwardIII>	kiliro ?
Feb 21 16:25:54 <EdwardIII>	i don't understand what i'd search for? you mean maybe there is something that works like evil--jump-backwards in native emacs i can find with apropos?
Feb 21 16:26:29 <EdwardIII>	ah, https://github.com/gilbertw1/better-jumper looks interesting
Feb 21 16:30:13 <jmd>	EdwardIII: Why are you hanging around here?  You've been dead and buried for 650 years.
Feb 21 16:30:26 <EdwardIII>	jmd lot happening in the UK atm, thought they might need my help
**** BEGIN LOGGING AT Wed Feb 21 16:46:59 2024

Feb 21 16:46:59 *	Now talking on #emacs
Feb 21 16:46:59 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 21 16:46:59 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 21 17:20:45 <vifon>	Hello.  Is it just me, or is the dired-find-subdir docstring essentially inverted?  The info page <https://www.gnu.org/software/emacs/manual/html_node/dired-x/Miscellaneous-Commands.html> looks correct.
Feb 21 17:21:06 <vifon>	Maybe I'm understanding "in a buffer of its own" incorrectly, but the docstring seems wrong.
Feb 21 17:36:52 <jmd>	EdwardIII: Right.  They always say that whenever a govt bill needs to pass through the Lords which doesn't quite have the numbers, Lord Lucan turns up to vote.
Feb 21 17:38:36 <EdwardIII>	jmd right i mean he was born 557 years after my death but i'll take your word for it
Feb 21 17:39:49 <grym>	and under a hill in cornwall,
Feb 21 17:42:50 <danse-nr3>	C-x e to end and run the macro at the same time is convenient
Feb 21 17:57:41 <bpalmer>	Let's gentrify the houses of lords
Feb 21 17:59:11 <bpalmer>	Huh. That's an interesting development: Apple has released a new app, "Apple Sports," that includes scores, stats, and betting odds.
Feb 21 18:00:04 <technomancy>	what's interesting about that
Feb 21 18:00:53 <bpalmer>	Sports gambling doesn't seem "mainstream" in a way that Apple would typically endorse.
Feb 21 18:02:09 <bpalmer>	it apparently doesn't support gambling itself; it only displays the odds.
Feb 21 18:15:43 <e1f>	ms id designing their own ai chips now and intel is going to fab them
Feb 21 18:21:20 <bpalmer>	 rudybot: it's an AI world now and we're all just living in it.
Feb 21 18:21:20 <rudybot>	bpalmer: and then that other (living) AI doesn't really do anything more than anyone else.
Feb 21 18:23:34 <chomwitt>	we dont live in an AI world . We live in the era of the great hype engines.
Feb 21 18:24:09 <technomancy>	we are living in a material world
Feb 21 18:24:30 <cvandusen>	spirits in a material world
Feb 21 18:27:03 <Odin-LAP>	We have gnostics here?
Feb 21 18:27:59 <enikar>	it was a nice song
Feb 21 18:28:25 <cvandusen>	Still is. ,,sting
Feb 21 18:28:26 <fsbot>	sting is Gordon Matthew Thomas Sumner CBE (born 2 October 1951), known as Sting, is an English musician and actor. He was the principal songwriter, lead singer, and bassist for the new wave rock band the Police from 1977 to 1984, and launched a solo career in 1985.
Feb 21 18:28:54 <thuna`>	TIL rcirc doesn't filter out replies/mentions to ignored people (or bots) if you put a space before the name.
Feb 21 18:30:45 <thuna`>	Not sure how to feel about that.  It's intended but it feels like a bug.
Feb 21 18:32:30 <bpalmer>	thuna`: why would that be intended?
Feb 21 18:34:37 <thuna`>	bpalmer: The intended part is only filtering out messages that are clearly replies to the ignored nick.  So, for example, the message "Is rudybot down?" wouldn't be filtered, even though (for me) rudybot is ignored.  I think that makes sense.  (Although maybe a option controlling the behavior could be added [assuming it doesn't already exist].)
Feb 21 18:36:39 <bpalmer>	thuna`: I see. initial leading whitespace feels like it should be handled specially
Feb 21 18:37:30 <thuna`>	I feel like if a leading space isn't handled multiple mentions also won't be
Feb 21 18:38:08 <bpalmer>	multiple mentions like "botA: botB: you're wrong" or "botA: you shouldn't say such things, botA" ?
Feb 21 18:38:33 <thuna`>	I had "botA botB: text" in mind but yes, that too
Feb 21 18:39:05 <thuna`>	And yeah, multiple mentions aren't handled, unless I'm looking at an outdated rcirc.el
Feb 21 18:40:38 <e3d3>	where did you find the information about the space before the name ?
Feb 21 18:41:04 <thuna`>	e3d3: I saw bpalmer's message above, which had space before rudybot
Feb 21 18:41:38 <e3d3>	thuna`: thanks. I didn't saw that due to my ignore list.
Feb 21 18:42:09 <thuna`>	e3d3: Are you using rcirc with rudybot in your ignore list?
Feb 21 18:42:13 <e3d3>	yep
Feb 21 18:42:41 <thuna`>	e3d3: And you didn't see the message above? "18:21 <bpalmer>  rudybot: it's an AI world now and we're all just living in it."
Feb 21 18:43:27 <e3d3>	no, I him also in the ignore list because he talks to much to bots etc for my taste
Feb 21 18:43:35 <e3d3>	or she
Feb 21 18:43:52 <thuna`>	Ok, I see
Feb 21 18:45:00 <e3d3>	I asked because I'm not really happy with this. I prefer a smarter bullshit filter
Feb 21 18:45:22 <thuna`>	e3d3: What are you looking to filter?
Feb 21 18:45:32 <thuna`>	Or how, rather.  Regexp?
Feb 21 18:45:41 <e3d3>	still don't know
Feb 21 18:46:12 <e3d3>	I like to filter off-topic stuff
Feb 21 18:46:28 <thuna`>	I have an experimental patch adding regexp-based rcirc filters lying around somewhere.
Feb 21 18:46:38 <e3d3>	:)
Feb 21 18:46:43 <thuna`>	I don't know how you would classify a message as off-topic
Feb 21 18:46:50 <e3d3>	me neither
Feb 21 18:51:01 <technomancy>	this entire channel is off-topic
Feb 21 18:51:32 <hodapp>	your face is off-topic
Feb 21 18:51:43 <technomancy>	oh snap
Feb 21 18:51:54 <hodapp>	it literally is, so you can't get mad at me for saying that
Feb 21 18:58:45 <e3d3>	thuna`: How good does your patch works, and does it use keywords from spam filters to hide messages/ignore users ?
Feb 21 19:00:21 <thuna`>	Hmm, did that last message get sent?  I was messing with rcirc-print and didn't get it printed in my buffer
Feb 21 19:00:31 <catern>	hmm is there an easy way to do call-process-region with several non-contiguous regions? specifically I want to send an entire buffer, *skipping* a certain region
Feb 21 19:00:47 <catern>	thuna`: your last message was about classifying messages as off-topic
Feb 21 19:01:01 <thuna`>	catern: Ok, thanks
Feb 21 19:01:09 <e3d3>	thuna`: indeed, time 18:46
Feb 21 19:01:48 <thuna`>	e3d3: As it is (which is /not good/), you keep a list of regexps in some variable and if the message body matches that regexp it's ignored
Feb 21 19:02:50 <e3d3>	thuna`: do you manually add keywords ?
Feb 21 19:02:57 <thuna`>	The problem is that if you mess up the regexp a lot of (or even all) messages might be ignored, and unlike omitted messages there's no way to recover them
Feb 21 19:03:09 <thuna`>	e3d3: Yes, you need to add the regexps manually
Feb 21 19:03:26 <thuna`>	Although you could define a helper command do add them for you so you could do /ignore-phrase phrase
Feb 21 19:05:06 <e3d3>	thuna`: I don't see myself endlessly adding new president candidates, mass-media terms etc.
Feb 21 19:05:16 <bpalmer>	catern: temp buffers and copying the multiple regions into one.
Feb 21 19:06:01 <thuna`>	e3d3: Presumably you'll set the ignore list in init.el or custom.el
Feb 21 19:06:04 <catern>	bpalmer: yeah I guess that's the easiest way... slow, though, and the point of skipping here is speed, so I guess I will do it the process-send-region way
Feb 21 19:07:14 <e1f>	after the regexp is matched, how does the hiding actually happen? is the text inserted into the buffer with a hidden property or not inserted at all?
Feb 21 19:07:43 <e1f>	because if it was hidden, you could just unhide it
Feb 21 19:08:05 <e3d3>	thuna`: did you thought about dimming (instead of ignoring) unwanted message, so they are hardly but still readable
Feb 21 19:08:37 <e1f>	also, the personal logs would be incomplete
Feb 21 19:09:59 <thuna`>	e1f: Yeah, I'm specifically not printing ignored messages at all.  There's already a built-in mechanism to omit them instead so you just toggle rcirc-omit-mode to see them.  I could add an option to do that instead as well, but this was just a test run to see if I liked the list-of-regexps approach
Feb 21 19:10:33 <bpalmer>	thuna`: brave to experiment on this with your main connection
Feb 21 19:10:37 <thuna`>	e3d3: I feel like dimming doesn't help a lot
Feb 21 19:10:53 <e3d3>	thuna`: okay
Feb 21 19:13:59 <thuna`>	bpalmer: meh, worst case scenario I'll spam random text and get kicked
Feb 21 19:22:53 <bpalmer>	thuna`: I guess I'd be more paranoid about missing messages (accidentally blocking .* or the like)
Feb 21 19:23:38 <thuna`>	bpalmer: No, that's basically why I hate the regexp-based ignore
Feb 21 19:24:23 <thuna`>	(As in, you're right, but it's not because I'm running that on my main connection that it's a problem)
Feb 21 19:27:29 <thuna`>	regexp is at best difficult to read and write.  Doubly so if you're trying to match text that's trying to bypass the filter as well.  The chance of making a mistake is too high
Feb 21 19:28:33 <thuna`>	Speaking of which: let's see if the multi-nick-mention-ignore works.
Feb 21 19:32:16 <thuna`>	@-mentions are also not recognized.  Good to know.
Feb 21 19:32:33 <johnjaye>	i'm using chatgpt to get price quotes on hotel rates. that seems pretty easy
Feb 21 19:32:41 <johnjaye>	google doesn't do this unless i'm using it wrong
Feb 21 19:32:56 <johnjaye>	you have to go to a site that specializes in this kind of thing, but chatgpt gets the result slightly faster
Feb 21 19:33:49 <grym>	there's zero way i would trust that in the slightest
Feb 21 19:34:13 <e1f>	yeah, those chatgpt prices are from 2022
Feb 21 19:34:17 <johnjaye>	well i tried a similar query in google. i just get generic ad type results
Feb 21 19:34:38 <johnjaye>	when i clicked the shopping tab the top row says $1868 to stay at the Grace Hotel in the Aegean
Feb 21 19:35:22 <johnjaye>	grym: because prices vary so much it's more efficient to just go to the airline or hotel website and do a query there?
Feb 21 19:35:51 <grym>	johnjaye: the merchant is the only price source worth trusting
Feb 21 19:36:01 <grym>	be that the base site or a reseller.
Feb 21 19:36:31 <tyson2>	that's what I've found, aggregators aren't that efficient or accurate
Feb 21 19:37:43 <johnjaye>	ah ok. i didn't know there was a business term for that already
Feb 21 19:38:11 <tyson2>	what I'm looking for is a business term that describes Mr. Beast
Feb 21 19:38:18 <johnjaye>	"influencer"
Feb 21 19:38:36 <tyson2>	not many influencers have become moguls like he has
Feb 21 19:39:07 <tyson2>	his net worth apparently exceed 1B now
Feb 21 19:39:08 <technomancy>	isn't that the goal they all have tho?
Feb 21 19:39:15 <tyson2>	right, but few achieve it
Feb 21 19:39:31 <tyson2>	I work for a company that trains aspiring influencers
Feb 21 19:39:42 <technomancy>	I'm sorry
Feb 21 19:39:48 <tyson2>	can't be helped
Feb 21 19:40:09 <technomancy>	not in this economy anyway
Feb 21 19:40:19 <tyson2>	any port in a storm
Feb 21 19:41:03 <e1f>	you need to train some emacs influencers
Feb 21 19:41:18 <tyson2>	there is one, sacha chua
Feb 21 19:41:29 <bpalmer>	Mr. Beast is large enough that it's fair to probably describe him as just the face of a production studio.
Feb 21 19:41:30 <tyson2>	who is likely online now
Feb 21 19:42:00 <tyson2>	bpalmer: agree, I will look into him a bit more deeply, he might be a collaborator with us
Feb 21 19:42:07 <technomancy>	rudybot: is mister beast an idoru?
Feb 21 19:42:08 <rudybot>	technomancy: oh, the korean idoru
Feb 21 19:42:31 <bpalmer>	tyson2: e.g., I see on wikipedia that Mr. Beast is said to employ over 250 employees (including writers, editors, and producers).
Feb 21 19:42:47 <tromey>	but does he use emacs
Feb 21 19:44:57 <thuna`>	Hrm.... I don't see a way to distinguish between a "long text here: more text" message and a "nick1 nick2 nick3: full text".
Feb 21 19:45:14 <grym>	sachac: you hear that, you're an influencer now!
Feb 21 19:46:00 <bpalmer>	thuna`: how common is that multiple nicks precede a message?
Feb 21 19:46:02 <thuna`>	(And if I'm not distinguishing between the two I end up with non-replies to nicks being ignored as well but only some of the time)
Feb 21 19:46:24 <thuna`>	bpalmer: I see it every now and then.  My main goal is to avoid workarounds
Feb 21 19:46:36 <e3d3>	thuna`: ? you regex doesn't know/recognize existing user names ?
Feb 21 19:46:54 <e3d3>	as such
Feb 21 19:47:37 <thuna`>	e3d3: You can do that but then you just throw in a non-existent nick and there goes that.  I guess in general what I'm trying to do is impossible.
Feb 21 19:48:37 <thuna`>	Maybe I'll have an rcirc-ignore-strategy variable somewhere and leave it to the user
Feb 21 19:49:02 <tyson2>	bpalmer: I guess we have to call him an Influencer-industrial-complex bigwig
Feb 21 19:49:46 <technomancy>	a human who was consumed by a brand
Feb 21 19:50:01 <tyson2>	technomancy: another good way to put it
Feb 21 19:50:33 <e3d3>	I can't think of a foolproof filters/regex
Feb 21 19:52:25 <thuna`>	e3d3: Yeah, I don't think it's possible.  The best you can do is try to handle people unintentionally getting around the filter.
Feb 21 19:53:47 <e3d3>	I really appreciate reactions from bpalmer, if not talking off-topic, so for now I keep toggling ignoring him (and some bots) on and off, with help of a hydra.
Feb 21 19:55:50 <corwin>	I don't know what any of that means but it sounds like you have some hydras you are happy with.  That's nice.
Feb 21 19:57:12 <e3d3>	corwin: I have a brain the size of a peanut so love & need my hydra's, and tweaking them with colors, tooltips etc
Feb 21 19:57:30 <corwin>	I wrote a custom /ban command that elevates privs using CHANSERV, if necessary.  I'm pretty happy with that: https://git.sr.ht/~mplscorwin/dotfiles/tree/master/item/elisp/init-erc-30.el#L164
Feb 21 20:00:13 <corwin>	I'm stuck on the idea of learning as many of the default bindings as I can (rather than replacing them with something I think I'll remember for my own reasons, or making bespoke UI for myself, both of which I've tried a little).  Not saying this is better, just my fixation.  Anyway, I solve the same problem with ,,which-key
Feb 21 20:00:14 <fsbot>	which-key is [0] at https://github.com/justbur/emacs-which-key
Feb 21 20:00:14 <fsbot>	[1] A minor mode for Emacs that displays the key bindings following your currently entered incomplete command (a prefix) in a popup.
Feb 21 20:01:03 <thuna`>	How would people feel about an option like https://0x0.st/H5bz.txt in rcirc?
Feb 21 20:01:40 <johnjaye>	bpalmer: mr. beast is the rider and his youtube studio is the elephant
Feb 21 20:02:16 <tyson2>	johnjaye: one could describe many personages using that approach
Feb 21 20:03:30 <johnjaye>	by the way corwin did you mistakenly send me a message before? you were saying i was offended about something but i don't recall what you meant.
Feb 21 20:03:57 <corwin>	hmm, in that case never mind? sorry, I can't recall the context and don't want to go log surfing.
Feb 21 20:04:19 <corwin>	But sorry if I offended you, obviously.  That does sound like a me thing to do.
Feb 21 20:05:27 <johnjaye>	no problem, i didn't think you did.
Feb 21 20:05:49 <johnjaye>	also sometimes i think i might appear to be here when i got disconnected. not sure why but my raspi has to be reset anytime the power flickers here
Feb 21 20:06:21 <jvml>	just set up elfeed, feels very nice to have a way to keep in touch with blogs i like
Feb 21 20:09:09 <e3d3>	corwin: I also use & like which-key, and try to use for the keybindings that I want to learn the regular keybindings in my hydra's (e.g. in mode-specific hydra's), or use a tooltip to show these.
Feb 21 20:10:26 <e3d3>	corwin: I use . to open mode-specific hydra's for dired, ibuffer etc, most with the same single letter keybindings
Feb 21 20:10:36 <corwin>	👍🏻
Feb 21 20:11:28 <bpalmer>	,leader
Feb 21 20:11:29 <fsbot>	evil-leader is https://github.com/cofi/evil-leader
Feb 21 20:12:03 <bpalmer>	oh, general, I guess.
Feb 21 20:12:20 <bpalmer>	,general
Feb 21 20:12:21 <fsbot>	general is More convenient key definitions in emacs https://github.com/noctuid/general.el
Feb 21 20:13:54 <rpav>	oh huh that's like the 200lb gorilla version of what i was doing with freekey
Feb 21 20:14:45 <rpav>	not sure i ever even posted it, but basically "reassign" / "redirect assignements" from <prefix> to <other-prefix>
Feb 21 20:15:21 <e3d3>	rpav: you mean the free-key package that only shows free keybindings
Feb 21 20:15:36 <rpav>	e3d3: nah i must have missed that when i searched though
Feb 21 20:15:41 <bpalmer>	I was thinking in terms of providing predicate dispatch functionality. E.g., rather than repeatedly rebind a key locally, you can define it once to a command that changes what it does based on, e.g., buffer position and mode
Feb 21 20:15:53 <e3d3>	rpav: okay, np
Feb 21 20:16:04 <rpav>	https://github.com/rpav/freekey.el/ .. basically i wanted C-x and C-c back
Feb 21 20:16:22 <bpalmer>	rpav:  you're not one of those CUA proponents, are you?
Feb 21 20:16:25 <rpav>	and am very happy with C-x to C-p actually.. though my `p` key is next to `m`
Feb 21 20:16:28 *	bpalmer shuffles away from rpav on the group W bench
Feb 21 20:16:55 <rpav>	bpalmer: vaguely but mostly out of "i use too many different things and want standard bindings"
Feb 21 20:17:22 <rpav>	bpalmer: but i'm _also_ a proponent of the classic mark, and don't like to have to use the transient mark for cua-mode etc
Feb 21 20:17:35 <bpalmer>	oh, thankfully it's easy to disable transient mark mode
Feb 21 20:17:41 <tyson2>	rpav: I also prefer standard bindings
Feb 21 20:17:55 <bpalmer>	although I've started using it for some "context-sensitive" commands, alas.
Feb 21 20:18:15 <tyson2>	the bindings for emacs are well-chosen IMHO
Feb 21 20:18:24 <johnjaye>	hmm. well lately i've been thinking of just dispensing with all M- commands.
Feb 21 20:18:35 <johnjaye>	most of them I don't use anyway. and M-x can be reassigned to <menu> or something
Feb 21 20:19:11 <johnjaye>	however M-s and M-n/M-p do work when doing regexp search
Feb 21 20:23:03 <rpav>	bpalmer: i actually have the beginnings of an "explicit-mark" thing for some operations, e.g. C-SPC is explicit-set-mark-command and some things _only_ look at the explicit-mark, so if i want to surround a region in {} or similar
Feb 21 20:23:06 <rpav>	fewer surprises
Feb 21 20:23:32 <rpav>	tyson2: yeah it's easier to change emacs than everything else ;/
Feb 21 20:23:45 <rpav>	also i don't like M-w because that often closes windows in everything else and is a bad habit
Feb 21 20:23:52 <rpav>	err C-w
Feb 21 20:24:09 <tyson2>	I just use C-c assignments for new functions that I create, or for a few tools that don't have default bindings
Feb 21 20:24:31 <tyson2>	C-c prefixes I mean
Feb 21 20:24:54 <rpav>	i use <Menu> for prefixes now
Feb 21 20:25:02 <rpav>	err for custom things as a prefix
Feb 21 20:25:22 <Odin-LAP>	A lot of keyboards don't have that anymore.
Feb 21 20:25:45 <rpav>	yeah i started making right-alt (or similar) that when it's otherwise absent, e.g. laptop
Feb 21 20:25:53 <Odin-LAP>	And many have only one key with the Windows logo.
Feb 21 20:26:05 <tyson2>	I used to work at a place that had lisp machines, and I used to maintain the keyboards, but I never really got the chance to use one.  I regret that
Feb 21 20:26:14 <Odin-LAP>	rpav: Ah, monolingual?
Feb 21 20:26:16 <rpav>	a lot of keyboards have some useless right-modifier key that's unreachable and would be otherwise unused
Feb 21 20:26:38 <rpav>	Odin-LAP: yeah but i have another key for compose when i really need it
Feb 21 20:26:54 <bpalmer>	don't forget that new keyboards for windows 11 will have the new "Copilot" ke
Feb 21 20:26:55 <Odin-LAP>	All the brackets are on AltGr keys for me.
Feb 21 20:26:57 <bpalmer>	y
Feb 21 20:26:59 <rpav>	also if i really used it a lot i would use like tex-input-mode or similar
Feb 21 20:27:13 <Odin-LAP>	[ and {, for instance.
Feb 21 20:27:14 <rpav>	bpalmer: poe's law D:
Feb 21 20:27:54 <technomancy>	tyson2: what does maintaining the keyboards mean?
Feb 21 20:28:00 <grym>	let's confuse poe's law and poee's law
Feb 21 20:28:02 <Odin-LAP>	Also ~, ` and @. The last of which is AltGr-Q, which plays extremely well with CUA bindings.
Feb 21 20:28:04 <thuna`>	AltGr also has \ for me
Feb 21 20:28:04 <bpalmer>	rpav: https://blogs.windows.com/windowsexperience/2024/01/04/introducing-a-new-copilot-key-to-kick-off-the-year-of-ai-powered-windows-pcs/
Feb 21 20:28:05 <rudybot>	https://teensy.info/UCCKbjNHjT
Feb 21 20:29:00 <dcb>	I'm surprised they didn't try a key exclusively for the user to accept restarting the pc to update
Feb 21 20:29:03 <bpalmer>	I'm not sure whether the copilot key will be adaptable so that mainstream keyboard users can finally get a meta separate from alt.
Feb 21 20:29:06 <technomancy>	"AI will be seamlessly woven into Windows from the system, to the silicon, to the hardware" in other words, we have lots of budget for useless things but we can't afford a copy editor
Feb 21 20:29:33 <grym>	,g you are clippy, an intelligent user interface for office users.  I'm trying to write a form letter, how should i start?
Feb 21 20:29:34 <fsbot>	🤖[g] As an intelligent user interface, I suggest starting your form letter with a clear and engaging opening sentence to grab the recipient's attention.
Feb 21 20:29:50 <technomancy>	maybe they did try to bring a copy editor in to fix this but the copy editor died of horror when they read how stupid the writing was
Feb 21 20:30:08 <grym>	dcb: you don't need a key for that, just yolo the reboot
Feb 21 20:30:12 <Odin-LAP>	bpalmer: It won't. The Windows key is basically not usable for anything on Windows, because the OS eats a huge number of combinations with it.
Feb 21 20:30:28 <bpalmer>	Odin-LAP: but linux users seem to usually use it as super.
Feb 21 20:30:52 <technomancy>	(kind of like how microsoft tried to get a lawyer to review the legality of copilot but every lawyer they asked had a heart attack before they could reply)
Feb 21 20:31:01 <grym>	bpalmer: it's a great i3 leader key!
Feb 21 20:31:10 <rpav>	bpalmer: geez i was leaning "joke" too
Feb 21 20:32:32 <bpalmer>	"Bucky bits were used heavily on keyboards designed by Tom Knight at MIT, including space-cadet keyboards used on LISP machines. These could contain as many as seven modifier keys: SHIFT, CTRL, META, HYPER, SUPER, TOP, and GREEK (also referred to as FRONT)."
Feb 21 20:32:38 <dcb>	grym: I still remember taking my eyes from the screen for a second and noticing a small pop-up screen closing as I pressed Enter (with everything closing and the system taking an hour to update and reboot)
Feb 21 20:32:47 <bpalmer>	Still need a few more special keys on the keyboard to get all the bucky bits back in action.
Feb 21 20:33:03 <Odin-LAP>	bpalmer: Sure. I suspect a new modifier would probably get mapped to 'hyper' more commonly than alt, simply because it's not worth the confusion of having a modifier called 'alt' that is different from the button marked 'alt'.
Feb 21 20:33:43 <Odin-LAP>	It's easier to remember "it's called something different" than it is "the one called that is a different one".
Feb 21 20:33:49 <grym>	your buttons are marked?
Feb 21 20:35:48 <Odin-LAP>	grym: I believe the majority of keyboards in use have labelling.
Feb 21 20:35:56 <grym>	oh for sure
Feb 21 20:36:14 <technomancy>	I don't think they were talking about their keyboard specifically?
**** BEGIN LOGGING AT Wed Feb 21 20:38:01 2024

Feb 21 20:38:01 *	Now talking on #emacs
Feb 21 20:38:01 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 21 20:38:01 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 21 20:38:27 <grym>	dcb: the original wasn't
Feb 21 20:40:59 <rpav>	i should get a bunch of keycaps that are just '(' and ')' and joke that it's my keyboard for writing lisp
Feb 21 20:41:44 <technomancy>	add a lambda key and you're basically turing-complete
Feb 21 20:41:52 <technomancy>	well, SKI-complete, which is the same thing but cooler
Feb 21 20:51:45 <mekeor>	hello fellas :)
Feb 21 20:53:13 <mekeor>	gnus' nnmaildir doesn't support nested directories but i found out i can instruct mbsync to flatten the directories. i'm excited to see if it works :D
Feb 21 21:02:17 <mekeor>	and also this week i customized mode-line-format. it's not fully finished but i already like it: https://paste.rs/0PwLe (i wonder how bad it performs and how can i improve performance.)
Feb 21 21:08:34 *	ski complete ?
Feb 21 21:09:51 <mekeor>	ski: excuse me, are you reacting to me?
Feb 21 21:16:47 <rpav>	ski free
Feb 21 21:17:06 <rpav>	mekeor: it was to technomancy afaict
Feb 21 21:20:45 *	ski doesn't ski
Feb 21 21:20:58 <ski>	aye, rpav
Feb 21 21:27:03 <jvml>	hello again all!
Feb 21 21:28:05 <edgar-rft>	no, please not all again
Feb 21 21:30:29 <hodapp>	okay I think I finally finished my diagram explaining to myself the connections and differences between marginalia, orderless, corfu, consult, embark, ivy, counsel, swiper, vertico, company, and ido-mode
Feb 21 21:30:38 <hodapp>	but now I'm so confused I feel like I need another diagram
Feb 21 21:31:09 <grym>	the aristocrats!
Feb 21 21:31:17 <a51>	is it possible to make fonts a bit "tall" ? is it the height settings I have to adjust ? sometimes some fonts appear small
Feb 21 21:31:44 <a51>	I would like my fonts like a model :) skinny and tall :)
Feb 21 21:32:28 <mekeor>	a51: try out M-x customize-face RET default RET
Feb 21 21:32:43 <grym>	a51: so, ioveska
Feb 21 21:33:18 <mekeor>	a51: try :width and :weight attributes
Feb 21 21:33:25 <a51>	my current font setting (set-face-attribute 'default nil :font "Iosevka Nerd Font" :height 210)
Feb 21 21:33:31 <edgar-rft>	sounds like you want misc-fixed 1x100
Feb 21 21:33:43 <jvml>	i just keep emacs in whatever the default monospace font on windows is
Feb 21 21:33:51 <jvml>	doesn't work for everything but it works for many things
Feb 21 21:34:00 <jvml>	courier new? i dunno
Feb 21 21:35:32 <a51>	edgar-rft: what should be misc-fixed format for a 32 inch monitor ?
Feb 21 21:37:18 <edgar-rft>	depends on the pixel resolution
Feb 21 21:37:59 <a51>	2560x1440
Feb 21 21:38:16 <a51>	edgar-rft: misc-fixed is set in .Xresources ?
Feb 21 21:38:21 <a51>	or init.el ?
Feb 21 21:40:44 <hodapp>	I'm still a little lost on how counsel and company can coexist
Feb 21 21:41:24 <rpav>	i thought counsel was a minibuffer thing
Feb 21 21:41:47 <rpav>	yeah
Feb 21 21:42:18 <rpav>	company is a buffer thing (though maybe it also does minibuffer, but if so it probably similarly has specific commands?)
Feb 21 21:43:15 <edgar-rft>	a51: I have the line "Emacs.font: -misc-fixed-medium-r-semicondensed--13-*-*-*-c-60-*" in my ~/.Xresources but it can also be set in init.el - where I first must lookup howto set it in init.el
Feb 21 21:43:36 <ohnoitsnoah>	Howdyyy
Feb 21 21:45:37 <jvml>	hello ohnoitsnoah!
Feb 21 21:45:43 <jvml>	what brings you here today?
Feb 21 21:46:20 <ohnoitsnoah>	Nothing much, I'm just messing with ERC. I didn't know Emacs had an IRC client, but I'm far from suprised lol
Feb 21 21:46:37 <rpav>	erc is damn good
Feb 21 21:46:47 <ohnoitsnoah>	It works super nice!!
Feb 21 21:46:50 <JohnGalt>	I need to look more into how to configure it
Feb 21 21:46:52 <a51>	edgar-rft: you don't put the name of the font in my case Iosevka Nerd Font
Feb 21 21:46:58 <rpav>	very easy to customize vs every other client i've seen
Feb 21 21:47:28 <jvml>	i'm in erc as well! i've been getting back into irc since yesterday and it's been super pleasant
Feb 21 21:48:05 <johnjaye>	ohnoitsnoah: i should try it out. i normally use weechat+tmux
Feb 21 21:48:10 <jvml>	this is one of my favorite channels because i've been hyperfixated on emacs for the past few years
Feb 21 21:48:15 <jvml>	i always access it from erc
Feb 21 21:48:17 <johnjaye>	but if i abandon tmux then it would make sense to abandon weechat as well
Feb 21 21:48:40 <a51>	edgar-rft: is there a compromise ? I guess we can't have both of "worlds" ... increase size and we have fewer lines ... I have 32 inch monitor and I would like to have at least 34 lines at least ...
Feb 21 21:48:42 <rpav>	johnjaye: and with emacs server you can connect/reconnect/multiply-connect as well
Feb 21 21:48:46 <ohnoitsnoah>	Me too jvml
Feb 21 21:48:53 <rpav>	between gui and tui even
Feb 21 21:49:06 <ohnoitsnoah>	I was gonna give a talk at EmacsConf last year, but class and other stuff got in the way, so I dropped :/
Feb 21 21:49:35 <jvml>	ohnoitsnoah: what kind of stuff do you use emacs for, how do you make it a part of your life?
Feb 21 21:50:42 <technomancy>	johnjaye: I run erc in tmux
Feb 21 21:50:55 <technomancy>	makes sense to keep it together if you jump around machines
Feb 21 21:51:01 <ohnoitsnoah>	jvml: I mostly use it for just general programming, git control, etc. I also use it to keep school notes and a todo list
Feb 21 21:51:55 <johnjaye>	what does that mean. you run emacs in tmux and erc inside emacs?
Feb 21 21:52:01 <johnjaye>	i meant using emacs for tabs instead of tmux
Feb 21 21:52:05 <johnjaye>	which is what i'm doing now
Feb 21 21:52:23 <bpalmer>	ohnoitsnoah: emacs has multiple irc clients. erc and rcirc are both included in standard emacs, but see also ,,ircclients
Feb 21 21:52:28 <fsbot>	ircclients: erc, zenirc, liece, riece, irchat, kiwi, rockers (irc-mode), emirc, rcirc, circe, elim, weechat.el
Feb 21 21:52:43 <rpav>	damn
Feb 21 21:52:52 <ohnoitsnoah>	neat lol
Feb 21 21:53:05 <rpav>	are any of them _easier_ to customize / more featureful than erc?
Feb 21 21:53:13 <jvml>	personally i use emacs as a way to keep track of writing and manage information i've collected. org-mode is extremely helpful for note-taking (the info management part i mentioned) and putting together ideas, and for the former reason i got really into it when i started college a few months ago. i also organize the writing for my collaborative encyclopedic fantasy novel and just edit (plain)text in general using emacs, and it really
Feb 21 21:53:13 <jvml>	helps me as a writer
Feb 21 21:53:28 <ohnoitsnoah>	I've never messed with irc. I just decided to mess with it today since I'd rather do this than my assignment
Feb 21 21:53:32 <rpav>	my main gripe is total filtering isn't as easy to control as it ought to be, e.g. functions for applying formatting and highlights
Feb 21 21:53:49 <ohnoitsnoah>	jvml: Emacs also helps with writing. Org-Mode is a god-send
Feb 21 21:53:55 <ohnoitsnoah>	*helps me
Feb 21 21:53:58 <bpalmer>	rpav: rcirc is simpler which potentially means easier; circe has an architecture separating the UI layer from the communication layer which may be easier.
Feb 21 21:54:06 <rpav>	bpalmer: hrm k
Feb 21 21:54:53 <ohnoitsnoah>	I'm in hs so my note-taking is a lot less than I'm sure it will be in the coming years, but still helpful none the less
Feb 21 21:55:23 <jvml>	i've also been using org-mode to export pages for the website i maintain for the novel (https://thiswillneverend.neocities.org), in combination with a custom stylesheet adapted for org exports
Feb 21 21:55:44 <johnjaye>	ohnoitsnoah: do all your notes in json files and only use jq queries to manage it.
Feb 21 21:56:02 <a51>	is it necessary to have nerd fonts in emacs is a font that has emoji includes nerd fonts too ?
Feb 21 21:56:05 <jvml>	ohnoitsnoah: i found out about emacs when i was in high school too! absolutely changed the digital side of my life for the better
Feb 21 21:56:12 <alcor>	Interesting to see HS Emacs'ers. I used to use vim in HS, then "graduated" to Emacs
Feb 21 21:56:18 <ohnoitsnoah>	jvml: I used to use org-mode to export stuff, but I got lazy with it and just moved to straight HTML, which ironically is more work lol
Feb 21 21:56:33 <johnjaye>	don't use emacs. it will ruin your life.
Feb 21 21:56:43 <johnjaye>	Someone offers you s-expressions to solve your problems? Just say no!
Feb 21 21:56:44 <ohnoitsnoah>	jvml: yesss i love it. It's just an amazing tool in general, for tons of things
Feb 21 21:56:52 <jvml>	i'm a freshman in college so i'm not too far off from being in high school i guess LOL
Feb 21 21:57:01 <jvml>	but i definitely think of myself as an adult
Feb 21 21:57:05 <JohnGalt>	.emacs takes a lot of time
Feb 21 21:57:27 <ohnoitsnoah>	I've been messing with Lisp recently, so once again Emacs saved the day with just being a good piece of software to work in
Feb 21 21:57:30 <jvml>	i got into elfeed recently and i've been editing my .emacs so much to add the tags for all the sites it reads rss feeds from
Feb 21 21:57:56 <a51>	what is the consensus ? nerd fonts or emoji fonts ?
Feb 21 21:58:07 <jvml>	oh lisp!!!! i'm really interested in lisp too, especially Common and obv elisp as well, but i haven't had time to do programming when i work on so many other cool things
Feb 21 21:58:33 <a51>	emoji fonts I guess are for neotree and treemacs for icons right ?
Feb 21 21:58:51 <jvml>	god i'm trying to remember how i discovered emacs
Feb 21 21:59:07 <technomancy>	I don't think you need special fonts to get tree rendering characters?
Feb 21 21:59:19 <a51>	treemacs icons
Feb 21 21:59:21 <technomancy>	all that box drawing stuff is pretty standard
Feb 21 21:59:21 <a51>	I meant
Feb 21 21:59:32 <a51>	and dired icons too
Feb 21 21:59:42 <ohnoitsnoah>	jvml: I found it after working with Vim when working on my website, and then I just fell into the rabbit hole
Feb 21 21:59:42 <alcor>	The icon font is for folder / mime type icons
Feb 21 22:00:27 <a51>	I like Iosveka font, but which one to set for default ? Iosveka Term ? Iosevka Nerd Font ?
Feb 21 22:00:29 <alcor>	Could it be that vim is the most popular "gateway drug" to Emacs? Hmm...
Feb 21 22:00:49 <jvml>	i think i first used it in november 2020, i used to know a little bit of vim way back in the day and i was aware of the "editor wars" many years before using emacs
Feb 21 22:00:57 <jvml>	but i never knew vim very well lol
Feb 21 22:01:04 <a51>	alcor: if you like vim evil-mode gives the best experience
Feb 21 22:01:13 <jvml>	i don't really like the weirdness of having to choose different modes for inserting text honestly
Feb 21 22:01:20 <jvml>	i like being able to type from the get-go
Feb 21 22:01:51 <technomancy>	alcor: spacemacs brought in a ton of my co-workers a few years ago
Feb 21 22:01:56 <technomancy>	and then it kinda just ... stopped?
Feb 21 22:02:22 <alcor>	spaceemacs was hyped on reddit & HN for a while
Feb 21 22:02:25 <jvml>	i've never felt the need to use evil or spacemacs but i respect anyone who does
Feb 21 22:02:31 <jvml>	they both seem fun
Feb 21 22:03:05 <JohnGalt>	Emacs excels in lisp development
Feb 21 22:03:30 <jvml>	i don't really code all that much but emacs' handling of written language is enough to keep me coming back
Feb 21 22:03:34 <alcor>	I remember I started out with spacemacs, but then I accepted the superiority of a bedrock-like vanilla/minimal config, which, starting from Emacs 29+, could be quite comfy
Feb 21 22:03:35 <JohnGalt>	I tend to use markdown for permanent notes, and a ticket system for tracking tasks
Feb 21 22:04:01 <rpav>	emacs does a lot of things pretty well.. much if it some flavor of "you can make it work like you want"
Feb 21 22:04:02 <ohnoitsn`>	sorry, my laptop connected to my school wifi and it kicked me out lol
Feb 21 22:04:11 <a51>	I was told earlier for font to look "tall" to use misc-fixed but is it possible to set misc-fixed with Iosevka ?
Feb 21 22:05:18 <jvml>	i just use the default configuration with a few extra keybinds for specific purposes, like if i need to type something по-русски or write IPA for my liŋɡwɪstɪks homework
Feb 21 22:05:24 <JohnGalt>	DejaVu Sans Mono works well with emacs, especially for matching up braces
Feb 21 22:06:00 <noahhh`>	what happens if I time out and can't use the username I was using
Feb 21 22:06:07 <jvml>	i have those bound to (kbd "C-c r") and (kbd "C-c I") respectively
Feb 21 22:06:14 <noahhh>	Can I just not get it back lol
Feb 21 22:06:18 <Odin-LAP>	jvml: ᚱᚢᛋᛋᚾᛖᛋᚲᚨ?
Feb 21 22:06:19 <jvml>	oh you got it
Feb 21 22:06:42 <jvml>	LOL
Feb 21 22:06:59 <jvml>	hello again!
Feb 21 22:07:00 <ohnoitsnoah>	Okay I got it nevermind lol
Feb 21 22:07:04 <ohnoitsnoah>	Hai! sorry
Feb 21 22:07:16 <ohnoitsnoah>	I was bugging out erc by having multiple instances running lol
Feb 21 22:07:21 <ohnoitsnoah>	Still new to irc
Feb 21 22:07:41 <a51>	I guess Emacs.font: Iosevka Nerd Font :weight=regular:size=29 is perfect gives me 34 lines :)
Feb 21 22:07:42 <jvml>	takes time to figure out! no shame in stumbling a little
Feb 21 22:08:01 <jvml>	ohnoitsnoah: have you registered your nick on libera yet?
Feb 21 22:08:11 <ohnoitsnoah>	Nopeeee
Feb 21 22:08:16 <ohnoitsnoah>	where do I go to do that?
Feb 21 22:08:40 <jvml>	you would type something like this
Feb 21 22:08:59 <jvml>	/msg NickServ REGISTER [your username] [your password]
Feb 21 22:09:10 <jvml>	i might be wrong though it's been a minute since i did that
Feb 21 22:09:14 <alcor>	ohnoitsnoah: There's a detailed guide on https://libera.chat/guides/registration if you're interested
Feb 21 22:09:24 <jvml>	oh nvm it's
Feb 21 22:09:28 <jvml>	it's a little different
Feb 21 22:09:33 <jvml>	just use the guide and ignore me LOL
Feb 21 22:10:05 <jvml>	had a bit of a brainfart i guess
Feb 21 22:10:08 <JohnGalt>	I just got my db wrapper working! this calls for a tumbler of some good scotch
Feb 21 22:10:47 <alcor>	The libera chat website also offers on okayish guide on IRC basics: https://libera.chat/guides/basics – enough for daily use
Feb 21 22:10:47 <jvml>	ohnoitsnoah: make sure you right down the password someplace though
Feb 21 22:10:51 <ohnoitsnoah>	awesomeee, I'm registering rn :)
Feb 21 22:11:07 <jvml>	glad to hear it!
Feb 21 22:11:39 <jvml>	registering will give you the ability to send private messages and secure the nickname you have right now for yourself
Feb 21 22:11:41 <jvml>	iirc
Feb 21 22:12:06 <ohnoitsnoah>	Awesomeee, done and done
Feb 21 22:12:12 <jvml>	:)
Feb 21 22:13:34 <ohnoitsnoah>	I've been reading HTDP in between classes
Feb 21 22:13:48 <ohnoitsnoah>	Scheme is super cool
Feb 21 22:13:55 <JohnGalt>	agreed
Feb 21 22:14:12 <JohnGalt>	SICP is one of the best works ever
Feb 21 22:14:23 <ohnoitsnoah>	I made my gf a small program in it for Valentines day, super fun to work with
Feb 21 22:14:32 <jvml>	scheme is lovely!
Feb 21 22:14:52 <ohnoitsnoah>	Although I wrote it in DrRacket, which is nice but I'm sure the writing experience isn't much different in Emacs
Feb 21 22:15:04 <jvml>	and what would SICP be? i'm somewhat uninitiated in the ways of programming literature
Feb 21 22:15:09 <alcor>	Do you use it with the PLT IDE (I remember it was called DrScheme, or DrRacket now after the rename?)
Feb 21 22:15:18 <ohnoitsnoah>	Structure and Interprtation of Computer Programs jvml
Feb 21 22:15:21 <JohnGalt>	Structure and Interpretation of Computer programs
Feb 21 22:15:24 <jvml>	oh i recognize that name now
Feb 21 22:15:35 <JohnGalt>	the old MIT intro to comp sci book before they went python
Feb 21 22:15:37 <jvml>	acronym just wasn't ringing a bell
Feb 21 22:15:42 <ohnoitsnoah>	ancor: I have, but I wanna start writing it in Emacs
Feb 21 22:15:56 <ohnoitsnoah>	That IDE is actually super awesome
Feb 21 22:16:45 <a51>	is it true for real apps in lisp clisp is the way to go ?
Feb 21 22:16:49 <ohnoitsnoah>	JohnGalt: My friends make fun of me because they're all like emo kids, and we all play in a band, and after our shows when we go out to eat, I like watching them wuth my meal lol
Feb 21 22:16:59 <jvml>	i'm extremely fond of common lisp
Feb 21 22:17:04 <ohnoitsnoah>	Those old MIT videos are still sick
Feb 21 22:17:16 <jvml>	ohnoitsnoah: what instrument(s) do you play?
Feb 21 22:17:22 <ohnoitsnoah>	jvml: me too, also a very nice language
Feb 21 22:17:35 <JohnGalt>	other people will always try to tear down what they cant do
Feb 21 22:17:35 <ohnoitsnoah>	jvml: I "sing" (scream lol) and play guitar
Feb 21 22:17:58 <jvml>	i'm a music producer mostly so i play a lot of electronic instruments
Feb 21 22:17:58 <ohnoitsnoah>	a51: Possibly??? I've seen some cool stuff made in Scheme/Racket
Feb 21 22:17:59 <technomancy>	a51: not really
Feb 21 22:18:00 <jvml>	but also trombone
Feb 21 22:18:08 <alcor>	DrRacket has a good and user-friendly debugger. In Emacs there's "Geiser" which offers major/minor modes for several Scheme implementations.
Feb 21 22:18:22 <JohnGalt>	man I forgot about geiser
Feb 21 22:18:26 <ohnoitsnoah>	jvml: I also do electronic stuff on the side!
Feb 21 22:18:34 <technomancy>	a51: clisp isn't really a very competitive implementation
Feb 21 22:18:44 <JohnGalt>	sbcl is better
Feb 21 22:18:50 <jvml>	you have a bandcamp or anything?
Feb 21 22:18:53 <johnjaye>	better how?
Feb 21 22:18:57 <technomancy>	a51: it depends what you're trying to do of course
Feb 21 22:18:59 <johnjaye>	faster? stronger? smarter?
Feb 21 22:19:07 <JohnGalt>	more support in documentation and very portable
Feb 21 22:19:08 <ohnoitsnoah>	technomancy: yeah I feel like scheme is better for like educational stuff
Feb 21 22:19:26 <JohnGalt>	I used clojure in production a long time ago
Feb 21 22:19:31 <johnjaye>	jvml: do you know how to work the compressor? i can't find a good youtube tutorial on it
Feb 21 22:19:32 <ohnoitsnoah>	jvml: Yes! My old noise/drone ambient project from middle school is https://maddieisreal.bandcamp.com
Feb 21 22:19:35 <alcor>	johnjaye: Well… SBCL is actively maintained, as opposed to CLISP which has only sporadic commit activity
Feb 21 22:19:44 <ohnoitsnoah>	my new band is at https://nicolesdeath.bandcamp.com tho lol
Feb 21 22:19:58 <jvml>	almost all of the material i've done is at https://janislago.bandcamp.com
Feb 21 22:20:01 <technomancy>	ohnoitsnoah: yeah especially the documentation and books are top notch
Feb 21 22:20:20 <ohnoitsnoah>	JohnGalt: been meaning to try it. Seems interesting
Feb 21 22:20:23 <rpav>	johnjaye: do it, make it, work it?
Feb 21 22:20:49 <ohnoitsnoah>	Alright it's about to be passing period for me, I'll join back when I get to my next class
Feb 21 22:20:51 <ohnoitsnoah>	byeee yall
Feb 21 22:20:56 <technomancy>	lol
Feb 21 22:21:17 <jvml>	johnjaye: i can't really give specific advice on how to work the compressor because it kinda depends on every individual effect unit, but think of the compressor as a way to lower dynamic range first and foremost. it's a way to make the quiet part more even with the loud in a signal
Feb 21 22:21:47 <JohnGalt>	I live for dynamic range
Feb 21 22:21:56 <JohnGalt>	I have an amp, I dont need it compressed
Feb 21 22:22:07 <johnjaye>	do you use audacity and fl studio?
Feb 21 22:22:24 <jvml>	i use ableton for the most part, though i also have a fair amount of hardware
Feb 21 22:22:28 <a51>	"nowdays" we can't escape the web ... is clojure the "best bet" for a startup backed with vc $$$ ? this seems the best clojure app https://penpot.app/
Feb 21 22:22:29 <yates_home>	how do i define a key binding containing a function key in this style? (global-set-key [(control ?F4)] (blah)
Feb 21 22:22:34 <yates_home>	like that?
Feb 21 22:22:44 <technomancy>	a51: clojure is definitely the easiest to hire for, and has the best access to libraries
Feb 21 22:23:07 <JohnGalt>	you can find some desperate companies with clojure the dont know what to do with
Feb 21 22:23:10 <jvml>	i used to use audacity but that was when i was only just barely starting out
Feb 21 22:23:28 <technomancy>	(I work in Clojure, maintain Fennel, and have written a lot of Elisp and a little Racket)
Feb 21 22:23:40 <JohnGalt>	I had one company hound me for 3 months with some clojure a guy left behind
Feb 21 22:24:40 <JohnGalt>	is Perl6 totally dead?
Feb 21 22:25:04 <rpav>	was it ever really alive
Feb 21 22:25:09 <JohnGalt>	there was pugs
Feb 21 22:25:13 <JohnGalt>	parrot
Feb 21 22:25:19 <JohnGalt>	I submitted patches to parrot
Feb 21 22:26:24 <JohnGalt>	it had a good concept , but nobody was able to bootstrap parrot properly
Feb 21 22:26:24 <e1f>	i vaguely remember perl7 is being worked on
Feb 21 22:26:47 *	e1f is still on perl5
Feb 21 22:26:55 <jvml>	i saw something about perl7 recently but didn't think much of it
Feb 21 22:29:27 <e1f>	python is pretty much supplanted perl in terms of popularity
Feb 21 22:29:57 <JohnGalt>	when I got back into python it was the highest paid
Feb 21 22:30:17 <rpav>	i'm not a python fan really but i'd _way_ rather python than perl
Feb 21 22:30:17 <alcor>	aren't the basically data science jobs?
Feb 21 22:30:40 <JohnGalt>	theres alot more than that
Feb 21 22:30:50 <JohnGalt>	general backend work
Feb 21 22:31:03 <JohnGalt>	the other one for backend is java
Feb 21 22:31:56 <JohnGalt>	both java and python are good options
Feb 21 22:32:18 <johnjaye>	technomancy: is clojure good to get hired at desperate companies that don't know what they're doing?
Feb 21 22:32:47 <jvml>	will be on my way now so i can do some design/writing, cheers!
Feb 21 22:32:50 <jvml>	o7
Feb 21 22:33:31 <ohnoitsnoah>	Chemistry class yayyyyyy
Feb 21 22:33:40 <ohnoitsnoah>	I don't like this class but eh it's all good
Feb 21 22:34:40 <technomancy>	johnjaye: no, the desperate companies that don't know what they're doing all demand that their engineers rewrite everything in golang, assuming they ever even started with clojure
Feb 21 22:34:43 <Thaodan>	Hey I'm trying to clear out a line matching a regex non interactively to filter out some garbage that java spits out. When I call the code manually it works but not inside this function. Any ideas?
Feb 21 22:34:44 <Thaodan>	https://github.com/Thaodan/plantuml-mode/commits/try_to_filterout_java_junk
Feb 21 22:35:32 <rpav>	is the variable actually the regex you want
Feb 21 22:36:50 <Thaodan>	what you mean? If you ask if the regex inside the variable works then yes.
Feb 21 22:37:38 <mathrick>	argh, I hate how completely useless Emacs maintainers are at integrating existing projects into the core
Feb 21 22:38:04 <mekeor>	mathrick: context?
Feb 21 22:38:05 <mathrick>	every single time, they go off and do their own thing that's now incompatible with existing packages
Feb 21 22:38:06 <technomancy>	IME that's a blessing in disguise
Feb 21 22:38:18 <technomancy>	if it were in core it would become a pain to contribute to
Feb 21 22:38:18 <JohnGalt>	I think melpa put a stake into adding things into core
Feb 21 22:38:48 <mathrick>	mekeor: right now, tree-sitter integration in 29 being totally different from packages for <29, and in the past, stuff like CEDET / Semantic
Feb 21 22:39:16 <Thaodan>	RMS likes to talk shit about melpa
Feb 21 22:39:26 <mathrick>	where they completely fucked up the API to the point pretty much *all* code using semantic was broken
Feb 21 22:39:42 <JohnGalt>	Its stunning but I think emacs has more external completion tools than python has package managers
Feb 21 22:39:45 <mathrick>	technomancy: that's actually what I'm talking about
Feb 21 22:39:53 <mathrick>	shit being added to the core is a *bad* thing
Feb 21 22:40:19 <mathrick>	it effectively creates a hard fork of whatever they're adding and they have no regard for any sort of compatibility, backward or forward
Feb 21 22:40:25 <Thaodan>	I only know of two completion frameworks and one that's dead
Feb 21 22:40:43 <JohnGalt>	company, cedet, lsp, etc..
Feb 21 22:40:46 <Thaodan>	capf, company and auto-complete
Feb 21 22:40:52 <mathrick>	there's Company, AC (long dead), CAPF
Feb 21 22:41:10 <JohnGalt>	slime kinda counts too
Feb 21 22:41:11 <Thaodan>	lsp isn't framework it just plugs into any other the above ^
Feb 21 22:41:34 <mekeor>	fido, ido, icomplete-vertical, vertico
Feb 21 22:41:36 <mathrick>	but IMHO semantic/CEDET being added to the core the way it got added was a large part of made sure it wouldn't be widely used
Feb 21 22:41:45 <mathrick>	mekeor: those are presentation layers
Feb 21 22:41:52 <Thaodan>	Java maintainers say that spitting trash to stderr is a security feature..
Feb 21 22:42:23 <mekeor>	capf, completing-read, pcomplete
Feb 21 22:42:26 <mathrick>	they broke the API so hard in Semantic that all existing documentation immediately became invalid and outdated
Feb 21 22:42:38 <Thaodan>	If don't know what completition frameworks are better research first..
Feb 21 22:42:56 <Thaodan>	MS was a blessing with lsp
Feb 21 22:43:05 <Thaodan>	to bad GNU doesn't integrate it really
Feb 21 22:43:16 <hodapp>	ooh conversation cycled back to what I wanted
Feb 21 22:43:30 <johnjaye>	Thaodan: i don't see how lsp is a blessing by any technical merit
Feb 21 22:43:32 <technomancy>	didn't GNU specifically hate the idea of making compilers extensible?
Feb 21 22:43:44 <technomancy>	the whole debacle with gcc plugins that led to the creation of clang?
Feb 21 22:43:44 <JohnGalt>	yes
Feb 21 22:43:45 <johnjaye>	it seems it's just "corpo defined a standard to do something so everyone does that thing by that standard now"
Feb 21 22:43:53 <JohnGalt>	which is why clang came about
Feb 21 22:43:54 <mekeor>	isn't emacs a compiler extended to be an editor?
Feb 21 22:44:17 <technomancy>	using protocols to expose compiler smarts (aka the whole point of LSP) seems to be exactly what they were afraid of
Feb 21 22:44:20 <mathrick>	https://blog.phundrak.com/emacs-29-what-can-we-expect/ <-- "If you can’t wait to test Tree-Sitter, there is already another package available for Emacs you can use right now. Just be aware this is not the same package as the one that got integrated into Emacs."
Feb 21 22:44:22 <alcor>	with native comp it's indeed a compiler now
Feb 21 22:44:25 <johnjaye>	like if google defined "the google font framework" tomorrow and suddenly everyone switched to it would that be necessarily good?
Feb 21 22:44:26 <mathrick>	this shit right there
Feb 21 22:44:29 <technomancy>	mekeor: yes but it's a compiler for a language that no one else wants to use
Feb 21 22:44:31 <hodapp>	I get a little lost in completion frontends vs. company front-ends
Feb 21 22:45:19 <Thaodan>	"using protocols to expose compiler smarts (aka the whole point of LSP) seems to be exactly what they were afraid of" But isn't that the most efficient way of extending editors?
Feb 21 22:45:21 <mathrick>	hodapp: these days, you should use a CAPF frontend (like corfu) with CAPF providers, rather than a bespoke framework like Company
Feb 21 22:45:33 <mathrick>	it uses standard tools and APIs that other things can plug into
Feb 21 22:45:35 <hodapp>	mathrick: why's that?
Feb 21 22:45:40 <JohnGalt>	GNU was trying to force people to contribute
Feb 21 22:45:43 <hodapp>	any good links on this?
Feb 21 22:45:45 <JohnGalt>	people went elsewhere
Feb 21 22:45:48 <technomancy>	Thaodan: efficiency is lower-priority than political concerns to GNU
Feb 21 22:45:54 <technomancy>	*much* lower priority
Feb 21 22:45:58 <Thaodan>	Even IDE's cant get better unless the talk to the compiler themselves
Feb 21 22:46:16 <technomancy>	Thaodan: but then EEEEVIL proprietary code could use it!!!!
Feb 21 22:46:24 <Thaodan>	technomancy:  I get that but that will restrict users and make them move away
Feb 21 22:46:31 <mathrick>	hodapp: https://kristofferbalintona.me/posts/202202211546/ https://kristofferbalintona.me/posts/202202270056/
Feb 21 22:46:36 <mathrick>	very good docs
Feb 21 22:46:39 <hodapp>	mathrick: thanks
Feb 21 22:46:42 <Thaodan>	some GNU people are so far out of reality that it does feel like they are high on something
Feb 21 22:46:46 <mekeor>	i get the impression you folks use emacs to write proprietary code
Feb 21 22:46:51 <JohnGalt>	GNU for professing freedom sure does limit it :]
Feb 21 22:47:03 <technomancy>	Thaodan: then according to GNU they don't deserve gcc
Feb 21 22:47:09 <JohnGalt>	your free to play by GNU's rules
Feb 21 22:47:18 <Thaodan>	They try to force a lot of things that don't work
Feb 21 22:47:19 <technomancy>	Thaodan: (I'm not defending this, I'm just trying to convey their position)
Feb 21 22:47:21 <mathrick>	hodapp: although all-the-icons these days is replaced by something else, lemme look it up
Feb 21 22:47:34 <JohnGalt>	hurd... LOL
Feb 21 22:47:51 <mekeor>	mathrick: nerd-icons?
Feb 21 22:47:51 <Thaodan>	technomancy: Np, I know their position. I frequently comment, provide bug reports to Emacs master
Feb 21 22:47:54 <JohnGalt>	more vaporous than Duke Nukem
Feb 21 22:47:58 <mathrick>	yes, nerd-icons
Feb 21 22:48:03 <mathrick>	I just needed to confirm
Feb 21 22:48:37 <Thaodan>	I think these days GNU has at least partially realized that they will make themselves redundant continuing like this
Feb 21 22:48:44 <mathrick>	https://github.com/rainstormstudio/nerd-icons-completion
Feb 21 22:48:51 <technomancy>	Thaodan: tbh I'm surprised they even accepted eglot into core
Feb 21 22:49:02 <Thaodan>	it's just that some people like rms comment on topics they have no idea about
Feb 21 22:49:22 <Thaodan>	or violate their own rules by talking about tangent topics
Feb 21 22:49:22 <mathrick>	<technomancy> didn't GNU specifically hate the idea of making compilers extensible? <-- RMS mostly, and he's insane
Feb 21 22:49:41 <technomancy>	mathrick: a lot of people still listen to him
Feb 21 22:49:45 <Thaodan>	I know people how met rms, it wasn't pleasent to say the least
Feb 21 22:49:45 <technomancy>	hopefully fewer now than back then
Feb 21 22:49:56 <mathrick>	that's adding DRM so people can't use your code that is supposedly so free for what they want to use it for
Feb 21 22:50:06 <technomancy>	imagine if all the work that went into clang had gone into improving gcc
Feb 21 22:50:33 <Thaodan>	technomancy: re eglot: Yeah I agree even thou eglot suffers the same issue exists in projectile vs project.el
Feb 21 22:51:00 <mathrick>	but RMS is exactly the kind of person to kill to preserve the sanctity of life
Feb 21 22:51:04 <Thaodan>	GCC is catching up not thanks to GNU
Feb 21 22:51:14 <mathrick>	or add DRM to preserve freedom
Feb 21 22:51:18 <hodapp>	mathrick: does eglot automagically work with capf?
Feb 21 22:51:55 <mathrick>	I don't know, LSP is mysterious and I never went through configuring that, so I have little experience there
Feb 21 22:51:56 <technomancy>	hodapp: I think so
Feb 21 22:51:58 <Thaodan>	I'm still angry for GPL-3.0. Many companies don't like it... I wish I could use GPL-3.0 packages on devices.
Feb 21 22:52:00 <mathrick>	but I would hope so
Feb 21 22:52:13 <JohnGalt>	GPL 3 was banned everywhere I worked
Feb 21 22:52:28 <mekeor>	hodapp: yes, eglot defines and sets a capf
Feb 21 22:52:32 <Thaodan>	anyway, any ideas to fix my lisp code? https://github.com/Thaodan/plantuml-mode/commits/try_to_filterout_java_junk
Feb 21 22:52:42 <JohnGalt>	in fact at one company the warning was in triplicate in 24 point red font
Feb 21 22:53:02 <johnw>	every company I've been at, there is a rule against ever touching GPL software
Feb 21 22:53:03 <e1f>	when did gcc go from standing for "gnu c compiler" to "gnu compiler collection"?
Feb 21 22:53:04 <Thaodan>	JohnGalt: for me2 unless it doesn't end up on the device
Feb 21 22:53:15 <technomancy>	but I do gotta say that the trend in core of decoupling implementation and interface like capf and xref is fantastic
Feb 21 22:53:17 <johnw>	using it is OK, but not including it in a project
Feb 21 22:53:23 <hodapp>	well, using this rather than company at least seems easier to understand
Feb 21 22:53:36 <JohnGalt>	helm is what I use
Feb 21 22:53:37 <mathrick>	e1f: a long time ago
Feb 21 22:53:40 <Thaodan>	GPL-2.0 is and was always ok
Feb 21 22:53:43 <JohnGalt>	I love the interface and incremental completion
Feb 21 22:53:57 <hodapp>	technomancy: any good links on this for xref?
Feb 21 22:54:11 <e1f>	mathrick: ok, so rms agreed to it being extensible back then
Feb 21 22:54:16 <Thaodan>	IMHO GNU should help to push GPLv3, resolve the underlying legal issues
Feb 21 22:54:40 <Thaodan>	rms agreed on something like he knows is the almighty emperor
Feb 21 22:54:40 <ohnoitsnoah>	I got an IRC client on my phonee yayy
Feb 21 22:54:41 <technomancy>	hodapp: hmmmmmm not of the top of my head
Feb 21 22:54:46 <e1f>	i assume that's around the time the rewrite to c++ happened
Feb 21 22:55:20 <mekeor>	gcc depends on python btw
Feb 21 22:55:25 <mathrick>	gcc has had stuff like Java compiler for a long time, that's why it was renamed
Feb 21 22:55:37 <Thaodan>	and hopefully rust very soon
Feb 21 22:55:48 <Thaodan>	or linux kernel clang only
Feb 21 22:55:54 <JohnGalt>	ill look at rust when they fix the compile times
Feb 21 22:56:12 <johnjaye>	what is capf?
Feb 21 22:56:13 <fsbot>	capf is a completion-at-point-function
Feb 21 22:56:17 <e1f>	java came out c. 1995?
Feb 21 22:56:18 <johnjaye>	oh right
Feb 21 22:56:22 *	Thaodan *cough* dynamiclink, abi
Feb 21 22:56:31 *	Thaodan *cough* dynamic linking, abi
Feb 21 22:56:47 <mathrick>	e1f: no, gcc's Java compiler, that has nothing to do with Java the language's age
Feb 21 22:56:58 <e1f>	ah, ok
Feb 21 22:57:03 <JohnGalt>	rust is completely replaceable by garbage collection
Feb 21 22:57:03 <Thaodan>	aot for java
Feb 21 22:58:03 <mathrick>	JohnGalt: no, it very specifically does things that aren't replaceable by a GC
Feb 21 22:58:19 <JohnGalt>	mathrick: such as?
Feb 21 22:58:57 <mathrick>	ummm, everything? Including the fact it doesn't depend on a runtime and can provably not alloc in code that can't afford to alloc
Feb 21 22:59:30 <mathrick>	also, provable ownership which eliminates entire categories of bugs data races and other concurrency issues
Feb 21 22:59:47 <e1f>	,g when did gcc add support for a java compiler
Feb 21 22:59:49 <mathrick>	rust has a lot of syntax, more than I'm strictly comfortable with, but it is a very smart project that does what it does really well
Feb 21 23:00:00 <fsbot>	🤖[g] GCC added support for a Java compiler in the late 1990s.
Feb 21 23:00:17 <JohnGalt>	sounds like a bondage langauge
Feb 21 23:00:55 <JohnGalt>	maybe boeing should use it
Feb 21 23:01:00 <rpav>	so a _couple_ things heh
Feb 21 23:01:25 <rpav>	though GC and no-allocation aren't mutually exclusive
**** BEGIN LOGGING AT Wed Feb 21 23:19:26 2024

Feb 21 23:19:26 *	Now talking on #emacs
Feb 21 23:19:26 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 21 23:19:26 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** ENDING LOGGING AT Wed Feb 21 23:20:04 2024

**** BEGIN LOGGING AT Wed Feb 21 23:21:17 2024

Feb 21 23:21:17 *	Now talking on #emacs
Feb 21 23:21:17 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 21 23:21:17 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 21 23:21:42 <JohnGalt>	it definitely got shimmed in as a corner case
Feb 21 23:26:40 <grym>	pandas is 100% shim/corner case, it's nothing else
Feb 21 23:27:58 <JohnGalt>	I got stuck with that retard-mess and it made me miserable
Feb 21 23:28:19 <hodapp>	https://wesmckinney.com/blog/apache-arrow-pandas-internals/
Feb 21 23:28:33 <JohnGalt>	I looked at arrow actually
Feb 21 23:28:33 <hodapp>	Apache Arrow and the “10 Things I Hate About pandas” - it's by the author of Pandas
Feb 21 23:28:43 <e1f>	you can't search for swift programming-related terms without taylor swift links appearing in the results
Feb 21 23:28:58 <JohnGalt>	try you.com
Feb 21 23:28:59 <Inline>	lol
Feb 21 23:29:40 <ram_man>	In your config file, can you define a variable whose scope is the file?
Feb 21 23:29:44 <grym>	hodapp: they're trying to separate the data storage model from the API, but it's a hard slog
Feb 21 23:30:07 <grym>	e1f: kagi's programming lens does that just fine
Feb 21 23:30:20 <hodapp>	I should pay for Kagi
Feb 21 23:30:21 <wasamasa>	ram_man: make it buffer-local, easy
Feb 21 23:32:07 <ram_man>	Thank you, wasamasa.
Feb 21 23:35:10 <JohnGalt>	I did a study of the heap sort algorithm and found that a textbook, and most code on the internet was completely wrong
Feb 21 23:35:13 <NemesisD>	i'm using vterm in emacs as my terminal and i noticed when i run zellij, when there's a lot of data scrolling by it gets pretty slow specifically when using zellij. however, if i focus the window with the vterm the streaming is no longer slow. is there some sort of redraw prioritization going on here and can i prioritize vterm windows by major mode or something?
Feb 21 23:35:20 <JohnGalt>	only wikipedia and MIT got it right
Feb 21 23:35:30 <JohnGalt>	so now I rely on books for algorithms
Feb 21 23:36:19 <JohnGalt>	AI doesnt help either, it just regurgitates the wrong answers in a summarized form
Feb 21 23:37:05 <hodapp>	what text got it wrong?
Feb 21 23:37:55 <thuna`>	Here's a bare-bones distribution.el.  The generics are defined, reasonable fallback methods are defined (mostly for discrete distributions where you can brute force stuff).  Next up is defining individual distributions themselves.  Do you see anything else that I should add/you would like added?  (Just outline-hide-* everything but the toplevels to see whatall is here) https://0x0.st/H5TK.txt
Feb 21 23:39:16 <JohnGalt>	I can't remember the textbook, it might be in my kindle collection
Feb 21 23:39:18 <JohnGalt>	https://github.com/bitcathedrals/algorithms/blob/main/src/heap_sort/heapsort.py
Feb 21 23:39:23 <JohnGalt>	this is the variations I found
Feb 21 23:40:30 <Thaodan>	NemesisD: I'm not aware of any prioritization. I would if vterm isn't capped somehow. Also check the permonance in other apps using libvterm
Feb 21 23:40:42 <hodapp>	NemesisD: is it specifically Emacs using CPU in this instance, or Zellij? I ask because in trying out Zellij I did not have to go very far to get it in a state where it pegged the CPU at 100%
Feb 21 23:40:53 <hodapp>	specifically, all I had to do was "zellij --layout strider"
**** ENDING LOGGING AT Wed Feb 21 23:50:23 2024

**** BEGIN LOGGING AT Wed Feb 21 23:50:23 2024

**** ENDING LOGGING AT Wed Feb 21 23:52:21 2024

**** BEGIN LOGGING AT Wed Feb 21 23:52:21 2024

**** ENDING LOGGING AT Wed Feb 21 23:53:41 2024

**** BEGIN LOGGING AT Wed Feb 21 23:53:41 2024

**** ENDING LOGGING AT Wed Feb 21 23:57:59 2024

**** BEGIN LOGGING AT Wed Feb 21 23:57:59 2024

Feb 22 00:08:18 <mekeor>	when customizing mode-line-format, should i set variables like mode-line-frame-identification to nil when i don't reference them in my mode-line-format?
Feb 22 00:12:19 <NemesisD>	hodapp: i'm sure zellij is using more CPU than say tmux which was always really snappy in vterm. but i kind of suspect it's emacs or vterm because specifically switching emacs' focus to the vterm window makes it go way faster. like stuff will be scrolling like a slideshow and then the instant i focus the vterm window it's much smoother
Feb 22 00:32:02 <NemesisD>	yeah it looks like it is likely emacs that's cpu bound. when i save a file that causes a rebuild and thus the terminal to scroll, i see emacs shoot up the top cpu usage while it renders
Feb 22 00:42:21 <ohnoitsnoah>	/
Feb 22 00:42:26 <ohnoitsnoah>	whoops
Feb 22 00:42:27 <ohnoitsnoah>	haiii
Feb 22 00:47:39 <bpalmer>	Let's train emacs to kill buffers that don't meet quality standards.
Feb 22 00:50:22 <ohnoitsnoah>	real
Feb 22 00:51:00 <twb>	bpalmer: maybe it could just kill minority buffers
Feb 22 00:51:21 <ohnoitsnoah>	major minor modes joke right hahahahaha.........
Feb 22 00:58:14 <bpalmer>	twb: too many uncommon letters? That's easy enough to write.
Feb 22 00:58:58 <bpalmer>	More than three zs in a row suggest the document is boring.
Feb 22 01:01:24 <twb>	I was actually thinking "minor mode" but whatever
Feb 22 01:03:32 <ohnoitsnoah>	Is there an Emacs drawing extension
Feb 22 01:03:38 <ohnoitsnoah>	who am i kidding of course there is
Feb 22 01:03:42 <ohnoitsnoah>	(probably)
Feb 22 01:04:23 <bpalmer>	,artist-mode
Feb 22 01:04:24 <fsbot>	[->] ArtistMode: [0] included in Emacs 23 and up.
Feb 22 01:04:25 <fsbot>	[1] at http://www.emacswiki.org/emacs/ArtistMode
Feb 22 01:04:25 <fsbot>	[2] can be used to create diagrams together with ditaa
Feb 22 01:05:35 <Thaodan>	there's also plantuml which works well
Feb 22 01:05:52 <ohnoitsnoah>	I accidently left because I turned on artist mode lol
Feb 22 01:07:18 <bpalmer>	plants vs uml is not nearly as exciting as plants vs zombies.
Feb 22 01:14:45 <grym>	hodapp: it's worth the spend (kagi)
Feb 22 01:17:41 <ohnoitsnoah>	Emacs 2 when
Feb 22 01:18:48 <grym>	ohnoitsnoah: sometime in the early 80s, i think
Feb 22 01:19:26 <ohnoitsnoah>	grym: sigh,,,yeah
Feb 22 01:20:01 <e1f>	actually, we are still running emacs 1.29. the 1 was dropped from versioning
Feb 22 01:20:27 <ohnoitsnoah>	emacs 2000 when
Feb 22 01:22:01 <ohnoitsnoah>	Has anyone tried Lem?
Feb 22 01:22:18 <ohnoitsnoah>	I tried installing it but couldn't get it running because I'm lazy lol
Feb 22 01:22:23 <ohnoitsnoah>	Seems neat though
Feb 22 01:24:28 <grym>	nah
Feb 22 01:25:58 <ohnoitsnoah>	grym: Nah as in "nah it's not good" or "nah, I haven't tried it"
Feb 22 01:26:17 <grym>	ohnoitsnoah: the latter
Feb 22 01:26:49 <bremner>	Emacs ME or gtfo
Feb 22 01:26:50 <ohnoitsnoah>	What's a good git client for Emacs
Feb 22 01:26:54 <bremner>	magit
Feb 22 01:27:29 <ohnoitsnoah>	Thank youuu
Feb 22 01:30:11 <ohnoitsnoah>	Have y'all tried any other Emacsen?
Feb 22 01:30:23 <technomancy>	you mean like ... xemacs?
Feb 22 01:31:19 <bremner>	rudybot: country and western
Feb 22 01:31:19 <rudybot>	bremner: And reactionaries would only be listening to country and western
Feb 22 01:31:21 <ohnoitsnoah>	That, uEmacs
Feb 22 01:31:33 <bremner>	oh, so things _called_ eamcs
Feb 22 01:31:39 <ohnoitsnoah>	yeah lol
Feb 22 01:31:41 <technomancy>	uemacs doesn't even have lisp, right?
Feb 22 01:31:46 <ohnoitsnoah>	no ://
Feb 22 01:31:47 <ohnoitsnoah>	it
Feb 22 01:31:49 <ohnoitsnoah>	it
Feb 22 01:31:58 <ohnoitsnoah>	it's just a boring text editor
Feb 22 01:32:00 <technomancy>	feels wrong to have emacs in the name at all without lisp
Feb 22 01:32:13 <technomancy>	not that I'm against boring editors on principle or anything
Feb 22 01:32:31 <technomancy>	but if you think that you made something kind of like emacs and it doesn't have lisp, you don't know what emacs actually is
Feb 22 01:32:43 <ohnoitsnoah>	yeah I feel you
Feb 22 01:36:13 <mwnaylor>	Killing minors is generally frowned upon. 😜
Feb 22 01:40:08 <bpalmer>	mwnaylor: just wait until you're trapped on a plane with one.
Feb 22 01:41:11 <mwnaylor>	bpalmer: Last time I flew was Easter weekend 2000.
Feb 22 01:49:40 <ohnoitsnoah>	Remember when RMS was like "more WYSIWYG in Emacs" lol
Feb 22 01:50:05 <ecbrown>	it was a good idea
Feb 22 01:50:10 <ecbrown>	still is
Feb 22 01:53:08 <ohnoitsnoah>	I think it would be neat, I just like Emacs for it's all-plain-text kinda experience
Feb 22 01:53:37 <ohnoitsnoah>	I know it's not all in plain-text, but I think you know what I'm getting at lol
Feb 22 02:19:56 <Viking667>	'llo all.
Feb 22 02:21:06 <grym>	Viking667: how's your locationing
Feb 22 02:22:50 <Viking667>	it's a-locationing. We're just getting some other things in place at the moment, the usual things that happen when anyone relocates.
Feb 22 02:24:30 <Viking667>	And I have my first task from someone else - trying to re-enable the touchpad on an HP laptop that runs Windows 11. I have no real experience with Windows past Vista, and currently have a mouse plugged in to help out.
Feb 22 02:27:21 <johnjaye>	Viking667: things changed a lot since vista. i couldn't even get emacs to run on my old vista machine
Feb 22 02:29:00 <twb>	Viking667: recent laptop?
Feb 22 02:29:20 <twb>	It *ought* to be cabled via USB so it *ought* to Just Work with standard built-in drivers...
Feb 22 02:29:37 <twb>	Maybe there's an option to disable it completely in the EFI config?
Feb 22 02:29:38 <johnjaye>	run a linux ubuntu live instance and see if it works with that
Feb 22 02:30:04 <twb>	johnjaye: if that works, it would at least prove it's not a hardware fault
Feb 22 02:30:25 <johnjaye>	yes i did that often. just throw in ubuntu and see if my pc still has the problem
Feb 22 02:30:50 <johnjaye>	now i mostly just dual boot. windows on one drive, linux on second drive.
Feb 22 02:31:09 <johnjaye>	now if only i knew some way to backup my data to an external drive
Feb 22 02:32:30 <incal>	what's going on
Feb 22 02:32:58 <johnjaye>	i suspect i wouldn't get more speed from a usb-c card i have than usb3.0 ports i have.
Feb 22 02:33:15 <johnjaye>	but i don't know how to check that
Feb 22 02:33:42 <johnjaye>	i think i tried with my android phone to test it but the transfer rate was limited by the disk
Feb 22 02:33:52 <johnjaye>	incal: i'm just rambling about usb
Feb 22 02:35:54 <johnjaye>	according to usbview i have an xchi compliant host controller with 8 ports, some usb2 and some usb3
Feb 22 02:36:52 <Viking667>	The touchpad? There's a driver, but it was showing a problem.
Feb 22 02:37:14 <Viking667>	sorry. bit busy here shuffling other priorities. I'll be back later.
Feb 22 02:41:56 <incal>	johnjaye, didn't know of usbview, but it is in the Debian repos so let's install it and try it then
Feb 22 02:42:35 <johnjaye>	ah i can actually use the device id and vendor id to lookup the device and see what it is
Feb 22 02:44:47 <twb>	I use lshw
Feb 22 02:44:55 <twb>	lshw -json
Feb 22 02:45:31 <twb>	Easier than remembering lots of little tools, faster than grepping /sys
Feb 22 02:45:49 <grym>	and fed into the jq maw
Feb 22 02:46:29 <Viking667>	Yah. I can't do that on Windows 11, and this lappy isn't mine. I took a look into the device manager, there's a device listing for a ELAN touchpad, but there's one of those yellow triangles on it.
Feb 22 02:46:52 <johnjaye>	i think ehci just means usb2.0 and xhci means usb3.0
Feb 22 02:46:59 <twb>	johnjaye: correct
Feb 22 02:47:12 <johnjaye>	wikipedia doesn't make it very clear. lol
Feb 22 02:47:35 <johnjaye>	Viking667: the standard windows solution is to uninstall the device from device manager, thenreboot and reinstall the device with a driver.
Feb 22 02:47:36 <twb>	Touchpads were often cabled to PS/2 for a very long time, because i8042 gives you a PS/2 port for free, so that frees up one USB port for external cabling
Feb 22 02:47:43 <incal>	it seems I have three 2.00 and three 3.10. but the only thing connected is a keyboard which is USB 2.00 so maybe there is no point in using a 3.10 for that?
Feb 22 02:47:49 <Viking667>	And here, the device shows up as a PS/2 device, and shows that it's either not plugged in, not working or doesn't have drivers installed
Feb 22 02:48:04 <johnjaye>	incal: doesn't really matter if you have nothing else anyway.
Feb 22 02:48:23 <incal>	what do yo mean?
Feb 22 02:48:24 <twb>	Viking667: the data ribbon might have come loose, but unlikely
Feb 22 02:48:49 <incal>	PS/2, is that still used
Feb 22 02:49:03 <twb>	incal: I don't know if it's still the case in USB4 era
Feb 22 02:49:12 <twb>	incal: but as at early USB3 era (2012), absolutely
Feb 22 02:49:25 <twb>	incal: also "gamer" mice are PS/2 because lower latency
Feb 22 02:49:42 <incal>	usbview, too bad it don't have a text-only option for the output
Feb 22 02:49:50 <incal>	maybe some other tool can do that
Feb 22 02:50:34 <twb>	"just reboot into a Debian Live usb key for 5 minutes"
Feb 22 02:50:55 <incal>	at least the blue and red USB ports look cool on the computer
Feb 22 02:51:10 <twb>	You still have red USB ports?
Feb 22 02:51:44 <twb>	Ah that means USB 3.2
Feb 22 02:51:46 <incal>	I think I have black, blue and red. hm, what color is teal? <https://tripplite.eaton.com/products/usb-connectivity-types-standards>
Feb 22 02:51:56 <twb>	teal = USB 3.1
Feb 22 02:51:56 <incal>	,g What color is teal?
Feb 22 02:51:57 <fsbot>	🤖[g] A shade of blue-green.
Feb 22 02:52:08 <incal>	ah, cyan
Feb 22 02:52:18 <twb>	incal: midori
Feb 22 02:52:35 <twb>	I was thinking of red being the eSATA ports
Feb 22 02:53:06 <twb>	https://svitppt.com.ua/images/22/21129/770/img10.jpg <-- like that
Feb 22 02:53:32 <incal>	according to the tool, I have 3.10, in that table it says 3.1 is either teal or red, 3.0 is blue
Feb 22 02:54:04 <incal>	yellow and orange I haven't seen
Feb 22 02:54:13 <Viking667>	great. I've only ever dealt with the black and blue ones, haven't really seen much of red and none of teal.
Feb 22 02:54:13 <twb>	black tongue = usb 2.0; blue tongue = usb 3.0; teal tongue = usb 3.1; red tongue = usb 3.2; yellow tongue = powered while off
Feb 22 02:55:19 <incal>	it says red "[u]sually denotes an 'always on' port", so I guess one keeps that for safety-critical gear
Feb 22 02:55:51 <incal>	or to charge the smartphone when the computer is off, not that I turn mine off
Feb 22 02:59:39 <incal>	I used to turn the computer off and on because the fan made an annoying noise, so I replaced the fans with high-end ones that were supposedly more quiet, and maybe they were, got a semi-passive PSU and stuff, but nothing helped, still couldn't sleep in the same room with it on, so ultimately I just put in in a box, then it never bothered me again, haha
Feb 22 03:00:03 <incal>	but I guess it was a bummer since after all the tinkering the computer looked really cool
Feb 22 03:08:47 <incal>	also disconnected the fan to the GPU, hasn't overheated yet, all tho sensors(1) reports 'ERROR: Can't get value of subfeature in0_input: Can't read' for some reason, and a similar error for the CPU temp
Feb 22 03:08:55 <incal>	should ask on #debian for that, maybe
Feb 22 03:09:22 <spikemaster>	i plan to never experience fan noise ever again.
Feb 22 03:10:32 <grym>	eeeeeeeee
Feb 22 03:11:24 <twb>	incal: I mean... life critical gear probably shouldn't be on USB in the first place...
Feb 22 03:11:33 <incal>	here is some Elisp to add noise, dB don't add linearly, https://dataswamp.org/~incal/emacs-init/audio.el
Feb 22 03:12:25 <incal>	which is good since if it did people would have problem just by having a bunch of very small noise sources add up
Feb 22 03:15:01 <incal>	so if you have one source of 15 dB, it is 15 dB
Feb 22 03:15:22 <incal>	but if you have two sources of 15 dB, it is 18 dB!
Feb 22 03:16:58 <twb>	Decibels *of what*
Feb 22 03:17:06 <grym>	and relative to what
Feb 22 03:17:10 <incal>	then it falls pretty quickly, 20 for 3, 21 for 4 and so on
Feb 22 03:17:41 <twb>	It's like saying "wow, 2e4 + 1e5 is not 3e9"
Feb 22 03:18:09 <grym>	incal: now do it A-weighted
Feb 22 03:18:15 <twb>	I kind of with dB would just get fucked
Feb 22 03:18:31 <twb>	Unfortunately https://en.wikipedia.org/wiki/Decibel#Criticism doesn't exist
Feb 22 03:18:46 <grym>	twb: sadly for you, there are plenty of things in the world with huuuuge dynamic range, and your cochlea are on the list
Feb 22 03:19:25 <twb>	grym: sure but like... can you not just say ·eⁿ instead of n dB
Feb 22 03:19:45 <twb>	Or whatever it is exactly since I still don't really "get" it
Feb 22 03:20:24 <grym>	log compression is still handy
Feb 22 03:20:59 <twb>	Unfortunately "decibel considered harmful" and "units considered harmful" are full of health bullshit instead of interesting metrology rants
Feb 22 03:21:23 <twb>	Maybe I need to like search on google scholar and limit to "journal of metrology" or something
Feb 22 03:22:43 <twb>	Let's question societal norms about what appliances every kitchen needs.
Feb 22 03:22:54 <incal>	so if one wants to reduce noise, start with what makes tho most noise. which is the way a kid would solve the problem as well, so it is pretty intuitive :)
Feb 22 03:23:16 <grym>	also, start with reducing noise that you hear best
Feb 22 03:23:18 <twb>	incal: "if your house was on fire, what would you take out first?"  "The fire"
Feb 22 03:23:44 <grym>	i do not care at all if i have a fan that's howling away at 90dB SPL ... at 22 kHz
Feb 22 03:23:56 <grym>	well, at least my ears don't care
Feb 22 03:23:59 <twb>	grym: it can't fuck up your ears?
Feb 22 03:24:04 <grym>	twb: it can't, no
Feb 22 03:24:08 <twb>	grym: because like... UV can fuck up your eues even if you can't "see" it
Feb 22 03:24:16 <grym>	not the same
Feb 22 03:24:22 <twb>	fair enough
Feb 22 03:24:25 <grym>	see also: infrasound nutters
Feb 22 03:24:39 <grym>	which is the same thing but other side
Feb 22 03:25:15 <grym>	ThE wInD tUrBiNeS!  ... bruh
Feb 22 03:25:31 <twb>	Our approach so far has mainly been 1) fine drivers who continue to illegally use beepers instead of squakers; 2) relocate residents when the TBM is running.
Feb 22 03:26:06 <incal>	if you are in a forest or on a beach all the noise makes you calm, but a computer fan can be irritating as hell
Feb 22 03:27:04 <johnjaye>	i think i figured it out. i have 5 usb controllers in total. the usb2 on front and back have different controllers. the usb3 has 2 sets on the back, 2 different controllers. and i have an addon card giving me a 5th controller.
Feb 22 03:27:35 <twb>	incal: doesn't make ME calm
Feb 22 03:27:47 <twb>	fucken bears having sex in the next tree or whatever
Feb 22 03:27:58 <weary-traveler>	rudybot: drop bears??
Feb 22 03:27:58 <rudybot>	weary-traveler: Did they make you wear a pointy hat to ward off the drop bears
Feb 22 03:27:58 <fsbot>	Probably!
Feb 22 03:29:35 <grym>	little johnny ursa, we call him
Feb 22 03:29:46 <weary-traveler>	heh
Feb 22 03:30:22 <grym>	hodapp: what weaksauce https://status.openai.com/incidents/ssg8fh7sfyz3
Feb 22 03:34:19 <weary-traveler>	i wouldn't have thought gpu configurations to affect correctness. interesting
Feb 22 03:34:33 <grym>	it's so high level that it doesn't mean anything
Feb 22 03:35:12 <weary-traveler>	that's par for the course
Feb 22 03:36:45 <twb>	I was looking at "open-source self-hosted backup for your smartphone's photos" yesterday, and on their news page said "the face recognition code can now use cuda acceleration on supported GPUs"
Feb 22 03:37:04 <twb>	And I was like "what part of 'backup' needs you do do 'ai face recognition'"
Feb 22 03:37:36 <weary-traveler>	the part that calls to the five/nie/however-many eyes
Feb 22 03:41:55 <weary-traveler>	rudybot: is it time to split up my ~1mb org file? or should i put it off another year?
Feb 22 03:41:56 <rudybot>	weary-traveler: Moving through a buffer below 1MB should be fast.
Feb 22 03:42:19 <weary-traveler>	well yes
Feb 22 03:46:04 <grym>	and at what year are you in that bragging that you have cuda support is even remotely worth mentioning
Feb 22 03:47:08 <hodapp>	grym: yeah I was hoping they'd say more
Feb 22 03:47:29 <weary-traveler>	i imagine the original message had many more details and by the time it was deemed ready to publish by others in the chain what was retained were a few phrases like cuda, kernels
Feb 22 03:51:06 <bpalmer>	Are we using cuda support to make moving through buffers faster?
Feb 22 03:51:48 <incal>	too much GPU fan noise from that
Feb 22 03:51:49 <bpalmer>	... are we getting vectorized multiple cursor support?
Feb 22 03:52:30 <bpalmer>	I will say, transpose-regions is not a friendly api to work with.
Feb 22 03:52:34 <hodapp>	are you getting jealous of Zed?
Feb 22 03:52:57 <Guest76>	incal like this ?  https://devhumor.com/media/my-fans
Feb 22 03:53:46 <incal>	yuk! no, it was more like annoying, not disgusting
Feb 22 03:53:57 <grym>	hodapp: mmm, nah
Feb 22 03:55:06 <bpalmer>	twb: but certainly, you could see the potential benefits: photographs of family should be replicated to more locations over a higher priority network, whereas photos of the inside of your pockets can be replicated to 0 locations.
Feb 22 03:55:32 <Guest76>	incal sorry. I never thought that someone can find that disgusting
Feb 22 03:55:37 <twb>	bpalmer: that seems to be making unreasonable assumptions
Feb 22 03:55:46 <twb>	It's not like my family is in my Dunbar group
Feb 22 03:56:46 <bpalmer>	twb: but surely if you had to make a choice, you'd pocket veto pocket pics over visions of humanity?
Feb 22 03:58:15 <twb>	My smartphone camera has literally never once taken a photo of a human
Feb 22 03:58:45 <grym>	counterpoint: you're an extreme outlier
Feb 22 03:58:47 <twb>	It is sort of amusing to watch its edge detection diagnose a tap ("faucet") as a human head
Feb 22 03:58:59 <twb>	grym: sure, but that's what I meant about making assumptions
Feb 22 03:59:08 <grym>	twb: it's fair to make assumptions that discard outliers
Feb 22 03:59:11 <twb>	It's basically saying "minorities don't matter"
Feb 22 03:59:13 <incal>	,g Do it today, in a different way
Feb 22 03:59:24 <grym>	if you insist
Feb 22 03:59:40 <bpalmer>	I suspect face recognition is likely going to work on non-human entities as well without need to retrain.
Feb 22 03:59:58 <fsbot>	🤖[g] Don't delay, innovate away!
Feb 22 04:00:01 <grym>	bpalmer: it may or may not; depends how you set it up
Feb 22 04:00:03 <bpalmer>	Not as well, maybe, but many dogs look distinct, for example.
Feb 22 04:00:09 <grym>	sometimes in pretty bad ways :D
Feb 22 04:00:21 <grym>	bpalmer: some of them are hotdogs!
Feb 22 04:00:29 <bpalmer>	big eyes. big nose. hairy.
Feb 22 04:00:32 <bpalmer>	basically a person.
Feb 22 04:00:42 <grym>	yeaaah google photos thought so too
Feb 22 04:00:47 <grym>	but with black people and gorillas
Feb 22 04:01:08 <bpalmer>	ah, yes.
Feb 22 04:01:20 <grym>	their solution to that particular whoopsie was pretty hamfisted: they deleted the gorilla class
Feb 22 04:01:34 <grym>	which, well.  okay...
Feb 22 04:01:47 <hodapp>	this is reminding me of the episode of Better Off Ted that is... not even all that-farfetched
Feb 22 04:01:56 <bpalmer>	I always knew class warfare was inevitable.
Feb 22 04:02:10 <grym>	farfetched: a word that sounds like it ought to be yiddish, yet, is not
Feb 22 04:02:30 <hodapp>	the company puts these newfangled presence sensors all over the building for things like doors and lights and even water fountains, and then they discover that the sensors don't work on black people.
Feb 22 04:02:38 <weary-traveler>	i miss that show
Feb 22 04:02:43 <incal>	when AI takes over, maybe there will be a class war between first and second class computers
Feb 22 04:02:57 <hodapp>	their solution was to have separate facilities for black people.
Feb 22 04:03:12 <hodapp>	so as to be inclusive.
Feb 22 04:03:18 <weary-traveler>	the "solution" iirc was to pair a white guy with a black guy
Feb 22 04:03:25 <weary-traveler>	to ensure visibility to sensors
Feb 22 04:03:26 <hodapp>	oh yeah I forgot about that part
Feb 22 04:03:40 <incal>	maybe really pretty girls will have the sensors overheat as well
Feb 22 04:04:00 <bpalmer>	So Zed is apparently by the creators of Atom.
Feb 22 04:04:11 <hodapp>	bpalmer: yes. https://zed.dev/blog/we-have-to-start-over
Feb 22 04:04:19 <weary-traveler>	is zed another editor?
Feb 22 04:04:23 <grym>	bpalmer: it is, yes
Feb 22 04:04:34 <hodapp>	weary-traveler: yeah. shiny and Rust-based
Feb 22 04:04:43 <habamax>	same fate as atom, probably
Feb 22 04:04:46 <grym>	and macos only and has a data ... policy ...?
Feb 22 04:04:51 <hodapp>	grym: wut
Feb 22 04:07:29 <grym>	hodapp: if you use their codesharing stuff the EULA has the usual boilerplate about user data
Feb 22 04:33:06 <grym>	i can't say i'm very enthused to give it a try
Feb 22 04:46:50 <shrysr>	.
Feb 22 04:47:30 <grym>	..
Feb 22 04:52:17 <incal>	...
Feb 22 04:52:34 <incal>	C-u .
Feb 22 04:52:42 <incal>	AKA ....
Feb 22 04:55:14 <ohnoitsnoah>	Howdyy
Feb 22 05:17:27 <e1f>	let's play a game where we try to find how many modes can be enabled before emacs is unusable as the modes begin to conflict with each other
Feb 22 05:20:32 <Guest76>	I really often wonder about how emacs can handles my stupidities, that other programs scared for live
Feb 22 05:20:36 <ecbrown>	there are no conflicts in the 400 packages loaded in my spacemacs
Feb 22 05:21:25 <ecbrown>	emacs enables stupidities
Feb 22 05:27:32 <spikemaster>	i tried Zed for a bit. the Vim emulation is a bit lacking. The Vim commands don't take numeric argumentss. Evil mode does a better job covering more wierd Vim quirks.
Feb 22 05:28:02 <incal>	ecbrown, what is a package, something you `require'?
Feb 22 05:30:56 <ecbrown>	incal: a package brings extra functionality into emacs.
Feb 22 05:31:25 <ecbrown>	it can be required and/or load-file'd or any number of mechanisms for loading
Feb 22 05:34:07 <incal>	if we stick to `require', I use 159 using this command to find out: grep -h -o '(require .*)' **/*.el | sort | uniq | wc -l
Feb 22 05:34:40 <ecbrown>	why sort | uniq
Feb 22 05:34:51 <ecbrown>	why not just uniq
Feb 22 05:35:52 <ecbrown>	think of all those lost cpu cycles that could have been used for good
Feb 22 05:35:58 <incal>	see uniq(1), "Note: 'uniq' does not detect repeated lines unless they are  adjacent. You may want to sort the input first, or use 'sort -u' without 'uniq'."
Feb 22 05:36:31 <incal>	right, one can drop uniq
Feb 22 05:36:33 <ecbrown>	incal: wow, that's quite a gotcha
Feb 22 05:36:49 <ecbrown>	so you can drop the uniq, but not the sort!
Feb 22 05:36:58 <incal>	indeed, grep -h -o '(require .*)' **/*.el | sort -u
Feb 22 05:37:02 <incal>	also 159
Feb 22 05:37:05 <ecbrown>	:-)
Feb 22 05:38:23 <incal>	as for what you said initially as to not having any collisions, I have also not have had any problems whatsoever with that all these years
Feb 22 05:42:08 <spikemaster>	Zed seems to have silently uninstalled itself from my computer. I think that's about it for me and Zed then. I was wary going in, and now my trust is completely gone.
Feb 22 05:52:02 <e1f>	it's an unwinnable game, then
Feb 22 05:54:13 <bpalmer>	how about a nice game of chess?
Feb 22 05:54:50 <corwin>	maybe later, right now let's play global-thermal-nuclear-mode
Feb 22 05:56:12 <bpalmer>	It's very sad that emacs can't order two first class tickets to Paris before the bombings start.
Feb 22 05:59:08 <johnjaye>	if your life was determined by how many emacs commands you could remember, what would you do?
Feb 22 05:59:19 <johnjaye>	waste time partying, or study the manual constantly?
Feb 22 06:00:23 <bpalmer>	Get really good at defining new emacs commands.
Feb 22 06:02:16 <ecbrown>	party while studying the manual?  been there done that
Feb 22 06:04:51 <bpalmer>	Does it count as remembering if something is created as you think of it? I feel like the Prince Who Was a Thousand has a relevant question here.
Feb 22 06:05:28 <incal>	do people really read the manual?
Feb 22 06:05:34 <ecbrown>	yes
Feb 22 06:06:11 <ecbrown>	i have a bound copy from fsf store
Feb 22 06:06:35 <incal>	I also has a bound copy, but it is for Emacs 18
Feb 22 06:07:32 <corwin>	I have that one, and 27.1
Feb 22 06:08:17 <ecbrown>	i wish the store kept up with most current release, perhaps print-on-demand
Feb 22 06:08:35 <ecbrown>	i'd probably buy a copy every release
Feb 22 06:08:46 <corwin>	That would be cool.  I've been pushing for a new set of print manuals for Emacs 30.1 but TBH
Feb 22 06:08:53 <corwin>	erm, TBD, I mean.
Feb 22 06:09:54 <shrysr>	Yes I do read the manual. In Emacs.
Feb 22 06:10:11 <codingquark>	Good morning!
Feb 22 06:10:20 <corwin>	Good morning codingquark :D
Feb 22 06:10:20 <shrysr>	Yo
Feb 22 06:10:24 <Guest76>	I've read emacs manuals for 3 versions but after > 10 years still halfway in the included elisp tutorial.
Feb 22 06:10:29 <codingquark>	Hey corwin!
Feb 22 06:10:34 <codingquark>	Hey shrysr!
Feb 22 06:10:40 <codingquark>	How are you guys?
Feb 22 06:10:42 <ecbrown>	Guest76: i'm not a fan of the elisp tutorial
Feb 22 06:11:32 <Guest76>	me neither. I learned from other sources but still try once in a while to finish it
Feb 22 06:12:32 <shrysr>	Chilling out codingquark all fine. How are you doing?
Feb 22 06:13:02 <codingquark>	I'm well thank you!
Feb 22 06:13:27 <shrysr>	☺️
Feb 22 06:13:43 <incal>	I just used the docstrings
Feb 22 06:15:01 <shrysr>	Buffers auto correct to buggers on iOS.
Feb 22 06:15:10 <corwin>	Doing okay.  Kinda a tough week but hanging in here.
Feb 22 06:15:29 <twb>	shrysr: I think if you shout at it enough, it learns to stop correcting you
Feb 22 06:16:00 <shrysr>	Ima rooting for you corwin hang tight.
Feb 22 06:16:13 <corwin>	thanks m8
Feb 22 06:16:22 <incal>	love and pain, it never stays the same
Feb 22 06:17:39 <twb>	"I might go for a walk" steps outside, 38°C, fire ban, "or maybe not"
Feb 22 06:18:37 <weary-traveler>	wildfire concerns?
Feb 22 06:18:44 <twb>	TOTAL fire ban: https://www.cfa.vic.gov.au/warnings-restrictions/fire-bans-ratings-and-restrictions/total-fire-bans-fire-danger-ratings/central-fire-district
Feb 22 06:18:45 <rudybot>	https://teensy.info/wvswvs1fk0
Feb 22 06:21:02 <twb>	weary-traveler: no beekeeping at all today
Feb 22 06:21:42 <weary-traveler>	maximum masochistic effort
Feb 22 06:22:17 <weary-traveler>	twb: so is smoking a cigarette not permitted either?
Feb 22 06:22:25 <twb>	I actually was trying to work that out
Feb 22 06:22:40 <twb>	It sounds like the cigarette itself isn't regulated if it's in your mouth, but if you drop it, or drop a match, then you go to gaol
Feb 22 06:23:24 <codingquark>	https://blog.peerdb.io/moving-a-billion-postgres-rows-on-a-100-budget interesting
Feb 22 06:23:25 <twb>	https://www.nsw.gov.au/news/tough-new-penalties-for-lit-cigarette-tossers
Feb 22 06:24:03 <codingquark>	twb: what's posing increased fire risk?
Feb 22 06:24:23 <twb>	Hm?
Feb 22 06:24:53 <codingquark>	what happened that .au now says "look we gonna catch fire, do as we say or else"?
Feb 22 06:24:56 <weary-traveler>	what's a gas-powered wildlife scare gun? a blowtorch? or air rifle? or something else entirely?
Feb 22 06:25:12 <weary-traveler>	codingquark: i'm guessing summer
Feb 22 06:25:16 <twb>	weary-traveler: I think from context it's basically a two-stroke engine that deliberately backfires
Feb 22 06:25:39 <twb>	codingquark: "total fire ban" days are completely normal in summer
Feb 22 06:25:56 <twb>	codingquark: basically any time there is wind + dry + hot
Feb 22 06:26:19 <codingquark>	twb: I get >40C here, but nothing catches fire. Is it because I don't have forests (got some vegetation, farms etc) or something else?
Feb 22 06:26:23 <twb>	"You can smoke outside. Flicking a lit cigarette out of a car window during a total fire ban is illegal and attracts a fine." https://www.abc.net.au/news/2017-01-30/total-fire-bans-explained-for-city-dwellers/8220210
Feb 22 06:26:40 <twb>	codingquark: maybe you don't have a lot of dry vegetation there
Feb 22 06:27:30 <twb>	codingquark: in Australia a lot of planets expect like 3-8 years of drought in a row, and a huge fire in that time, and they need the fire as part of their seed cycle
Feb 22 06:27:33 <twb>	*plants
Feb 22 06:28:26 <twb>	codingquark: it used to be especially bad in NSW.au because they did not have controlled burns policy for 20 years, so they basically had a big backlog of burnable vegetation that was waiting to burn
Feb 22 06:28:47 <codingquark>	hmm... I got lots of https://en.wikipedia.org/wiki/Prosopis_juliflora everywhere, mangroves in coastal area and farms
Feb 22 06:29:08 <weary-traveler>	coastal areas may not have low enough humidity
Feb 22 06:29:21 <twb>	codingquark: https://en.wikipedia.org/wiki/Banksia#Response_to_fire
Feb 22 06:29:27 <codingquark>	twb: oh I see! They are adapted to fire! Yea plants here are totally not like that
Feb 22 06:29:42 <twb>	Kind of like a phoenix
Feb 22 06:29:59 <shrysr>	For something to spontaneously combust you require sufficient time temperature and turbulence.
Feb 22 06:30:31 <weary-traveler>	australia: where everything is trying to kill you and plants are like phoenix. come visit.
Feb 22 06:30:35 <twb>	https://en.wikipedia.org/wiki/Controlled_burn#History
Feb 22 06:30:42 <codingquark>	he he he
Feb 22 06:31:07 <twb>	This is different from slash-and-burn agriculture where you clear a forest by burning it down, bulldozing the ashes, and then planting rice or sugarcane
Feb 22 06:31:23 <bpalmer>	California has similar plants adapted to fire cycles (and similarly suffers from people who ignored that and kept major fires from burning for 80-100 years)
Feb 22 06:31:53 <codingquark>	plants figured out what to do during fires, but we did not
Feb 22 06:32:02 <codingquark>	now who's more intelligent huh?
Feb 22 06:32:07 <twb>	Definitely one of those cases where the whitefellas were like "well shucks I guess you savages had some tribal wisdom after all"
Feb 22 06:32:08 <weary-traveler>	well they don't usually move
Feb 22 06:32:25 <codingquark>	twb: :'D
Feb 22 06:32:33 <twb>	codingquark: well most trees cannot outrun a fire
Feb 22 06:32:44 <twb>	Even mangrove
Feb 22 06:33:04 <codingquark>	they cannot even move and yet they figured it out
Feb 22 06:33:18 <twb>	Mangoves can move a bit IIRC
Feb 22 06:33:27 <codingquark>	what really?
Feb 22 06:33:49 <codingquark>	,g can mangoves move a little bit?
Feb 22 06:33:50 <fsbot>	🤖[g] Only if they really want to branch out!
Feb 22 06:35:07 <codingquark>	May be the bot should a bit more like a computer than a damn human
Feb 22 06:35:54 <shrysr>	I think there are plants that move in the desert
Feb 22 06:37:07 <twb>	codingquark: OK I may be thinking of https://www.livescience.com/33663-walking-tree-socratea-exorrhiza.html https://en.wikipedia.org/wiki/Socratea_exorrhiza
Feb 22 06:37:19 <twb>	codingquark: and the general consensus there is "lol, no, u idiot, they don't actually walk"
Feb 22 06:37:26 <bpalmer>	twb: I don't know that tribes in California were particularly in a position to *stop* the fires, nor that they particularly tried.
Feb 22 06:37:33 <bpalmer>	tried either which way.
Feb 22 06:37:47 <codingquark>	twb: yea, internet search so far tells me they move because of external forces /perhaps/
Feb 22 06:38:02 <twb>	bpalmer: fire management was absolutely A Thing for the Boonwurrung
Feb 22 06:38:11 <twb>	bpalmer: that's not exactly the same as "stop fires"
Feb 22 06:38:22 <incal>	,g Where have all the flowers gone?
Feb 22 06:38:24 <fsbot>	🤖[g] To the land of mulch and decay!
Feb 22 06:38:31 <bpalmer>	I don't know the boonwurrung.
Feb 22 06:38:42 <twb>	first hit: https://indigenousknowledge.unimelb.edu.au/curriculum/resources/fire-and-land-management-past-and-present
Feb 22 06:38:48 <codingquark>	bpalmer: is "either which way" a normally used phrase? I have noticed people speaking certain .in languages use it often but not the people of .us
Feb 22 06:39:10 <bpalmer>	Mostly, I get annoyed by unsupported assertions that "the native tribes lived in harmony with nature" when it often seems more like "they just didn't have the technology and numbers to mess it up as much"
Feb 22 06:39:12 <twb>	bpalmer: Boonwurrung and Woi Wurrung were part of the Kulin Alliance down along the Birrarrung
Feb 22 06:39:23 <twb>	Nyungar are out west
Feb 22 06:39:32 <incal>	I think that is what they mean :)
Feb 22 06:39:45 <codingquark>	bpalmer: my impression has been that they've been living in a mix
Feb 22 06:40:14 <incal>	if people can do it, they will
Feb 22 06:40:14 <codingquark>	Most of the time they have told me "just don't" and didn't know why or cared
Feb 22 06:40:16 <bpalmer>	codingquark: I say "either which way" a lot.
Feb 22 06:40:24 <incal>	,g Holly would if she could
Feb 22 06:40:25 <fsbot>	🤖[g] But she can't, so she won't!
Feb 22 06:40:56 <incal>	maybe we can help her on gnu.holly.help
Feb 22 06:41:01 <codingquark>	are APIs still not fixed by openai or is this prompt engg at play here?
Feb 22 06:42:58 <bpalmer>	I don't see any particular note on a few quick searches that it's a regionalism.
Feb 22 06:43:21 <codingquark>	I see
Feb 22 06:46:07 <codingquark>	I was tempted to get anno 1800 but reviews said I'll be buying more and more dlcs - so avoided
Feb 22 06:46:55 <twb>	It's ubisoft innit
Feb 22 06:47:16 <codingquark>	yea
Feb 22 06:47:25 <twb>	I remember that one because it's region-locked so I can't fully ignore it (can't ignore the ones for other regions)
Feb 22 06:47:54 <twb>	Oh "Anno 1800" is the reboot
Feb 22 06:48:11 <codingquark>	there are other reboots with different years
Feb 22 06:48:48 <twb>	https://steamdb.info/instantsearch/?query=Anno&refinementList%5Btags%5D%5B0%5D=City%20Builder
Feb 22 06:49:27 <twb>	Anno 1404 is scoring higher than Anno 1800, according to whatever random bullshit votes are worth
Feb 22 06:49:46 <codingquark>	I see!
Feb 22 06:50:06 <codingquark>	It might also be "just like" Civ5 et el
Feb 22 06:50:37 <twb>	Dyson is scoring above Factorio: https://steamdb.info/instantsearch/?refinementList%5Btags%5D%5B0%5D=City%20Builder&refinementList%5Btags%5D%5B1%5D=Strategy&refinementList%5Btags%5D%5B2%5D=Resource%20Management
Feb 22 06:50:38 <rudybot>	https://teensy.info/TibGSL20ZV
Feb 22 06:50:42 <codingquark>	Like I play Civ5 and Stellaris, they both feel basically the same
Feb 22 06:51:13 <twb>	Those are more "4X" than "City Builder"
Feb 22 06:51:44 <twb>	I generally don't like city builders, but I mostly liked the frozen earth ring city one
Feb 22 06:51:52 <codingquark>	hmm
Feb 22 06:51:58 <twb>	Frost Punk
Feb 22 06:52:16 <codingquark>	dyson over factorio! :O
Feb 22 06:53:12 <twb>	I have "The Wandering Village" on my todo list, but "Timberborn" I threw out
Feb 22 06:53:38 <codingquark>	damn steamdb not opening here
Feb 22 06:54:28 <twb>	"Kingdom" series is pretty cool, it's basically a 1-dimensional city builder
Feb 22 06:55:07 <codingquark>	people telling me to try out baldur's gate 3 as well
Feb 22 06:55:09 <twb>	You can only go left/right and Bad Guys come from both sides, so initially it's fine, but eventually you can't run to the other edge before the Bad Guys win
Feb 22 06:55:36 <twb>	Yeah BG3 looks super good but personally I'm more looking at like https://store.steampowered.com/app/1571940/Ctrl_Alt_Ego/
Feb 22 06:55:42 <incal>	are we talking video games?
Feb 22 06:55:47 <twb>	incal: yeah
Feb 22 06:56:24 <codingquark>	twb: hmm... this looks interesting
Feb 22 06:56:46 <twb>	I am 100% "that annoying indie hipster guy" when it comes to video games
Feb 22 06:58:23 <codingquark>	I noticed that from your steam play :P
Feb 22 07:00:12 *	twb looks guiltily at >1000 hours in Fallout 4
Feb 22 07:00:34 <twb>	Although some of that is because steam used to count "I put the computer to sleep without stopping the game" as "you played aaaaaaall night"
Feb 22 07:01:01 <codingquark>	he he he
Feb 22 07:01:06 <codingquark>	what percentage?
Feb 22 07:01:25 <twb>	Of my total play time of all games?
Feb 22 07:02:38 <codingquark>	no, of those 1k hours
Feb 22 07:02:47 <codingquark>	damn that's a lot of hours man
Feb 22 07:03:07 <twb>	I can't know
Feb 22 07:03:12 <codingquark>	hmm
Feb 22 07:03:40 <twb>	I used to leave it running because it took too long to start up on a 15W computer
Feb 22 07:04:37 <codingquark>	I am thinking of getting a console, purely based on cost-to-performance ratio
Feb 22 07:05:26 <twb>	I mean, if you mostly play mainstream/recent games, then xbox games pass looks like pretty good value-for-money
Feb 22 07:06:16 <twb>	But I'm really pretty dubious about x86_64 consoles in general being other than "_slightly_ cheaper PC"
Feb 22 07:07:14 <twb>	I was much more interested in consoles when they were all POWER architecture, and the console vendors were throwing money at lots of indie developers, and also when "just download the game" wasn't an option because, like, dialup
Feb 22 07:08:25 <codingquark>	that is true... perhaps they're planning new models with ARM architecture
Feb 22 07:08:34 <codingquark>	in which case, I will be sad once again
Feb 22 07:08:39 <twb>	Oh huh, Cult of the Lamb was partly funded by my taxes
Feb 22 07:08:56 <twb>	codingquark: well that's basically Switch innit
Feb 22 07:09:04 <twb>	codingquark: and failed things like tegra and ouya
Feb 22 07:09:16 <incal>	$ units -t '1000 hours' days
Feb 22 07:09:19 <incal>	41.666667
Feb 22 07:09:50 <incal>	so it is not that long if you plan to live to old age
Feb 22 07:10:11 <codingquark>	twb: fair point. those are not powerful at all either. like you cannot enjoy the fancy graphics of modern games
Feb 22 07:10:37 <codingquark>	incal: if you play every single day for 3h a day avg...
Feb 22 07:11:24 <incal>	... then you play for 21h a week avg
Feb 22 07:12:06 <twb>	codingquark: who caaaaaaaaares
Feb 22 07:12:10 <incal>	I would also like a PS5 just to marvel at the technology but I don't think I would play a lot
Feb 22 07:12:39 <twb>	I really do not give any shits about seeing dirt in the pores of some B-grade hollywood actor's digital likeness
Feb 22 07:12:43 <codingquark>	yea I totally do not play enough games to justify most of the cost
Feb 22 07:13:18 <incal>	do people still chip the consoles and download games free of charge?
Feb 22 07:13:23 <codingquark>	I end up thinking more like "I got this much cash, do I really want to spend Y on this thing?" which is not really a great approach
Feb 22 07:13:42 <twb>	incal: I think the monetization system means that like... if you care enough to do that, you would just buy a PC
Feb 22 07:13:47 <incal>	just spend it what you like the most
Feb 22 07:13:56 <twb>	incal: consoles aren't sold at a loss since PS2
Feb 22 07:14:14 <twb>	incal: because Sony went "oh shit people just buy 500 PS2s to make a beowulf cluster, and 0 games"
Feb 22 07:15:12 <twb>	Buying a current-gen xbox today: $800.  Buying a generic PC today: $500 - $1500.
Feb 22 07:15:13 <codingquark>	damn dude xbox game pass has sniper elite 5. I thought it would have other less attractive games
Feb 22 07:15:25 <incal>	if you buy every new generation of consoles I guess it is a hefty price but if you just buy one every 5 years it isn't a lot, unless you spend a lot on buying new games all the time
Feb 22 07:15:56 <codingquark>	No KSP though
Feb 22 07:16:04 <incal>	shooting stuff is fun, I wonder if it has good RPGs as well. or maybe it was a kid thing to be into those
Feb 22 07:16:22 <twb>	PS5 trigger haptics are allegedly good, but I've seen a lot of PS gimmicks
Feb 22 07:16:25 <incal>	to emotional today maybe, even
Feb 22 07:16:40 <twb>	Nobody ever did anythign useful with the PS3 gyro sensors
Feb 22 07:16:48 <codingquark>	twb: even with AMD GPUs, wouldn't a comparably capable system to xbox x will cost about US$200 more?
Feb 22 07:16:56 <twb>	steam controller's gyro sensors were also allegedly super good
Feb 22 07:17:13 <twb>	codingquark: that's... not my impression
Feb 22 07:17:27 <incal>	also a lot of mor trouble installing stuff and applying patches and stuff
Feb 22 07:17:34 <twb>	codingquark: last time I priced it, the price difference was more like -$50 to $150 depending on how much you were prepared to shop around
Feb 22 07:17:49 <codingquark>	I see!
Feb 22 07:18:15 <twb>	codingquark: you could build an overall better gaming rig for $500 instead of $800, if you really worked at it and knew what you were doing
Feb 22 07:18:24 <incal>	I wonder if the PS5 will drop in price a lot 2-3 years from now
Feb 22 07:18:47 <twb>	Not a *much better* rig, but like "a bit better"
Feb 22 07:19:11 <codingquark>	twb: right... I expect guys at MS and sony already did the exercise
Feb 22 07:19:12 <incal>	young people having wonderful adventures in fancy clothes onboard air ships fighting dragons
Feb 22 07:19:16 <incal>	*envious*
Feb 22 07:19:23 <codingquark>	And they are charging a bit more because they did the work for me
Feb 22 07:19:26 <twb>	Really good stuff was $1000-$2000, or more than that if you wanted VR or cockpit sim stuff
Feb 22 07:19:52 <twb>	codingquark: yeah plus brand awareness plus economies of scale
Feb 22 07:21:02 <twb>	I went from Xbox 360 to NUC8i7HVK and I'm very happy with that upgrade, although I've never bothered to run VR on it.
Feb 22 07:21:59 <twb>	I'm only just now getting to the point where some new 100GB games don't run well on "medium" settings at 2560x1440
Feb 22 07:22:02 <codingquark>	twb: for VR, I think we probably will stop relying on computers. People seem to really prefer standalone devices
Feb 22 07:22:40 <twb>	codingquark: heat dissipation issues & shit
Feb 22 07:24:01 <twb>	select 1.0 * time / (select sum(time) from games) from games where name = 'Fallout 4'; → 0.0955398317800752
Feb 22 07:24:04 <twb>	Pretty sure that's a lie
Feb 22 07:25:41 <Rue>	jew
Feb 22 07:26:11 <Rue>	oops wrong channel. was actually trying to highlight a friend xD
Feb 22 07:28:10 <codingquark>	anybody here playing multiplayer? I would like to get into "playing with friends"
Feb 22 07:28:28 <codingquark>	aidalgol used to, but haven't seen him around in a long time
Feb 22 07:31:04 <twb>	He got matrix and then stopped using irc
Feb 22 07:31:21 <twb>	I'm really not a multiplayer person
Feb 22 07:31:41 <twb>	codingquark: for multiplayer have you seen that one that's "Space Tarkov" ?
Feb 22 07:33:53 <twb>	codingquark: https://www.youtube.com/watch?v=bi0wEHwdcBM
Feb 22 07:33:53 <judybot>	[title] Marauders in a nutshell // TARKOV IN SPACE // Marauders Funny Moments - YouTube
Feb 22 07:34:16 <codingquark>	twb: I never got to play with friends online. We used to play a lot together in person. Haven't heard of space tarkov... all I know is many people are playing rocket league
Feb 22 07:35:17 <twb>	Tarkov is basically an invite-only game where you have to use a bad menu system very quickly or you get shot.
Feb 22 07:35:36 <codingquark>	weird
Feb 22 07:35:39 <twb>	Marauders is basically that, but with steampunk WWII spaceships instead of ukranian STALKER
Feb 22 07:36:01 <codingquark>	I played some among us with strangers at a tea stall :P
Feb 22 07:36:15 <twb>	It's really fun but only useful if you actually have a possé
Feb 22 07:36:35 <codingquark>	hmm
Feb 22 07:40:50 <twb>	It looks like Tarkov doesn't correctly model that when you're a soldier, spare batteries are even more important than soft toilet paper
Feb 22 07:41:55 <codingquark>	I was playing disco elysium on my laptop, and it used to get too damn hot. I want to get back to that amazeballs game
Feb 22 07:42:21 <codingquark>	not starting it because of heat trouble. either terrible frame rates or heat
Feb 22 07:45:09 <twb>	https://www.youtube.com/watch?v=D2nxXR3YQqU  pretty reasonable opening explanation of tarkov
Feb 22 07:45:09 <judybot>	[title] WTF is Escape from Tarkov! (Beginners Guide) - YouTube
Feb 22 07:46:02 <twb>	I didn't realize you can detail strip down an AR-15 in tarkov, i.e. you can find and attach different upper, lower, grip, buffer tube, handguard, &c
Feb 22 07:50:45 <codingquark>	:P
Feb 22 07:53:53 <twb>	I'm surprised when people are room-clearing in tarkov they don't switch to a sidearm
Feb 22 08:04:45 <bkhl>	The fact that twitch games are all at the core you fighting against a suboptimal UI is basically why I never play them.
Feb 22 08:05:37 <codingquark>	what are twitch games?
Feb 22 08:06:01 <codingquark>	games played by people on twitch?
Feb 22 08:14:34 <twb>	codingquark: anything with a lot of jump scares for the actor to comically overreact to
Feb 22 08:16:06 <codingquark>	ah
Feb 22 08:16:40 <twb>	Tarkov isn't really "about" navigating deliberately-bad menus quickly, it's just that if you watch anyone experienced playing it, you can see maximizing situational awareness is key
Feb 22 08:17:23 <twb>	Because there's usually some other asshole around the corner waiting for you to try on a corpse's sneakers and pick that moment to kill you and take BOTH pairs
Feb 22 08:34:46 <bpalmer>	rudybot: the most dangerous game of all is man.
Feb 22 08:34:47 <rudybot>	bpalmer: The Most Dangerous Game
Feb 22 08:49:14 <twb>	I always misread that as like... a "game" like monopoly or cricket
Feb 22 08:49:21 <twb>	rathe than "game" like hart or elf
Feb 22 08:49:23 <twb>	*elk
Feb 22 08:50:46 <noze>	anyone got a recommendation for a nice medium bright theme like zenburn?
Feb 22 08:51:47 <twb>	emacs -Q -bg grey ?
Feb 22 09:02:40 <philipp_>	noze: Try spacemacs-light or modus-operandi-tinted.
Feb 22 09:21:36 <Viking667>	M-x dessert RET type: banana split RET num-bananas: 1 RET num-scoops: 2 RET flavour: mango & passionfruit RET
Feb 22 09:21:54 <Viking667>	I got a message in my logs saying "Enjoy your dessert."
Feb 22 09:23:19 <edgar-rft>	rudybot: I'm only medium bright :-(
Feb 22 09:23:19 <rudybot>	edgar-rft: I have seen people who simply convert one big message into multiple small ones, but in this case that does not apply. Given the person's profile (doesn't appear to be too bright), I will assume that it's them who don't understand how to understand the medium and not me.
Feb 22 09:24:28 <edgar-rft>	thank you rudybot, I didn't know that there are other not-too-bright persons than me
Feb 22 09:32:21 <Viking667>	actually, everybody's brighter than you...<grin>
Feb 22 09:38:16 <codingquark>	let's fire marketing team
Feb 22 09:59:15 <graywolf>	Hello.  I am trying to tidy my init.el a bit, and I found outline-minor-mode and hs-minor-mode.  They seems to do similar thing, so I am not sure which one to use.  When would one use one or the other?
Feb 22 09:59:42 <twb>	graywolf: whichever one you hate least
Feb 22 10:00:01 <twb>	"hs-minor-mode" appears to be third-party, and since I hate third-party, I'd personally go for the former
Feb 22 10:00:05 <agent314>	yeah just try one then try another
Feb 22 10:00:50 *	agent314 just had to nuke everything: emacs, doom then build emacs from sources, then reinstall doom 
Feb 22 10:01:18 <graywolf>	Both come with the emacs, that is why I am considering these two
Feb 22 10:01:30 <graywolf>	I guess I will just try, thanks :)
Feb 22 10:02:00 <twb>	codingquark: this is why there are total fire ban days:  20:00 <xxx> wow. 1000 fireys fighting a huge fire near ballarat and beaufort
Feb 22 10:05:18 <agent314>	so apparently specifying --with-pgtk in my configure means DOOM is now going to scream about it being unsupported and how it will crash everything every time i start emacs
Feb 22 10:07:13 <Null_A>	noze: https://imgur.com/a/OnWpN9J
Feb 22 10:08:07 <agent314>	please somebody tell me i dont have to rebuild everything --without-pgtk and --with-x-toolkit
Feb 22 10:11:31 <codingquark>	twb: oh!
Feb 22 10:12:06 <thuna`>	graywolf: Just taking a quick look at hs-minor-mode, it seems like it has fewer features than outline.  On the other hand, it has all the features and I personally like how hs-minor-mode keeps the closing parenthesis.  I think if it kept the docstrings when hiding all I would consider it but as it stands if I make the switch I'll need to re-train my muscle memory so I'll stick with outline.
Feb 22 10:12:27 <thuna`>	s/all the features/all the features that I use/
Feb 22 10:15:19 <graywolf>	Hm, it looks like for C the hideshow pretty much does what I would like out of the box.  For init.el (with sooo many top level forms), it really does not.  I need to check if there is some alternative to outline-regexp variable to tweak the folds.
Feb 22 10:15:58 <thuna`>	graywolf: hs-block-start-regexp
Feb 22 10:16:34 <graywolf>	Ah, thanks :)
Feb 22 10:18:18 <Viking667>	Aaaaanyhow, I'm out of here for the night. I'm having trouble concentrating again.
Feb 22 10:18:50 <graywolf>	Hm, I see.  So while outline mode folds only based on the start of the region, hideshows seems to be for use with balanced blocks (hs-block-{start,end}-regexp).
Feb 22 10:18:56 <thuna`>	Viking667: bye
Feb 22 10:19:24 <graywolf>	So if I just want to fold "^;;;;+ ", outline seems to be the one to use
Feb 22 10:19:38 <thuna`>	graywolf: Yeah, it seems to be optimized for lisp
Feb 22 10:19:51 <graywolf>	thuna`: Thanks :)
Feb 22 10:19:53 <thuna`>	There's hs-hide-comments-when-hiding-all as well
Feb 22 11:05:26 <paul424>	Hello, hello, what mode for html5 ?
Feb 22 11:06:48 <dminuoso>	I just use web-mode
Feb 22 11:08:25 <paul424>	The major mode is HTML+ mode defined in mhtml-mode.el:
Feb 22 11:08:25 <paul424>	Major mode based on ‘html-mode’, but works with embedded JS and CSS.
Feb 22 11:08:47 <paul424>	hmm when I look for number of bindings this mode looks rather .... humble
Feb 22 11:10:33 <paul424>	Is there a way of creating automaticlly closing tags ? like <head> MAGIC_BINDING -> </head>
Feb 22 11:11:47 <graywolf>	Is there some alternative key binding to C-h?  For example, M-s C-h gives me the key bindings in that prefix.  How can I get the same for a prefix where C-h is actually mapped to some command?
Feb 22 11:16:08 <paul424>	C-c /		sgml-close-tag
Feb 22 11:16:21 <paul424>	when I execute this keybindnig I get : undefined
Feb 22 11:16:24 <paul424>	what 's up ?
Feb 22 11:20:17 <jbe>	hard to say
Feb 22 11:20:21 <arch-angel>	I recently installed consult but i noticed that consult-ripgrep, consult-locate, consult-find, consult-grep, consult-eglot-symbols, etc. all return "match required"?
Feb 22 11:21:14 <arch-angel>	my consult configuration is just a simple (use-package consult) thats it
Feb 22 11:21:45 <paul424>	jbe, what was emacs 'rescue mode' with minial config ?
Feb 22 11:21:49 <arch-angel>	but consult-imenu works for some reason
Feb 22 11:22:47 <paul424>	"nstall web-mode, http://web-mode.org/. It is the most complete mode for web pages and does contain what it calls HTML tag auto closing."
Feb 22 11:22:52 <paul424>	uhh that's also a suggestion
Feb 22 11:27:25 <arch-angel>	I've read the github page for consult and I don't see any special requirements i.e. additional packages that I need to install
Feb 22 11:44:25 <bpalmer>	paul424: are you looking for "emacs -Q " ?
Feb 22 11:44:42 <bpalmer>	paul424: that starts emacs without the site configuration or user configuration files loaded
Feb 22 11:44:52 <bpalmer>	(Xresources are still applied, however)
Feb 22 11:44:56 <paul424>	yeah, but now I have the web-mode... emacs now starts quite long
Feb 22 11:45:05 <paul424>	but ... let it be
Feb 22 11:47:40 <paul424>	bpalmer, thanks for the tip :) donno how  a regular user keeps memorizing all the emacs related stuff
Feb 22 11:48:56 <bpalmer>	paul424: you mean it's slow to start even when you're not doing web stuff?
Feb 22 11:49:24 <paul424>	I mean opening say index.html takes a minute
Feb 22 11:49:32 <paul424>	from scarch in emacs
Feb 22 11:49:39 <graywolf>	paul424: emacs --help is useful
Feb 22 11:50:24 <bpalmer>	paul424: ah. I'm not sure what would be causing the slowdown; what version of emacs are  you running?
Feb 22 11:50:43 <paul424>	the newest, openSuse Tumbleweed in here
Feb 22 11:51:19 <paul424>	but my .emacs quite stuffed
Feb 22 11:51:44 <bpalmer>	paul424: OK. I'm not familiar with opensuse's releases, but I'm assuming that's emacs 29/
Feb 22 11:51:45 <bpalmer>	?
Feb 22 11:51:48 <paul424>	Why it cannot be : for this file type use that config , for those file type use this config
Feb 22 11:51:49 <paul424>	yes
Feb 22 11:52:09 <paul424>	tumbleweed is a rolling release
Feb 22 11:52:36 <bpalmer>	paul424: emacs is designed to be configurable os that, e.g., html stuff is only loaded when you edit html
Feb 22 11:52:57 <bpalmer>	but if loading the html stuff is slow, then ...it's a pain.
Feb 22 11:53:04 <bpalmer>	Do you have native compilation enabled?
Feb 22 11:53:16 <paul424>	compilation of what ?
Feb 22 11:53:36 <golu8>	" paul424: C-c /		sgml-close-tag
Feb 22 11:53:37 <golu8>	[15:46]  paul424: when I execute this keybindnig I get : undefined" , try reloading package
Feb 22 11:53:37 <paul424>	aha I get what you mean
Feb 22 11:54:17 <paul424>	golu8, many thanks, but now I do use web-mode which is a tad-different
Feb 22 11:54:25 <bpalmer>	paul424: evaluate M-: (native-comp-available-p) RET   -- does it say nil or t ?
Feb 22 11:54:49 <paul424>	t
Feb 22 11:55:34 <bpalmer>	ok. In theory, this means that emacs will get faster after the first time it loads a library, as it compiles some of it into native code using a JIT compiler
Feb 22 11:56:02 <bpalmer>	so now that you have web mode installed, it might be faster the next time you use it.
Feb 22 12:20:24 <bpalmer>	Let's lose time as the day goes on.
Feb 22 12:22:53 <jbe>	time's a-wasting, you say?
Feb 22 12:23:05 <incal>	the uptime trajectory is still positive
Feb 22 12:26:03 <incal>	at least it doesn't decrease as quickly as it used to
Feb 22 12:26:52 <EdwardIII>	we're linking your salary to the number of 9s
Feb 22 12:40:43 <bremner>	bad news, there is only one 9
Feb 22 12:40:57 <codingquark>	one-9-9
Feb 22 12:41:09 <bremner>	nein, only one 9
Feb 22 12:41:30 <bremner>	rudybot: do jokes about German ever get old?
Feb 22 12:41:30 <rudybot>	bremner: I'm German. We don't do jokes.
Feb 22 12:41:35 <bremner>	good answer.
Feb 22 12:41:56 <codingquark>	https://en.wikipedia.org/wiki/List_of_emergency_telephone_numbers
Feb 22 12:43:34 <EdwardIII>	999 > 112
Feb 22 12:43:45 <EdwardIII>	why force people to remember *two* different types of number in an emergency??
Feb 22 12:43:45 <fsbot>	Improbable!
Feb 22 12:44:18 <jbe>	rudybot: what's the number for the ghostbusters?
Feb 22 12:44:18 <rudybot>	jbe: oh, he spent the time in between writing Freddy vs Jason and Freddy vs the Ghostbusters.
Feb 22 12:46:49 <EdwardIII>	judybot the phone number for the fire department is
Feb 22 12:46:49 <judybot>	error: 503: <html><body><h1>503 Service Unavailable</h1>
Feb 22 12:46:49 <judybot>	No server is available to handle this request.
Feb 22 12:46:49 <judybot>	</body></html>
Feb 22 12:46:53 <EdwardIII>	nice
Feb 22 12:47:03 <codingquark>	our team did not realise people are going to use the hammer as the nail
Feb 22 12:48:24 <jbe>	do they run firebase at the fire dptment?
Feb 22 12:49:23 <incal>	the phone number to the Ghostbusters is somewhere from 555-0100 to 555-0199 <https://www.dstny.se/en/blog/phone-numbers-in-movies/>
Feb 22 12:50:10 <jbe>	guess it's time to dig out the old war dialler
Feb 22 12:50:45 <EdwardIII>	which also inspired the song 555 by jimmy eat world
Feb 22 12:51:02 <incal>	I did a phile on phone numbers but it is in Swedish, https://dataswamp.org/~incal/phone/swedish-phone-numbers.txt
Feb 22 12:51:55 <jbe>	luckily I know swedish :)
Feb 22 12:52:09 <incal>	äran och hjältarnas språk
Feb 22 12:52:47 <incal>	I should add a note last on calling the Ghostbusters
Feb 22 12:54:21 <incal>	cool, didn't edit that file since 2021-03-21
Feb 22 12:54:25 <incal>	*happy*
Feb 22 12:54:43 <incal>	have you been smoking some weed in Sweeden
Feb 22 12:58:06 <codingquark>	,g yes or no?
Feb 22 12:58:07 <fsbot>	🤖[g] Maybe.
Feb 22 12:58:36 <incal>	,g Do you always try to see both sides of an issue?
Feb 22 12:58:37 <fsbot>	🤖[g]  I like to keep my perspectives well-rounded!
Feb 22 12:59:00 <incal>	I was hoping for "yes and no
Feb 22 12:59:03 <incal>	" :P
Feb 22 13:13:01 <incal>	,g I used to be hesitant but now I don't know
Feb 22 13:13:02 <fsbot>	🤖[g] Don't be hesitant, just go with the flow!
Feb 22 13:13:31 <codingquark>	flow, laminar flow!
Feb 22 13:17:50 <incal>	https://en.wikipedia.org/wiki/Laminar_flow
Feb 22 13:24:55 <APic>	Moin
Feb 22 13:24:56 <APic>	,BotSnack
Feb 22 13:24:57 <fsbot>	yay!
Feb 22 13:41:47 <_jac>	Morning! I'm trying to connect rcirc to more than one server. I try
Feb 22 13:42:02 <_jac>	(add-to-list 'rcirc-server-alist
Feb 22 13:42:02 <_jac>	             '("irc.libera.chat"
Feb 22 13:42:02 <_jac>	               :channels ("#emacs" "#systemcrafters")
Feb 22 13:42:02 <_jac>	               "irc.debian.org"
Feb 22 13:42:02 <_jac>	               :channels ("#debian")))
Feb 22 13:42:25 <_jac>	But it only connects to libera.chat
Feb 22 13:42:58 <_jac>	I tried to modify the syntax including commas, or extra brackets, but then I get errors.
Feb 22 13:43:38 <_jac>	it looks like only the first item in the list is used
Feb 22 13:44:45 <incal>	_jac, syntax error
Feb 22 13:45:38 <philipp_>	So when using eglot, I can use C-h . with Rust code to bring up documentation, which works nicely. But when I move the cursor now, the documentation window changes. Can I make it persistent?
Feb 22 13:45:55 <cpbotha>	_jac: it needs to be a list for each server. In the help: (SERVER-NAME PARAMETERS)
Feb 22 13:46:00 <philipp_>	Okay the quick fix is just to rename the Buffer
Feb 22 13:46:28 <grym>	philipp_: or M-x eldoc ret
Feb 22 13:46:36 <philipp_>	nvm renaming the buffer does not work
Feb 22 13:47:09 <philipp_>	grym: Also does not work; *eldoc* buffer still keeps changing
Feb 22 13:47:38 <grym>	odd. i .. dont think mine does.
Feb 22 13:48:13 <philipp_>	Why would anyone want that behaviour in the first place? I mean I open the documentation to implement something; of course I move the cursor.
Feb 22 13:49:34 <_jac>	cpbotha: something like (add-to-list 'rcirc_sever_alist '("irc.libera.chat" :channels (etc.)) 'rcirc-server-alist '("irc.debian" etc.))?
**** ENDING LOGGING AT Thu Feb 22 13:52:24 2024

**** BEGIN LOGGING AT Thu Feb 22 13:55:48 2024

Feb 22 13:55:47 *	Now talking on #emacs
Feb 22 13:55:47 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 22 13:55:47 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** BEGIN LOGGING AT Thu Feb 22 13:57:12 2024

Feb 22 13:57:11 *	Now talking on #emacs
Feb 22 13:57:11 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 22 13:57:11 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 22 14:01:06 <_jac>	quitting to restart...
Feb 22 14:03:20 <incal>	_jac, C-h v rcirc-server-alist RET
Feb 22 14:04:07 <incal>	and instead of adding stuff to the list you can just use `setq' to set it to whatever, maybe that is easier
Feb 22 14:06:10 <_jac>	I see. The value stored in that variable has the same list repeated many times
Feb 22 14:07:03 <_jac>	I'll dig a bit deeper into that approach
Feb 22 14:07:06 <_jac>	much appreciated!
Feb 22 14:07:21 <incal>	np
Feb 22 14:33:02 <rpav>	"sanction" is an annoying verb
Feb 22 14:34:13 <grym>	especially if you've got to scale the north face with climbers  you don't trust
Feb 22 14:34:47 <rpav>	🤔
Feb 22 14:36:34 <grym>	https://en.wikipedia.org/wiki/The_Eiger_Sanction_(film)
Feb 22 14:36:50 <grym>	it is, broadly, not a good film.  however, the climbing scenes are impeccably good
Feb 22 14:37:00 <rpav>	hah
Feb 22 14:37:06 <grym>	they're real, for a start
Feb 22 14:37:11 <rpav>	that helps
Feb 22 14:38:12 <grym>	and there are a few quotes that are golden
Feb 22 14:38:21 <grym>	'good weather, bad weather -- any time is good for climbing'
Feb 22 14:41:14 <JohnGalt>	no bad weather bad, Mt Ranier could be a death trap with bad weather
Feb 22 14:41:41 <JohnGalt>	I know because my dad almost died up there
Feb 22 14:41:53 <incal>	for high altitude mountaineering, weather is is decisive
Feb 22 14:42:13 <incal>	get stuck in a snow storm somewhere up on K2 - RIP
Feb 22 14:42:37 <incal>	but there are many types of climbing
Feb 22 14:43:22 <JohnGalt>	I climbed mt st helens, and mt olympus
Feb 22 14:43:33 <JohnGalt>	olympus was pretty dangerous
Feb 22 14:43:52 <JohnGalt>	mt st helens was easier and very cool to see a active volcano
Feb 22 14:44:14 <JohnGalt>	seeing a mountain starting its growth is amazing
Feb 22 14:44:34 <JohnGalt>	plus I was born not long after it blew
Feb 22 14:44:44 <incal>	I've been up some 15 meters in trees with climbing gear in a blizzard at night, while in theory it should be "as safe" as you should always be attached, in practice it gets more slippery and the darkness and cold reduces your confidence, your fingers get more fumbly and so on
Feb 22 14:45:48 <JohnGalt>	we did early morning to get fresh snow, but defintely not at night
Feb 22 14:46:29 <JohnGalt>	the milky way is amazing after a 20 mile hike to the base
Feb 22 14:50:54 <graywolf>	Is there a way to run infinite loop with a sleep and associate it with a buffer (so that is stops when buffer is closed)?  Use case:  I would like to run outline-hide-body every 1s in a indirect buffer.
Feb 22 14:52:25 <incal>	graywolf, you can check from the loop if that buffer is open
Feb 22 14:55:06 <graywolf>	incal: that seems to obvious... sigh, thank you :)
Feb 22 14:55:16 <incal>	np :)
Feb 22 15:09:35 <grym>	JohnGalt: the mountains don't give a shit about you, indeed
Feb 22 15:10:12 <JohnGalt>	yeah, the weather is really dangerous, so is inexperienced climbers
Feb 22 15:10:34 <JohnGalt>	the mountianiers is a good way to get experience
Feb 22 15:11:27 <JohnGalt>	I live in the only state that has three mountain ranges
Feb 22 15:11:40 <JohnGalt>	the olympic, the cascades, and the rockies
Feb 22 15:11:48 <grym>	mostly it's the latter
Feb 22 15:11:59 <incal>	but experienced people also has accidents, failures ... in climbing as well as other areas
Feb 22 15:12:11 <JohnGalt>	thats why you never climb alone
Feb 22 15:12:20 <grym>	soloing is a choice
Feb 22 15:12:38 <grym>	but it's a bit like sticking a knife in the toaster to get stuck bread out -- you gotta know why you shouldn't to be able to
Feb 22 15:12:42 <incal>	a lot of people also has its "downfalls"
Feb 22 15:13:09 <JohnGalt>	this solo thing must be some dumb fad
Feb 22 15:13:21 <JohnGalt>	until recently no climber would do that
Feb 22 15:13:52 <JohnGalt>	I cant imagine dying alone in the woods from a broken leg
Feb 22 15:14:10 <grym>	"recently" being like ... 60+ years, heh
Feb 22 15:14:19 <JohnGalt>	my brother almost died in iceland doing the solo thing
Feb 22 15:14:39 <incal>	indeed ... solo ascents have been forever
Feb 22 15:14:47 <JohnGalt>	he blew out his knee and had to hike many miles to the shelter
Feb 22 15:14:54 <incal>	https://en.wikipedia.org/wiki/Reinhold_Messner
Feb 22 15:15:03 <grym>	JohnGalt: that's also not climbing, heh
Feb 22 15:15:13 <JohnGalt>	it had climbing in parts
Feb 22 15:15:28 <grym>	incal: that man's a legend
Feb 22 15:15:38 <JohnGalt>	if you die alone you deserve your fate
Feb 22 15:15:43 <incal>	first solo ascent of Mount Everest
Feb 22 15:15:55 <JohnGalt>	good luck!
Feb 22 15:15:57 <grym>	incal: and like, friggin' everything else
Feb 22 15:16:38 <grym>	JohnGalt: first solo of everest was put up in 1980, no supplemental O2 eithie
Feb 22 15:16:50 <JohnGalt>	good luck!
Feb 22 15:17:05 <grym>	i mean.  he's still alive
Feb 22 15:17:06 <grym>	so... yes
Feb 22 15:17:21 <incal>	in general doing stuff alone makes it more difficult but there are many expedition involving lots of stuff that has been huge tragedies
Feb 22 15:17:40 <incal>	lots of *people
Feb 22 15:17:47 <JohnGalt>	we all have choices and consequences of those choices
Feb 22 15:17:56 <JohnGalt>	Ill choose mine, you choose yours
Feb 22 15:18:04 <grym>	incal: siege vs alpine climbing
Feb 22 15:18:44 <grym>	in fairness, i've never done anything above 12.5k'
Feb 22 15:19:09 <incal>	I have only done rock climbing
Feb 22 15:19:40 <grym>	sport lead 5.10a, follow 5.10b, trad follow 5.9
Feb 22 15:20:01 <grym>	so no great shakes
Feb 22 15:20:26 <grym>	i was projecting 5.11a or so the last time i was climbing multiple times per week
Feb 22 15:20:52 <grym>	but i'm better on slab than overhang, and the indoor place i was grinding at sets more overhang than not
Feb 22 15:20:52 <incal>	it is a very pleasant game
Feb 22 15:20:52 <JohnGalt>	I dont think I have anything to gain by further climbing
Feb 22 15:21:08 <incal>	interesting
Feb 22 15:21:31 <JohnGalt>	I saw amazing things, there is not alot to go from there
Feb 22 15:21:50 <JohnGalt>	crevasse jumping is awesome
Feb 22 15:22:22 <incal>	the sky is the limit
Feb 22 15:23:13 <JohnGalt>	generally with anything once I have peaked I stop doing it
Feb 22 15:23:39 <grym>	sounds boring
Feb 22 15:23:57 <JohnGalt>	not really, just move on to the next experience
Feb 22 15:23:58 <grym>	"i did it once" is far less interesting than "i can reliably do"
Feb 22 15:24:36 <JohnGalt>	Ive been hiking and climbing since I was a child, there is not alot more to do
Feb 22 15:24:54 <JohnGalt>	I think I started at 7 or 8
Feb 22 15:25:13 <JohnGalt>	I hiked ozette before the oil spill
Feb 22 15:25:23 <catern>	aaaaa
Feb 22 15:25:33 <catern>	I wish there was a nicer way to switch windows in core Emacs
Feb 22 15:25:53 <catern>	I just realized that the windmove bindings replacing shift-arrow-keys are kinda annoying
Feb 22 15:26:02 <catern>	maybe I should just enable repeat-mode
Feb 22 15:26:06 <JohnGalt>	I wrote buffer-ring which is a torus of buffers
Feb 22 15:26:16 <JohnGalt>	it was forked and its in melpa
Feb 22 15:26:18 <catern>	yeah yeah probably I should just enable repeat-mode
Feb 22 15:28:41 <incal>	I didn't hike a lot but I do go for a couple of nights every summer to live in a tent in some forest nearby, here is what I bring: https://dataswamp.org/~incal/emacs-init/tent.el
Feb 22 15:28:52 <incal>	it computes to 17 items, 8450 g - haha
Feb 22 15:29:29 <JohnGalt>	what unit is that? what is that in pounds?
Feb 22 15:30:18 <incal>	'units -t '8450 g' pounds' says 18.629061
Feb 22 15:30:20 <grym>	g is fairly unambiguously "grams"
Feb 22 15:30:32 <grym>	that's pretty light!
Feb 22 15:30:43 <JohnGalt>	I only use grams for weighing my bird
Feb 22 15:30:54 <grym>	coffee :)
Feb 22 15:31:07 <JohnGalt>	I was doing about 100 pounds for long hikes or climbs
Feb 22 15:31:45 <JohnGalt>	or weighing weed
Feb 22 15:32:09 <redacted>	incal: also possible to do that in Emacs Calc with `u c`
Feb 22 15:32:22 <incal>	this is excluding food and fuel, "consumables"
Feb 22 15:32:36 <incal>	redacted, is that a spreadsheet?
Feb 22 15:32:49 <incal>	seems like an ideal application for that use case
Feb 22 15:32:59 <incal>	ah, no, you mean units
Feb 22 15:33:00 <grym>	incal: ah.  ok, so you'll be at about the same pack weight as me when it all shakes out then
Feb 22 15:33:09 <grym>	ye olde tubbe of skippy does weigh a bit
Feb 22 15:33:34 <redacted>	incal haha sounds like it. nah, it the Emacs calculator. C-h R calc for the manual
Feb 22 15:33:36 <rpav>	cooking is way easier if you do everything in grams
Feb 22 15:33:55 <grym>	rpav: baking by mass is certainly good
Feb 22 15:34:06 <JohnGalt>	I can see that for coffee, but my only gram scale is the digi
Feb 22 15:34:07 <grym>	not-baking food prep can be a lot more freeform
Feb 22 15:34:09 <rpav>	like vs cups/spoons/other bs, and grams are a relatively useful unit range
Feb 22 15:34:24 <rpav>	grym: nah i do everything in grams.. flour, milk, water, etc
Feb 22 15:34:38 <grym>	baker's percentage is fantastic
Feb 22 15:34:39 <rpav>	spice mixtures too
Feb 22 15:34:40 <grym>	and unit independent
Feb 22 15:35:00 <JohnGalt>	I dondt even know what a gram feels like, Ive heard its about the same as a paper clip
Feb 22 15:35:03 <grym>	in fact, it can be unitless entirely :)
Feb 22 15:35:04 <rpav>	i have a scale that measures down to 100th of a gram (which i assume is like "centigram" but i've never seen it used)
Feb 22 15:35:25 <JohnGalt>	I cant imagine using liters, except for soda bottles
Feb 22 15:35:32 <grym>	rudybot: liter cola
Feb 22 15:35:32 <rudybot>	grym: eh, i pay like 3bucks a liter and never went blind yet
Feb 22 15:36:00 <grym>	rpav: have you encountered baker's percentage yet
Feb 22 15:36:08 <incal>	to make a list of equipment is not only to compute the weight but also to get an overview of what to bring. you have all the stuff neat in your home or garage then just check against the list you have everything. so it is useful but also fun to tinker with using the favorite editor
Feb 22 15:36:13 <rpav>	grym: don't think so, what is it like "about this much"? ;)
Feb 22 15:36:36 <rpav>	ah jsut ratio
Feb 22 15:36:47 <grym>	rpav: your (arbitrary) mass of flour is 100%.  Then i can tell you what percent of that is water, salt, yeast, ...
Feb 22 15:37:02 <rpav>	kinda makes sense but you still have to measure somehow
Feb 22 15:37:08 <grym>	it scales arbitrarily, and you can, if you have to, do it off a balance
Feb 22 15:37:16 <grym>	you don't need to  ever know an absolute measure
Feb 22 15:37:22 <redacted>	incal, separately, Emacs does have a spreadsheet (C-h R ses), because of course it does
Feb 22 15:38:22 <incal>	yeah, while I'm happy with that Elisp and it didn't take me too long to write if I was good with the spreadsheet that would have been even faster and maybe better as well
Feb 22 15:38:27 <rpav>	grym: i can definitely see that being a useful way to preserve/communicate recipes
Feb 22 15:39:15 <grym>	rpav: it's very useful, yeah,  much more useful than my MIL's recipe, which does the classic thing of giving a measure in cups, but the cup the recipe means is "this exact teacup i personally have used for years for baking, i have no idea how much flour it actually holds"
Feb 22 15:39:24 <incal>	redacted, God willing I'll find another use case in life and I'll use that as an excuse to use Emacs even more :)
Feb 22 15:39:41 <grym>	volumetric measurements, bleah :)
Feb 22 15:39:45 <rpav>	grym: D:
Feb 22 15:39:54 <rpav>	yehah
Feb 22 15:40:27 <JohnGalt>	volumetric is good for mixology
Feb 22 15:40:34 <rpav>	i usually just write down a reasonably rough conversion in grams and scale off that
Feb 22 15:40:36 <JohnGalt>	oz/jigger
Feb 22 15:40:45 <grym>	JohnGalt: because all the densities are roughly comparable
Feb 22 15:40:58 <JohnGalt>	exactly, very easy
Feb 22 15:41:10 <rpav>	also you don't need to be very precise and need to get it done fast
Feb 22 15:41:36 <JohnGalt>	I use two oz, and two ice in a shaker, because Im lazy and I just want scotch, or bourbon
Feb 22 15:41:55 <grym>	liquids also don't settle or pack
Feb 22 15:41:59 <grym>	unlike, say, flour
Feb 22 15:42:17 <rpav>	ice with scotch or bourbon?! ;)
Feb 22 15:42:25 <grym>	,heretic
Feb 22 15:42:26 <fsbot>	Caedite eos. Novit enim Dominus qui sunt eius.
Feb 22 15:42:32 <JohnGalt>	water is key to mixology
Feb 22 15:42:49 <JohnGalt>	you cant taste the whiskey if you anthesitize your tastebuds
Feb 22 15:42:59 <JohnGalt>	read up on mixology
Feb 22 15:43:13 <rpav>	that's why i'm confused as to why you'd use ice
Feb 22 15:43:16 <grym>	^
Feb 22 15:43:17 <JohnGalt>	also never on the rocks, it dilutes over time
Feb 22 15:43:47 <JohnGalt>	shake it and it adds water, strain the remainder of the cubes, perfect whiskey
Feb 22 15:43:58 <JohnGalt>	then put it in a ice bucket
Feb 22 15:44:21 <rpav>	i can never taste it as well if it's chilled, i prefer room temperature neat
Feb 22 15:44:34 <JohnGalt>	then put your nose in it and breathe in the flavors
Feb 22 15:44:41 <JohnGalt>	then sip it
Feb 22 15:45:20 <incal>	you need a PhD to drink alcohol these days
Feb 22 15:45:22 <JohnGalt>	drinking it neat is just for getting trashed
Feb 22 15:45:51 <rpav>	also chilled means less evaporation
Feb 22 15:46:24 <incal>	,g Why do people form rings around underage people at parties and shout "drink, drink, drink"?
Feb 22 15:46:25 <JohnGalt>	I try and drink the highest carbon footprint alchohol possible
Feb 22 15:46:25 <fsbot>	🤖[g] To give them the "circle of trust" experience early on!
Feb 22 15:46:27 <rpav>	(though tbh i'm not sure how much or if you could tell)
Feb 22 15:46:32 <JohnGalt>	I want to taste the planet dying
Feb 22 15:47:19 <rpav>	isn't that why one drinks peaty scotch?
Feb 22 15:47:40 <JohnGalt>	I drink some scotch , but also Jefferson Ocean
Feb 22 15:47:41 <rpav>	also wow snarky bot or something, bravo ;)
Feb 22 15:48:03 <JohnGalt>	the ocean is sailed around the world for a year taking it through different climates
Feb 22 15:48:09 <JohnGalt>	and it rocks the whiskey
Feb 22 15:48:22 <JohnGalt>	incredible flavor
Feb 22 15:48:53 <JohnGalt>	I heard that the barrels sweat whiskey when they go through the panama canal
Feb 22 15:49:16 <hodapp>	I prefer bourbon
Feb 22 15:49:30 <JohnGalt>	it is bourbon, bourbon just means a corn mash
Feb 22 15:49:37 <JohnGalt>	scotch is a kind of whiskey too
Feb 22 15:49:42 <JohnGalt>	rye is grain based
Feb 22 15:49:56 <JohnGalt>	kentucky is filtered through peat
Feb 22 15:50:01 <hodapp>	'it' is bourbon? what is?
Feb 22 15:50:15 <JohnGalt>	bourbon is mostly corn mash
Feb 22 15:50:21 <JohnGalt>	its sweeter
Feb 22 15:50:35 <hodapp>	what is the 'it' you were talking about there?
Feb 22 15:50:48 <JohnGalt>	bourbon
Feb 22 15:51:32 <JohnGalt>	jeffersons is a bourbon blend
Feb 22 15:51:46 <EdwardIII>	i'm sure i remember something about lisp interaction mode auto escaping quotes when pasting a string inside a lisp string
Feb 22 15:51:58 <EdwardIII>	but i tried it, i also tried slurping the " over the existing string but nada. did i imagine it?
Feb 22 15:52:29 <rpav>	EdwardIII: not sure when pasting, but when typing i think
Feb 22 15:52:58 <EdwardIII>	sure there's that, i'm sure there was some other magic though when squirting in an existing string with quotes
Feb 22 16:06:35 <ohnoitsnoah>	Howdy y'alll
Feb 22 16:07:57 <JohnGalt>	ahoy matey!
Feb 22 16:11:08 <ohnoitsnoah>	Hello!!!
Feb 22 16:11:19 <ohnoitsnoah>	How is your morning so far?
Feb 22 16:12:07 <JohnGalt>	not bad, fixed some bugs
Feb 22 16:12:31 <JohnGalt>	unfortunately I woke up at 3:30am
Feb 22 16:12:57 <ohnoitsnoah>	Awww that's a bummer, but congrats with the bugs
Feb 22 16:13:05 <ohnoitsnoah>	I went to sleep around 3am lol
Feb 22 16:13:25 <JohnGalt>	I used to go for 3-5 days at a time\
Feb 22 16:13:33 <JohnGalt>	but luckily I fixed that
Feb 22 16:14:06 <ohnoitsnoah>	Yeahh, I can stay up late but no way I could do days haha
Feb 22 16:14:18 <JohnGalt>	I didnt really have a choice
Feb 22 16:14:29 <ohnoitsnoah>	This morning I decided to learn Tex randomly, so I'm watching videos on it right now
Feb 22 16:14:42 <JohnGalt>	latex is pretty cool
Feb 22 16:14:51 <ohnoitsnoah>	Yeah I'd imagine that wouldn't normally be a choice
Feb 22 16:15:48 <ohnoitsnoah>	I'm kinda cheating though, I'm using GNU Texmacs so I don't have to reallly write plain Tex code
Feb 22 16:15:59 <JohnGalt>	I tried ambien for a while but that is the worst medicine I have ever taken
Feb 22 16:16:04 <JohnGalt>	took a month to stop it
Feb 22 16:16:24 <arch-angel>	does anyone here happen to use consult? All the commands from consult-* gives me 0 matches
Feb 22 16:16:34 <arch-angel>	I have no idea if I'm using it wrong, or if I'm missing some dependency
Feb 22 16:16:38 <ohnoitsnoah>	I don't even know what that does
Feb 22 16:16:41 <ohnoitsnoah>	What is it for?
Feb 22 16:17:39 <arch-angel>	ohnoitsnoah, are you asking me?
Feb 22 16:18:33 <grym>	ttps://knowyourmeme.com/memes/ambien-walrus
Feb 22 16:19:22 <ohnoitsnoah>	arch-angel: yes :)
Feb 22 16:19:35 <arch-angel>	right, https://github.com/minad/consult
Feb 22 16:20:01 <arch-angel>	I mean, I also just installed consult so my understanding of it is very very limited
Feb 22 16:20:30 <arch-angel>	but as far as I know it provides nice looking interfaces for all sorts of stuff like grep, rg, locate, find, etc.
Feb 22 16:22:47 <e1f>	if all goes to plan, today at 5:45PM EST, a probe from a private u.s. company will land on the moon's south pole. near the surface, it will release a camera drone to record itself landing. nasa tv will livestream
Feb 22 16:24:16 <EdwardIII>	arch-angel did you add their recommended setup to your init.el?
Feb 22 16:24:39 <ohnoitsnoah>	elf woahhhh that sounds neat!
Feb 22 16:24:41 <EdwardIII>	https://github.com/minad/consult?tab=readme-ov-file#use-package-example
Feb 22 16:31:34 <arch-angel>	EdwardIII, I omitted the keybinds part but the :init and :config, yeah I copy pasted it into my init.el
Feb 22 16:36:35 <EdwardIII>	arch-angel i may not be much help but could you give a more specific example so i can compare?
Feb 22 16:36:48 <arch-angel>	https://termbin.com/on8n
Feb 22 16:36:50 <arch-angel>	this is my config
Feb 22 16:37:17 <EdwardIII>	i mean a more specific example of 0 matches
Feb 22 16:37:24 <arch-angel>	right
Feb 22 16:37:59 <arch-angel>	so let's just say there's a string of "abcd" in a file, I invoke consult-grep it shows me a line with a # typed in, and I just type in abcd
Feb 22 16:38:19 <arch-angel>	I wait, there's no response, I press enter, it tells me match required
Feb 22 16:38:45 <EdwardIII>	hmm yeah that does seem to just work for me
Feb 22 16:38:54 <EdwardIII>	you don't have any other completion framework installed also?
Feb 22 16:39:02 <arch-angel>	wdym completion framework?
Feb 22 16:39:10 <EdwardIII>	like counsel
Feb 22 16:39:18 <arch-angel>	yes I do have counsel
Feb 22 16:39:45 <EdwardIII>	from memory i vaguely recall having to get rid of counsel before counsult worked
Feb 22 16:39:57 <arch-angel>	oh
Feb 22 16:40:05 <arch-angel>	damn they conflict each other?
Feb 22 16:40:08 <EdwardIII>	maybe TIAS?
Feb 22 16:40:15 <EdwardIII>	could be total nonsense
Feb 22 16:40:26 <corwin>	fsbot: this is my config is <reply>There are many like it, but this one is mine.
Feb 22 16:40:28 <fsbot>	:(   [set tErM] this is aLreaDy someThing elSe.. usE ’is also’..
Feb 22 16:40:28 <fsbot>	 CurrenTly: tO thAt as thE oTher is tO itSelf, Selah.
Feb 22 16:40:40 <arch-angel>	I do like the counsel-fzf function though
Feb 22 16:40:47 <arch-angel>	sadly consult does not have that I believe
Feb 22 16:41:15 <arch-angel>	I'll try disabling counsel
Feb 22 16:41:47 <EdwardIII>	just to rule it out
Feb 22 16:41:55 <NotThatRPG>	Is it possible to use file local variables to control auto-fill-mode and visual-line-mode ?
Feb 22 16:42:18 <NotThatRPG>	I have specific files (not file extensions) for which I would like to differentially enable/disable these
Feb 22 16:43:00 <arch-angel>	EdwardIII, consult-ripgrep works when counsel-mode is disabled
Feb 22 16:43:07 <arch-angel>	that's interesting
Feb 22 16:43:17 <ldb>	NotThatRPG: set variable auto-fill-function
Feb 22 16:43:56 <EdwardIII>	arch-angel well at least you have a starting point. others who know more about this may know why / what to do
Feb 22 16:44:07 <arch-angel>	thanks for the help
Feb 22 16:44:20 <arch-angel>	seems like it's a long day of debugging ahead for me
Feb 22 16:44:20 <ldb>	visual-line-mode is not possible to do by just set a variable
Feb 22 16:44:44 <EdwardIII>	a long day eh
Feb 22 16:45:18 <arch-angel>	yeh
Feb 22 16:45:20 <ldb>	but one can append any lisp code to the file local var to be run
Feb 22 16:46:11 <arch-angel>	hmm, now that it works, the behaviour of consult-ripgrep is very different than the behaviour shown in the screenshots
Feb 22 16:46:58 <arch-angel>	EdwardIII, is the default behaviour supposed to be just showing a gigantic buffer which you have to manually scroll through? the gifs in the github show a much more refined interface
Feb 22 16:47:49 <EdwardIII>	arch-angel i don't use the grep feature, but i imagine the idea is you type a bit more to narrow the choices
Feb 22 16:48:00 <arch-angel>	no I mean in general for consult
Feb 22 16:48:04 <arch-angel>	I don't have vertico installed
Feb 22 16:48:18 <NotThatRPG>	I'd love to use .dir-locals for this, but... can it match specific files?
Feb 22 16:48:19 <arch-angel>	I'm getting the default ugly emacs selection buffer
Feb 22 16:48:36 <arch-angel>	not exactly ugly but well, pretty crude I guess
Feb 22 16:48:41 <NotThatRPG>	I have colleagues that insist on making some text files be one-line-per-paragraph instead of using auto-fill
Feb 22 16:53:04 <ldb>	NotThatRPG: too many ways to do that, either define a derived mode with the minor modes and hook it to the file, or write a expression tests the file name and apply minor modes
Feb 22 16:53:28 <ldb>	or add a function that enables minor modes depends on file name to the mode hook
Feb 22 16:53:34 <corwin>	Maybe check out `visual-fill-column-mode' ?
Feb 22 16:54:03 <NotThatRPG>	ldb: Right, so I could add a latex-mode-hook for this....
Feb 22 16:54:29 <ldb>	or if the file is git version controled, write git post processing
Feb 22 16:55:08 <arch-angel>	ohhhh it's vertico thats the trick
Feb 22 16:55:15 <arch-angel>	damn consult+vertico looks good
Feb 22 16:55:35 <ldb>	not if you are still using emacs 28
Feb 22 17:06:18 <NotThatRPG>	ldb: Are file-local-variables set before or after hooks are run?
Feb 22 17:07:44 <NotThatRPG>	I was thinking of setting a file-local variable (in the local variables block) to indicate whether or not a file should be auto-filled. But I'm not sure those variables are set before the hook is run (looks like not)
Feb 22 17:22:41 <ndegruchy>	vertico is neat, but with marginalia I found that it fails to wrap text well when the entries become too long on one side
Feb 22 17:23:42 <ldb>	NotThatRPG: if they weren't, call (hack-local-variables) manually
Feb 22 17:23:53 <NotThatRPG>	ldb: Thanks!!!!
Feb 22 17:24:40 <NotThatRPG>	ldb: I had no idea that function existed.  Really appreciate all of yourhelp
Feb 22 17:27:15 <ldb>	NotThatRPG: you're welcome
Feb 22 17:34:28 <ndegruchy>	TIL about keep-lines and flush-lines
Feb 22 17:35:14 <grym>	ndegruchy: oh you read yacker yews this morning too huh
Feb 22 17:36:14 <grym>	i learned about fill-prefix
Feb 22 17:36:50 <ndegruchy>	grym: yeah, good article
Feb 22 17:43:11 <grym>	ndegruchy: it's all susam's fault!!
Feb 22 17:46:18 <grym>	https://0x0.st/H5Q7.png
Feb 22 17:46:20 <grym>	heh heh heh
Feb 22 17:46:24 <grym>	ai is going great
Feb 22 17:51:06 <rpav>	heh
Feb 22 17:51:49 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Thu Feb 22 17:51:49 2024

**** BEGIN LOGGING AT Thu Feb 22 18:35:17 2024

Feb 22 18:35:17 *	Now talking on #emacs
Feb 22 18:35:17 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 22 18:35:17 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 22 18:35:30 <grym>	all my favorite things are fractally deep anyway, not just my editors
Feb 22 18:36:11 <grym>	cf http://johnsalvatier.org/blog/2017/reality-has-a-surprising-amount-of-detail
Feb 22 18:36:41 <cvandusen>	It's embark that might be the most difficult. Currently, when switching buffers I might see some buffer that I think "Oh, I can kill that one" and can do so without leaving the ivy-context. I haven't found the way to do that with embark.
Feb 22 18:36:55 <grym>	i have not yet decided to care about embark
Feb 22 18:37:30 <cvandusen>	It seems to try to be a bit more smarter than it needs to be. idk
Feb 22 18:39:06 <grym>	it's certainly not clicked for me yet
Feb 22 18:39:31 <janneke>	wgreenhouse: thanks
Feb 22 18:40:07 <bpalmer>	"Would you rather be smart or pretty?" "Oh, easy, pretty. You can fake being smart."
Feb 22 18:40:49 <janneke>	yeah, i've also got no incentive or intention to move, but i fear X/exwm support just might not be as amazing as it is today some time (soon?)
Feb 22 18:42:50 <cvandusen>	Nowadays with enough cosmetic surgery, one can fake being pretty.
Feb 22 18:43:32 <bpalmer>	one wonders at the word "fake" in that case
Feb 22 18:43:47 <cvandusen>	shallow fake??
Feb 22 18:43:48 <fsbot>	Don't count on it!
Feb 22 18:44:06 *	cvandusen cancels the botox
Feb 22 18:47:51 <edgar-rft>	rudybot: I have a calculator and I count on it!
Feb 22 18:47:52 <rudybot>	edgar-rft: the calculator on my phone is about 1.4M
Feb 22 18:48:44 <edgar-rft>	probably all results precomputed at compile time
Feb 22 18:49:30 <edrx>	hi all! gmorning!
Feb 22 18:50:25 <edgar-rft>	good mourning
Feb 22 18:51:50 <edrx>	anyone here uses npm? I have some basic questions... I know very little javascript, and I would like to make something like the second screenshot here - http://anggtwu.net/find-yttranscript-links.html - i.e., a function called find-npm-link that displays a temporary buffer with elisp hyperlinks and shell commands for npm...
Feb 22 18:52:34 <edrx>	but man npm-ls mentions "npm help folders", that AFAICT does not exist
Feb 22 18:53:45 <edrx>	what is the npm subcommand for displaying all local files associated to a certain npm package?
Feb 22 18:53:59 <edrx>	edgar-rft: oops, gmourning =)
Feb 22 18:54:39 <Odin-LAP>	edrx: Is there one?
Feb 22 18:55:27 <edrx>	Odin-LAP: no idea
Feb 22 18:57:28 <subopt>	I want to redo the byte compiles of all my installed melpa packages on emacs 28.2 . They were originally installed by emacs 29.1. Is there a way to 'reinstall' or redo them all without uninstalling them first?
Feb 22 18:57:48 <edrx>	tbh/btw all my friends and acquaintaces who do javascript programming here in Brazil only answer questions in two ways... either with "it's easy!" or with "use the package bla"
Feb 22 18:58:16 <technomancy>	lol
Feb 22 18:58:27 <edrx>	that's why I thought that it would be better to ask here
Feb 22 18:58:40 <ndegruchy>	subopt, a high-level solution would be to find all elc/eln files and then find all el files and run them through the emacs byte-compiler
Feb 22 18:59:00 <ndegruchy>	find all the elc/n files and delete them
Feb 22 18:59:08 <technomancy>	rudybot: first step is scoop out the part of your brain that prevents you from making bad decisions, then the rest of npm is a breeze
Feb 22 18:59:10 <rudybot>	technomancy: A scoop of pistashcio in a sugar-cone.
Feb 22 19:00:07 <ndegruchy>	edrx: I know nothing about npm or node, but you should be able to get a path out of NPM for a given package
Feb 22 19:01:15 <edrx>	subopt: I'm 99% sure that this is much more basic than what you need, but I've just learned - half an hour ago - that I can do this: (byte-recompile-directory "~/.emacs.d/elpa/lean4-mode/")
Feb 22 19:01:58 <subopt>	edrx: thanks, i'll try it that way first
Feb 22 19:14:25 <johnjaye>	someone asked a question about motors and I just pasted the output of chatgpt to their question.
Feb 22 19:14:39 <johnjaye>	we need a modern version of "let me ai that for you"
Feb 22 19:14:51 <technomancy>	was it someone you don't like?
Feb 22 19:15:09 <hodapp>	did the person complain that the ChatGPT answer didn't include any white people?
Feb 22 19:15:27 <johnjaye>	technomancy: it was a newcomer to the channel, so... probably.
Feb 22 19:15:33 <technomancy>	I hate it when people do that
Feb 22 19:15:55 <technomancy>	it's like ... I'm asking because I want to know what humans think. if I didn't want to know that, I wouldn't have asked.
Feb 22 19:16:03 <johnjaye>	we have it nice here at #emacs though because we have a channel bot for those types of things.
Feb 22 19:16:16 <technomancy>	we have it nice because it's easy to put those bot replies on ignore
Feb 22 19:16:36 <technomancy>	of course it would be much better if it was a bot dedicated to that so you could use regular /ignore instead of having to write some elisp to ignore the garbage
Feb 22 19:17:01 <technomancy>	but I guess it's not that bad since most people in this channel don't mind writing elisp
Feb 22 19:17:03 <johnjaye>	his exact opening was "I'm looking for a basic primer on motors, specifically.."
Feb 22 19:17:19 <johnjaye>	so rather than give him a youtube video I took the easy path.
Feb 22 19:17:40 <technomancy>	well, now I know never to ask you a question
Feb 22 19:17:46 <thuna`>	You should have asked the bot for a youtube video instead
Feb 22 19:17:51 <johnjaye>	it can't do that
Feb 22 19:18:02 <johnjaye>	it says it doesn't have access to internet sites. at least gpt3.5 doesn't.
Feb 22 19:18:08 <ndegruchy>	pandoc is great
Feb 22 19:18:15 <technomancy>	surely it could hallucinate a URL if you asked nicely enough
Feb 22 19:18:27 <johnjaye>	if it's a yes or no question i'll answer it generally, maybe with some extra context.
Feb 22 19:18:42 <johnjaye>	but if it's something you should be typing into google, that does irritate me a bit.
Feb 22 19:18:56 <ieure>	Nobody should type anything into Google, ever, for any reason.
Feb 22 19:19:03 <technomancy>	it irritated me more back when google actually worked well
Feb 22 19:19:13 <ieure>	Yes, this.
Feb 22 19:19:50 <johnjaye>	that ai answer might be better than google eventually.
Feb 22 19:20:13 <thuna`>	And then it'll cannibalize itself
Feb 22 19:20:14 <grym>	we have it nice because i, at least, will very seriously consider kicking people who copypaste llm output in response to humans asking questions and expecting to get a human response
Feb 22 19:20:20 <grym>	the bots are supposed to be inane; users aren't
Feb 22 19:20:49 <johnjaye>	i think it would qualify as flooding on irc. chatgpt is very verbose if you don't tell it to limit itself.
Feb 22 19:21:47 <grym>	oh i'll kick you for bad taste
Feb 22 19:21:57 *	thuna` .oO(Which is why fsbot shouldn't have that functionality to begin with)
Feb 22 19:21:57 <grym>	.. you can come back, ofc
Feb 22 19:22:30 <johnjaye>	i didn't realize fsbot was being user-friendly by limiting so much of the responses.
Feb 22 19:23:49 <corwin>	deego has put some effort to make it reply tersely where possible, I think.
Feb 22 19:26:40 <gusgr>	folks, i would like your help on something minibuffer related. so far i was using ivy and for switching buffers specifically, ivy-switch-buffer which is acting similarly to built in switch-to-buffer but with ivy completion. this specific command would allow matching against the *mode* of the buffer, and specifically i got used to switch like that, by matching the mode first and then previewing, if needed, the different options
Feb 22 19:28:43 <gusgr>	but yesterday i thought of switching to Vertico/Marginalia/Consult and while i had set them up, the switch-to-buffer command now won't match on the mode specifically, cause it comes from Marginalia. i mean i understand why it doesn't work like i was used to, but i want to figure out if i can make it work like i was used to
Feb 22 19:30:12 <gusgr>	and found out about Embark, which i setup also, but this method creates a whole new buffere where i have to search. so it's not really the same. it would be way faster to run ibuffer actually and search there instead of consult-buffer->embark-export->search
Feb 22 19:31:09 <gusgr>	or i hadn't understood something here, am i supposed to create some content with embark to feed the minibuffer completion somehow so i combine everything into a single command? is that possible?
Feb 22 19:33:49 <ndegruchy>	embark is ... difficult to use
Feb 22 19:34:01 <ndegruchy>	unless you know what you're getting into
Feb 22 19:34:44 <ndegruchy>	,ping
Feb 22 19:34:45 <fsbot>	␕
Feb 22 19:53:22 <edgar-rft>	rudybot: in the distance you hear a dog embark
Feb 22 19:53:22 <rudybot>	edgar-rft: obviously that would only be for backwards compatibility purposes.  (not that i personally plan to embark on this endeavor, just pondering)
Feb 22 20:01:09 <danza>	<3 eww
Feb 22 20:08:35 <bpalmer>	A typographic dog knows when to em-bark and when to en-bark.
Feb 22 20:16:20 <bpalmer>	rudybot: what is in a typographic st. bernard's cask?
Feb 22 20:16:21 <rudybot>	bpalmer: Bernard Wolfe's best-known work is science fiction
Feb 22 20:16:43 <danza>	try again rudybot
Feb 22 20:18:02 <bpalmer>	Hmm. An interesting note on him from https://sf-encyclopedia.com/entry/wolfe_bernard : 'In his "Afterword" to these stories, Wolfe expressed an extreme hostility to science and also to sf, which he considered its handmaiden. Further details of his career can be found in Memoirs of a Not Altogether Shy Pornographer '
Feb 22 20:19:19 <bpalmer>	I've never heard of his novel _Limbo_ from 1952, but it seems intriguing.
Feb 22 20:21:00 <rpav>	the characters really have to bend over backwards in that one
Feb 22 20:21:17 *	Odin-LAP has generally found that there is an interesting correlation between expressing a strong belief that science is totalitarian and being an active apologist for totalitarianism.
Feb 22 20:21:22 <Odin-LAP>	Don't know if that applies here.
Feb 22 20:22:24 <rpav>	don't people try to use science (among others) to legitimize $thing in general
Feb 22 20:24:51 <bpalmer>	Odin-LAP: He did work for a while as bodyguard and secretary to Trotsky in Mexico.
Feb 22 20:25:27 <bpalmer>	insert some educated discussion here about whether trotsky was totalitarian.
Feb 22 20:26:17 <danza>	well trotskism was attacked in all totalitarian states (right and left) as far as i recall
**** BEGIN LOGGING AT Thu Feb 22 20:35:46 2024

Feb 22 20:35:46 *	Now talking on #emacs
Feb 22 20:35:46 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 22 20:35:46 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 22 20:36:14 <mekeor>	hello :) while gpg agent daemon is running, which elisp function can i apply on a key-id so that i can type in the password in the minibuffer, and the gpg-agent is notified about my authenticity?
Feb 22 20:36:25 <mekeor>	sorry for possibly wrong wording, i'm a noob
Feb 22 20:36:45 <bpalmer>	,gpg
Feb 22 20:36:46 <fsbot>	gpg is an encryption and signing tool. See <http://emacswiki.org/wiki/AutoEncryption> for Emacs interfaces.
Feb 22 20:37:18 <e1f>	iirc he had trouble himself; didn't he get a pickaxe to the head for his troubles?
Feb 22 20:37:36 <bpalmer>	ice pick, I believe, not pickaxe.
Feb 22 20:37:58 <Odin-LAP>	Nope.
Feb 22 20:38:00 <Odin-LAP>	Ice axe.
Feb 22 20:38:27 <e1f>	we're just nitpicking now
Feb 22 20:38:55 <bpalmer>	If pickaxe, you'd assume it was done by a minecraft fan.
Feb 22 20:39:34 <Odin-LAP>	e1f: Compare an ice pick to an ice axe and tell me that's a difference only a pedant would care about. :)
Feb 22 20:41:16 <mekeor>	bpalmer: do you think that the document, that fsbot linked to, provides helpful information to my question, as you assumingly assumed that it would?
Feb 22 20:42:04 <bpalmer>	mekeor: I did think so. It links to easypg which is supposed to provide a frontend.
Feb 22 20:42:11 <bpalmer>	Perhaps I misunderstood your questoin.
Feb 22 20:44:55 <mekeor>	oh, i see. no, i think it's good. i guess, i'd appreciate a more precise pointer to an epa-function. thanks!
**** BEGIN LOGGING AT Thu Feb 22 20:47:44 2024

Feb 22 20:47:43 *	Now talking on #emacs
Feb 22 20:47:43 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 22 20:47:43 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 22 20:48:41 <bpalmer>	someone may have that information handy.
Feb 22 20:53:32 <e1f>	Odin-LAP: they both cure a headache equally well, though 😵‍💫
**** BEGIN LOGGING AT Thu Feb 22 20:58:51 2024

Feb 22 20:58:50 *	Now talking on #emacs
Feb 22 20:58:50 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 22 20:58:50 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** BEGIN LOGGING AT Thu Feb 22 21:13:03 2024

Feb 22 21:13:03 *	Now talking on #emacs
Feb 22 21:13:03 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 22 21:13:03 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 22 21:13:06 <Odin-LAP>	(Sometimes, I wonder what people who join in the middle of these conversations think about this channel.)
Feb 22 21:14:28 <weary-traveler>	thuna`: i don't know the answer, but if i were in your shoes i'd look at the source for the org-sticky-header package
**** BEGIN LOGGING AT Thu Feb 22 21:16:07 2024

Feb 22 21:16:06 *	Now talking on #emacs
Feb 22 21:16:06 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 22 21:16:06 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 22 21:17:49 <weary-traveler>	np
Feb 22 21:17:52 <weary-traveler>	,next
Feb 22 21:17:53 <fsbot>	Another satisfied customer. NEXT!
Feb 22 21:18:07 <e1f>	lunar landing has been moved back by 1 hour to 6:24PM EST; controllers added one more orbit
Feb 22 21:19:40 <thuna`>	Oof, org-sticky-header is also just looping up and collecting individual headings
Feb 22 21:25:30 <thuna`>	Alright, you can use org-element-at-point and repeatedly get the :parent property via org-element-property.  I want all headings in the file, though, so it's more efficient to use org-element-parse-buffer instead.
Feb 22 21:31:04 <mekeor>	thuna`: why the whole buffer? i thought you want only parents of the current heading
Feb 22 21:32:45 <incal>	,g Is it the men who create the women's beauty?
Feb 22 21:32:46 <fsbot>	🤖[g] Beauty is in the eye of the beholder, regardless of who creates it!
Feb 22 21:33:26 <thuna`>	mekeor: That was an xy situation.  What I needed is a list of all headings, formatted like "parent1/parent2/parent3/heading"
Feb 22 21:33:51 <mekeor>	thuna`: that's what consult-org-heading offers
Feb 22 21:34:09 <thuna`>	mekeor: But I don't want unnecessary dependencies
Feb 22 21:34:17 <thuna`>	(And I don't use consult in general)
Feb 22 21:34:46 <mekeor>	ok, its code might still be of interest in that case
Feb 22 21:35:12 <mekeor>	thuna`: i'm curious, which mini-buffer-completion-framework do you use?
Feb 22 21:35:19 <thuna`>	mekeor: selectrum
Feb 22 21:37:05 <thuna`>	It works decently with everything and I don't need to learn a separate language just to read code written for it (ahem ahem helm)
Feb 22 21:41:54 <mekeor>	"Selectrum has been replaced by Vertico" https://github.com/radian-software/selectrum
Feb 22 21:43:26 <rpav>	at this rate, within 10 years, minibuffer completion frameworks will dominate everything else on the internet!
Feb 22 21:43:36 <Odin-LAP>	The only thing I really need added to the default completion is live updating.
Feb 22 21:43:47 <thuna`>	"There are too many conflicting completion frameworks!"
Feb 22 21:43:57 <rpav>	Odin-LAP: i really like to be able to type "a b c" to complete "a.*b.*c"
Feb 22 21:44:06 <rpav>	but i get that with ivy or whatever so i'm fine with it
Feb 22 21:44:20 <rpav>	what i _want_ is a completion framework that's buffer-backed, not list-backed
Feb 22 21:44:41 <thuna`>	That's controlled by completion-styles
Feb 22 21:44:49 <Odin-LAP>	rpav: I believe it's now possible to get that using the built-in completion thing.
Feb 22 21:45:15 <Odin-LAP>	But I don't think there's a style to do it included by default.
Feb 22 21:45:32 <rpav>	Odin-LAP: i mean for data sourcing rather than display
Feb 22 21:45:39 <mekeor>	orderless is an external package that provides nice completion styles
Feb 22 21:45:42 <rpav>	i.e. all the completion things want you to provide a (list ...)
Feb 22 21:45:53 <rpav>	this is incredibly inefficient because emacs implementation
Feb 22 21:46:12 <Odin-LAP>	rpav: Sorry, I was still talking about turning "a b c" into "a.*b.*c".
Feb 22 21:46:56 <rpav>	ooh
Feb 22 21:47:09 <rpav>	Odin-LAP: ivy does that right now at least with some $config
Feb 22 21:47:26 <Odin-LAP>	Oh, I'm aware. Also one of the main reasons I'm using it. :)
Feb 22 21:54:20 <bpalmer>	every program will evolve until it can send email^W^Whandle automatic completion.
Feb 22 21:54:45 <rpav>	browse a website
Feb 22 21:55:28 <bpalmer>	website? Is that like a public instagram post?
Feb 22 21:56:09 <rpav>	;)
Feb 22 21:56:57 <bpalmer>	 By the way, blue sky is apparently allowing federation now.
Feb 22 21:57:01 <thuna`>	Can you filter out internal symbols from apropos somehow?
Feb 22 21:58:29 <bpalmer>	thuna`: apropos has something to sort its results by match, so at the very least you should be able to move them to the end.
Feb 22 21:58:37 *	bpalmer hasn't explored this very deeply, though
Feb 22 21:59:17 <bpalmer>	ok, looks like some suitable advice on apropos-score-symbol might be the way to do this.
Feb 22 21:59:39 <bpalmer>	(of course, you'd also need to enable apropos-sort-by-scores)
Feb 22 22:00:28 <thuna`>	Hmm, you should advice whatever function's printing the entries at that point, no?
Feb 22 22:00:47 <edrx>	thuna`: I wrote several functions based on apropos a few weeks ago - http://anggtwu.net/eev-current/eev-blinks.el.html#find-eaproposf - so you need help to write something low-level, just tell
Feb 22 22:01:55 <thuna`>	edrx: Thanks, will do
Feb 22 22:03:09 <incal>	thuna`, there is `apropos-symbols-internal' that will "Filter out entries that are marked as apropos-inhibit"
Feb 22 22:03:32 <incal>	but I think it isn't meant to fiddle with from the outside since it doesn't even have a docstring. don't let that stop you tho
Feb 22 22:04:23 <bpalmer>	oh, that's another one that would b egood to advise with a :filter function, since it's given a list of symbols
Feb 22 22:04:28 <thuna`>	Yeah, that seems to be the one
Feb 22 22:04:39 <bpalmer>	:filter-args, rather
Feb 22 22:05:13 <bpalmer>	"Picard programming tip: The first version of any software will be buggy. That's why so many holodeck programs try to kill you."
Feb 22 22:06:01 <thuna`>	Although, you can also advice apropos-print with a :before and filter apropos-accumulator appropriately, which is a gloabal variable apropos uses to keep all the symbols (yuck!)
Feb 22 22:06:18 <incal>	science fiction didn't predict the personal computer revolution but was pretty energetic at predicating the perils of AI
Feb 22 22:07:34 <rpav>	🤔
Feb 22 22:08:23 <rpav>	incal: it predicated our fears of certain perils, at least
Feb 22 22:08:34 <edrx>	I just do things like this,
Feb 22 22:08:35 <edrx>	(apropos-internal "line" 'fboundp)
Feb 22 22:08:36 <edrx>	(apropos-internal "line" 'boundp)
Feb 22 22:08:36 <rpav>	i would not be surprised if the actual perils differ
Feb 22 22:08:42 <edrx>	and pretty-print the results...
Feb 22 22:09:01 <technomancy>	strong disagree; sci-fi over and over is like "don't be prejudiced against robots; they just want to be your friends" where the real future is like "it's critically important that you apply much more prejudice against robots who seem friendly"
Feb 22 22:09:14 <technomancy>	the exact wrong message to send
Feb 22 22:10:03 <rpav>	technomancy: i think the real secret is scifi says a lot of things, a lot of contradictory things, and we like to cherry-pick what resembles reality
Feb 22 22:10:17 <edrx>	I know people who believe that we can't trust people who look friendly
Feb 22 22:10:26 <edrx>	can't -> shouldn't
Feb 22 22:10:57 <bpalmer>	Remember the lessons of "Second Variety"  (PKD, 1953)
Feb 22 22:11:05 <incal>	well, 2001, Terminator, Matrix, you name it, it is always machines vs humans
Feb 22 22:11:26 <bpalmer>	Matrix 4 illustrates how machine and humans can coexist peacefully.
Feb 22 22:11:45 <rpav>	our culture has a "fear the children" complex
Feb 22 22:11:59 <technomancy>	incal: the reality is humans in power use AIs against those not in power; the AIs themselves have no self-awareness
Feb 22 22:12:20 <bpalmer>	rpav: quiet! do you want to be wished into a cornfield?
Feb 22 22:12:20 <incal>	that everyone had a computer at home and in their pockets, and that those were connected to a network that was distributed (not a central supercomputer) tho, if someone wrote that in sf I'm unaware of it
Feb 22 22:12:27 <rpav>	bpalmer: hehe
Feb 22 22:12:32 <grym>	technomancy: and that's been reality since time immemorial
Feb 22 22:13:17 <incal>	Matrix 4 was good, I liked Bugs a lot
Feb 22 22:13:21 <grym>	technomancy: just s/ai/technology, since there's no real difference
Feb 22 22:13:27 <technomancy>	yearp
Feb 22 22:13:48 <technomancy>	grym: unless you count corporations themselves, in which case they sorta do have volition
Feb 22 22:14:16 <incal>	the idea of a simulation in a simulation in a simulation ... but that the innermost simulation can come back and bite the uppermost, i.e. transforming the hierarchy into a circle (a directed CYCLIC graph), that was very cool
Feb 22 22:14:19 <grym>	i don't, but that's because i've read my neibuhr
Feb 22 22:15:23 <thuna`>	Ok, here's the full patch as far as apropos.el is concerned https://0x0.st/H5e-.txt and here's the full elisp to evaluate if you want it applied https://0x0.st/H5ei.txt
Feb 22 22:15:31 <rpav>	incal: pretty sure the home/personal computer/tablet/etc was done numerous times
Feb 22 22:16:03 <rpav>	i mean, star trek (whether one considers that scifi or not aside)
Feb 22 22:16:17 <Odin-LAP>	rpav: Not really until after the PC was an actual thing.
Feb 22 22:16:54 <incal>	yeah, well, I didn't really see "today" in sf with respect to PCs and a distributed network (the Internet)
Feb 22 22:17:03 <bkhl>	incal, https://m.youtube.com/watch?v=ZKfOcR7Qbu4
Feb 22 22:17:05 <grym>	technomancy: specifically, 'moral man and immoral society'
Feb 22 22:17:05 <rpav>	also asimov apparently
Feb 22 22:17:12 <Odin-LAP>	Ironically, we are now closer to what was predicted - dumb terminals being ubiquitous, but always reliant on big centralised computers.
Feb 22 22:17:16 <incal>	a lot of superdupercomputers controlling everything
Feb 22 22:17:24 <grym>	Odin-LAP: that's not even a prediction, that's just 1978
Feb 22 22:17:40 <rpav>	Odin-LAP: don't limit yourself to scifi you remember having read heh
Feb 22 22:18:35 <Odin-LAP>	grym: Terminals weren't that widespread, although there may have been patches of the US where that was the case.
Feb 22 22:18:51 <rpav>	https://dynamicsubspace.net/2015/11/18/before-cyberpunk-science-fiction-and-early-personal-computing-for-the-13th-city-tech-poster-session/
Feb 22 22:18:52 <rudybot>	https://teensy.info/ci1iaE3mPH
Feb 22 22:19:09 <bpalmer>	thuna`: if you're proposing this for emacs, you may want to use seq-filter instead of cl-remove-if
Feb 22 22:19:33 <bpalmer>	(and seq-some)
Feb 22 22:19:43 <Odin-LAP>	SF is usually more a commentary on the present than it ever can really be a prediction of the future, in any case.
Feb 22 22:19:46 <wgreenhouse>	Gibson's Sprawl stories/novels were pre-PC (only just) and certainly pre-most-people-having-internet. and the network in those is mostly a series of private fiefdoms (pretty good prediction as his tend to be)
Feb 22 22:20:04 <wgreenhouse>	and yeah he was writing in a time of privatization and austerity
Feb 22 22:20:14 <rpav>	the moral is really SF is rarely accurate; so probably don't go to it for accuracy
Feb 22 22:20:36 <hodapp>	I need to re-read Neuromancer
Feb 22 22:20:38 <hodapp>	and read the other books
Feb 22 22:20:57 <rpav>	wgreenhouse: pfft anything in the mid/late 70s era should count as PC, once 8-bit and early devices sprung up
Feb 22 22:21:06 <thuna`>	bpalmer: Yes I am aware that seq.el is preferred (though in this case apropos.el has cl-lib required and seq.el not so maybe cl-lib's fine?)
Feb 22 22:21:32 <technomancy>	grym: so you don't agree with Stross's position on corporations as slow AI? https://www.antipope.org/charlie/blog-static/2018/01/dude-you-broke-the-future.html
Feb 22 22:21:34 <rpav>	like, personal computing was already obviously happening
Feb 22 22:21:36 <thuna`>	I'm not intending to submit this for the time being, I'll fix it up before I do
Feb 22 22:21:48 <hodapp>	nooo now that I have Avy and corfu-quick and vertico-quick I want something Avy-like everywhere, including inside fzf at the shell
Feb 22 22:22:00 <incal>	I think someone would have gotten the cred for farseeing the computer miniaturization, the PCs, and the Internet, if someone really did it?
Feb 22 22:22:06 <bpalmer>	thuna`: hmm, emacs 29.1, I don't see cl-lib used. If it is, then never you mind me.
Feb 22 22:22:11 <rpav>	technomancy: corporations and other organizations are just higher-level life
Feb 22 22:22:25 <rpav>	like you're composed of cells, they're composed of people
Feb 22 22:22:25 <wgreenhouse>	rpav: wild that Gibson hadn't used any at the time. he had a typewriter, and his design inspiration was...tape decks
Feb 22 22:22:34 <rpav>	they are born, live, change, and die
Feb 22 22:22:58 <rpav>	and spawn new ones
Feb 22 22:23:09 <rpav>	wgreenhouse: sure.. but it's not like they were a secret
Feb 22 22:23:30 <thuna`>	bpalmer: There are exactly two `cl-assert's on lines 987 and 1090 and that seems to be it (30.0.50 close-ish to upstream)
Feb 22 22:23:47 <hodapp>	Alan Turing didn't have anything like a modern computer but still famously foresaw, and replied to, low-effort objections/dismissals of AI
Feb 22 22:23:51 <thuna`>	(There's also a the quoted symbol 'cl-defmethod but that's not really require-worthy)
Feb 22 22:23:52 <rpav>	wgreenhouse: (also not to say sprawl wasn't incredibly ahead of its time in all the ways)
Feb 22 22:25:08 <bpalmer>	thuna`: ok, that's new since 29.1
Feb 22 22:25:22 <bpalmer>	thuna`: the cl-assert, that is. So I guess they've indicated an acceptance of cl
Feb 22 22:25:34 <incal>	ah, maybe someone hinted at PCs, someone else hinted at a network that was distributed, but if someone had predicted what we have today convincingly I'm sure he would have been hailed a genious and this would have been common knowledge to a lot of people
Feb 22 22:26:01 <wgreenhouse>	incal: yes, the two predictions separately are not uncommon, the intersection of the two was uncommon
Feb 22 22:26:40 <bpalmer>	a logic named joe featured individual terminals (basically phone replacements) and distributed central computers (not a single big supercomputer)
Feb 22 22:26:41 <incal>	right
Feb 22 22:26:51 <bpalmer>	landline phones, that is.
Feb 22 22:27:04 <thuna`>	bpalmer: It was added last January, but it looks like it should be in emacs 29.1, it's odd that you're not seeing it
Feb 22 22:27:18 <bpalmer>	apropos.el, right?
Feb 22 22:27:21 <thuna`>	yeah
Feb 22 22:27:37 <thuna`>	commit 48bd17923a9
Feb 22 22:27:42 <bpalmer>	I see cl-defmethod but not cl-assert, so *shrugs helplessly*
Feb 22 22:28:09 <thuna`>	Not that it matters a lot, I don't think a (require 'seq) is going to break anything
Feb 22 22:28:33 <incal>	bpalmer, 1946. yes, maybe he did it and that was long before ARPA (1958) and obviously the PC revolution of the 80s
Feb 22 22:32:57 <incal>	Murray Leinster, king
Feb 22 22:47:07 <e1f>	it was google that paid reddit $60m for their data to train their llm
Feb 22 22:48:27 <rpav>	e1f: i wonder who looked at reddit and thought, "this is the data we should train our AI on"
Feb 22 22:48:46 <rpav>	and pay $60m for the privilege of
Feb 22 22:49:28 <technomancy>	if you wanted a deranged racist AI I bet you could convince MS to part with Tay for less than $60M
Feb 22 22:50:03 <rpav>	don't even need that, just use earlier openai models
Feb 22 22:55:45 <thuna`>	Alright, here's a completing-read function for headlines in an org file, fontified appropriately.  Currently does not convert back to a list of headings, though.  Do `M-: (th/org-completing-read-headlines t t) RET' in an org file to see how it works.  https://0x0.st/H5eu.txt
Feb 22 22:57:26 <thuna`>	Although, I'm now noticing that the faces are wrong.  I'll need to fix that.
Feb 22 23:00:12 <e1f>	rpav: when you compare reddit to the rest of the internet, the content is made by humans and not poisoned with ai-generated hallucinations
Feb 22 23:00:57 <corwin>	"for now"
Feb 22 23:01:04 <e1f>	i can't say how the $60m amount was arrived at, though
Feb 22 23:02:03 <e1f>	i don't think it has to be qualified with "for now" as people have left and some are deleting their posts before leaving
Feb 22 23:02:47 <grym>	"deleting"
Feb 22 23:02:50 <corwin>	What part of that is supposed to make me think reddit will not be overwhemed with machine generated content?
Feb 22 23:02:54 <grym>	we all know what that means
Feb 22 23:03:06 <thuna`>	Ok, fixed version: https://0x0.st/H5ej.txt  Added a NOCOLOR option, so the previous example is now `M-: (th/org-completing-read-headlines nil t t) RET'
Feb 22 23:03:14 <grym>	it means upserting the record to set is_deleted to TRUE
Feb 22 23:03:20 <corwin>	grym: "only available to paying customers and government?"
Feb 22 23:03:34 <grym>	corwin: same difference, yes
Feb 22 23:03:45 <corwin>	The "soft delete".
Feb 22 23:04:11 <e1f>	the training data will likely be frozen at 2022 or around there
Feb 22 23:04:47 <e1f>	this is a guess as not even google will be foolish to use anything past that date
Feb 22 23:04:53 <grym>	cereal killer face: enshittify unto them as they enshittify unto us, dude
Feb 22 23:06:54 <rpav>	e1f: 1. assumption that it's so 2. assumption that it's better if so
Feb 22 23:07:05 <rpav>	(plenty of bot etc posts on reddit)
Feb 22 23:07:07 <corwin>	let's make an AI that helps sift ML models based on the dates various AIs came online.
Feb 22 23:07:44 <incal>	let's make an AI that is based on the socialization process, learning by doing like everyone else
Feb 22 23:08:13 <incal>	it a time, maybe it would even try to ask questions about Elisp here and stuff
Feb 22 23:08:44 <corwin>	ok, but let's also call the inevitable "actually that is how NLP ML works" conversation as read, too.
Feb 22 23:08:48 <incal>	in a way, that is what LLM does
Feb 22 23:09:58 <grym>	oo, sky-cheetah
Feb 22 23:10:01 <corwin>	thuna`: are you sharing your completion function in #org-mode, too?  There might be more folk there eager to try it out.
Feb 22 23:10:02 <incal>	maybe one can extend it to the physical world, so that one has a cat robot growing up among cats. will it behave like a cat after this? maybe one would have to simulate the cats so it can be there for several thousand years to perfect cat-ism
Feb 22 23:10:38 <grym>	incal: that's the embodiment criterion for robots, indeed
Feb 22 23:11:06 <thuna`>	corwin: I'm not in #org-mode by default but I can share it there too, yeah
Feb 22 23:11:14 <corwin>	nice
Feb 22 23:12:12 <alcor>	Speaking of LLMs, I'm looking into whether Emacs can be used as DJ software (or at least to interact with mixing programs), and it refers me to something called "Reuben Thomas's Mixxx.el" – does anyone has an idea where I can find this?
Feb 22 23:12:15 <alcor>	,g Is it possible to use Emacs as DJ software, and if so, what options do exist?
Feb 22 23:12:17 <fsbot>	🤖[g] While Emacs is not typically used as DJ software, there are some creative options like EMMS (Emacs Multimedia System) that can potentially be customized for music play and management within Emacs.
Feb 22 23:12:48 <corwin>	That looks like the right advice to me, fwiw.
Feb 22 23:13:16 <alcor>	Uh, I swear it offered a different advice in a /query session: https://pomf2.lain.la/f/tux77fqz.png
Feb 22 23:14:08 <corwin>	That seems possible.  I wouldn't assume we're having the same session in here as we in PM or #fsbot or whatjoinyou
Feb 22 23:14:38 <alcor>	So I can assume that Reuben Thomas's Mixxx.el doesn't exist? Now I'm sad :(
Feb 22 23:15:25 <corwin>	Let's think of it as waiting opportunity.  A blank canvas, if you will.
Feb 22 23:15:41 <incal>	fGnus, the Emacs Fake News client
Feb 22 23:16:06 <alcor>	But my name isn't Reuben Thomas. I would have to rename myself first before writing Mixxx.el
Feb 22 23:16:21 <technomancy>	lol
Feb 22 23:16:31 <grym>	mmm, reubens
Feb 22 23:16:31 <technomancy>	who would name an elisp file with a capital letter in it
Feb 22 23:16:45 <incal>	https://emacs.stackexchange.com/users/13004/reuben-thomas
Feb 22 23:17:02 <rpav>	technomancy: that's the complaint before _spaces_? ;)
Feb 22 23:17:07 <bpalmer>	,mixxx
Feb 22 23:17:08 <fsbot>	(V5.96) Gd/24/d/3/O/N4/JJ/m/0/N i+++ l* E++ 4+ G$ zR 0- v-- r---- P---
Feb 22 23:17:14 <technomancy>	oh, I assumed the spaces weren't part of the filename
Feb 22 23:17:20 <rpav>	oh i guess not
Feb 22 23:17:23 <bpalmer>	,mix
Feb 22 23:17:23 <fsbot>	try:  aumix-emacs dontmixlanguages MMIX schemix
Feb 22 23:17:24 <corwin>	look, we're not here to tell you how to live your life but something is either important enough to file a name change because of something GTP told you, or it isn't.
Feb 22 23:17:28 <mwnaylor>	I have used `progn', not really so much to capture the result, but to group expressions for the passing if form, etc. I understand, by reading the documentation, what `prog1' does, but don't have a good mental model for its use. Who has used it, and can you give a use-case?
Feb 22 23:17:30 <bpalmer>	,aumix-emacs
Feb 22 23:17:30 <fsbot>	aumix-emacs is at http://www.emacswiki.org/emacs/aumix-emacs
Feb 22 23:17:38 <rpav>	probably a bad sign i assumed they were 🤔
Feb 22 23:18:10 <bpalmer>	ah. probably aumix-emacs wasn't good enough to dj with, but it is said to be a mixer/volume adjuster
Feb 22 23:18:15 <rpav>	(though i acutally sortof assumed it was a mix name with country code)
Feb 22 23:18:23 <ram_man>	What prefix do you all usually use for keybindings that you create?
Feb 22 23:18:37 <bpalmer>	mwnaylor: prog1 is useful in the same way as,e.g., i++  if you know C, java, C++, etc.
Feb 22 23:18:44 <bpalmer>	mwnaylor: contrast with ++i
Feb 22 23:18:46 <incal>	mwnaylor, `prog1', after doing all the stuff, evaluate to the first (1) form, not the last (n) with `progn'
Feb 22 23:19:22 <alcor>	There's a somewhat popular DJ program called Mixxx https://mixxx.org/ - I assume "Mixxx" in "Mixx.el" is a reference to that
Feb 22 23:19:45 <incal>	(prog1 1 2 3) is 1, (progn 1 2 3) is 3
Feb 22 23:19:58 <thuna`>	Now, prog2, on the other hand *is* pretty much useless
Feb 22 23:20:01 <incal>	there is a `prog2' as well
Feb 22 23:20:06 <bpalmer>	mwnaylor: so, e.g., you might naturally do something like (while buffers (with-current-buffer (prog1 (car buffer) (setq buffers (cdr buffers)))) ...)
Feb 22 23:20:21 <bpalmer>	(car buffers), that is.
Feb 22 23:20:43 <thuna`>	That's the mechanism pop uses as well
Feb 22 23:21:52 <bpalmer>	thuna`: prog2 is (setup) (body) (cleanup)
Feb 22 23:22:01 <corwin>	When processing a list and trying to return a particular value (maybe not the list, itself) after,  I lean toward `dolist' since it happens to handle that exact case.
Feb 22 23:22:31 <incal>	the absence of "prog3" is an embarrassment to the Emacs community
Feb 22 23:22:37 <corwin>	(dolist (var list retval) &body)
Feb 22 23:22:43 <bpalmer>	much less common, but when you do have that case, quite useful. And how much better to illustrate the pattern than 1, 2, ... n then just 1 ... n
Feb 22 23:23:55 <mwnaylor>	bpalmer: Ok, can follow your (while buffers …) example. 𝗜 wouldn't write that kind of code, because I tend think in terms of immutability.
Feb 22 23:28:29 <e1f>	mission broadcast (or yt channel) https://www.nasa.gov/nasatv/
Feb 22 23:29:53 <bpalmer>	mwnaylor: for a long time, elisp didn't have fancy things like "dolist" , so you had to either use mapcar/mapc or do a while loop that does sets the list to a shorter and shorter value
Feb 22 23:30:22 <bpalmer>	the while loop that sets the list variable to a shorter and shorter value is a very clear recursive pattern, so probably counts as immutable enough.
Feb 22 23:30:40 <Odin-LAP>	CL is leaking quite strongly into elisp now, isn't it?
Feb 22 23:30:48 <incal>	now we have `dolist' and `cl-dolist', even
Feb 22 23:31:20 <incal>	Odin-LAP, yes, if you by CL means the Elisp that is cl-lib
Feb 22 23:31:41 <bpalmer>	Odin-LAP: yes, a lot of cl patterns and idioms have been flowing into elisp.
Feb 22 23:31:56 <bpalmer>	More and more keywords are become part of function patterns; someday defun may even support them.
Feb 22 23:32:09 <Odin-LAP>	incal: Honestly, I'm more concerned about the cultural aspects than the technical side of it, but...
Feb 22 23:32:18 <thuna`>	I hope that day comes soon.
Feb 22 23:32:49 <mwnaylor>	bpalmer: History lesson helps. I would have chosen the mapcar/mapc path.
Feb 22 23:33:11 *	Odin-LAP for some reason decided to learn CL before Emacs Lisp, so is not going to complain about CL influences.
Feb 22 23:33:22 <incal>	I think they are great
Feb 22 23:34:05 <incal>	there is `cl-defun' BTW, keywords are not what I like most about it tho
Feb 22 23:34:48 <incal>	I like simple things like `cl-incf' but also complicated/powerful things like `cl-loop'
Feb 22 23:34:58 <grym>	https://en.m.wikipedia.org/wiki/File:Googlepayments.svg hahaha
Feb 22 23:34:59 <thuna`>	Yes, cl-defun is the workaround but I would prefer not having to double-check whether I can use keywords or defaults for optionals and whatnot
Feb 22 23:36:38 <incal>	it is a compromise, a few developers active on gmane.emacs.devel are very anti-CL and keywords are what they often focus on to criticize
Feb 22 23:37:02 <mwnaylor>	I think the loop/cl-loop way would be better than using while to keep shortening the list. And I am not a fan of loop.
Feb 22 23:37:20 <wgreenhouse>	alcor: so mixxx is apparently real and apparently does have some kind of tenuous emacs connection, in that they formally endorse emacs as an IDE for the project
Feb 22 23:37:39 <incal>	for everything simple with a list `dolist'/`cl-dolist' does it
Feb 22 23:37:42 <Odin-LAP>	Odd question: Would I be right to think that TRAMP strongly assumes the server end of an SSH connection is a Unix system?
Feb 22 23:37:51 <wgreenhouse>	(not clear there's actually a way to make music from emacs though)
Feb 22 23:37:56 <Odin-LAP>	And might behave weirdly if it runs into Windows on the far side?
Feb 22 23:37:59 <thuna`>	cl-do is my go-to unless it's literally (loop while ... collect ...)
Feb 22 23:38:32 <thuna`>	s/while/for ... in/
Feb 22 23:38:39 <wgreenhouse>	Odin-LAP: for the ssh-based backends, it assumes that the host has tools like base64 and ls
Feb 22 23:38:48 <wgreenhouse>	Odin-LAP: and /bin/sh
Feb 22 23:38:55 <incal>	just use any loop that works instead of over-theorize :)
Feb 22 23:39:14 <wgreenhouse>	Odin-LAP: SMB is also supported by tramp tho
Feb 22 23:39:21 <Odin-LAP>	wgreenhouse: So, yes, it's liable to misbehave if it runs into Windows.
Feb 22 23:39:44 <alcor>	wgreenhouse: Thanks, but I'm still puzzled as to why it hallucinates a Reuben Thomas into that 😆
Feb 22 23:39:52 <wgreenhouse>	Odin-LAP: for the ssh-based backends, yes
Feb 22 23:40:23 <wgreenhouse>	alcor: maybe he wrote a mode bundled with mixxx idk
Feb 22 23:40:36 <wgreenhouse>	mixxx itself does seem to be some big complex DAW
Feb 22 23:40:58 <Odin-LAP>	wgreenhouse: Hmm. It expects /bin/sh, you say? I wonder if I can tell it to use "wsl.exe" instead.
Feb 22 23:41:25 <Odin-LAP>	wgreenhouse: (I need to deal with a weird setup.)
Feb 22 23:41:26 <incal>	you can make music with Lisp and Emacs, https://www.audacity-forum.de/download/edgar/nyquist/nyquist-doc/examples/emacs/how-to/init-nyquist.html
Feb 22 23:41:35 <wgreenhouse>	Odin-LAP: if you've got a WSL and openssh I don't think this will be weird at all.
Feb 22 23:41:47 <wgreenhouse>	yes, see also ,,overtone,,
Feb 22 23:41:47 <fsbot>	overtone is a music synthesizer library in clojure. make your REPL bleep and blop. https://github.com/overtone/overtone
Feb 22 23:41:52 <mwnaylor>	Lurking on
Feb 22 23:42:01 <Odin-LAP>	wgreenhouse: Can't run the SSHd inside the WSL, for reasons.
Feb 22 23:42:08 <wgreenhouse>	Odin-LAP: ope
Feb 22 23:42:13 <wgreenhouse>	always reasons
Feb 22 23:42:38 <bpalmer>	thuna`: ! You're the first person I know who seems to like do.
Feb 22 23:42:42 *	Odin-LAP expects that one would have been more or less trivial.
Feb 22 23:43:03 <incal>	I think if one is serious about producing music one shouldn't care about the dream to do it with Lisp and/from Emacs, but instead use the industry stuff around, that way one will focus more on the music part
Feb 22 23:43:15 <mwnaylor>	#emacs, I used to think those writing major modes were crazy or masochistic. Now, on the cusp of creating my own, albeit very lightweight, have changed my mind. :-)
Feb 22 23:43:58 <wgreenhouse>	Odin-LAP: (info "(tramp) Predefined connection information") has some hints
Feb 22 23:44:07 <Odin-LAP>	bpalmer: In CL, do is fun but a little mindbending to remember how to use.
Feb 22 23:44:17 <wgreenhouse>	Odin-LAP: looks like you could indeed say call wsl.exe on connect
Feb 22 23:44:19 <thuna`>	bpalmer: It's quite elegant with the appropriate algorithms.  My only gripe with it is that you can't have the INIT form and the STEP form be identical without resorting to `#n=' and `#n#' but aside from that it's pretty neat
Feb 22 23:44:36 <wgreenhouse>	as the "login program" on the remote host
Feb 22 23:44:39 <wgreenhouse>	wild
Feb 22 23:45:08 <wgreenhouse>	or remote-shell rather
Feb 22 23:46:18 <wgreenhouse>	Odin-LAP: `direct-async-process` might also bupass some of the shellery if it's not needed, (info "(tramp) Remote processes")
Feb 22 23:46:22 <wgreenhouse>	*bypass
Feb 22 23:47:22 <Odin-LAP>	wgreenhouse: Thanks. It's evidently worth looking into, so I will. :)
Feb 22 23:52:02 <BigEatie>	The only place I'm messing with truncate-lines in my config is given here https://0x0.st/H5eg.txt however erc-mode still defaults truncate-lines to t. Anyone know what might be going on?
Feb 22 23:55:16 <thuna`>	BigEatie: set-default, as the name suggests, sets the default value of SYMBOL to VALUE, so any new buffers end up with SYMBOL set to VALUE.  You want setq-local instead.
Feb 22 23:56:06 <thuna`>	IIRC there was a function to map across same-level entries in org but I can't find it now, does anyone know it?
Feb 22 23:57:18 <BigEatie>	Doh, I see now -- dumb mistake. Thanks
Feb 22 23:57:34 <thuna`>	np
Feb 22 23:58:10 <mwnaylor>	DK. toggling truncate lines for me changed the display. Most of the time not an issue, since I maximize the window. GNU Emacs 29.2 (build 2, x86_64-pc-linux-gnu, X toolkit, cairo version 1.16.0, Xaw3d scroll bars)
Feb 22 23:58:10 <mwnaylor>	 of 2024-02-08
Feb 23 00:22:36 <incal>	man, I'd like a PS5
Feb 23 00:23:00 <incal>	can't all Emacs people get together and have a fund so people can afford it
Feb 23 00:23:06 <mfisher>	haha
Feb 23 00:23:52 <twb>	Emacs doesn't run on PS5 because PS stopped supporting linux
Feb 23 00:23:56 *	Odin-LAP got a Steam Deck instead, can use it for emacs too.
Feb 23 00:24:10 <twb>	https://www.techradar.com/news/gaming/sony-sued-for-dropping-linux-support-on-playstation-3-686267
Feb 23 00:24:27 <Odin-LAP>	I think a friend of mine still has the PS2 Linux kit.
Feb 23 00:35:43 <technomancy>	my kids have an odroid advance that runs some ubuntu variant; it's pretty slick
Feb 23 00:38:30 <twb>	bpalmer: that CSS loading animation uses a lot of CPU
Feb 23 00:38:54 <twb>	27% of one core for a single spinner
Feb 23 00:39:14 <twb>	(only while it's onscreen, but still...)
Feb 23 00:41:08 <wgreenhouse>	e1f: so it crashed, right?
Feb 23 00:41:39 <Odin-LAP>	wgreenhouse: No, but they're having comms issues.
Feb 23 00:42:06 <Odin-LAP>	wgreenhouse: Apparently there's a signal they can lock on but not decode.
Feb 23 00:42:49 <wgreenhouse>	right--sounds like e.g. in a crater, or at an awkward position relative to ground stations
Feb 23 00:43:05 <wgreenhouse>	someplace in Cornwall gets to help :)
Feb 23 00:43:37 <wgreenhouse>	> right--sounds like e.g. in a crater, or at an awkward position relative to ground stations
Feb 23 00:43:37 <wgreenhouse>	awkward position is kind of on a continuum with crash...guess we'll see how awkward
Feb 23 00:44:13 <Odin-LAP>	Stuck in a hole like the comet lander?
Feb 23 00:50:00 <wgreenhouse>	it got to pick its own spot, so they also don't totally know where to look, which is fun
Feb 23 00:56:59 <Odin-LAP>	Hm, shr.el doesn't do inline SVG?
Feb 23 00:58:38 <technomancy>	Odin-LAP: it can do some inline SVG
Feb 23 00:58:50 <technomancy>	works on https://fennel-lang.org/survey/2023 for example
Feb 23 01:00:00 <Odin-LAP>	So it does. Interesting.
Feb 23 01:01:01 <incal>	maybe one can experience the PS5 this way, https://www.youtube.com/watch?v=az2zXT6o7KM
Feb 23 01:01:01 <judybot>	[title] FINAL FANTASY 7 REMAKE PS5 Gameplay Walkthrough FULL GAME (4K 60FPS) No Commentary - YouTube
Feb 23 01:01:09 <incal>	Duration: 17:21:29
Feb 23 01:01:11 <Odin-LAP>	Might be there's too much CSS control over the stuff I'm using.
Feb 23 01:02:04 <technomancy>	Odin-LAP: yeah my SVG there is *very* simple
Feb 23 01:02:27 <Odin-LAP>	Which makes it prove the point quite nicely, though. :)
Feb 23 01:02:30 <technomancy>	https://git.sr.ht/~technomancy/fennel-lang.org/tree/main/item/survey/chart.fnl
Feb 23 01:02:36 <technomancy>	SVG is underrated, for sure
Feb 23 01:04:42 *	Odin-LAP had a notion of using SVG as the basis for a GUI system back in 2002 or 2001.
Feb 23 01:04:56 <wgreenhouse>	technomancy: well, especially when you get to use a lisp with a sxml-type representation to make it :)
Feb 23 01:05:07 <johnjaye>	it's not that supported is it? even on linux idk how to view them without inkscape
Feb 23 01:05:26 <technomancy>	=D
Feb 23 01:05:34 <wgreenhouse>	johnjaye: it works in the browser which is all that matters really
Feb 23 01:05:43 <johnjaye>	oh... hmm
Feb 23 01:06:44 <wgreenhouse>	maybe better in a browser than anywhere else as it is an xml _document_
Feb 23 01:06:58 <Odin-LAP>	SVG is actually stupid well supported, it's just not a banner feature of anything.
Feb 23 01:07:13 <technomancy>	I really ought to add some color to that page tho
Feb 23 01:07:39 <wgreenhouse>	Odin-LAP: still shocking that not every xmpp client will work with svg avatars :P
Feb 23 01:07:56 <wgreenhouse>	letting the xml side down
Feb 23 01:08:31 *	Odin-LAP managed to get the municipality to change the logo on their website from PNG to SVG by pointing out they already _had_ an SVG version that was smaller than the PNG, and it rendered better.
Feb 23 01:08:51 <wgreenhouse>	hah
Feb 23 01:09:14 <technomancy>	democracy works!!
Feb 23 01:09:43 <technomancy>	my favorite stupid fact about PNG is that the official logo for PNG actually renders terribly as a PNG and is much better as a JPG
Feb 23 01:09:52 <technomancy>	youhadonejob.gif
Feb 23 01:10:22 <bremner>	Let's send our CV to recruiters as animated gifs
Feb 23 01:10:40 <Odin-LAP>	technomancy: Dunno, it also helps that I a.) work for them and b.) shared classes in secondary school with the press officer, to whom I mentioned this personally. :p
Feb 23 01:12:03 <johnjaye>	but png is so portable! it's in the name!
Feb 23 01:12:24 <technomancy>	well, nepotism works too =)
Feb 23 01:12:28 <johnjaye>	is tiff lossless? hmmm
Feb 23 01:13:00 <Odin-LAP>	johnjaye: TIFF allows multiple compression formats, most of which are lossless.
Feb 23 01:13:30 <Odin-LAP>	johnjaye: However, JPEG is not, and it's fairly common in TIFF.
Feb 23 01:15:06 <bpalmer>	twb: one doesn't question how well a dog plays chess.
Feb 23 01:15:28 <johnjaye>	right. i mean it's nice to have one format for lossy and one for lossless
Feb 23 01:16:43 <e1f>	there was probably a good reason why they chose png over svg-- it's possible that at one time, one or more of the browsers they tested the site against couldn't render svg images. i speak from experience having received well-meaning suggestions from random people about how to improve things
Feb 23 01:18:44 <Odin-LAP>	e1f: Yeah, I'm pretty sure that's actually the reason they had. That reason had just gone away by the point I brought it up, and I think I was careful to mention that I didn't think anyone had made a mistake.
Feb 23 01:19:43 <Odin-LAP>	(IIRC browser support tables suggested Safari as the likely culprit.)
Feb 23 01:20:39 <technomancy>	the new IE6
Feb 23 01:36:41 <grym>	 >CLICKETY< https://www.theregister.com/2024/02/23/google_suspends_gemini/
Feb 23 01:39:47 <johnjaye>	i wonder what would be a good c module for emacs which used a gpu
Feb 23 01:40:02 <johnjaye>	btc-mode is all that comes to mind
Feb 23 01:40:52 <grym>	cuda.el
Feb 23 01:40:54 <grym>	dooo iiiiittt
Feb 23 01:51:55 <incal>	do IT
Feb 23 01:52:03 <grym>	ew, clowns
Feb 23 01:53:05 <incal>	jokers to the right
Feb 23 01:55:43 <grym>	apparently apple sports is eddie cue scratching an itch
Feb 23 01:55:50 <grym>	i can respect that
Feb 23 01:57:10 <johnjaye>	cudalisp
Feb 23 01:57:15 <bpalmer>	huh, a pretty bad Register op-ed, imo. And with obligatory Snowden weighing in on things for no apparent reason.
Feb 23 01:57:27 <johnjaye>	sounds like something that might exist
Feb 23 01:58:10 <bpalmer>	It sounds confused on both section 230 and content moderation.
Feb 23 01:59:09 <grym>	techdirt usually knows what's up in that regard
Feb 23 01:59:54 <grym>	i didn't actdually read through to the end, just noting that they yanked access after everyone's had their fun making gemini do stupid things
Feb 23 02:01:19 <bpalmer>	Yeah. But it's quoting from Paul Graham, Snowden, and various of the techno-"libertarian" sorts (just distinguishing from any True Libertarians)
Feb 23 02:03:06 <technomancy>	there's been a lot of shit takes about section 230 going around lately
Feb 23 02:03:09 <bpalmer>	No comments from, say, serious commenters on search engines or deep learning; or ethicists, law, or historians
Feb 23 02:03:12 <grym>	are they talking to themselves like elon was, apparently?
Feb 23 02:03:29 <incal>	but it was ages ago when you googled stuff and got all kinds of webpages, now you get 10 of the most posh mainstream magazines with articles all saying the same thing
Feb 23 02:04:29 <grym>	i see google search results increasingly rarely these days
Feb 23 02:04:39 <grym>	enough to notice how shit they've gotten
Feb 23 02:05:20 <incal>	you don't even have to google subversive stuff to see this, just google a Hollywood movie, you don't get the official homepage of that move but Wikipedia, IMDB and a bunch of review sites
Feb 23 02:05:39 <grym>	... movies still have homepages?
Feb 23 02:05:44 <bpalmer>	incal: to a certain extent, I'm fine with mainstream magazines over random domains that sound suspiciously ChatGPTy with no sign of their result provenance.
Feb 23 02:06:16 <bpalmer>	I *always* want an IMDB page when I search for a movie title
Feb 23 02:06:26 <bpalmer>	And when I don't, I want wikipedia, or rotten tomatoes.
Feb 23 02:07:06 <incal>	yeah, just saying Google hasn't led anyone to any exotic places for ages
Feb 23 02:07:15 <technomancy>	wired with it's completely pants-on-head section 230 take here https://www.wired.com/story/the-one-internet-hack-that-could-save-everything-section-230/
Feb 23 02:10:54 <incal>	when I was a kid I made a bunch of web pages about stuff that I liked, mainstream stuff like computer games and such stuff, those pages were horrible but I still got mails every day from people who had visited them. good luck getting anyone at all to ever visit such a page today
Feb 23 02:11:15 <bpalmer>	Oh, wow, Odysseus is on the moon. No telling how long the trip to Ithaca will take, but I'm sure Cornell will be filled with lazy layabouts wooing loves when it concludes.
Feb 23 02:11:20 <johnjaye>	we already know what the internet would be like pre-230. because 230 was created to address a specific problem
Feb 23 02:12:12 <grym>	bpalmer: let's shoot arrows through the gorges until the weather improves
Feb 23 02:12:56 <incal>	,g You can fire your arrows from the tower of Babel, but you can *never* strike god!
Feb 23 02:12:57 <fsbot>	🤖[g]  That's quite the lofty target!
Feb 23 02:13:14 <grym>	hanging the TAs even though they couldn't say no is strictly optional, though
Feb 23 02:28:02 <wgreenhouse>	technomancy: it's like they're talking about taking away section 230 and replacing it with...marque and reprisal?
Feb 23 02:28:28 <wgreenhouse>	rudybot: yarr, we will extract the damages, even from without our own jurisdictionnnn
Feb 23 02:28:29 <rudybot>	wgreenhouse: yarr is also used in firefox
Feb 23 02:30:37 <wgreenhouse>	technomancy: oh, they're explicit about the piracy, yuck.
Feb 23 02:31:12 <wgreenhouse>	> When the jurisprudential dust has cleared, the United States would be *exporting the democracy-promoting First Amendment to other countries rather than Section 230’s authoritarian-friendly liability shield* and the sewer of least-common-denominator content that holds human attention but does not bring out the best in us.
Feb 23 02:31:12 <wgreenhouse>	wtaf did I just read
Feb 23 02:32:56 <wgreenhouse>	also whatever this is: "A society must seek quality as a whole, as a shared cultural value, in order to maximize the benefits of AI."
Feb 23 02:33:57 <Inline>	the benefits of AI for the AI, the benefits of AI for some group, the benefits of AI for all
Feb 23 02:34:20 <wgreenhouse>	unknown
Feb 23 02:34:40 <wgreenhouse>	the benefits of AI to "a society," I think
Feb 23 02:35:34 <technomancy>	wgreenhouse: if I could CW a link in IRC I would have
Feb 23 02:35:42 <wgreenhouse>	technomancy: that as a take was, yes, the pants are on their head, but also on fire (perhaps lit during too close proximity to a torch march)
Feb 23 02:35:56 <wgreenhouse>	the social engineering vibes are overwhelming
Feb 23 02:37:13 <technomancy>	wgreenhouse: one wonders who it was written for
Feb 23 02:37:37 <grym>	psyop to get people to read 'seeing like a state'
Feb 23 02:37:46 <grym>	reverse reverse psychology!
Feb 23 02:38:55 <wgreenhouse>	technomancy: definitely someone's policy whitepaper, not even sure whose. could be sold to many with slight tweaks in emphasis
Feb 23 02:39:31 <technomancy>	remember when wired used to employ copy editors?
Feb 23 02:39:37 <wgreenhouse>	the new Cambridge Analytica, selling your country psychic security against the old edition
Feb 23 02:39:42 <technomancy>	or do like basic proofreading?
Feb 23 02:40:02 <grym>	technomancy: to the former; obviously not, they were printing neal stephenson in the 90s :)
Feb 23 02:40:12 <technomancy>	fair enough
Feb 23 02:40:12 <grym>	at his usual length!
Feb 23 02:40:25 <grym>	(the essay on fiber optic cables is still really good though)
Feb 23 02:41:18 <grym>	"Everything that has occurred in Silicon Valley in the last couple of decades also occurred in the 1850s. Anyone who thinks that wild-ass high tech venture capitalism is a late-20th-century California phenomenon needs to read about the maniacs who built the first transatlantic cable projects (I recommend Arthur C. Clarke's book How the World Was One). The only things that have changed since then are that the
Feb 23 02:41:25 <grym>	stakes have gotten smaller, the process more bureaucratized, and the personalities less interesting."
Feb 23 03:14:31 <wgreenhouse>	I wonder if emacs calendar/calc time calculation features support Martian sols
Feb 23 03:14:37 <wgreenhouse>	or lunar days
Feb 23 03:21:06 <grym>	(emacs) Other Calendars
Feb 23 03:21:36 <grym>	looks like no
Feb 23 03:27:43 <bpalmer>	rudybot: the most valuable calendar systems use money
Feb 23 03:27:44 <rudybot>	bpalmer: Valuable work, of course, but it's not a massive project that can solve some of our more vexing problems.
Feb 23 03:27:57 <bpalmer>	after all, time is money...
Feb 23 04:13:51 <bpalmer>	I can't believe I only discovered the g binding in grep and compilation buffers yesterday (it's bound to recompile aka "re-run the thing")
Feb 23 04:40:52 <technomancy>	it's a good one innit
Feb 23 05:23:56 <bpalmer>	rudybot: name your favorite key binding of the day.
Feb 23 05:23:56 <rudybot>	bpalmer: there could be text objects for those things. the text-object commands are grouped into "secondary-modals", and implemented as command overrides. when you hit 'd' in modal-cmd-mode, it puts you into modal-1off-kill-mode, which overrides commands like "next-line" to alternatives which find a text object corresponding to that movement. i went with this design because it automatically uses your favorite binding for "next-line"
Feb 23 06:04:49 <codingquark>	Good morning!
Feb 23 06:08:24 <BigEatie>	Morning
Feb 23 06:09:51 <danza>	moin
Feb 23 06:11:54 <notzmv>	hıo ka
Feb 23 06:16:57 <codingquark>	:)
Feb 23 06:35:02 <kendell>	completely new to emacs itself. Impressed by all it can do. Trying to instal l emacspeak, a speech framework on top of emacs. Latest version, 53, refuses to bite compile. Emacs 29, ubuntu24.04. I can try again and paste the log if needed to troubleshoot
Feb 23 06:57:49 <bpalmer>	kendell: what's the first error shown?
Feb 23 07:37:32 <johnjaye>	24.04... like from the future?
Feb 23 07:39:13 <arch-angel>	anyone here using eglot + clangd? The error messages indicate (fix available) yet when I invoke the eglot-code-actions command I get no code actions available
Feb 23 07:39:48 <johnjaye>	clangd is all it lets you use though right?
Feb 23 07:41:20 <arch-angel>	johnjaye, when I was using lsp-mode I could access the code actions
Feb 23 07:41:31 <arch-angel>	but not with eglot
Feb 23 07:44:04 <johnjaye>	well. i should actually try it out so i can use it
Feb 23 07:52:57 <arch-angel>	johnjaye, hmm it's weird, there's a few errors that has code actions though
Feb 23 07:53:21 <arch-angel>	which means it's either eglot can only receive certain types of code actions
Feb 23 07:53:35 <johnjaye>	i mean that wouldn't surprise me. i've heard bugs in it before
Feb 23 07:53:53 <arch-angel>	is there any links to the discussion?
Feb 23 07:54:09 <arch-angel>	are*
Feb 23 07:54:50 <arch-angel>	this problem annoys me quite a lot cause I have clang-tidy enabled and I really cant be bothered to fix my 100 warnings manually
Feb 23 07:56:40 <johnjaye>	other than the github page for eglot if it exists idk. i just meant from people coming in here with complaints about it
Feb 23 07:57:34 <johnjaye>	can you make up a short minimal example to show the misbehavior?
Feb 23 08:02:19 <arch-angel>	right, just activate the modernize-* checks for clang-tidy and declare int main(){}
Feb 23 08:03:47 <arch-angel>	you should be getting a warning from the modernize-use-trailing-return-type check that int main() has some problem with it, and there's a (fix available) behind the error message
Feb 23 08:04:04 <arch-angel>	yet eglot-code-actions does not show anything
Feb 23 08:13:27 <yates_home>	i'm trying to install this: https://github.com/typst/svg2pdf/tree/main
Feb 23 08:13:47 <yates_home>	but it requires "cargo". what is that? i can't find a clear package for it under f39
Feb 23 08:14:08 <yates_home>	is it a rust thing?
Feb 23 08:15:19 <bpalmer>	cargo is a rust thing, yes.
Feb 23 08:16:56 <yates_home>	right. and i lied - f39 clearly has a cargo package.
Feb 23 08:17:12 <yates_home>	it was just hidden in about 300 false positives..
Feb 23 08:21:05 <yates_home>	thnk you, bpalmer
Feb 23 09:05:25 <danse-nr3>	,channel-wisdom
Feb 23 09:05:26 <fsbot>	it just uses more, which is usually less
Feb 23 09:13:51 <bpalmer>	it's all about the same , more or less
Feb 23 09:18:25 <roadie>	whats up with https://www.gnu.org/software/emacs ? loads without css and its animation.js ... or is it just my bleeding edge browser?
Feb 23 09:19:17 <roadie>	there is nothing there to make it so slow I thought
Feb 23 09:20:14 <roadie>	same on firefox - the internet is broken, who did this?
Feb 23 09:36:12 <needle>	yes, who did this on purposely intentionally broke this \o/ man.
Feb 23 09:36:22 <needle>	Now stand up WHO DID THIS?! >.>
Feb 23 09:36:26 <needle>	:) morn
Feb 23 09:37:02 <needle>	Obviously on technical problems, it is most important to find out who is to blame.
Feb 23 09:38:20 <edgar-rft>	currently https://www.gnu.org/software/emacs doiesn't loasd at all here, looks as if someone is working on it right now
Feb 23 09:40:17 <edgar-rft>	after some time I get ... network timeout - please try again later ...
Feb 23 09:46:21 <bpalmer>	Let's book a cabin by a lake for our timeout.
Feb 23 09:47:05 <edgar-rft>	rudybot: we're sorry to tell that emacs no longer exists
Feb 23 09:47:05 <rudybot>	edgar-rft: I was born in a country which no longer exists, I live in Germany and I use the US layout :p
Feb 23 09:52:43 <jbe>	I think rudybot may actually be german
Feb 23 09:53:52 <needle>	Zee german rudyboot
Feb 23 09:58:52 <bpalmer>	rudybot: tell us about the blinkenlichten
Feb 23 09:58:52 <rudybot>	bpalmer: A dark theme is useful, I guess, but I would never consider that a significant issue (or vice-versa), assuming basic readability. But I also don't get why people care about the multicolored blinkenlichten on their gaming PCs
Feb 23 09:59:08 <edgar-rft>	in germany you might need to pay speculation tax for using foreign property
Feb 23 10:05:16 <needle>	rudybot: Tell us about the most "geheim german plan"
Feb 23 10:05:16 <rudybot>	needle: if you were going for a german-language joke, it would have been "plan nein"
Feb 23 10:06:08 <edgar-rft>	rudybot: that was even worse than my own jokes
Feb 23 10:06:08 <rudybot>	edgar-rft: it's even worse, rudybot already told me my own lame jokes :-)
Feb 23 10:06:49 <needle>	rudybot: How does "Sauerkraut, Wurst und Bier" taste like?
Feb 23 10:06:50 <rudybot>	needle: Bier und Wurst
Feb 23 10:13:40 <roadie>	ok somebody fixed it. the internet is back.
Feb 23 10:14:25 <roadie>	rudybot is from yugoslavia?
Feb 23 10:14:46 <roadie>	not easy getting US keyboard stuff in Germany
Feb 23 10:15:00 *	roadie knows
Feb 23 10:16:56 <roadie>	gnu emacs loads 1.05 MB Javascript o.O
Feb 23 10:19:08 <roadie>	https://pagespeed.web.dev/analysis/https-www-gnu-org-software-emacs/v6fngkorfk?form_factor=mobile
Feb 23 10:19:13 <roadie>	ts ts ts
Feb 23 10:19:41 <roadie>	oh, it does not work ...
Feb 23 10:20:27 <roadie>	ah, it works in mainstream browsers
Feb 23 10:20:59 <roadie>	no it doesn't
Feb 23 10:23:29 *	roadie demands the right to be forgotten for his last 9 yaddas and that they be excluded from the minutes
Feb 23 10:26:58 <heanol>	/16
Feb 23 11:16:14 <APic>	More Gain!
Feb 23 11:16:20 <APic>	,BotSnack
Feb 23 11:16:20 *	fsbot dances happily
Feb 23 11:32:10 <supercode>	hello
Feb 23 11:32:20 <supercode>	happy friday!
Feb 23 11:34:17 <jbe>	yes, indeed
Feb 23 11:36:32 <Bounga>	Hello, I just upgraded to Emacs 29.1 from 28 and now LSP doesn't work anymore. If I try to M-x any LSP command I got `cl-generic-ensure-function: lsp-execute-command is already defined as something else than a generic function`. I really don't understand what that means. Any clue?
Feb 23 11:47:37 <supercode>	What's a good way to learn more about Emacs like learn stuff that might not even know exists?
Feb 23 11:48:06 <johnjaye>	i'm not sure, but that sounds like other function definition errors people got going to 29
Feb 23 11:49:00 <alcor>	does 29 change anything in that regard?
Feb 23 11:49:07 <supercode>	like articles or tutorials that tell me something like -- Here are some things in Emacs everyone uses but it is possible you might not be aware of them.
Feb 23 11:56:51 <ski>	supercode : hang around in this channel ?
Feb 23 12:00:12 <supercode>	ski: thanks. I visit this channel many times every week.
Feb 23 12:01:11 <bremner>	and I was just going to point them to sacha chua's blog
Feb 23 12:01:37 <ski>	<bremner> and I was just going to point them to sacha chua's blog
Feb 23 12:01:54 <bremner>	supercode: https://sachachua.com/blog
Feb 23 12:02:42 <supercode>	oh wow. I've seen it mentioned in this channel earlier too.
Feb 23 12:02:53 <supercode>	need to see how I can remind myself to check this often
Feb 23 12:03:07 <bremner>	I see bits they repost on mastodon, so that's another way if you prefer newfangled things
Feb 23 12:03:32 <supercode>	nice. yes I like newfangled things like mastodon
Feb 23 12:05:35 <ski>	i guess, emacs wiki ?
Feb 23 12:05:50 <ski>	(is there some planet emacs thing ?)
Feb 23 12:05:57 <bremner>	there is, iirc
Feb 23 12:06:21 <johnjaye>	well i mispoke, i meant 28
Feb 23 12:06:32 <johnjaye>	not sure what major changes to 29 would be relevant other than eglot being introduced
Feb 23 12:07:07 <johnjaye>	supercode: here is a paper on arxiv on the performance gains of native code
Feb 23 12:07:09 <johnjaye>	https://arxiv.org/pdf/2004.02504.pdf
Feb 23 12:34:28 <jbe>	rudybot: did you ever play wing commander?
Feb 23 12:34:29 <rudybot>	jbe: the good old days of fucking with autoexec.bat just to play wing commander...
Feb 23 12:34:37 <jbe>	ah, so you did
**** BEGIN LOGGING AT Fri Feb 23 14:47:00 2024

Feb 23 14:47:00 *	Now talking on #emacs
Feb 23 14:47:00 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 23 14:47:00 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** BEGIN LOGGING AT Fri Feb 23 14:52:01 2024

Feb 23 14:52:01 *	Now talking on #emacs
Feb 23 14:52:01 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 23 14:52:01 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 23 15:19:39 <grym>	hah!  i was trying to figure out what blogging backend https://two-wrongs.com/  uses -- aaand it's org-publish.
Feb 23 15:21:55 <graywolf>	Hello :)  How can I get a source code of a function as a string (preferably, but sexp would also work)?
Feb 23 15:22:17 <supercode>	grym: how did you figure it is org-publish?
Feb 23 15:22:24 <grym>	supercode: emailed the author
Feb 23 15:22:34 <supercode>	oh I also see this in view source: <meta name="generator" content="Org Mode" />
Feb 23 15:22:41 <grym>	supercode: .. but also, if you look at the page source, you'll see <meta name="generator" content="Org Mode" />
Feb 23 15:22:46 <grym>	yep
Feb 23 15:23:04 <supercode>	do you check the blogging backend of every blog you come across? any other interesting ones you found?
Feb 23 15:23:09 <grym>	i don't, usually
Feb 23 15:23:18 <grym>	but i like the tufte-like sidenotes he's got going on
Feb 23 15:23:34 <supercode>	interesting.
Feb 23 15:23:35 <grym>	and i'm looking for a way to write up some reenactment work i'm doing that fits my workflow
Feb 23 15:23:45 <supercode>	found this blog yesterday for useless use of cats article
Feb 23 15:23:51 <grym>	yeah, it was on HN
Feb 23 16:16:38 <kiliro>	saluton
Feb 23 16:17:24 <kiliro>	,ping
Feb 23 16:17:24 <fsbot>	␕
Feb 23 16:21:03 <restoration>	ls
Feb 23 16:21:05 <restoration>	hello
Feb 23 16:21:10 <restoration>	anyone here
Feb 23 16:24:04 <grym>	no
Feb 23 16:24:09 <kiliro>	LOL
Feb 23 16:32:04 <grym>	,crickets
Feb 23 16:32:05 <fsbot>	*chirp*, *chirp*, *chirp*
Feb 23 16:34:43 <kiliro>	which is the correct way for erc to login to a bouncer such as znc when it is connected to several networks?  I could achieve it by login in to the znc server and jumping to another network...then joining again and jumping to yet another network....when the last network is the default...I do not jump
Feb 23 16:34:44 <jbe>	it's just the one guy in here talking via hundreds of accounts
Feb 23 16:35:18 <kiliro>	that is the usual traffic near weekend
Feb 23 16:35:25 <kiliro>	and during weekend
Feb 23 16:35:50 <grym>	jbe: oh just like elon
Feb 23 16:36:23 <jbe>	yes, but more imaginative
Feb 23 16:37:53 <jbe>	I don't actually know how irc bouncers work since I've basically only ever done screen+irssi, but don't those support just the one connection from you to them and then the bouncer manages multiple servers somehow?
Feb 23 16:38:59 <grym>	no idea, i do the same as you
Feb 23 16:39:01 <jbe>	would at least be a lot less of a hassle than having you on your actual client reconnecting to n>1 bouncer-connections whenever
Feb 23 16:42:10 <hodapp>	I know weechat can act as an IRC bouncer but I've yet to try to set it up
Feb 23 16:42:13 <hodapp>	have only used its relay
Feb 23 16:43:29 <corwin>	i use znc for a bouncer; basically I'm able to connect to that bouncer (from several clients at the same time, if I wish) as my znc user.  that user has zome IRC connections attached to it.  I can connect to znc to hit a specific one of these connections, or without and then switch between them using special commands ZNC intercepts.
Feb 23 16:43:43 <hodapp>	dumb question: I just installed embark, but I see embark-act opens a new buffer... how do I interact with this buffer, e.g. to scroll it?
Feb 23 16:43:48 <hodapp>	it disappears if I click on it.
Feb 23 16:46:19 <kiliro>	corwin: how do you connect to serveral networks of the same znc server at the same time with erc?
Feb 23 16:46:30 <jbe>	oh, that reminds me I put in my calendar to renew the auth cert I use for libera and that date is coming up. so I guess I'll have to refresh my memory on how I did that last time (and maybe do a longer expiry so I can completely forget)
Feb 23 16:46:52 <kiliro>	write a guide, jbe
Feb 23 16:46:53 <jbe>	well, ok, it's in may
Feb 23 16:47:00 <pkal>	hodapp: I think you can use M-v or C-M-v?
Feb 23 16:47:08 <kiliro>	and link it to the notification in the calendar
Feb 23 16:47:10 <jbe>	kiliro: guide is at https://libera.chat/guides/certfp
Feb 23 16:47:23 <kiliro>	good
Feb 23 16:47:49 <hodapp>	pkal: no luck, just tries to move the buffer I hit embark-act from
Feb 23 16:47:58 <corwin>	kiliro: I have a sep interactive function to connect to each given network.  https://git.sr.ht/~mplscorwin/dotfiles/tree/master/item/elisp/init-erc-30.el#L324
Feb 23 16:48:44 <pkal>	(the buffer is one of the reasons I dislike embark)
Feb 23 16:48:50 <kiliro>	mojose (marvelous), corwin
Feb 23 16:49:00 <hodapp>	pkal: I just figured I'd try it out. Do you have something else you prefer instead, or just nothing?
Feb 23 16:49:02 <corwin>	I run ERC in a dedicated Emacs (vs the main one I use for most things), so I can then connect when launching Emacs with a shortcut like this (Window, alas): H:\install\emacs-30-4a8d3c\bin\runemacs.exe -fs -l init-erc-30 -eval "(condition-case err (libera-irc) (efnet-irc) (perl-irc) )"
Feb 23 16:49:03 <jbe>	in *theory* it should be just generating a new cert, adding the fingerprint to nickserv, and replacing the old file. but I guess we'll see when I get around to it
Feb 23 16:49:55 <pkal>	hodapp: C-M-v appears to work for me.
Feb 23 16:50:06 <hodapp>	pkal: in embark?
Feb 23 16:50:29 <pkal>	hodapp: Yes, I do M-x embark-act and can scroll the pop-up buffer using C-M-v
Feb 23 16:51:01 <pkal>	I use my own package, do-at-point, which just implements what I need ^^
Feb 23 16:51:06 <kiliro>	I did not find auth-for function in the documentation, corwin
Feb 23 16:52:01 <kiliro>	otherwise, everything else is very clear, corwin
Feb 23 16:52:07 <hodapp>	pkal: hm, definitely not working for me
Feb 23 16:52:34 <pkal>	hodapp: do you have some special window-placment configuration?
Feb 23 16:52:44 <corwin>	kiliro: it's up a few lines in the same file
Feb 23 16:53:37 <hodapp>	pkal: I have various other windows open... if I make my frame tiny (so I have to scroll)' and open nothing else, *then* C-M-v works
Feb 23 16:54:17 <pkal>	hodapp: that sounds like you don't have to scroll in the first place, or am I misunderstanding you?
Feb 23 16:55:27 <hodapp>	pkal: well, I ran into this yesterday on a smaller monitor and more windows and so forth, and jotted the problem down to look at later
Feb 23 16:55:48 <hodapp>	when trying to reproduce it now it'd often open the buffer to where I don't need to scroll at all
Feb 23 17:04:13 <corwin>	kiliro: ftr, I probably stole that auth-for approach, if not quite the function, from bandali hwvr I'm not finding where I stashed the link to his conf that I cribbed from.
Feb 23 17:11:57 <jvml>	hello again!
Feb 23 17:12:19 <hodapp>	O HAI!
Feb 23 17:12:38 <jvml>	how goes it?
Feb 23 17:13:10 <hodapp>	kicking ass and reading research papers, and I'm all outta ass
Feb 23 17:13:36 <jvml>	what kind of research papers? i was going to read some linguistics-related ones soon
Feb 23 17:13:49 <jvml>	(and some classical philology for that matter)
Feb 23 17:13:59 <hodapp>	machine learning - specifically OWLv2, OWL-ViT, and CLIP
Feb 23 17:14:17 <jvml>	i'm a bit out of the loop on ML but i'm sure it's fun to read about
Feb 23 17:14:38 <hodapp>	the approach in CLIP is from 2021 but it's a very neat one
Feb 23 17:14:38 <corwin>	My band is playing a couple songs tonight at the memorial for our bassist who died last Monday.  livestream 18:00 America/Chicago https://firstunitarian.org/live/
Feb 23 17:14:48 <hodapp>	:[
Feb 23 17:15:12 <corwin>	ya; thx
Feb 23 17:15:14 <jvml>	sincerest condolences.
Feb 23 17:15:22 <corwin>	Thanks jvml.
Feb 23 17:15:24 <jvml>	will keep this in mind later tonight
Feb 23 17:15:54 <grym>	hodapp: we were thinking about using clip to augment some classification analysis
Feb 23 17:16:30 <jvml>	reading about CLIP now, albeit probably not in nearly as much depth as you hodapp
Feb 23 17:16:54 <jvml>	seems very useful
Feb 23 17:16:54 <hodapp>	grym: I tried OWLv2 and the stock models are doing a great job of finding everything but the target
Feb 23 17:17:26 <grym>	"find me the ones with telephone poles in 'em"
Feb 23 17:17:31 <grym>	... maybe doable?
Feb 23 17:17:32 <hodapp>	we're again stuck in 'customer is giving us a tiny amount of data and telling us that even in this we're not allowed to use the labels for classes D and E'
Feb 23 17:17:50 <grym>	i'm stuck in "lidar is noisy"
Feb 23 17:17:59 <hodapp>	this is potato-quality MWIR data
Feb 23 17:18:29 <grym>	we have really high quality lidar... it's just that sometimes the GPS lies, so photogrammetry is harder than it should be
Feb 23 17:18:32 <hodapp>	video data from 3-4 distinct scenes, and their great idea was 'don't even pull train, val, and test from the same ones'
Feb 23 17:18:43 <grym>	that's a _great_ idea!
Feb 23 17:19:18 <jvml>	i love potato-quality digital things just in general
Feb 23 17:19:26 <jvml>	from an artistic perspective thouggh
Feb 23 17:19:29 <jvml>	though*
Feb 23 17:19:29 <hodapp>	one of our competitors may or may not be L3 who has all their own sensors and infinity billion examples of both synthetic and real data
Feb 23 17:19:36 <jvml>	definitely not as an analyst
Feb 23 17:19:39 <hodapp>	jvml: if doing potato quality, why not go for film?
Feb 23 17:20:01 <grym>	hodapp: well if  it all goes tits up you know where to find me
Feb 23 17:20:07 <jvml>	funny story, i actually really like the quality imparted by old and cheap digital cameras onto video
Feb 23 17:20:07 <grym>	we have new and different pain!
Feb 23 17:20:27 <hodapp>	grym: hah, appreciated, but stuff's going fine here for now. the company has a whole lot of projects funding things right now
Feb 23 17:20:32 <jvml>	i'm very fond of film but digital video is cosmopolitan and just as easy to mess with creatively
Feb 23 17:20:50 <hodapp>	jvml: digital to me just always had way less interesting ways of fux0ring up the image
Feb 23 17:21:02 <grym>	hodapp: i have a wandb s a l e s  c a l l  shortly
Feb 23 17:21:21 <jvml>	still digital collage can get really messy when you intentionally glitch it out
Feb 23 17:21:37 <jvml>	basically all of my visual art is digital collage
Feb 23 17:22:09 <hodapp>	grym: do you remember offhand what those networks were where you give it input images *and* some kind of engineered attributes about inputs, and get it to automagically hallucinate new inputs at anywhere you pick in those attributes?
Feb 23 17:22:26 <hodapp>	not exactly GANs and not exactly diffusion models, but also not exactly *not* those
Feb 23 17:23:26 <hodapp>	'engineered attributes' might be the wrong term, but just attributes like 'image 1 has foo=10 bar=5. image 2 has foo=-10 bar=5. image 3 has foo=0 bar=3', repeat ad infinitum, now ask it what it thinks an image is with foo=-5 bar=0
Feb 23 17:23:27 <jvml>	me and my friends would work with the distinctive shortcomings found in GANs a few years back to create visuals
Feb 23 17:23:49 <jvml>	like back in 2021 they all created delicious nonsense
Feb 23 17:23:59 <jvml>	crazy how far things have come since then
Feb 23 17:24:04 <hodapp>	I didn't do much with GANs but back around 2016 I messed with style transfer
Feb 23 17:24:13 <hodapp>	which I think is not *that* far off from current diffusion techniques
Feb 23 17:24:23 <jvml>	we actually named one of our bands after StyleGAN
Feb 23 17:24:38 <grym>	hodapp: i don't recall, no
Feb 23 17:24:41 <hodapp>	dang
Feb 23 17:26:28 <thuna`>	graywolf: Try symbol-function
Feb 23 17:26:59 <thuna`>	Byte-compile can mess it up though
Feb 23 17:32:40 <johnjaye>	is there a way to make neural networks useful on a small scale, like for analyzing a document?
Feb 23 17:33:09 <hodapp>	johnjaye: analyzing it for what in particular?
Feb 23 17:33:13 <johnjaye>	like say you wanted to rank some parts of the emacs manual as more useful than others and have a search function that prioritized those sections first for keywords
Feb 23 17:33:19 <hodapp>	hmmm
Feb 23 17:33:29 <johnjaye>	or would that just be like a linked list and you wouldn't bother with a nn
Feb 23 17:33:56 <hodapp>	that depends a lotf on how 'useful' is defined. for some kinds, older 'classical' ML and non-ML can get you very good metrics without needing an NN at all
Feb 23 17:34:06 <hodapp>	for others, might need a newfangled LLM
Feb 23 17:34:22 <graywolf>	thuna`: Ah, that does seem to work.  When I tried it before, I think I got back #<symr ...>, so I must have been doing something wrong.  Now it works :)
Feb 23 17:34:55 <thuna`>	graywolf: No, you probably weren't doing something wrong, symbol-function is just not very reliable
Feb 23 17:35:40 <graywolf>	That is... comforting? :D  Well, I will try to figure out solution without it
Feb 23 17:35:56 <grym>	certainly the newfangled hotness is running a local model against small data
Feb 23 17:36:18 <grym>	llms "are good at this" because their pretraining is across a very large corpus
Feb 23 17:36:44 <johnjaye>	i thought ML and NN were synonymous
Feb 23 17:36:53 <grym>	no
Feb 23 17:36:56 <johnjaye>	hodapp: i mean purely subjectively based on user feedback
Feb 23 17:37:09 <johnjaye>	as in i searched term x and found the most useful result on page 52
Feb 23 17:37:26 <grym>	ML is vaguely defined; NN refers to a particular architectural family of statistical analysis tools
Feb 23 17:38:17 <thuna`>	graywolf: Although it is weird that you got #<...>.  To my knowledge that's invalid syntax.
Feb 23 17:39:32 <hodapp>	johnjaye: so, for about the past decade, "AI" and more so "ML" overwhelmingly refer to deep neural networks, but both terms have a history of many other architectures/methods
Feb 23 17:40:28 <kiliro>	sorry for your bassist, corwin
Feb 23 17:40:52 <kiliro>	what did [s]he die of?
Feb 23 17:40:53 <hodapp>	johnjaye: you'll see 'shallow' ML referring to older methods - things like SVMs, xgboost, decision trees, and older neural network styles
Feb 23 17:41:06 <thuna`>	graywolf: Hmm, it seems #<...> is the syntax used for non-lisp objects, so I guess whatever function you were checking for was an external function?
Feb 23 17:41:30 <graywolf>	thuna`: It was #<subr ...> I think (now when I try to google it)
Feb 23 17:41:33 <grym>	let's insist that MCMCs are DL of indeterminate depth
Feb 23 17:41:44 *	hodapp insists on smacking grym
Feb 23 17:42:03 <grym>	ah ah ah, you can only smack me based on where i am, not where i've beeeeeennnnnn
Feb 23 17:42:20 <thuna`>	Ah, ok, subr's are non-lisp functions as well
Feb 23 17:42:45 <thuna`>	(Or maybe they are *the* non-lisp functions?)
Feb 23 17:44:43 <johnjaye>	so which method would be most applicable for a fuzzy search/index type thing?
Feb 23 17:44:44 <graywolf>	Sadly I cannot really recall what symbol I used to test it...  But it works now, so ... :)
Feb 23 17:44:54 <johnjaye>	i.e. something you would train by telling it which terms had higher rank?
Feb 23 17:45:50 <thuna`>	graywolf: ,,(symbol-function 'car)
Feb 23 17:45:50 <fsbot>	Output error: Output was not in {symbol, string, number, nil, list}. You might want to try (format "%S" (whatever you were doing))
Feb 23 17:46:18 <thuna`>	,(prin1-to-string (symbol-function 'car))
Feb 23 17:46:19 <fsbot>	ERROR: Symbol’s function definition is void: fs-prin1-to-string
Feb 23 17:46:35 <thuna`>	You get the point.
Feb 23 17:46:36 <hodapp>	grym: hm, I see YOLOv9 dropped too
Feb 23 17:46:47 <graywolf>	#<subr car> I see
Feb 23 17:47:01 <graywolf>	Yeah, so I just picked wrong function for the test I did
Feb 23 17:47:11 <grym>	hodapp: orly
Feb 23 17:47:30 <thuna`>	graywolf: You can check it with `subrp' before passing it to `symbol-function'
Feb 23 17:47:52 *	grym pip install --upgrade ultralytics
Feb 23 17:48:25 <hodapp>	haven't kept up on the new YOLOs, though. still using YOLOX here...
Feb 23 17:48:26 <graywolf>	Interesting, (subrp 'car) returns nil
Feb 23 17:48:34 <grym>	ultralytics v8 is p good
Feb 23 17:48:46 <grym>	but we're slamming on lidar right now so i've let it drop a bit
Feb 23 17:48:53 <grym>	.. until our photogrammetry guys can stop sucking
Feb 23 17:49:26 <grym>	it's nice to be blocked and have it be 100% not my fault and not my job to fix :P
Feb 23 17:51:36 <hodapp>	we've not dealt much with LIDAR here - at least on the ML side. our performance modeling group deals with that stuff maybe - and the other division of the company sometimes
Feb 23 17:51:49 <thuna`>	It is weird that (special-form-p 'car) is also nil
Feb 23 17:52:15 <thuna`>	...and (special-form-p 'if) too.  Is that a bug?
Feb 23 17:53:20 <grym>	hodapp: it's an interesting world, so far
Feb 23 17:53:29 <grym>	very much learning as i go
Feb 23 17:54:34 <thuna`>	Not `car', but `if' is explicitly a special form according to (info "(elisp) Special Forms") and its ,,df if
Feb 23 17:54:35 <fsbot>	if is a special form in ‘C source code’.
Feb 23 17:54:35 <fsbot>	(if COND THEN ELSE...)
Feb 23 17:54:35 <fsbot>	If COND yields non-nil, do THEN, else do ELSE...
Feb 23 17:54:35 <fsbot>	Returns the value of THEN or the value of the last of the ELSE’s. ;;[ ,more / ,dump]
Feb 23 17:55:03 <thuna`>	,(or (special-form-p 'if) (special-form-p #'if))
Feb 23 17:55:04 <fsbot>	:(   Symbol’s function definition is void: fs-special-form-p
Feb 23 17:55:21 <graywolf>	thuna`: (special-form-p 'if) gives t on 29.1
Feb 23 17:55:55 <thuna`>	It was nil for me just a second ago, I thought, but it's t now.  I guess I was evaluating the wrong thing?
Feb 23 17:56:23 <thuna`>	Yeah, I was looking at subr-primitive-p.  My bad!
Feb 23 18:08:36 <hab25>	Hi, I'm trying to get rid of this `eval` here so that the byte compiler can lint the form given to the `eval`. I don't want to turn `my/setq-with-boundp-and-type-check` is a macro. `my/activate-mark-and-arrange-for-handling-by-shift-selection-if-enabled` into a macro. What options do I have?
Feb 23 18:08:42 <hab25>	(defun my/activate-mark-and-arrange-for-handling-by-shift-selection-if-enabled ()   (activate-mark)   (when shift-select-mode     (eval      ;; see source of `#'handle-shift-selection`      `(my/setq-with-boundp-and-type-check        ,(make-local-variable 'transient-mark-mode) `(only . t)))))
Feb 23 18:09:11 <hab25>	Uh, looks like the code came out badly formatted. Sorry about that
Feb 23 18:11:08 <hab25>	important: there should be a newline after `#'handle-shift-selection` comment
Feb 23 18:11:55 <hab25>	that is, right after "`#'handle-shift-selection`"
Feb 23 18:12:21 <corwin>	You look to be calling `make-local-variable' at compile time, rather than returning code from your macro to do that when the form created by using the macro is evaluated.  Why ,(make-local-variable ...)   or really... why defmacro, at all?
Feb 23 18:13:02 <corwin>	erm.  wait.  You have here a defun.  But you return a form from it?  Maybe just get rid of all the `   and  ,   and see if that is any closer?
Feb 23 18:13:09 <hab25>	AFAIU all of the code there is at runtime, it is inside a `defun`
Feb 23 18:14:35 <corwin>	FWIW, it's not very helpful (at least for me) to wrap your code in markdown.  It's just more to parse.  There's a pastebin in /topic if you want to show the formatting.
Feb 23 18:15:15 <hab25>	It doesn't return a form, it return whatever the result of (eval `(my/setq-with-boundp-and-type-check ...)) is
Feb 23 18:15:26 <hab25>	Thanks. I'll use the pastebin
Feb 23 18:16:03 <hab25>	https://bpa.st/53CJ4
Feb 23 18:16:59 <thuna`>	hab25: If the only thing you are doing is ensuring transient-mark-mode is local before doing whatever the macro is doing (putting aside whether it needs to be a macro to begin with) then you can do (make-local-variable 'transient-mark-mode) and then do (my/setq-with-boundp-and-type-check transient-mark-mode '(only . t))
Feb 23 18:17:02 <corwin>	I think you want let.
Feb 23 18:18:32 <corwin>	Maybe I misunderstand why you are trying to make-local-variable here but did you consider something like:   (when shift-select-mode (let ((transient-mark-mode (only . t))) (do-more-stuff)))
Feb 23 18:20:26 <thuna`>	corwin's suggestion is probably what you are looking for but it would be nice if you could explain the context behind this snippet.
Feb 23 18:21:26 <hab25>	thuna`: thanks, your solution is an improvement. I'd love it if I could avoid writing "transient-mark-mode" twice though since that is more error prone. In this case my `my/setq-with-boundp-and-type-check` does a `boundp` check practically eliminates the chance of a mistyping error (you'd have to mistype to another bound symbol)
Feb 23 18:22:31 <hab25>	thuna: but nonetheless it would be cool if there was a solution for this typing twice problem that worked in the general case where there is not a `boundp` check afterwords
Feb 23 18:23:01 <corwin>	Isn't transient-mark-mode the mode var for transient mark, a global minor mode, thus always buffer local?
Feb 23 18:24:05 <hab25>	thuna`: The reason `my/setq-with-boundp-and-type-check` is a macro is to mirror the interface of `setq`. This is only possible through a macro since `setq` is a special form
Feb 23 18:24:20 <corwin>	Hmm.  Disabling it gives me "disabled" not "disabled in current buffer", so perhaps not.
Feb 23 18:24:58 <thuna`>	corwin: transient-mark-mode doesn't seem to be buffer-local, since it's dv doesn't have a "this variable automatically becomes buffer-local when set"
Feb 23 18:25:48 <corwin>	hab25: So, it's to avoid having to quote the symbol given as the first arg? (FTR, I think I asked "why a macro" first ;)
Feb 23 18:26:25 <thuna`>	hab25: That "mistype-protection" is very much not a good idea.  As for `-and-type-check', it's not obvious to me how you would specify how to type-check with how you are calling the macro, so it seems overall redundant
Feb 23 18:27:36 <hab25>	corwin: regarding local transient mark mode, see https://github.com/emacs-mirror/emacs/blob/c0d7f7fc54f6c67f409e75f20ebb4420d96c71a6/lisp/simple.el#L7435
Feb 23 18:28:53 <hab25>	thuna`: why is it not a good idea?
Feb 23 18:30:21 <thuna`>	If you can't trust the developer to not mistype variable names, how can you trust them to write working code?
Feb 23 18:31:18 <hab25>	Trust is not absolute, humans make mistakes. That is part of the motivation for writing tests.
Feb 23 18:31:29 <thuna`>	Or are you accepting arbitrary variable names from the user and setting those?  If so, the check for that should be the first thing you do.
Feb 23 18:31:35 <hab25>	Trust shouldn't be absolute*
Feb 23 18:32:59 <corwin>	hab25: the emacs sources you link make sense: they depend on set-local to ensure transient-mark-mode is buffer local.
Feb 23 18:36:34 <corwin>	btw, here is the same link pointing to the authoritative repo: https://git.sv.gnu.org/cgit/emacs.git/tree/lisp/simple.el#n7435
Feb 23 18:38:44 <corwin>	(if you needed that particular rev you could tack on id=c0d7f7 or smth)
Feb 23 18:38:53 <hab25>	I think I made a mistake in not providing a minimal question and providing too much distracting tangential code. Here's a better one: is there a way I can `setq` a dynamically named variable without using `eval`? I.e. not e.g. (eval `(setq ,my-var my-val))?
Feb 23 18:39:13 <e1f>	wow, is that the longest named function evar?
Feb 23 18:39:22 <corwin>	We use set instead of setq when the name isn't a symbol known at design time, I think.
Feb 23 18:39:30 <hab25>	I usually go to github first so I can use its search, e.g. https://github.com/search?q=repo%3Aemacs-mirror%2Femacs+foobar&type=code
Feb 23 18:40:13 <corwin>	fair enough. i tend to use grep and so forth on the full sources so i can do all the for emacs.
Feb 23 18:40:22 <corwin>	s/for emacs/from emacs
Feb 23 18:40:34 <grym>	,rgel <3
Feb 23 18:40:35 <fsbot>	grym, rgel: rg.el is an Emacs search package based on the ripgrep command line tool. It allows you to interactively create searches, doing automatic searches based on the editing context, refining and modifying search results and much more. It is also highly configurable to be able to fit different users’ needs. (https://rgel.readthedocs.io/en/2.0.3/)
Feb 23 18:40:41 <thuna`>	(And `set' only sets the value globally AFAIK)
Feb 23 18:40:44 <hab25>	corwin: right, me too, but then I don't get a shareable link
Feb 23 18:41:30 <corwin>	For me links like this are clickable (I'm using ERC 5.6-git for Emacs 30.0.50):  (info "(elisp)")
Feb 23 18:41:55 <thuna`>	Actually, no, set works for buffer-locals if I'm reading set_internal right
Feb 23 18:43:19 <hab25>	corwin: I mean, comparing to github search, simply grepping does not as-easily lead you to a shareable http link that you can paste here
Feb 23 18:43:33 <grym>	you could kind of munge something by introspecting your remote url
Feb 23 18:44:36 <hab25>	thuna`: that is my understanding as well. It skips lexically-bound vars though, which is why I avoid it (and answers your previous "why a macro?" questions: because I must use `setq`).
Feb 23 18:45:15 <thuna`>	hab25: Binding arbitrary symbols does not land itself well to lexical-binding
Feb 23 18:45:22 <corwin>	Perhaps it just doesn't come up for me much that I want to link to a emacs source file vs a command/function, binding, or info section.  We have fsbot (,,botsnack,,) that gives us ,df <fun> ,dk <key seq> and I've already shown how I like to link info.
Feb 23 18:45:23 <fsbot>	yum! ...I mean, apt!
Feb 23 18:46:26 <hab25>	grym: you could, but I haven't. If there's a package that does that out-of-the-box I'd love to hear about it
Feb 23 18:47:25 <grym>	hab25: me too!
Feb 23 18:47:35 <grym>	i swear i saw something like it once but .. whoosh
Feb 23 18:47:57 <hab25>	corwin: that runs into the problem that e.g. fsbot's  version of the code might not be the one you want to refer to. Most of the time that's fine though
Feb 23 18:48:29 <corwin>	absolutely true!  we do run into that quite a bit.
Feb 23 18:48:44 <corwin>	Not as often as botch color codes.  But it happens.
Feb 23 18:49:22 <thuna`>	hab25: In general I would answer your question with "Don't do it" but if you really really must then the only options I can think of are `set' if you can disregard lexical bindings and `eval' if you cannot.
Feb 23 18:49:30 <incal>	,g If anything can start anew, then everything must continue
Feb 23 18:49:31 <fsbot>	🤖[g] A philosophical perspective on the cycle of beginnings and continuations!
Feb 23 18:50:20 <incal>	,g Everything begins with an E
Feb 23 18:50:21 <fsbot>	🤖[g] Except for the beginning itself!
Feb 23 18:50:35 <incal>	:O
Feb 23 18:50:47 <incal>	this bot is a genious
Feb 23 18:51:13 <hab25>	grym: is your usage of "whoosh" meant to represent sound of the memory leaving your head? Usually I see that instead used to indicate that somebody failed to understand something
Feb 23 18:51:18 <grym>	rudybot: my name is wile e. coyotoe
Feb 23 18:51:18 <rudybot>	grym: Wow, "Wile E. Coyote's Own"
Feb 23 18:51:32 <grym>	hab25: in this case, it means i lost the reference not that a joke went over my head
Feb 23 18:51:55 <incal>	I'm not getting it
Feb 23 18:52:38 <hab25>	thuna`: thanks, I was afraid that might be the case. These's a third option which will likely be my path forward as it's the least undesirable: turning #'my/activate-mark-and-arrange-for-handling-by-shift-selection-if-enabled into a macro
Feb 23 18:52:49 <hab25>	grym: I see, thanks
Feb 23 18:52:59 <corwin>	thuna`, hab25: I wonder if one could git rid of the eval by making the defun also a macro, thus deferring execution.
Feb 23 18:53:50 <hab25>	corwin: yep, we just said the same thing in close time-proximity
Feb 23 18:54:38 <corwin>	oh, yup, yup.  good idea :P
Feb 23 18:57:01 <thuna`>	You can define a setq-local version of my/setq-with-lots-of-stuff and use that instead
Feb 23 18:57:30 <thuna`>	You'd just need to replace the setq in its definition with setq-local
Feb 23 19:04:22 <corwin>	new high-water mark #emacs-dev ><gliphy> [master@c0d7f7] Msys build dubious: err_warn 36  https://corwin.bru.st/emacs-30/emacs-30-c5fa58 (Avalon)[11:47]
Feb 23 19:05:10 <corwin>	(That looks like a lot of errors/warnings to me)
Feb 23 19:07:05 <corwin>	https://bpa.st/JVAUO
Feb 23 19:07:30 <hab25>	thuna`: thanks, that's a great idea which satisfies this case.  I'd love it if there were something like a syntax "`!" where I can write `!(setq ,my-var my-val) and it behaves like (eval `(setq ,my-var my-val)) and but without turning off the byte compiler linting like plain ` does
Feb 23 19:09:06 <hab25>	I'd use it to replace all my (eval `...) usages
Feb 23 19:11:26 <corwin>	,,channel-wisdom,,?
Feb 23 19:11:27 <fsbot>	what if emacs has built in hacks and rms is secretly compiling a list of who has and does not have proprietary software installed
Feb 23 19:12:44 <technomancy>	it's not secret! https://en.wikipedia.org/wiki/Vrms
Feb 23 19:16:19 <weary-traveler>	though that's debian free and not fsf free
Feb 23 19:21:53 <corwin>	I realize this is probably of interest only to me, but.. it's fascinating! Since I've been running the push and Windows build notices experiment it's the first time it has helped me notice something pretty unusual looking.
Feb 23 19:21:53 <corwin>	Referring to the paste (from #emacs-dev), above.. From linked commit we have a clean build; since we get 35 then 36 hits grepping for 'error|warn' https://git.savannah.gnu.org/cgit/emacs.git/commit/?id=90d3b3408e404aba383302c3147d3ca614619986
Feb 23 19:21:53 <corwin>	Anyone building HEAD (any platform) in the last four hours or that could do similar grepping of their output from autogen.sh + configure + make?
Feb 23 19:56:30 <bpalmer>	Let's port emacs to a high level language that can be compiled into N different languages, to satisfy people who want to port emacs to another language?
Feb 23 19:57:37 <corwin>	Your proposal is acceptable.
Feb 23 19:59:30 <hodapp>	EMUMPS when?
Feb 23 20:00:38 <Odin-LAP>	bpalmer: Replacing Lisp, C, or both?
Feb 23 20:03:28 <bpalmer>	all  of it. (to clip a meme: https://www.youtube.com/watch?v=A_iAE2JIyEE )
Feb 23 20:03:29 <judybot>	[title] Annie Edison: "EVERYTHING" (Community S05E06) HD - YouTube
Feb 23 20:09:21 <horribleprogram>	can u guys spoonfeed me
Feb 23 20:09:28 <horribleprogram>	so
Feb 23 20:09:37 <horribleprogram>	paradigms of AI programming, it's Common Lisp
Feb 23 20:09:52 <horribleprogram>	but this particular code segment is compatible with ELisp
Feb 23 20:10:43 <horribleprogram>	(defvar *names* '((Robert E. Lee) ...))
Feb 23 20:10:44 <Odin-LAP>	bpalmer: Sounds simple enough.
Feb 23 20:10:57 <horribleprogram>	so the ... here seems to indicate there's more to this list of names
Feb 23 20:11:26 <horribleprogram>	taking that into account, to get "Lee" here, it says (caddar *names*)
Feb 23 20:12:25 <horribleprogram>	now, I have a basic grasp on CAR and CDR of cons cells
Feb 23 20:12:45 <horribleprogram>	first of all, how do I read this?
Feb 23 20:13:03 <horribleprogram>	C-h f says "returns the car of the cdr of the cdr of the car of X"
Feb 23 20:13:40 <Odin-LAP>	It's equivalent to (car (cdr (cdr (car *names*))))
Feb 23 20:13:51 <horribleprogram>	so i'm reading the 'caddar' from RTL?
Feb 23 20:14:01 <horribleprogram>	and when I see an a, it's CAR, when i see a d, it's CDR?
Feb 23 20:14:23 <Odin-LAP>	There is a #commonlisp on here, by the way. :)
Feb 23 20:14:26 <bpalmer>	yes. (let ((l '(1 2 3 4))) (caddr l)) => 3
Feb 23 20:14:31 <horribleprogram>	cddar would be the "cdr of the cdr of the car of X"
Feb 23 20:14:43 <horribleprogram>	kk perfect
Feb 23 20:14:57 <bkhl>	So you read it whichever way you want but you do both versions in the same direction. :-)
Feb 23 20:15:12 <technomancy>	horribleprogram: don't actually write programs this way tho, it's very silly
Feb 23 20:15:15 <horribleprogram>	ik
Feb 23 20:15:20 <horribleprogram>	the book even says "don't do this"
Feb 23 20:15:25 <Odin-LAP>	horribleprogram: https://www.lispworks.com/documentation/HyperSpec/Body/f_car_c.htm
Feb 23 20:15:26 <technomancy>	ah, that's good =)
Feb 23 20:15:34 <technomancy>	it's mostly for showing off or playing around
Feb 23 20:15:40 <horribleprogram>	Odin-LAP: perfect, this is nice
Feb 23 20:15:52 <horribleprogram>	but i don't understand how we got Lee there
Feb 23 20:16:15 <Inline>	no idea
Feb 23 20:16:17 <Odin-LAP>	These functions are mostly there because Common Lisp was trying to be compatible with existing implementations, some of which had a ton of these.
Feb 23 20:16:37 <horribleprogram>	working backwards, car of '((Robert E. Lee) (foo)) is '(Robert E. Lee)
Feb 23 20:16:41 <Odin-LAP>	horribleprogram: car gets you the first thing of  list, cdr moves you a step back.
Feb 23 20:16:56 <horribleprogram>	correct
Feb 23 20:17:09 <horribleprogram>	so the cdr of '(Robert E. Lee) would be the last 2 cons cells of that, the last 2 list elements
Feb 23 20:17:22 <Odin-LAP>	horribleprogram: So first you get the list that's the first element of the whole thing. Next you throw away the two elements on the front of that, then car gets you the first remaining thing.
Feb 23 20:17:25 <bkhl>	You can also think of them as head and tail.
Feb 23 20:17:35 <technomancy>	or first/rest
Feb 23 20:17:37 <horribleprogram>	OH
Feb 23 20:17:48 <Odin-LAP>	Or first and rest.
Feb 23 20:17:53 <technomancy>	"proper" vs "improper" complicates that tho
Feb 23 20:17:55 <horribleprogram>	the extra CAR is to actually extract it from the list
Feb 23 20:18:04 <Odin-LAP>	Bah, typed that, alt-tabbed out, and then back in to hit enter. :)
Feb 23 20:18:05 <horribleprogram>	yeah let's consider only proper lists right now
Feb 23 20:18:23 <horribleprogram>	This doesn't come intuitive to me lol
Feb 23 20:18:34 <horribleprogram>	like I can't visualize something like cdaaar
Feb 23 20:18:40 <Odin-LAP>	horribleprogram: Don't worry, it just plain isn't intuitive.
Feb 23 20:19:03 <Odin-LAP>	That's _why_ the abbreviations aren't really recommended for use.
Feb 23 20:19:38 <technomancy>	also not recommended: naming core functions after the implementation details of which registers you store your cells in
Feb 23 20:19:42 <bkhl>	If only there was some pattern matching to make it more visual. :-)
Feb 23 20:19:53 <thuna`>	cXd is write-only
Feb 23 20:20:05 <thuna`>	s/cXd/cXr/
Feb 23 20:20:15 <horribleprogram>	OMFG
Feb 23 20:20:17 <horribleprogram>	I'm doing that
Feb 23 20:20:59 <horribleprogram>	as you type the a's and d's, it highlights a more specific result
Feb 23 20:21:25 <Odin-LAP>	technomancy: Especially not recommended is writing a functioning temporary syntax for your programming language's syntax tree because you can't quite work out what you want the final syntax to look like.
Feb 23 20:22:03 <technomancy>	Odin-LAP: nah that ones fine =D
Feb 23 20:22:26 <horribleprogram>	do all thee accessors work for a simple nil?
Feb 23 20:22:33 <Odin-LAP>	technomancy: Well, it's how you end up with core functions mnemonically named for implementation details. :)
Feb 23 20:22:34 <horribleprogram>	as in, the car of nil is nil, and the cdr of nil is nil?
Feb 23 20:22:58 <horribleprogram>	so (cdadr nil) will be nil
Feb 23 20:23:15 <bkhl>	Yes.
Feb 23 20:23:17 <mwnaylor>	A method for creating buffer local functions. https://www.emacswiki.org/emacs/BufferLocalCommand Thoughts?
Feb 23 20:23:29 <catern>	hmmm
Feb 23 20:23:33 <horribleprogram>	sweet ty
Feb 23 20:23:34 <technomancy>	some lisps will err out taking the car of an empty list IIRC
Feb 23 20:23:55 <catern>	is there a version of let which wraps the expression in a progn? so like you could do (let ((foo (forward-char) (point))) ....)
Feb 23 20:23:55 <bpalmer>	I do admire the citations.
Feb 23 20:23:58 <Odin-LAP>	horribleprogram: According to the CL standard, they should behave the same as the equivalent sequences of car and cdr, so yes.
Feb 23 20:24:06 <catern>	that would be so helpful
Feb 23 20:24:10 <horribleprogram>	sweet
Feb 23 20:24:22 <catern>	also, even more helpful would be if it just returned point at the end, actually
Feb 23 20:24:50 <technomancy>	I guess that might just be schemes; they're a lot more careful about not letting nonsense data leak
Feb 23 20:25:01 <bpalmer>	mwnaylor: use obarray-make , not make-vector
Feb 23 20:25:38 <bpalmer>	mwnaylor: but seems reasonable.
Feb 23 20:25:42 <mwnaylor>	bpalmer: I'll keep that in mind.
Feb 23 20:26:45 <Odin-LAP>	technomancy: I suspect there may be some older lisps as well, depending on what was easier to implement.
Feb 23 20:27:00 <technomancy>	ah true
Feb 23 20:27:06 <technomancy>	iirc it was pretty contentious when CL was standardized
Feb 23 20:27:09 <bpalmer>	catern: you'd need to macro that out, but I think the false positives will outweigh any advantage over just typing progn
Feb 23 20:27:56 *	Odin-LAP looks at the ISLISP spec.
Feb 23 20:27:56 <catern>	bpalmer: fair
Feb 23 20:28:03 <bpalmer>	Elisp decided to live in an almost car-safe society.
Feb 23 20:28:50 <mwnaylor>	Appears to be a technique I've been looking for. I want to be able to have elisp functions that will be used in org-mode spreadsheets. I don't need them lingering in global space once the buffer has been killed.
Feb 23 20:31:47 <Odin-LAP>	Hm, looks like ISLISP says both car and cdr error out on nil.
Feb 23 20:32:48 <mwnaylor>	I prefer car, cdr, and similar functions returning nil on the empty list rather than throwing an error.
Feb 23 20:34:26 <Odin-LAP>	It's pretty easy to create infinite loops that way, though.
Feb 23 20:34:30 <rpav>	mwnaylor: yeah it's an incredibly useful property
Feb 23 20:34:43 <rpav>	Odin-LAP: it's really not
Feb 23 20:34:48 <bpalmer>	I find the current elisp behavior very convenient. But I could just as easily use car-safe and cdr-safe for that; special casing nil is just that, a special case.
Feb 23 20:34:55 <rpav>	you loop until you get nil, then you're done
Feb 23 20:35:02 <Inline>	endp ?
Feb 23 20:35:48 <rpav>	the fact that nil is the _only_ false value also helps
Feb 23 20:36:48 <Odin-LAP>	rpav: Which means you're checking, at which point there's really no difference between checking for error or checking for nil.
Feb 23 20:36:58 <rpav>	Odin-LAP: not at all
Feb 23 20:37:20 <rpav>	it's always just `(when obj continue)`
Feb 23 20:37:44 <rpav>	there's no "well did i compare with the right thing, or did i forget and only check for one value"
Feb 23 20:38:55 <rpav>	if you use some ENDP, presumably you'd _also_ need a non-nil CDR, so then it's like.. well, CDR is nil but not ENDP? or what
Feb 23 20:39:57 <Odin-LAP>	We're not talking about cdr returning some sentinel value.
Feb 23 20:40:02 <rpav>	really a lot of programming would be a lot nicer with "default but valid values" but most programming languages don't make doing that very nice
Feb 23 20:40:18 <rpav>	Odin-LAP: i'm talking about how you _implement_ it
Feb 23 20:41:48 <rpav>	if you want to `(defun endp (cons) (null (cdr cons)))` you can already.. but it's also not going to make code nicer
Feb 23 20:42:00 <Odin-LAP>	rpav: Yes, in two implementation functions, not an endless variety of places in user code, so why would you forget to do the check?
Feb 23 20:42:40 <rpav>	(defun thing (list) (when list (do-part (car list)) (thing (cdr list))))
Feb 23 20:44:27 <Odin-LAP>	Surprisingly, tail-call optimisation is not a given in all Lisps...
Feb 23 20:44:52 <Inline>	scheme does it
Feb 23 20:44:55 <Inline>	cl not
Feb 23 20:45:04 <Inline>	no idea about elisp
Feb 23 20:45:04 <bpalmer>	CL does not mandate it.
Feb 23 20:45:08 <rpav>	mapcar (at least a very simple version) is even like what, (defun mapcar (f list) (when list (list* (f (car list)) (cdr list))))
Feb 23 20:46:22 <bpalmer>	rpav: also, (defun endp (obj) (cond ((consp obj) nil) ((null obj) t) (t (error "Neither fish nor fowl."))))
Feb 23 20:47:02 <Inline>	nor necessarily
Feb 23 20:47:05 <Inline>	lol
Feb 23 20:47:49 <bpalmer>	rpav: also, you're doing a fold operation
Feb 23 20:48:14 <rpav>	oh yeah need another mapcar at the end there
Feb 23 20:49:07 <rpav>	bpalmer: if you want to be sequence-agnostic, that's a bit different, but you could
Feb 23 20:49:42 <C0MMIE>	anyone experienced with the biboumi xmpp-orc gateway?
Feb 23 20:49:56 <C0MMIE>	anyone experienced with the biboumi xmpp-irc gateway?
Feb 23 20:50:21 <rpav>	oh, i was wondering what xmpp-orc was, and if it was fundamentally opposed by xmpp-elf
Feb 23 20:50:49 <Inline>	orcs and elfs
Feb 23 20:50:50 <Inline>	lol
Feb 23 20:51:00 <C0MMIE>	...
Feb 23 20:51:50 <rpav>	also disappointed it wasn't actually xmpp-org, which would probably have a higher chance of someone experienced here
Feb 23 20:52:16 <Inline>	is xmpp jabber ?
Feb 23 20:52:28 <rpav>	yeah
Feb 23 20:52:44 <Inline>	hmm, ok i have no idea about jabber, didn't even try to use it
Feb 23 20:53:26 <Inline>	i have never, not even once, used a jabber client
Feb 23 20:53:51 <Inline>	does it have something superior to the rest ?
Feb 23 20:54:21 <C0MMIE>	it has presence. it's like it's big selling point
Feb 23 20:54:34 <Inline>	what is that ?
Feb 23 20:54:35 <bkhl>	It's a distributed chat protocol which adds some features over IRC like a bit of hypertext, persistent logs, and what not.
Feb 23 20:54:47 <Inline>	ah
Feb 23 20:54:48 <rpav>	i can say that after seting up an ejabberd server and client and getting everything working ... i never used it, so i couldn't tell you ;)
Feb 23 20:54:50 <C0MMIE>	it's also stupidly simple messaging. it looks like XML, like rss
Feb 23 20:55:17 <bkhl>	It got a bit embraced and extinguished by Google.
Feb 23 20:55:19 <Inline>	encrypted ?
Feb 23 20:55:40 <C0MMIE>	most clients implement omemo on top of it
Feb 23 20:55:49 <Odin-LAP>	Not by default, it predates the end-to-end encryption craze, but there are protocols on top.
Feb 23 20:55:57 <bkhl>	Don't know if Facebook still use ejabberd for messenger.
Feb 23 20:56:11 <bkhl>	At some point at least, it was based on it.
Feb 23 20:56:16 <C0MMIE>	they might, but the don't federate
Feb 23 20:56:21 <Odin-LAP>	Jabber is MSN, AIM type of thing, rather than similar to IRC.
Feb 23 20:56:26 <Odin-LAP>	... any more. They used to.
Feb 23 20:56:31 <Odin-LAP>	Same as Google.
Feb 23 20:56:52 <lispmacs[work]>	Hi, in elisp, what is the most sensible way to temporarily override a global variable before calling a function?
Feb 23 20:57:02 <johnw>	`let` bind it
Feb 23 20:57:10 <Odin-LAP>	Or, well, no, sorry. No federation from either, but they allowed other clients to connect.
Feb 23 20:57:23 <mwnaylor>	I'm trying the code from the wiki in elpl. So far, the local defun is causing a void variable error.
Feb 23 20:57:32 <Inline>	right, and make sure you don't declare it special in that scope
Feb 23 20:57:44 <bkhl>	HCoop.net provides Jabber accounts if you're a member.
Feb 23 20:58:16 <lispmacs[work]>	johnw: the function (not defined by me) will internally use the let-bound version?
Feb 23 20:58:33 <lispmacs[work]>	we are dynamically bound by default?
Feb 23 20:58:35 <bpalmer>	lispmacs[work]: if the variable is defined with defvar, yes.
Feb 23 20:58:47 <johnw>	we are dynamically bound by default, unless the model explicit uses lexical binding
Feb 23 20:59:00 <bpalmer>	defvar variables are always dynamically bound by let.
Feb 23 20:59:02 <johnw>	does defvar always introduce a special variable?
Feb 23 20:59:06 <bpalmer>	yes.
Feb 23 20:59:07 <johnw>	ah, great
Feb 23 20:59:11 <mwnaylor>	Time to research interning and object-arrays to see if I can implement it as plain functions and not macros.
Feb 23 20:59:57 <Inline>	can you enforce lexical binding only for a certain scope and then leave it ?
Feb 23 21:00:05 <bpalmer>	I suppose there is an issue if (let ((x 3)) (defun foo () x))   is evaluated before (defvar x nil). Hmm.
Feb 23 21:00:32 <bpalmer>	Inline: nope. If you want that, you may want to use the lexical-let macro.
Feb 23 21:00:38 <Inline>	ah ok
Feb 23 21:01:19 <bpalmer>	From the elisp manual: "Every variable that has been defined with ‘defvar’, ‘defcustom’ or ‘defconst’ is a special variable (*note Defining Variables::).  All other variables are subject to lexical binding."
Feb 23 21:01:26 <johnw>	nice
Feb 23 21:04:31 <lispmacs[work]>	The let approach doesn't seem to be working in my case
Feb 23 21:04:37 <lispmacs[work]>	the variable in question is defined by defcustom
Feb 23 21:04:50 <lispmacs[work]>	I'm trying to temporarily overroad org-roam-graph-viewer
Feb 23 21:04:55 <lispmacs[work]>	override
Feb 23 21:05:01 <johnw>	defcustom should be a special variable
Feb 23 21:05:08 <lispmacs[work]>	before calling org-roam-graph
Feb 23 21:05:34 <lispmacs[work]>	I guess the question is does let really override special variables?
Feb 23 21:05:40 <lispmacs[work]>	or create a lexical context?
Feb 23 21:06:02 <johnw>	well, you can try the old-school way of setq into an old-var local variable, setq the global, and then restore it in the fallthrough of a condition-case
Feb 23 21:06:24 <rpav>	lispmacs[work]: there are things that can preclude dynamic bindings from being in effect when you want
Feb 23 21:06:32 <bpalmer>	lispmacs[work]: you'll have to show some code, I suspect.
Feb 23 21:06:35 <rpav>	^^
Feb 23 21:06:35 <Odin-LAP>	It should establish a dynamic binding, shouldn't it?
Feb 23 21:06:41 <lispmacs[work]>	johnw: is there some convenient push function for that?
Feb 23 21:06:50 <johnw>	not that I'm aware of, since `let` is usually the right answer
Feb 23 21:07:19 <bpalmer>	the biggest issue that does *not* work with simple lets is any non-synchronous function.
Feb 23 21:07:20 <rpav>	e.g. if you do something like (let ((dynamic-binding ..)) (set-process-handler #'function ..)) or whatever, it won't be in effect when the process handler is called
Feb 23 21:07:30 <lispmacs[work]>	https://bpa.st/YGN2K
Feb 23 21:07:31 <rpav>	yeah exactly
Feb 23 21:07:35 <bpalmer>	for example, anything using url-retrieve is a real pain
Feb 23 21:07:55 <rpav>	i guess the question is wtf does org-graph-roam do
Feb 23 21:08:32 <lispmacs[work]>	rpav: it opens an SVG file in the viewer specified by org-roam-graph-viewer
Feb 23 21:09:22 <lispmacs[work]>	org-roam-graph, to be precise
Feb 23 21:09:41 <lispmacs[work]>	correcting your typo
Feb 23 21:09:42 <rpav>	it would, yes, help a lot if i got the symbol right heh
Feb 23 21:09:53 <bpalmer>	what file is org-roam-graph defined in?
Feb 23 21:09:55 <rpav>	i'm like "why is nothing finding this?!"
Feb 23 21:10:02 *	bpalmer bemoans github's lack of logged out search
Feb 23 21:10:13 <lispmacs[work]>	org-roam-graph.el
Feb 23 21:10:21 <bpalmer>	oh, not part of org-roam itself
Feb 23 21:10:40 <lispmacs[work]>	it is a file in the same package
Feb 23 21:10:59 <lispmacs[work]>	line 137 in my version
Feb 23 21:11:05 <rpav>	finding the source is annoyingly difficult
Feb 23 21:11:18 <bpalmer>	ah, in a subdir: https://github.com/org-roam/org-roam/blob/main/extensions/org-roam-graph.el
Feb 23 21:11:45 <lispmacs[work]>	C-h f org-roam-graph brings it up quickly for me
Feb 23 21:12:10 <rpav>	lispmacs[work]: well without installing it
Feb 23 21:12:25 <lispmacs[work]>	ah
Feb 23 21:12:30 <bpalmer>	lispmacs[work]: yes, this is an asynchronous function.
Feb 23 21:12:50 <bpalmer>	lispmacs[work]: it calls a process to build the graph and then calls the browser via a callback in the process sentinel
Feb 23 21:13:05 <lispmacs[work]>	dasterdly evil
Feb 23 21:14:34 <bpalmer>	lispmacs[work]: one way to deal with this is to advise org-roam-graph--build to wrap its callback function in a new function that has the dynamic binding at work
Feb 23 21:14:49 <bpalmer>	this is, of course, mildly intrusive on an internal function.
Feb 23 21:15:11 <lispmacs[work]>	um, it sounds easier to just save and restore the old value
Feb 23 21:15:27 <bpalmer>	yes, but you still have to figure out when to restore the old value. Because, synchronicity
Feb 23 21:15:34 <lispmacs[work]>	ah
Feb 23 21:15:47 <lispmacs[work]>	crickeys
Feb 23 21:16:08 <bpalmer>	oh, I guess you can put the restoration in the hook org-roam-graph-generation-hook, which runs after the callback
Feb 23 21:16:12 <bpalmer>	see line 176
Feb 23 21:16:29 <bpalmer>	put a function on the hook which restores the browser variable and removes itself from the hook
Feb 23 21:17:08 <bpalmer>	you'll just have to be careful in the case that you call org-roam-graph multiple times while the graph is being built.
Feb 23 21:17:12 <lispmacs[work]>	so, erm, how exactly do I save the value of a variable in a local variable without making the old variable a reference to the new variable
Feb 23 21:17:23 <lispmacs[work]>	or, the new variable a reference to the old variable, I meant
Feb 23 21:17:57 <bpalmer>	(let ((x y)) <-- x is a local/lexical variable that has the same value as y. But changing y will not change x
Feb 23 21:18:08 <lispmacs[work]>	okay, thanks
Feb 23 21:18:15 <bpalmer>	(mutating y might. fun of mutability)
**** BEGIN LOGGING AT Fri Feb 23 21:29:51 2024

Feb 23 21:29:49 *	Now talking on #emacs
Feb 23 21:29:49 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 23 21:29:49 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 23 21:30:24 <mwnaylor>	Under the hood, `obarray-make' calls `make-vector'.
Feb 23 21:31:26 <JohnGalt>	it stores bindings
Feb 23 21:31:38 <JohnGalt>	I mean data
Feb 23 21:32:06 <JohnGalt>	its pretty much a dictionary
Feb 23 21:32:30 <thuna`>	Does anyone know/remember the name of a/the alternate diff program that interfaced nicely with magit?
Feb 23 21:33:38 <JohnGalt>	emacs has a great diff mode
Feb 23 21:33:51 <JohnGalt>	you can cherry pick and delete hunks
Feb 23 21:34:26 <kendell>	I'm a very new person to emacs and emacspeak and I'm having trouble getting emacspeak 53 to bite compile on my laptop. My wife's laptop bite compiles it with no issues, same version and everything. Is there any way I can troubleshoot the problem so I can use emacspeak? I really am impressed with both it and emacs
Feb 23 21:34:28 <thuna`>	I just need a bit smarter highlighting.  Indenting the block in elisp doesn't really count as a "change"
Feb 23 21:35:49 <kendell>	ubuntu 24.04 noble numbat, system fully upgraded, emacs 29
Feb 23 21:36:14 <JohnGalt>	thuna`: if the file changes its a change, no diff program is going to act differently or weed out whitespace changes for you
Feb 23 21:36:18 <JohnGalt>	none that I know of
Feb 23 21:37:16 <thuna`>	JohnGalt: The one I saw didn't get rid of the changes but highlighted "important" changes differently
Feb 23 21:37:26 <kendell>	I'm looking for help from an emacs expert who can help me troubleshoot why emacspeak, which runs on top of emacs, won't bite compile on my laptop, a vizio, but will on mellisa's, which is a toshiba. Hers is running ubuntu 22.04 rather than 24.04
Feb 23 21:38:17 <malc>	i'm witnessing significant screen corruption issues with emacs/gtk on asahi linux. the wm is kwin, the ws is wayland. was wondering if there was some kind of compatibility option somewhere
Feb 23 21:38:32 <thuna`>	kendell: What do you mean by "it doesn't compile"?  Do you have warnings/errors?
Feb 23 21:38:45 <younder>	elisp doesn't use (Language Server Protocol) LSP. It doesn't need it. Lisp has always had this level of introspection. Thus the highlighting should be plenty smart. It is not merely based on regeps but on the the lisp syntax of the document.
Feb 23 21:39:19 <kendell>	no errors displayed, just a temporary log file I can't seem to get to to copy and paste. Just says bite compiling, 0.6 min before saying that the emacspeak install process exited with code 1, standard apt something went wrong message
Feb 23 21:40:36 <kendell>	if I could find that log file I could probably pastebin it and someone could pinpoint the problem. It's not in /var/log though
Feb 23 21:40:45 <thuna`>	kendell: It's a bit difficult to help without the log file, especially since I'm not on ubuntu.  Maybe someone here can try install it as well?
Feb 23 21:40:59 <thuna`>	s/someone here/someone here with ubuntu/
Feb 23 21:41:22 <kendell>	that would be great, thanks. Just out of curiosity, where is that log file stored? I'll find it and pastebin it
Feb 23 21:42:09 <jvml>	hello once again #emacs denizens
Feb 23 21:43:15 <younder>	thuna' You should look in the CUSTOMIZE section to change the highlighting.
Feb 23 21:43:25 <jvml>	just had a bunch of caffeine which was pretty nice
Feb 23 21:43:49 <kendell>	caffeine is always really nice. About to indulge in some myself while I troubleshoot emacspeak
Feb 23 21:44:10 <jvml>	what's your ideal delivery mechanism?
Feb 23 21:44:34 <kendell>	soda, coffee, tea, anything will work. And of course lets not forget energy drinks
Feb 23 21:44:36 <jvml>	i alternate between tea (usually either sencha or lapsang souchong depending on how much caffeine i'd like) and energy drinks
Feb 23 21:44:51 <jvml>	i don't really use soda as a delivery mechanism but i am partial to the taste of mountain dew baja blast...
Feb 23 21:45:15 <jvml>	which is more or less an energy drink for people who are scared of energy drinks LOL
Feb 23 21:45:40 <kendell>	we need an open source energy drink. Or rather, an open recipe energy drink.
Feb 23 21:45:47 <kendell>	and an open recipe coke, etc
Feb 23 21:46:25 <jvml>	would love to have an open source energy drink based on tea...or maybe i'm just thinking of tea
Feb 23 21:46:45 <grym>	i think that's just tea
Feb 23 21:46:50 <Odin-LAP>	https://en.wikipedia.org/wiki/OpenCola_(drink)
Feb 23 21:46:58 <kendell>	I hate proprietary licenses, can't stand them. It's ours, you can't touch it. Though you can use it, with these conditions. No thanks
Feb 23 21:47:02 <jvml>	and i've heard of OpenCola before because i used to be really autistic about making soda
Feb 23 21:47:08 <jvml>	i never made OpenCola in particular tho
Feb 23 21:47:40 <JohnGalt>	I like going to the coffee shop, it gets me out of the house for a while
Feb 23 21:47:41 <jvml>	cola is delicious in general
Feb 23 21:47:54 <jvml>	citrus colas in particular (european Pepsi Lemon is amazing)
Feb 23 21:47:54 <JohnGalt>	yeah, I OD'd on diet coke
Feb 23 21:47:55 <younder>	autistic about making SODA? How did you manage that?
Feb 23 21:48:04 <JohnGalt>	had to quit Diet Coke
Feb 23 21:48:05 <kendell>	amen to both the last couple of posts. Coffee shops for the win, and I love cola
Feb 23 21:48:27 <jvml>	younder: i would generally make simple syrups on the stovetop and add club soda to taste, it was a very simple process but i tried lots of different recipes with it
Feb 23 21:48:36 <thuna`>	kendell: You don't actually need to byte-compile the package.  If you can't disable it when installing the shipped emacspeak maybe you can try to install it from the source?
Feb 23 21:49:16 <jvml>	sometimes i still make simple syrups, one time i prepared a cinnamon-orange drink for a date and it was a hit
Feb 23 21:49:25 <kendell>	building emacspeak from source, now there's an idea
Feb 23 21:49:34 <jvml>	just water, orange juice, orange zest, and a bit of cinnamon
Feb 23 21:49:36 <jvml>	and sugar.
Feb 23 21:50:13 <jvml>	lotta sugar
Feb 23 21:50:22 <grym>	jvml: sub bourbon for water and sure
Feb 23 21:50:31 <jvml>	LOL
Feb 23 21:50:51 <jvml>	i'm sure it would've been fantastic as a cocktail
Feb 23 21:51:16 <kendell>	I looked at the windows license the other day. I couldn't believe my wife agreed to that garbage.
Feb 23 21:51:38 <kendell>	not windows itself, the license. Full of you can't do this, you can't do that
Feb 23 21:52:05 <jvml>	only thing keeping me on windows is all my multimedia work. ableton and photoshop mostly
Feb 23 21:52:13 <jvml>	if ableton had a linux port i would get right outta here
Feb 23 21:52:34 <rpav>	yeah unfortunately windows still dominates for promedia ;/
Feb 23 21:53:07 <jvml>	really hope that ableton will have an official linux port at some point because i won't lie i hate using wine
Feb 23 21:53:18 <rpav>	and games, though that's weakening _slightly_
Feb 23 21:53:38 <jvml>	wine (drink) is great, but wine (software) requires so much configuration for multimedia that i simply don't have the time or will for
Feb 23 21:53:39 <kendell>	I use wine, or try to. Can't seem to get sound to work, though it's supposed to
Feb 23 21:54:08 <JohnGalt>	I use photoshop without a problem
Feb 23 21:54:28 <rpav>	photoshop is a collection of problems
Feb 23 21:54:32 <JohnGalt>	I just updated it today
Feb 23 21:54:39 <jvml>	i'm still on photoshop 2020
Feb 23 21:54:40 <JohnGalt>	rpav: clearly you havent seen gimp
Feb 23 21:54:50 <kendell>	oh I love love gimp
Feb 23 21:54:52 <JohnGalt>	its the shitiest program almost ever
Feb 23 21:54:57 <rpav>	JohnGalt: gimp is not the only or the primary alternative
Feb 23 21:55:00 <jvml>	i have this one friend who keeps telling me to switch to gimp or hinting at it but i have so many niche photoshop features that i rely on
Feb 23 21:55:13 <grym>	rpav: inkscape, obvi
Feb 23 21:55:15 <JohnGalt>	yeah, like object selection that works
Feb 23 21:55:17 <jvml>	impossible to imagine editing any other way
Feb 23 21:55:17 <corwin>	photoshop and friends are a key reason I am running Windows although I seem to update these tools two three times for each time I run one of them.
Feb 23 21:55:28 <jvml>	although i AM actually good at editing in scribus, but that's all vector
Feb 23 21:55:31 <rpav>	it does like 1 thing pretty well which is box selection and moving, and i actually find that useful, but there are a number of other things that are PS alternativees
Feb 23 21:55:34 <rpav>	grym: ;)
Feb 23 21:55:42 <rpav>	grym: they actually had a big update recently didn't they?
Feb 23 21:55:44 <JohnGalt>	illustrator is nice, acrobat is nice
Feb 23 21:55:48 <grym>	rpav: i think so, yes
Feb 23 21:55:57 <jvml>	illustrator is peak vector design software imo
Feb 23 21:56:13 <rpav>	bah illustrator is crap
Feb 23 21:56:22 <rpav>	unless you invest tons into addons
Feb 23 21:56:42 <grym>	all of it makes my head hurt
Feb 23 21:56:46 <rpav>	but vanilla, sheesh
Feb 23 21:56:54 <jvml>	even though it's great illustrator still made my head hurt when i used it frequently
Feb 23 21:56:57 <kendell>	free software only for me thanks. I will use windows, but only as a last resort and usually find myself wishing I didn't have to
Feb 23 21:57:17 <rpav>	adobe UI is like decades of agglomerated features
Feb 23 21:57:46 <JohnGalt>	windows is not free
Feb 23 21:57:51 <JohnGalt>	I know , I paid for it
Feb 23 21:57:57 <rpav>	same ;/
Feb 23 21:58:04 <jvml>	the thing about vector editing in adobe software is that it's really hard to predict what behavior is going to come out of whatever you're doing. like you have to click a very certain way to get consistent results, or you have to have something or another enabled to make the thing you want to do happen
Feb 23 21:58:24 <jvml>	that annoys me
Feb 23 21:58:28 <rpav>	jvml: i despise how its alignment works (if it could be considered such)
Feb 23 21:58:44 <rpav>	it doesn't have procedural brushes etc
Feb 23 21:58:51 <rpav>	again vanilla, but
Feb 23 21:58:53 <jvml>	i think alignment in ps is perfectly fine, i love everything about photoshop, but it confuses me to no end in illustrator
Feb 23 21:59:18 <jvml>	which is why i haven't used illustrator in about three years.
Feb 23 22:00:28 <rpav>	i have a pretty good experience with clip studio for the creation kind of stuff and affinity for photo stuff, though i don't do it a ton
Feb 23 22:00:41 <jvml>	clip studio is lovely i've heard
Feb 23 22:00:48 <rpav>	though some pros i've heard of seem to like affinity as well
Feb 23 22:01:09 <jvml>	but my work is in avant-digital collage or whatever so csp never really had any "draw" for me
Feb 23 22:01:09 <rpav>	heard from that is
Feb 23 22:01:21 <jvml>	really glad that CSP's maintainers have hitherto kept it single-purchase
Feb 23 22:01:23 <rpav>	yeah clip isn't super general
Feb 23 22:01:35 <corwin>	rpav: at least as bad CreativeStudio in the "tons on add-ons to get work done" respect is Avid ProTools.  Hundreds every year or two to re-up support, meaning "keep working with latest hardware and OS" on my "perpetually licensed" edition, and then you start buying plugins (of which one ends up with several hundred)
Feb 23 22:01:49 <jvml>	oh god pro tools is horrible
Feb 23 22:01:56 <rpav>	corwin: yeah i don't really understand the draw there either .. or autodesk stuff
Feb 23 22:02:33 <jvml>	their AAX plugin format that only works in licensed versions of pro tools and requires loads of activation/verification sucks
Feb 23 22:02:47 <mwnaylor>	technomancy: Are you the one who was commenting on the clojure `do' form and comparing it to lisp `progn'?
Feb 23 22:03:12 <rpav>	maya LT which costs roughly the same as Houdini Indie and is shit; maya full has some more stuff but is the same kind of "layers of crap"
Feb 23 22:03:16 <corwin>	I have at least two differen iLoks that I need to make it work with different hardware.  I need to transfer plugins between them sometimes.
Feb 23 22:03:30 <mwnaylor>	The discussion had to do with side effects within the form.
Feb 23 22:03:35 <rpav>	houdini is f'n amazing, but i'm a bit biased as it's sortof "3d modeler for programmers"
Feb 23 22:03:40 <jvml>	ilok is the devil
Feb 23 22:04:19 <JohnGalt>	to do the kind of 3d modelling they do for a AAA title takes to much work
Feb 23 22:05:30 <JohnGalt>	wow, my m1 is far slower than this m3
Feb 23 22:05:36 <JohnGalt>	and 39 gig isnt bad
Feb 23 22:05:50 <JohnGalt>	the m3 is a huge leap forward
Feb 23 22:05:51 <jvml>	ram?
Feb 23 22:05:52 <fsbot>	RAM is short for Random Access Memory
Feb 23 22:05:56 <jvml>	LOL
Feb 23 22:06:01 <JohnGalt>	yeah RAM
Feb 23 22:06:01 <jvml>	didn't know that was a bot here
Feb 23 22:06:07 <jvml>	i know what RAM is silly :/
Feb 23 22:06:23 <JohnGalt>	I only got 1tb for storage since I wont have large archives
Feb 23 22:06:36 <jvml>	i have 2tb on this laptop and then two external drives with the same capacity
Feb 23 22:06:38 <rpav>	JohnGalt: eh kinda .. a lot of stuff is like megascan style assets now and with like nanite etc there's a lot less post work that needs done
Feb 23 22:06:44 <jvml>	lotta audio stuff i have to keep backed up...
Feb 23 22:07:13 <rpav>	and if you have the $$ you can do a lot of character outfit work in Marvelous
Feb 23 22:07:19 <JohnGalt>	I have other servers for that
Feb 23 22:07:24 <JohnGalt>	I have a 16 gig NAS
Feb 23 22:07:30 <jvml>	very nice!
Feb 23 22:07:33 <JohnGalt>	16 tb NAS
Feb 23 22:07:35 <rpav>	16 gig or T?
Feb 23 22:07:38 <rpav>	ok hehe
Feb 23 22:07:50 <gig>	nice
Feb 23 22:07:54 <jvml>	i want to get something more permanent than the drives i have now eventually
Feb 23 22:07:59 <JohnGalt>	RAID5
Feb 23 22:08:03 <rpav>	JohnGalt: did you build it or just use off the shelf hw?
Feb 23 22:08:08 <JohnGalt>	have spare drives ready to go
Feb 23 22:08:14 <JohnGalt>	rpav: bought it
Feb 23 22:08:19 <JohnGalt>	it was only 1k or so
Feb 23 22:08:19 <rpav>	ah
Feb 23 22:08:31 <komikat>	what setup do you guys use for irc
Feb 23 22:08:33 <JohnGalt>	it was already setup for time machine
Feb 23 22:08:41 <rpav>	i kinda want a low-powered pi-driven NAS if that's viable, then a more power-sucking threadripper server for like big compute/compile stuff
Feb 23 22:08:49 <komikat>	i've been trying to setup znc with erc
Feb 23 22:08:56 <rpav>	znc -> erc
Feb 23 22:09:02 <JohnGalt>	rpav: pi corrupt easy
Feb 23 22:09:05 <komikat>	jinx
Feb 23 22:09:13 <rpav>	JohnGalt: corrupt?
Feb 23 22:09:33 <JohnGalt>	they just bit flip
Feb 23 22:09:34 <komikat>	rpav: do you use znc.el?
Feb 23 22:09:41 <jvml>	komikat: just erc
Feb 23 22:09:43 <rpav>	komikat: it's not hard, hell i actually use erc -> domain socket <- ssh tunnel -> znc
Feb 23 22:09:44 <JohnGalt>	I used to have six of them
Feb 23 22:09:53 <rpav>	komikat: yeah i think so, i just M-x znc-all
Feb 23 22:09:57 <JohnGalt>	I was going to build a cluster with ansible but they are shit
Feb 23 22:10:18 <rpav>	znc i don't even bother to do over SSL, and only have it attach locally on the virt
Feb 23 22:10:30 <rpav>	then i only ever talk to it over ssh tunnel
Feb 23 22:10:54 <komikat>	rpav: when I use znc.el, it asks me to put my pass again even though it already is in my init.el
Feb 23 22:10:56 <rpav>	JohnGalt: lame.. gotta find smething lower powered though
Feb 23 22:10:57 <komikat>	not sure whats up
Feb 23 22:11:14 <komikat>	does the pass have to be in the username/server:pass format?
Feb 23 22:11:19 <JohnGalt>	I need to get a dedicated 15 amp curcuit foro the office
Feb 23 22:11:24 <rpav>	komikat: i just have M-x customize-group znc and a server filled out
Feb 23 22:11:34 <JohnGalt>	im on a 15 amp shared by three roooms
Feb 23 22:12:01 <rpav>	username is `login/server`, network slug is 'server', and pw is pw
Feb 23 22:12:07 <JohnGalt>	luckily the wife doesnt use much power in her tv room
Feb 23 22:12:26 <rpav>	15 isn't bad, shouldn't have to worry with just a bit of computer gear
Feb 23 22:12:35 <technomancy>	mwnaylor: probably. as far as I can tell they're exactly the same thing
Feb 23 22:12:38 <technomancy>	also scheme `begin'
Feb 23 22:12:38 <rpav>	er i think
Feb 23 22:12:55 <JohnGalt>	4 servers , 3 mac laptops, and a framework, plus audio, network gear
Feb 23 22:13:00 <rpav>	maybe i'm thinking of 40.. i dunno, it's late on friday x.x
Feb 23 22:13:04 <rpav>	nice
Feb 23 22:13:20 <rpav>	we just have 2 game PCs/monitors/TV
Feb 23 22:13:22 <JohnGalt>	if I dont sequence it when the power comes back on it trips the breaker
Feb 23 22:13:36 <JohnGalt>	plus I was running a AC unit for a while
Feb 23 22:14:14 <technomancy>	mwnaylor: and `prog1' is a little bit like `doto' but without the threadiness
Feb 23 22:16:26 <mwnaylor>	technomancy: I can appreciate the side effect bit more in elisp. When operating on values/structures, I tend to write in a functional & immutable mode. BUT, the side effects and proper sequencing makes sense when dealing w/ mutable structures like buffers.
Feb 23 22:16:56 <JohnGalt>	also when doing databases and other storage stuff
Feb 23 22:18:00 <technomancy>	it's difficult to keep things immutable in elisp, especially when interacting with 3rd-party code, but yeah
Feb 23 22:19:01 <mwnaylor>	I guess that in the land of emacs, a file is simply a snapshot of a buffer in a given instant of time.
Feb 23 22:19:50 <mwnaylor>	The only database thing I do from emacs is poke around in an sqlite file.
Feb 23 22:20:35 <JohnGalt>	I use mostly python
Feb 23 22:20:51 <JohnGalt>	for analytic queries I use TablePlus
Feb 23 22:21:15 <mwnaylor>	Pyhon in general or python for database?
Feb 23 22:21:21 <JohnGalt>	both
Feb 23 22:21:29 <JohnGalt>	mostly shell and python
Feb 23 22:21:43 <JohnGalt>	sometimes other stuff if its a better fit
Feb 23 22:22:37 <JohnGalt>	If I really need performance I can do java
Feb 23 22:22:52 <mwnaylor>	It's been a long time since I used python to interact with a database. I do remember that the batteries included libraries made it easier.
Feb 23 22:23:09 <JohnGalt>	sqlalchemy is really good
Feb 23 22:23:26 <JohnGalt>	I heard the django library is supposed to be good
Feb 23 22:24:18 <bkhl>	I did some a bit more low level stuff with Python DB-API recently, and it's pretty nice too.
Feb 23 22:24:53 <mwnaylor>	django mainly intended for web development, iirc. Guess one could just use the database related components for any purpose.
Feb 23 22:25:35 <JohnGalt>	SqlAlchemy has a good ORM now, not just a sql wrapper
Feb 23 22:26:11 <komikat>	ended up just using erc
Feb 23 22:26:20 <JohnGalt>	I like erc
Feb 23 22:26:24 <JohnGalt>	I tried a few
Feb 23 22:26:30 <technomancy>	it's quite good
Feb 23 22:26:33 <komikat>	yeah
Feb 23 22:26:39 <kickingvegas>	mwnaylor, JohnGalt : what kind of DB stuff are you trying to do (arguably from Emacs?)
Feb 23 22:26:43 <komikat>	i'm trying to set up a znc <> erc thing
Feb 23 22:26:58 <JohnGalt>	just a database right now with technical data
Feb 23 22:27:10 <komikat>	need to figure out how to query nickserv
Feb 23 22:27:31 <JohnGalt>	Im doing sqlite right now, but I can switch to pg quickly since Im using sqlalchemy
Feb 23 22:27:40 <JohnGalt>	if I scale up to teams that will be nice
Feb 23 22:27:42 <Inline>	 /msg nickserv help
Feb 23 22:28:04 <Inline>	or the equivalent command in erc
Feb 23 22:28:18 <technomancy>	you can /query nickserv
Feb 23 22:28:25 <JohnGalt>	plus I have a metaclass library that does JSON in conjunction with sqlalchemy so with little effort I can insert/query/and export to JSON
Feb 23 22:28:33 <mwnaylor>	kickingvegas: occasionally I'll poke around in the sqlite3 files maintained by browsers. Maybe work with a personal sqlite3 file.
Feb 23 22:28:39 <komikat>	Inline: gotcha
Feb 23 22:28:48 <komikat>	i wonder if i can just set this up in my init.el
Feb 23 22:29:03 <Inline>	yes you can
Feb 23 22:29:04 <komikat>	to connect to the znc server and log into nickserv at init
Feb 23 22:29:16 <komikat>	hmm
Feb 23 22:29:17 <Inline>	i had once a config, giant one with it's own erc section.....
Feb 23 22:29:44 <komikat>	nice
Feb 23 22:29:45 <Inline>	from connecting the server to autojoining channels etc... you can do lots
Feb 23 22:29:53 <kickingvegas>	mwnaylor: fwiw you can query sqlite3 files from Org
Feb 23 22:30:54 <mwnaylor>	kickingvegas: did not know that. Do you have links on how to do that?
Feb 23 22:31:30 <kickingvegas>	also, if you have a small dataset, you can put that in an Org table and run sql queries on it http://yummymelon.com/devnull/running-sql-queries-on-org-tables.html
Feb 23 22:31:58 <random-jellyfish>	how do I start slime in a bottom window instead of a right side window?
Feb 23 22:32:02 <kickingvegas>	mwnaylor: https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-sqlite.html
Feb 23 22:32:14 <JohnGalt>	this glenlivit 21 years is amazing!
Feb 23 22:33:09 <grym>	even if misspelled
Feb 23 22:33:31 <JohnGalt>	I dont fault myself for messing up foreign names
Feb 23 22:35:46 <mwnaylor>	kickingvegas: bookmarked in emacs and my gui browser.
Feb 23 22:38:57 <bremner>	all names are foreign names where I live
Feb 23 22:39:15 <bremner>	(to a first approximation)
Feb 23 22:40:41 <JohnGalt>	my mispronunciation of names was legendary in the offices I worked in
Feb 23 22:41:36 <komikat>	this should work
Feb 23 22:41:37 <komikat>	it does
Feb 23 22:41:42 <komikat>	lets go.
Feb 23 22:43:02 <grym>	,og
Feb 23 22:43:03 <fsbot>	[TMDM] You will engage in a profitable business activity.
Feb 23 22:43:04 <grym>	,go
Feb 23 22:43:05 <fsbot>	go is An ancient game. See also GoLang.
Feb 23 22:43:30 <mwnaylor>	random-jellyfish: Can't remember the last time I used slime. I suppose you could create a keyboard macro to close the slime window, C-x 3 your main window, the switch buffer to slime in the new right-hand window.
Feb 23 22:44:27 <komikat>	,znc
Feb 23 22:44:27 <fsbot>	ZNC is [0/4] the best IRC proxy out there
Feb 23 22:44:27 <fsbot>	[1] http://wiki.znc.in
Feb 23 22:44:27 <fsbot>	[2] https://github.com/sshirokov/ZNC.el
Feb 23 22:44:27 <fsbot>	[3] see also psybnc
Feb 23 22:44:27 <fsbot>	[4] a textbook case of how not to write configuration files
Feb 23 22:45:08 <komikat>	,emacs
Feb 23 22:45:08 <fsbot>	komikat, emacs: [0/12] an extensible, customizable, self-documenting real-time display editor <http://www.gnu.org/software/emacs/>
Feb 23 22:45:08 <fsbot>	[1] began as a set of macros for the TECO editor in 1976 by gls and rms
Feb 23 22:45:08 <fsbot>	[2] frustratingly inadequate, but often better than any extant alternative (see ,salespitch)
Feb 23 22:45:08 <fsbot>	[3] heavily optimised to navigate its own code ;;[ ,more / ,dump]
Feb 23 22:45:17 <grym>	,botwanking
Feb 23 22:45:17 <fsbot>	grym: botwanking: spamming bots on channel. if you must, do so in PM.
Feb 23 22:45:25 <kickingvegas>	mwnaylor: all good - hope you find them useful!
Feb 23 22:45:39 <komikat>	apologies
Feb 23 22:49:18 <mwnaylor>	kickingvegas: I'm getting into org-mode spreadsheets and using code-blocks to create custom elisp functions for those spreadsheets. Too often, spreadsheets have been used as a poor man's database, so who knows?
Feb 23 22:51:45 <kickingvegas>	mwnaylor: exactly my motivation to figure out how to do SQL queries on org tables. Who needs pivot tables when you have group by?
Feb 23 22:56:10 <mwnaylor>	kickingvegas: many of the built in capabilities of lisp dialects can be used to mimic sql. For example, `-filter' or `cl-remove-if-not' are much like a where clause.
Feb 23 22:57:21 <mwnaylor>	`-filter' is part of the dash package.
Feb 23 23:03:30 <mwnaylor>	group-by is sure a powerful concept that it is one of the core functions in clojure.
Feb 23 23:10:34 <kickingvegas>	mwnaylor: TIL/good to know. That said, my SQL is better than my Lisp 😏
Feb 23 23:17:42 <mwnaylor>	Is there a package that provides a group-by function to elisp? In clojure, the signature is (group-by f coll). It walks through the collection, applying the predicate to each member. It creates a dictionary/hash-map. The function uses the function results as keys and matching items as the values.
Feb 23 23:17:49 <wasamasa>	have you checked seq?
Feb 23 23:18:05 <mwnaylor>	(group-by odd? [1 2 3 4 5 6 7 8 9 10]) => {true [1 3 5 7 9], false [2 4 6 8 10]}
Feb 23 23:19:53 <thuna`>	What's the least redundant way to write this? https://0x0.st/H5wv.txt  I basically have two (or more) "paths" to compute a fixed set of variables and a single body that will use the result of those variables without caring how they were obtained.
Feb 23 23:20:06 <mwnaylor>	wasamasa wins the prize. (seq-group-by FUNCTION SEQUENCE) And I have that package installed!!
Feb 23 23:20:40 <thuna`>	seq.el's builtin
Feb 23 23:22:53 <thuna`>	I should note about my question: all "paths" are each a single when-let.  The code I pasted is the real code I am asking this for, so any specific suggestions that apply only to that would work as well.
Feb 23 23:24:15 <thuna`>	(Bonus points if you can make it a single-ish if-let :P)
Feb 23 23:25:44 <thuna`>	I wrote it as a pcase-let but it was just not readable at all.
Feb 23 23:25:46 <technomancy>	if-let is just anemic pattern matching
Feb 23 23:28:07 <thuna`>	Alright, I can get to if-let by wrapping (if update...) with (or (if update...) (prog1 nil else...))
Feb 23 23:28:18 <mwnaylor>	I've installed so many packages that I don't recognize which ones are built-in and which have been installed.
Feb 23 23:28:42 <bpalmer>	given the choice between if-let and pcase-let, I know the readable one I'm going for.
Feb 23 23:28:50 <thuna`>	If it's installed it's been built in
Feb 23 23:28:55 <bpalmer>	oops, did I give my choice away?
Feb 23 23:29:15 <JohnGalt>	man irish coffee is so good for coding!
Feb 23 23:29:16 <bpalmer>	but I still will probably use let/if , because why use one word when two words do?
Feb 23 23:29:48 <thuna`>	if/when/while-let is very convenient
Feb 23 23:29:48 <technomancy>	wait what's pcase-let?
Feb 23 23:30:04 <technomancy>	doesn't pcase already do binding? why would you need to add moar let
Feb 23 23:30:24 <technomancy>	wait
Feb 23 23:30:25 <technomancy>	lol
Feb 23 23:30:37 <technomancy>	pcase-let doesn't actually do any case at all?
Feb 23 23:30:57 <thuna`>	technomancy: pcase-like destructuring for bindings.  You can have multiple EXPs, which I guess is what it offers over pcase
Feb 23 23:31:06 <mwnaylor>	OH!!! Got to add (require 'seq) to my .emacs.
Feb 23 23:31:22 <bpalmer>	well, it also unconditionally evaluates the body, unlike using pcase
Feb 23 23:31:30 <technomancy>	please please please think thru things before picking names ಠ_ಠ
Feb 23 23:31:49 <bpalmer>	you're more likely to use pcase-let when you would otherwise do destructuring-bind, except, again, readability
Feb 23 23:31:51 <thuna`>	When the package name is pcase there's not much you can do
Feb 23 23:32:06 <technomancy>	it's a great idea but what a terrible name =(
Feb 23 23:32:26 <technomancy>	thuna`: pcase isn't a package
Feb 23 23:32:40 <thuna`>	I consider it one
Feb 23 23:33:13 <bpalmer>	(destructuring-bind (a b) '(1 2) ( + a b)) =>   3  ; (pcase-let ((`(,a ,b) '(1 2))) (+ a b)) => 3
Feb 23 23:34:04 <mwnaylor>	Wow. Now that I know about seq, maybe I can do w/o dash.
Feb 23 23:34:19 <technomancy>	yeah I thought seq.el was supposed to be a dash replacement
Feb 23 23:35:17 <thuna`>	seq.el is cl-seq replacement AFAIK
Feb 23 23:35:34 <technomancy>	bpalmer: it's really weird to see backtick and commas used together like that
Feb 23 23:35:47 <technomancy>	it makes it look like it should be a no-op; like the backtick and the comma should cancel each other out
Feb 23 23:38:12 <mwnaylor>	Great. Tired of seeing dash warnings. Hopefully package maintainers are weeding those out.
Feb 23 23:42:11 <mwnaylor>	Not for today, but will have to comment out my (require 'dash) expression and see what breaks. Can't control the third party packages, but at least I can fix my own extensions.
Feb 23 23:42:18 <wgreenhouse>	,rectification-of-names
Feb 23 23:42:19 <fsbot>	If language is not correct, then what is said is not what is meant; if what is said is not what is meant, then what must be done remains undone; if this remains undone, morals and art will deteriorate; if justice goes astray, the people will stand about in helpless confusion. Hence there must be no arbitrariness in what is said. This matters above everything.
Feb 23 23:42:37 <wgreenhouse>	> please please please think thru things before picking names ಠ_ಠ
Feb 23 23:43:16 <technomancy>	正名
Feb 23 23:44:15 <mwnaylor>	So glad I killed my Facebook and Quora accounts. Hanging out on libera and #emacs is much more beneficial.
Feb 23 23:44:51 <technomancy>	you can learn a little Confucianism along with your elisp
Feb 23 23:46:24 <mwnaylor>	elisp often adds to my level of confusion. 😜
Feb 23 23:46:28 <bpalmer>	judybot: the worst named romantic protagonist you've ever run across was
Feb 23 23:46:30 <judybot>	bpalmer: in the movie "The Fugitive." I don't know how they got that name. He was a man who was on the run from the law, and he had a name that was just ridiculous. I just thought it was a terrible name.
Feb 23 23:47:29 <mwnaylor>	bpalmer: The female lead in 𝘎𝘰𝘭𝘥𝘧𝘪𝘯𝘨𝘦𝘳.
Feb 23 23:47:33 <technomancy>	rudybot: The Master said, “To learn and then have occasion to practice what you have learned – is this not satisfying? To have friends arrive from afar – is this not a joy? To be patient even when others do not understand – is this not the mark of the sage?”
Feb 23 23:47:35 <rudybot>	technomancy: > Since the early 19th century, of disputed origin. Most commonly thought to be from dibstones (“counters used in a game with the same name”). Also from dib (“to tap”) or related to northern English dip (“small depression in the ground”), or a shortened version of divide
Feb 23 23:47:55 <JohnGalt>	I would go for "gaylord focker" with meet the fockers
Feb 23 23:47:59 <bpalmer>	mwnaylor: see, the people who named the character that got their point across, I think.
Feb 23 23:48:15 <bpalmer>	Thus, the name was suitably rectified.
Feb 23 23:51:42 <mwnaylor>	bpalmer: A friend of my wife and me met a college aged guy who gave his cat that name. BTW, I read most of the Ian Fleming novels that were the basis for the movies. PG was in the original work.
Feb 23 23:52:04 <bpalmer>	I have only read bits of one of the early Bond novels
Feb 23 23:52:13 <lispmacs[work]>	Hi, Emacs seems to be ignoring some of the global keymaps I've set in my init.el, and I'm trying to figure out why. Even if I evaluate them right now, they still don't work. Specifically...
Feb 23 23:52:19 <lispmacs[work]>	(keymap-global-set "C-M-@" 'er/expand-region)
Feb 23 23:52:41 <lispmacs[work]>	and (keymap-global-set "C-x r" 'org-roam-node-find)
Feb 23 23:53:17 <lispmacs[work]>	If I restart Emacs, sometimes they will work
Feb 23 23:53:26 <JohnGalt>	I have the 1960 hardbacks of 8 or 10 of the fleming noves
Feb 23 23:53:29 <JohnGalt>	novels
Feb 23 23:53:35 <JohnGalt>	1964 I think
Feb 23 23:53:49 <JohnGalt>	they are definitely collector quality
Feb 23 23:55:11 <JohnGalt>	they dont have whacky names as much in the books
Feb 23 23:55:31 <JohnGalt>	Austin powers was pretty good for names too
Feb 23 23:56:01 <bpalmer>	lispmacs[work]: it sounds like there might be an error occuring before thos eare evaluated. Could you insert a message like (message "made it after the key binding things") and check to see if you can see that when the keys don't work?
Feb 23 23:56:16 <mwnaylor>	More realistic. Bond would have required about 6 months rehab after each mission.
Feb 23 23:56:54 <bpalmer>	that's what comes of mixing alcoholism and spycraft.
Feb 23 23:57:47 <JohnGalt>	archer does that better
Feb 23 23:57:56 <JohnGalt>	archer is a role model for me
Feb 23 23:57:57 <lispmacs[work]>	bpalmer: okay
Feb 23 23:58:02 <JohnGalt>	except the baby part
Feb 24 00:01:05 <lispmacs[work]>	bpalmer: the message is showing up - init.el execution is making it past the bindings without any errors reported
Feb 24 00:01:21 <thuna`>	lispmacs[work]: It could also be that a minor mode is overriding them
Feb 24 00:01:49 <lispmacs[work]>	that seems plausible, I've got plenty of them
Feb 24 00:02:07 <lispmacs[work]>	but I don't understand why I cannot override the override
Feb 24 00:02:13 <thuna`>	What does C-h m report?
Feb 24 00:02:20 <bpalmer>	lispmacs[work]: global key map is consulted *after* minor modes
Feb 24 00:02:35 <bpalmer>	first it looks at overlays/extents. Then minor modes. Then major mode. Then the global keymap.
Feb 24 00:03:12 <lispmacs[work]>	https://bpa.st/5XOT4
Feb 24 00:04:25 <thuna`>	Hmm, what about `C-h k C-M-@' and `C-h k C-x r'?
Feb 24 00:05:04 <lispmacs[work]>	C-h k C-M-@ does nothing, as though it does not see the keys pressed at all... just continues to wait for any key to be pressed
Feb 24 00:05:37 <lispmacs[work]>	currently (after I rebooted) the C-x r command is working as it is supposed to
Feb 24 00:05:46 <lispmacs[work]>	calling the function I set
Feb 24 00:06:05 <thuna`>	Your WM is probably grabbing it then
Feb 24 00:08:18 <lispmacs[work]>	hmm, okay, maybe something changed in a recent gnome-shell update
Feb 24 00:20:59 <daviid>	hello! not sure if it is an emacs or gnome problem, but since my last debian testing update, a few hours ago, now this (partially reduced for the prupose of this quiz) "emacs --font "-Bits-Bitstream Vera Sans Mono-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1"  => Warning: Missing charsets in String to FontSet conversion   and  buffers are not using the font or the rendering is 'incorrect', nor the menu nor the title bar font, see what
Feb 24 00:20:59 <daviid>	i get - https://imgur.com/a/B7aqXA0 - the fisrt image is how things are 'now' (after this update', and the second is how the font was rendered before ... does any onw know what i could do to 'track' and solve this problem? thanks!
Feb 24 00:25:24 <e3d3>	Does the font name really start with a hyphen ?
Feb 24 00:26:22 <daviid>	e3d3: i've used this argument 'as is' for the last few years,
Feb 24 00:29:35 <e3d3>	daviid: I only noticed it and don't know enough about it to help you
Feb 24 00:31:15 <daviid>	fwiw, i had to change a few years ago, because every 'now and then' the way font must be passed changes ... till a few years ago, i could launch emacs like this: emacs --font "-*-mono-*-*-*-*-12-*-*-*-*-*-*-*"    and it would be perfect
Feb 24 00:31:37 <e3d3>	but I tried it and it worked, without errors, here: AntiX23 (Debian variant)
Feb 24 00:32:19 <thuna`>	Hmm... on a scale of 1 to 10, how bad of an idea is it to update the string display text property by modifying string?  I'm leaning towards a 7.
Feb 24 00:36:52 <daviid>	anyway, how can i 'identifiy' the exact --font argument value i need to pass to emacs is the 'real' question - in my gnome terminals, i use "DejaVu Sans Mono", but selecting the font using the gnome interface ... i have no idea how to obtain the 'identical' font but so i can pass it to emacs --font ... anyone knows?
Feb 24 00:37:49 <cvandusen>	Maybe the same format as it's shown in M-x set-frame-font
Feb 24 00:37:51 <daviid>	e3d3: 'it works' doesn't mean anythig, i don't have errors here either, but clearly the font, as shown on my screenshots, are diff before and after my last debian update
Feb 24 00:39:32 <e3d3>	daviid: I agree, I formulated it bad, don't use Debian testing, and also have a bad eye for fonts. Sorry.
Feb 24 00:42:10 <daviid>	cvandusen: but, how do i 'transform' what i can see/set here - https://imgur.com/a/2Dvtai9 - which as you can see lands in the terminal setting user options as 'DejaVu Sans Mono 9" to what ever emacs accepts ?
Feb 24 00:45:39 <daviid>	as i don't know, i am asking for someone here who knows either to do that and paste the result, or tell me what algorithm i must use to do that, if i have 'to do it myself' - (gnome-font-viewer->emacs-font-optiona-name'DejaVu Sans Mono 9"
Feb 24 00:45:40 <cvandusen>	Supposedly, emacs -fn "DejaVu Sans Mono-9" should work.
Feb 24 00:45:44 <daviid>	sorry, error
Feb 24 00:46:17 <daviid>	but let me try that
Feb 24 00:46:28 <daviid>	with the hiphen?
Feb 24 00:48:11 <cvandusen>	Yes, though my test used Hack since I don't have DejaVu Sans Mono installed.
Feb 24 00:52:14 <daviid>	it seems to work - tx - misteriously though, the menubar and title bar font are totally 'bad', in terms of rendering, which i don't understand why either - yesterday, or before the last update, it was perfect, now here is what i get, using your suggestion emacs -fn "DejaVu Sans Mono-9" => Warning: Missing charsets in String to FontSet conversion   https://imgur.com/a/2Dvtai9   the second image of this paste, i just added it now ...
Feb 24 00:55:02 <cvandusen>	I have no idea about the warning. Lots of search results hits seem to indicate an OS level issue.
Feb 24 00:57:00 <daviid>	you see, the menubar and window title font are 'wrongly' rendered - it used to always work, here is an old screenshot, while i was using "-*-mono-*-*-*-*-12-*-*-*-*-*-*-*"  https://imgur.com/a/2Dvtai9   last image on this page ...
Feb 24 00:57:48 <daviid>	cvandusen: but ok, thanks, i'll survive, i actually hide both emacs menubar and window title bar in my real sessionsa anyway .. so ok
Feb 24 00:59:47 <cvandusen>	yw
Feb 24 01:09:37 <wgreenhouse>	daviid: the syntax cvandusen provided (family name as a string followed by hyphen followed by point size) is described in fontconfig documentation as the way to specify TTF/OTF fonts
Feb 24 01:09:43 <wgreenhouse>	a "TTF font name"
Feb 24 01:09:59 <wgreenhouse>	as opposed to that thing with the many hyphens which is an X11 font name
Feb 24 01:10:31 <wgreenhouse>	so that other style may have been one you adopted initially with old bitmap fonts
Feb 24 01:11:49 <daviid>	wgreenhouse: ok thanks
Feb 24 01:13:51 <daviid>	i still think something is wrong wrt the font rendering 'in emacs' - lokk at what i get 'here', if i launch gnome-font-viewer, and select "Mono", then  Bitstream Vera Sans Mono, and compare how the gnome font viewer renders the font on the screen (wayland backend here) and emacs - https://imgur.com/a/JIKeVEk - the emacs rendering is 'terrible', i wonder why, it used to be fine ...
Feb 24 01:15:32 <wgreenhouse>	daviid: it looks like there is no antialiasing, in the last shot
Feb 24 01:15:39 <wgreenhouse>	I wonder why that is
Feb 24 01:16:03 <wgreenhouse>	,,pgtk,, may be better. or worse.
Feb 24 01:16:04 <fsbot>	pgtk: [0] https://git.sr.ht/~oldosfan/emacs-pgtk
Feb 24 01:16:04 <fsbot>	[1] An Emacs fork with a pure GTK display feature that runs natively on Wayland
Feb 24 01:16:04 <fsbot>	[2] Fixes the infamous GTK crash: https://lists.gnu.org/archive/html/emacs-devel/2021-05/msg00340.html
Feb 24 01:16:22 <wgreenhouse>	it's no longer a fork, just a build option
Feb 24 01:16:34 <wgreenhouse>	but it removes XWayland from what might be going wrong, here
Feb 24 01:17:04 <wgreenhouse>	in principle it should be better but is also new
Feb 24 01:17:56 <daviid>	wgreenhouse: i switched to emacs-lucid a while ago, a few years ago, because i had a problem using emacs-gtk ... but i could try 'again' and see indeed
Feb 24 01:18:50 <daviid>	here is what i use  emacs-lucid  1:29.1+1-5  which deliberatly does not use gtk
Feb 24 01:18:59 <daviid>	and i wish i can stiull not depend on gtk
Feb 24 01:19:40 <daviid>	but i could try
Feb 24 01:22:40 <wgreenhouse>	daviid: and it's being displayed over XWayland?
Feb 24 01:23:04 <wgreenhouse>	my diagnosis is that antialiasing is not happening, which makes that particular font look really bad
Feb 24 01:23:21 <wgreenhouse>	when I used lucid builds it was always with bitmap fonts
Feb 24 01:23:41 <daviid>	wgreenhouse: i just installed emacs-gtk, let's see
Feb 24 01:24:38 <daviid>	how do i ask to launch an 'indenpendent' new emacs, so i can keep my 'opened' sessions?
Feb 24 01:25:23 <kickingvegas>	daviid: are you using emacsclient ?
Feb 24 01:25:23 <daviid>	wgreenhouse: same problem
Feb 24 01:26:21 <wgreenhouse>	daviid: ok, so maybe a fontconfig vs xwayland issue
Feb 24 01:27:11 <daviid>	wgreenhouse: here - https://imgur.com/a/qNffeZw
Feb 24 01:27:50 <daviid>	wgreenhouse: not sure i understand, do you happen to know how i can solve the problem?
Feb 24 01:28:15 <wgreenhouse>	daviid: yep same issue -- antialiasing is not happening, so the font appears granulated, instead of having clean strokes
Feb 24 01:29:18 <wgreenhouse>	daviid: a part of the font is essentially being ignored by your system
Feb 24 01:29:31 <wgreenhouse>	so it is appearing in a degraded ugly mode
Feb 24 01:30:03 <wgreenhouse>	this is a system-level issue almost always, with fontconfig, which is the lib that emacs relies on for font rendering
Feb 24 01:30:57 <daviid>	ok, many thanks
Feb 24 01:31:02 <wgreenhouse>	the fact that it looks fine in the gnome font preview tells me the issue is restricted to X clients, not Wayland ones
Feb 24 01:31:15 <wgreenhouse>	more than that is hard to say from here
Feb 24 01:33:14 <daviid>	i'll report in #debian-next (oftc), where i did ask already earlier today, they suggested i talk to the emacs 'guru' ... now i'll let them know what i tried and that it is likely a fontconfig lib problem, it was just updated today, now i run 2.15.0-1
Feb 24 01:33:23 <crook1389>	Hello. I was wondering if it's possible to run elisp in the compile buffer? I'm writing a tex file and I can do C-c C-a to compile and open the pdf.  However, I'm really used to using the compile buffer for most things and I have recompile bound to C-c r for convenience. So I'd ideally like to use that shortcut to do the equivalent of C-c C-a in tex files. Thanks.
Feb 24 01:34:24 <daviid>	wgreenhouse: many thanks, if i have some usefull news, i'll post here .. it's gona take a littke while, as i have to go afk now, bbl
Feb 24 01:35:02 <daviid>	i'll reinstall emacs-lucid, as this has nothing to do with the emacs 'flavor'
Feb 24 01:36:37 <dodoyada>	I'm using erc with erc-autojoin-timing 'ident and erc-autojoin-channels-alist '(("irc.libera.chat" "some" "channels")) but it doesn't autojoin.  Any idea what I might be doing wrong?
Feb 24 01:42:16 <VG234>	Good evening.. In Emacs chess is it possible to change the mouse point to be more visible when moving chess pieces?
Feb 24 01:43:33 <mns>	its in emacs, there must be a way to change it :-)
Feb 24 01:43:55 <VG234>	I agree.
Feb 24 02:00:44 <e3d3>	dodoyada: I don't use erc and I'm bad in elisp but because nobody reacts dare to ask: do you get an error for something like (setq erc-autojoin-channels-alist '(("irc.libera.chat" "#emacs" "#python")))
Feb 24 02:04:24 <VG234>	I use: ((".*\\.libera.chat" "#emacs"))
Feb 24 02:04:58 <VG234>	I'm note sure if irc will work.
Feb 24 02:05:18 <e3d3>	works for me
Feb 24 02:06:51 <e3d3>	sorry, I'm using rcirc, not erc :)
Feb 24 02:08:14 <bpalmer>	why are you setting erc-autojoin-channels-alist?
Feb 24 02:09:13 <bpalmer>	crook1389: it's possible to set up a new keybinding, sure.
Feb 24 02:09:34 <bpalmer>	crook1389: I discovered recently that just g will also recompile in compilation buffers
Feb 24 02:10:08 <bpalmer>	that said, I don't know what C-c C-a does in tex files; I just opened one and it isn't bound for me
Feb 24 02:24:19 <grym>	https://tildegit.org/grym/rofi-pinboard  well that was fun
Feb 24 02:33:27 <VG234>	I don't think I can change the mouse pointer for chess unless it has an xpm file that controls it.
Feb 24 02:36:00 <VG234>	It seems emacs chess graphical mode sets the mouse point to text more or at least text symbol.
**** BEGIN LOGGING AT Sat Feb 24 12:02:42 2024

Feb 24 12:02:41 *	Now talking on #emacs
Feb 24 12:02:41 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 24 12:02:41 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 24 12:25:37 <incal>	o/
Feb 24 12:47:26 <thuna`>	o/
Feb 24 13:33:38 <incal>	what's going on?
Feb 24 13:36:09 <incal>	,g What is APAC?
Feb 24 13:36:10 <fsbot>	🤖[g] Asia-Pacific (APAC) is a region that includes countries in Asia and the Pacific. It is known for its diverse cultures and economies.
Feb 24 13:36:49 <incal>	aha, the how "pac" is Pacific
Feb 24 13:37:18 <incal>	,g Why isn't APAC called ASIP?
Feb 24 13:37:19 <fsbot>	🤖[g] Because APAC rolls off the tongue better than ASIP!
Feb 24 13:37:38 <incal>	yeah, maybe it does
Feb 24 13:37:52 <incal>	*whole
Feb 24 14:29:37 <edgar-rft>	let's all use acronyms that mean something completely different
Feb 24 14:33:09 <grym>	rudybot: tell me more about haddock's eyes
Feb 24 14:33:10 <rudybot>	grym: Unlike, say, "Haddock's Eyes"
Feb 24 15:08:58 <e1f>	before its ipo, reddit reports 73.1 daily active users and $90.8m in losses for the year ending december.
Feb 24 15:21:49 <e1f>	73.1m users, forgot the "m"
Feb 24 15:22:16 <e1f>	73 users would be embarrasing; even #emacs has more than that
Feb 24 15:22:58 <thuna`>	73.1 daily active users would be concerning
Feb 24 15:23:30 <grym>	i haven't logged in since apollo died
Feb 24 15:24:57 <_rs>	$90m in losses, $140m CEO compensation :))
Feb 24 15:24:58 <grym>	oo, this is kind of neat
Feb 24 15:24:59 <grym>	https://github.com/Cretezy/i3-back
Feb 24 15:25:59 <_rs>	dude made more than the CEOs of companies like Apple and Nvidia
**** BEGIN LOGGING AT Sat Feb 24 16:29:06 2024

Feb 24 16:29:06 *	Now talking on #emacs
Feb 24 16:29:06 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 24 16:29:06 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** BEGIN LOGGING AT Sat Feb 24 16:32:03 2024

Feb 24 16:32:03 *	Now talking on #emacs
Feb 24 16:32:03 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 24 16:32:03 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 24 16:40:21 <corwin>	In case others might not know:  There's a #emacs-beginners channel where sometimes newer users do show up asking questions.  Probably could use a few more question answerers in there
Feb 24 17:26:01 <heistema>	Hi, I have an issue with emacs + elpaca + eglot. Emacs hangs when starting while loading eglot... The error message says "jsonrpc installed version (1 0 16) is lower than min required 1.0.24"
Feb 24 17:26:47 <heistema>	I have an elpaca init script file and a very small config file producing the issue here: https://bpa.st/5OIGA
**** BEGIN LOGGING AT Sat Feb 24 17:28:08 2024

Feb 24 17:28:07 *	Now talking on #emacs
Feb 24 17:28:07 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 24 17:28:07 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 24 17:29:03 <heistema>	I am using a self-compiled Emacs 29.2 btw.
Feb 24 17:29:13 <wgreenhouse>	heistema: eglot is built in
Feb 24 17:32:23 <heistema>	@wgreenhouse: Yes, that's why I am wondering as well. I am just assuming that he is downloading the eglot package again because of the elpaca-use-package in my elpaca-setup.el ... However, jsonrpc seems to be a component eglot uses but I cannot download or upgrade through emacs as it seems to be no package ?!
Feb 24 17:37:36 <johnjaye>	json is also built-in to emacs isn't it?
Feb 24 17:38:13 <johnjaye>	libjansson-dev
Feb 24 17:39:09 <wgreenhouse>	heistema: yes, emacs builds in json support
Feb 24 17:39:09 <thuna`>	There's json and jsonrpc, both are built-in
Feb 24 17:39:11 <heistema>	@johnjaye: Yes, and the use-package clause in my config.el shouldn't download packages, normally, right?
Feb 24 17:39:30 <wgreenhouse>	heistema: normally use-package would only do so with :ensure
Feb 24 17:39:39 <wgreenhouse>	no idea if elpaca changes that
Feb 24 17:40:10 <wgreenhouse>	I suspect your emacs either was built without json support, or has downloaded some old eglot
Feb 24 17:41:59 <heistema>	@wgreenhouse: The error in my config (https://bpa.st/5OIGA) is also reproducable with the default arch emacs package (NOT aur)...
Feb 24 17:44:47 <wgreenhouse>	heistema: is it reproducible with -q?
Feb 24 17:46:43 <johnjaye>	what feature or mechanism does emacs use to get jsonrpc?
Feb 24 17:46:57 <johnjaye>	i don't see it in configure.ac or in my emacs configure options list
Feb 24 17:47:47 <heistema>	@johnjaye: I am looking for days now for this error and there is nothing I found on your excellent question as well
Feb 24 17:47:50 <wgreenhouse>	johnjaye: --with-json
Feb 24 17:48:04 <wgreenhouse>	as ./configure option
Feb 24 17:48:14 <wgreenhouse>	only since 28 iirc
Feb 24 17:48:51 <wgreenhouse>	heistema: does your ~/.emacs.d/elpa contain an eglot?
Feb 24 17:48:56 <wgreenhouse>	if it does, it shouldn't
Feb 24 17:49:29 <famubu>	tazjin: Thanks for the answer about using `(interactive)`! Sorry had dropped off.
Feb 24 17:49:42 <famubu>	I was able to make it work.
Feb 24 17:50:01 <heistema>	~/.config/emacs/elpaca/repos does indeed contain an eglot!?
Feb 24 17:50:47 <johnjaye>	oh so it's part of jansson then?
Feb 24 17:51:49 <johnjaye>	the only reference to rpc in configure.ac is powerpc.
Feb 24 17:51:55 <wgreenhouse>	heistema: it shouldn't
Feb 24 17:52:08 <wgreenhouse>	blow it up!
Feb 24 17:52:45 <wgreenhouse>	heistema: better yet fogure out how it got there
Feb 24 17:52:48 <wgreenhouse>	*figure
Feb 24 17:57:02 <heistema>	This is nearly all there is to reproduce: https://bpa.st/5OIGA
Feb 24 17:57:10 <heistema>	@wgreenhouse
Feb 24 17:57:18 <shrysr>	YO ! howz everybody doing
Feb 24 17:57:41 <wgreenhouse>	heistema: well idk anything about elpaca itself
Feb 24 17:58:05 <wgreenhouse>	so the config doesn't really help me
Feb 24 17:58:17 <wgreenhouse>	clearly it's decided based on that config to download eglot
Feb 24 17:58:58 <wgreenhouse>	hopefully someone else here has used it before
Feb 24 17:59:10 <johnjaye>	first i've heard of it. even doom uses use-package
Feb 24 17:59:49 <wgreenhouse>	heistema: but yes, you've found few references to this issue because emacs29 itself doesn't have an issue
Feb 24 18:00:06 <wgreenhouse>	eglot is built in and just works in an emacs compiled with json support
Feb 24 18:00:21 <wgreenhouse>	the issue is your config
Feb 24 18:01:22 <johnjaye>	would it be possible to just start a shell, export HOME=$HOME/foo, then start emacs manually setup elpaca or what not and build up his config to work properly?
Feb 24 18:01:59 <wgreenhouse>	definitely, that'd be an approach
Feb 24 18:02:03 <corwin>	morning shrysr!  doing okay; how's with you?
Feb 24 18:02:33 <wgreenhouse>	emacs29 even has an --init-dir arg to aid that kind of testing
Feb 24 18:02:43 <johnjaye>	ok. i'll try that instead next time i want to test something
Feb 24 18:02:51 <shrysr>	hiya corwin glad you are okay. I am good! Setting up furniture today :)
Feb 24 18:02:59 <johnjaye>	warning: do NOT use /tmp for this. emacs changes its behavior if it sees your current-directory is in /tmp
Feb 24 18:03:10 <shrysr>	eh elpaca != use-package afaik
Feb 24 18:03:14 <johnjaye>	i went through a mess with auto backup over it
Feb 24 18:03:24 <grym>	elpaca is "the new straight"
Feb 24 18:03:39 <grym>	both of which can _use_ use-package, but use-package itself stands alone
Feb 24 18:03:57 <johnjaye>	why is the default emacs packaging not good enough
Feb 24 18:05:03 <heistema>	@shrysr yes, but in my config files (https://bpa.st/5OIGA) I am using elpaca-use-package and elpaca-use-package-mode... I guess that's the reason why I have a copy of eglot as @wgreenhouse suggested
Feb 24 18:05:31 <corwin>	It might be heading toward good enough, at this point (notwithstanding actual bugs of which there are def several).  Recent additions include the ability to install from a git repo vs just from an ELPA, which was straight.el's central/killer feature once upon a time.
Feb 24 18:05:33 <grym>	heistema: i think just don't use elpaca-use-packge for eglot
Feb 24 18:05:38 <grym>	heistema: use use-package instead
Feb 24 18:05:51 <johnjaye>	that's... interesting.
Feb 24 18:05:52 <grym>	corwin: that's certainly why i use straight
Feb 24 18:06:23 <johnjaye>	is it git specifically or will it take hg or sv repos potentially?
Feb 24 18:06:34 <corwin>	grym: very well; I'll consider that guess more or less confirmed ;)
Feb 24 18:06:46 <shrysr>	I think there is a elpaca-use-package-mode in that config which means that any use-package will be... overridden by whatever elpaca does?
Feb 24 18:06:52 <corwin>	johnjaye: that's an excellent question; I don't know.
Feb 24 18:06:55 <johnjaye>	you could define src-retrieval-function as insurance against when git isn't around
Feb 24 18:07:17 <heistema>	@johnjaye You are absolutely right, I shouldn't have gone with Elpaca in the first place... I started using Emacs about one year ago. I "wrote" my config watching a tutorial and evolved it a bit... Now after having to reinstall my laptop I ran in those issues and cannot use my config any more
Feb 24 18:07:17 <grym>	johnjaye: it's not just git
Feb 24 18:07:25 <grym>	johnjaye: https://github.com/radian-software/straight.el?tab=readme-ov-file#where-do-repositories-come-from
Feb 24 18:07:52 <shrysr>	iirc straight had an option for using built-in.
Feb 24 18:07:55 <grym>	heistema: using elpaca is potentially fine! maybe don't use the thing that aliases use-packge to elpaca-use-package
Feb 24 18:08:00 <grym>	shrysr: it does that too
Feb 24 18:08:01 <johnjaye>	heistema: i'm not the best person to ask because i keep my config "minimal", as in < 1000 lines and most of it is setting up font sizes or OS-specific things and I use it on all my machines. Anything else I load explicitly.
Feb 24 18:08:04 <shrysr>	https://github.com/radian-software/straight.el?tab=readme-ov-file#how-can-i-use-the-built-in-version-of-a-package
Feb 24 18:08:05 <rudybot>	https://teensy.info/47gtgDtCrC
Feb 24 18:09:19 <grym>	i think elpaca would be interesting if i was more regularly rebuilding all my packages or whatever
Feb 24 18:09:22 <grym>	... but i'm not
Feb 24 18:09:35 <corwin>	Probably more attractive to guix/arch users.
Feb 24 18:10:13 <corwin>	If I have my whole system rebuilding regularly to follow upstreams, why not my Emacs packages?
Feb 24 18:10:31 <corwin>	(In fact, I have an answer to that, but then I'm not using guix either)
Feb 24 18:10:57 <grym>	i mean, i use arch too
Feb 24 18:11:17 <johnjaye>	in freebsd you in theory rebuild everything using ports if you want to
Feb 24 18:11:19 <grym>	but my time with ubuntu, and also my current life in python, has taught me some lessons that serve me well in emacs
Feb 24 18:11:22 <grym>	which is
Feb 24 18:11:35 <grym>	"the distro is not to be trusted with things that actually matter for development"
Feb 24 18:11:40 <grym>	(and all emacs users are developers!)
Feb 24 18:11:48 <johnjaye>	grym:  such as?
Feb 24 18:11:58 <grym>	johnjaye: such as what
Feb 24 18:12:18 <johnjaye>	like libraries, your autoconf, your compiler, your ....
Feb 24 18:12:34 <johnjaye>	pretty much anything you have to use for development is provided by the distro
Feb 24 18:12:52 <johnjaye>	you have to explicitly go out of your way to set it all up yourself
Feb 24 18:12:57 <grym>	i mean my entire python dev setup (and emacs config setup) doesn't involve my distro package manager
Feb 24 18:13:16 <johnjaye>	i see
Feb 24 18:13:35 <grym>	there's some blurry lines there (namely, cuda for python, and where emacs itself comes from, for emacs), but there's a pretty bright line as well
Feb 24 18:13:40 <johnjaye>	i just say this because gcc is not fun to compile
Feb 24 18:13:44 <grym>	sure
Feb 24 18:13:57 <grym>	what i mean is "i'm not going to apt-install magit, or numpy"
Feb 24 18:14:19 <johnjaye>	ah ok
Feb 24 18:14:29 <ym>	I want emacs with built-in graphics.
Feb 24 18:14:30 <grym>	... or use system python for development at all, really
Feb 24 18:14:34 <grym>	ym: it.. has them?
Feb 24 18:14:56 <ym>	Does it?
Feb 24 18:15:09 <grym>	i seem to be able to view images in emacs, yes
Feb 24 18:15:43 <ym>	No, I mean immanent graphics, from first principles.
Feb 24 18:15:50 <corwin>	Emacs will build using most of the required graphics libraries (e.g. rsvg) given they are found when running ./configure
Feb 24 18:16:04 <ym>	So that emac's core rendered it's appearance.
Feb 24 18:16:14 <grym>	that sounds more like word salad, sory
Feb 24 18:16:15 <ym>	Via DRM/KMS maybe.
Feb 24 18:16:39 <shrysr>	grym does apt install numpy respect virtual env or requirements.txt? I am guessing it doesnot.
Feb 24 18:16:49 <grym>	shrysr: absolutely not
Feb 24 18:16:50 <wgreenhouse>	grym: I think they mean writing emacs like a game engine
Feb 24 18:16:53 <heistema>	@ym: Do you mean you want Emacs to render itself directly using the graphics device?
Feb 24 18:16:55 <grym>	shrysr: which is, in fact, the whole problem.
Feb 24 18:17:01 <shrysr>	ah
Feb 24 18:17:09 <wgreenhouse>	using sdl or some other immediate mode framebuffer lib
Feb 24 18:17:12 <grym>	shrysr: just like ghostbusters: don't cross the streams!
Feb 24 18:17:18 <shrysr>	:)
Feb 24 18:17:19 <ym>	heistema, yes, and it should have basic graphics functions.
Feb 24 18:17:40 <corwin>	Emacs is built with cario; I suppose one could do something with dynamic modules and try taking over some stuff from the display engine.  I'd guess significant patching of the Emacs c code would be needed but I don't really know.
Feb 24 18:17:41 <ym>	But not SDL, of course.
Feb 24 18:17:52 <ym>	libdrm would be perfect.
Feb 24 18:17:58 <wgreenhouse>	ym: patches welcome :) a framebuffer port is something I would try
Feb 24 18:18:25 <corwin>	probably a replacment for xdisp.c or smth?
Feb 24 18:19:27 <ym>	wgreenhouse, rather new emacs-like editor written from scratch.
Feb 24 18:20:25 <corwin>	gl;hf
Feb 24 18:20:33 <johnjaye>	emacs on the framebuffer? wat
Feb 24 18:20:34 <Odin-LAP>	ym: You might be interested in looking at the history of lisp machines.
Feb 24 18:20:47 <ym>	Odin-LAP, I did.
Feb 24 18:21:18 <ym>	corwin, xdisp rely on xlib?
Feb 24 18:21:35 <wgreenhouse>	ym: yes and Xft
Feb 24 18:22:17 <e1f>	iirc from examining the emacs redisplay code many years afo, emacs still believes it's writing to a text display; the graphical output is "faked" for lack of a better term
Feb 24 18:22:58 <e1f>	it's like emacs is living in the matrix
Feb 24 18:24:24 <grym>	yep! https://web.archive.org/web/20161030212109/https://www.facebook.com/notes/daniel-colascione/buttery-smooth-emacs/10155313440066102/
Feb 24 18:24:25 <rudybot>	https://teensy.info/lG0ozIGDfV
Feb 24 18:24:45 <grym>	"One day, a fool wanted to run Emacs in a GUI as a native GUI program. The rest is ChangeLog."
Feb 24 18:26:14 <e1f>	that was morpheus, who wanted to free everyone's mind
Feb 24 18:26:18 <heistema>	The elpaca-use-package mode does not have an option to make an exception for an internal package? Like straight.el does support?
Feb 24 18:27:36 <ym>	grym, nice article!
Feb 24 18:27:47 <shrysr>	i thought morpheus just wanted to find neo
Feb 24 18:27:55 <wgreenhouse>	rudybot: seen quotemstr
Feb 24 18:27:55 <rudybot>	wgreenhouse: quotemstr was seen joining in #emacs twelve weeks ago, and then quotemstr was seen quitting seven weeks ago, saying "Remote host closed the connection"
Feb 24 18:28:08 <wgreenhouse>	ym: ^ author of said article
Feb 24 18:28:25 <e1f>	yes, in his search for neo he was freeing others from the matrix
Feb 24 18:33:17 <johnjaye>	>Redisplay essentially diffs the last-known display configuration and what it’s supposed to be displaying right now, then emits a minimal set of terminal control codes needed to change the last-known state to the current-good state.
Feb 24 18:37:28 <wgreenhouse>	johnjaye: ncurses does this too
Feb 24 18:37:38 <wgreenhouse>	emacs has been doing it since before ncurses existed
Feb 24 18:37:59 <wgreenhouse>	it was a needed algorithm for being a screen editor on a terminal over a phone line
Feb 24 18:49:28 <shrysr>	wgreenhouse: is ncurses a requisite to run recent (v 28) emacs on the terminal?
Feb 24 18:51:36 <shrysr>	i seem to recall that i needed to compile ncurses to be able to use terminal emacs on a remote $work server. old post.. but seems to suggest something similar> https://emacs.stackexchange.com/questions/34588/does-emacs-use-ncurses-to-render-in-the-terminal
Feb 24 18:57:19 <johnjaye>	i wonder which is better, event driven or concurrent gui design
Feb 24 18:57:57 <wgreenhouse>	shrysr: yes, ldd {which emacs} shows emacs29 does link against libncursesw.so.6
Feb 24 18:58:33 <wgreenhouse>	shrysr: no idea how much of that damage algorithm mentioned earlier has moved from emacs to ncurses, or if there are large bits of it emacs still does itself
Feb 24 18:59:06 <wgreenhouse>	ncurses might be used just for terminfo/termcap stuff, idk
Feb 24 18:59:40 <wgreenhouse>	johnjaye: both can be good, both can suck
Feb 24 19:03:09 <garrett>	is it possible to create a new repository on github using magit/forge?
Feb 24 19:11:48 <shrysr>	idk about github, but with sr.ht  it was possible create a repo with just a git push (magit) as long you added proper remote including username
Feb 24 19:12:58 <shrysr>	hm reading https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/scopes-for-oauth-apps doesnt seem to explicitly mention creating repos.
Feb 24 19:14:19 <shrysr>	ty wgreenhouse
Feb 24 19:14:44 <wgreenhouse>	yw
Feb 24 19:15:01 <Odin-LAP>	wgreenhouse: Does ncurses support DOS?
**** ENDING LOGGING AT Sat Feb 24 19:15:17 2024

**** BEGIN LOGGING AT Sun Feb 25 02:09:51 2024

Feb 25 02:09:50 *	Now talking on #emacs
Feb 25 02:09:50 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 25 02:09:50 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 25 02:10:43 <lavendar>	e1f: but you would agree that there needs to be some mistake in the .emacs file?
Feb 25 02:11:28 <lavendar>	because then I would like to find it rather soon...
Feb 25 02:23:16 <lavendar>	tbh, it doesn't seem like my .emacs file contains errors, I am confused
Feb 25 02:56:50 <ellis>	sup yall
Feb 25 03:43:09 <notzmv>	chatgpt just hit us with a new motto for emacs: anything less is simply unacceptable
Feb 25 04:16:39 <grym>	hodapp: https://arxiv.org/abs/2012.00152  hee hee.  old, but HN just remembered it
Feb 25 04:32:10 <johnjaye>	is that just a fancy way of saying LLMs make an average of all the facts they know?
Feb 25 04:34:08 <grym>	johnjaye: and nothing else
Feb 25 04:34:33 <grym>	johnjaye: i am very dubious about the use of the words "fact" and "know" in your framing, though
Feb 25 04:35:01 <johnjaye>	chatgpt. it knows!
Feb 25 04:42:23 <grym>	turns out, it don't
Feb 25 04:42:46 <grym>	every time i hear "kernel method" though, the only thing i think of is fourier transforms
Feb 25 04:54:17 <hodapp>	grym: I have had that paper around but not yet comprehended it well enough to do anything with it
Feb 25 04:54:21 <hodapp>	I read it around when it came out
Feb 25 05:46:12 <twb>	Did you know Linux includes a TLS library and you can "offload" TLS from nginx to the kernel, to avoid kernelspace-to-userspace copy costs?
Feb 25 05:47:51 <twb>	Did you know OpenZFS's Linux driver includes a copy of Lua 5.2 that runs lua scripts in-kernel
Feb 25 05:48:36 <twb>	If you run this as a ZFS channel program, it'll break your kernel:  local function f(s) s:gsub(".", f) return "x" end f("foo"); return tostring(setmetatable({},{__tostring=function(t) string.format("%s",t) end}))
Feb 25 06:29:47 <C0MMIE>	hey have you folks ever heard about public libraries?
Feb 25 06:31:00 <C0MMIE>	they have a ton of free content, and you can take it home or even log on to their databases from your own device. you just need to talk them into issuing a "library card"
Feb 25 06:32:14 <wgreenhouse>	C0MMIE: yes, they're great
Feb 25 06:33:05 <wgreenhouse>	librarians are also total badasses, when it comes to protecting freedom of information and patrons' confidentiality
Feb 25 06:33:06 <C0MMIE>	I got the new York public library to issue me a temporary card and I don't even live in New york
Feb 25 06:34:15 <C0MMIE>	Washington DC won't do that though. or Chicago. or sandiego. or la. or San Francisco.
Feb 25 06:34:37 <C0MMIE>	Carnegie did, tho. and the Philadelphia free library.
Feb 25 06:34:50 <technomancy>	usually you don't lose access by moving away either
Feb 25 06:35:38 <bpalmer>	every library I've had a card at will eventually expire the card and require renewal
Feb 25 06:36:30 <C0MMIE>	hard to believe Chicago and San Fran are hardasses about residency but whatever. between the three that did give me cards, I have a ton of content. why do people pay to stream literally anything? or tolerate ads?!
Feb 25 06:36:42 <bpalmer>	private university libraries have been the closest to user hostile that I've seen (great towards members of their community, fairly gated towards "outsiders", particularly non-academic outsiders)
Feb 25 06:39:06 <technomancy>	why people tolerate ads has always been a mystery to me
Feb 25 06:39:20 <technomancy>	ublock origin is so good and so easy
Feb 25 06:40:05 <bpalmer>	Because ad-supported services have a lower entrance requirement than fee-supported services.
Feb 25 07:00:35 <bpalmer>	rudybot: remember to close your eyes while driving whenever a billboard appears through the window.
Feb 25 07:00:36 <rudybot>	bpalmer: that's the only real sense that a person is a "product" in advertising, but it's no different than seeing a billboard when driving down the street. The owner got paid to put that ad in front of all those drivers.
Feb 25 07:54:10 <SincereFox>	is thre a way to do mind maps in emacs?
Feb 25 07:56:08 <corwin>	Mainly I think of https://kungsgeten.github.io/org-brain.html but there is also a somewhat stale https://github.com/the-ted/org-mind-map
Feb 25 07:56:41 <SincereFox>	corwin: Hey nice to see you around here too, thanks! I'll check those
Feb 25 08:03:30 <SincereFox>	I saw a teacher using that "brain" (not the emacs software) once, it sounded like a glorified wiki to me, I am watching the emacs one demo and that one does looks awesome ( totally not emacs biased message :P )
Feb 25 08:10:41 <Viking667>	whoa. Hadn't realised I was on the server. Back soon, stupid Chrome can't find a running password manager.
Feb 25 08:54:30 <sandra>	Just had a weird interaction with Emacs when I had used replace-string on some RTL isolates, and then when I went to do replace-string again, the modeline had those isolates in the "default" expression, so when I was writing the new replacement strings it thought I was writing RTL.
Feb 25 08:54:30 <sandra>	Nothing I couldn't fix easily (just search for a not-in-this-particular-buffer plain text word like zebra and replace it with blank or whatever) but maybe something that could trip up someone else.
Feb 25 08:54:30 <sandra>	I'm talking about the text that says "Replace string (default foo → bar): "; if that string as a whole contains unterminated bidi isolates, perhaps they should get popped. I dunno.
Feb 25 09:31:53 <ahilariousr>	what is a symbol? '( some code here)
Feb 25 09:56:23 <thuna`>	Morning!
Feb 25 09:56:40 <sham1>	Morning
Feb 25 11:33:25 <bodiccea_>	in makefile mode, indent-tabs-mode is obviously true. But would it be possible to use tabs only at start of rules actions ? For example, inserting comments at comment-column would have only spaces before the comment start
Feb 25 11:35:56 <APic>	Moin
Feb 25 11:35:57 <APic>	,BotSnack
Feb 25 11:35:58 <fsbot>	my favourite snack!
**** BEGIN LOGGING AT Sun Feb 25 18:41:34 2024

Feb 25 18:41:33 *	Now talking on #emacs
Feb 25 18:41:33 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 25 18:41:33 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** ENDING LOGGING AT Sun Feb 25 18:41:51 2024

**** BEGIN LOGGING AT Tue Feb 27 23:15:59 2024

Feb 27 23:15:58 *	Now talking on #emacs
Feb 27 23:15:58 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 27 23:15:58 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 27 23:17:57 <mwnaylor>	grym: If you like mixing genres, https://www.imdb.com/title/tt0651043/
Feb 27 23:19:36 <mwnaylor>	𝘔𝘰𝘰𝘯𝘭𝘪𝘨𝘩𝘵𝘪𝘯𝘨 does 𝘛𝘢𝘮𝘪𝘯𝘨 𝘰𝘧 𝘵𝘩𝘦
Feb 27 23:19:37 <mwnaylor>	𝘚𝘩𝘳𝘦𝘸.
Feb 27 23:26:55 <mwnaylor>	FWIW, the punch line of the witch scene in 𝘔𝘰𝘯𝘵𝘺 𝘗𝘺𝘵𝘩𝘰𝘯 𝘢𝘯𝘥 𝘵𝘩𝘦 𝘏𝘰𝘭𝘺
Feb 27 23:26:55 <mwnaylor>	𝘎𝘳𝘢𝘪𝘭 is that she really was a witch.
Feb 27 23:29:01 <grym>	nails and gunpowder in her bloomers?
Feb 27 23:35:25 <mekeor>	mwnaylor: how did you write "𝘎𝘳𝘢𝘪𝘭"?
Feb 27 23:35:46 <mekeor>	or the other mathematical sans-serif italic letters?
Feb 27 23:48:03 <edgar-rft>	𝓷𝓸 𝓯𝓪𝓷𝓬𝔂 𝓽𝓮𝔁𝓽 𝓪𝓵𝓵𝓸𝔀𝓮𝓭
Feb 27 23:49:25 <bpalmer>	fancy text need not apply -- this here be emacstown.
Feb 27 23:49:25 <grym>	 but how about this then
Feb 27 23:54:45 <mwnaylor>	mekeor: Those letters are the Unicode italic characters. I have written (including comments & copyright) module, 496 lines and 17835 bytes, that handles text decoration for me.
Feb 27 23:55:23 <grym>	mwnaylor: recently i learned about U+FDFD
Feb 27 23:55:31 <Odin-LAP>	bpalmer: ᛁᛋ ᚦᛁᛋ ᚠᚨᚾᛋᛁ?
Feb 27 23:56:53 <edgar-rft>	𝄞 ♩ ♫ ♪ ♬ ...
Feb 27 23:57:20 <mwnaylor>	I can 𝗯𝗼𝗹𝗱, u̲n̲d̲e̲r̲l̲i̲n̲e̲, s̶t̶r̶i̶k̶e̶ t̶h̶r̶o̶u̶g̶h̶, Grεεkιfy vοwεls, etc.
Feb 27 23:57:51 <mekeor>	mwnaylor: they are called "mathematical sans-serif italic letters" in unicode, see C-u C-x =
Feb 27 23:58:46 <mekeor>	mwnaylor: is it a published package? did you consider making it so?
Feb 28 00:00:54 *	Odin-LAP can't help but think quail would be the simplest way to do it.
Feb 28 00:01:06 <Odin-LAP>	Define input methods for each alphabet.
Feb 28 00:01:22 *	mekeor agrees
Feb 28 00:01:59 <mekeor>	Odin-LAP: although, that would not allow to transform a region etc
Feb 28 00:03:48 <Odin-LAP>	mekeor: Fair enough. I think you could mechanically change the quail mappings into a function to do that, though.
Feb 28 00:05:33 <ski>	kiliro : "isn't ^M = C-S-m?" -- no, it's `C-m'
Feb 28 00:05:56 <mekeor>	what's a nice way to make compose-mail (C-x m) ask me which e-mail-address i want to use? i use 'gnus as mail-user-agent. when replying to mail, the address is already chosen well, thanks to my personal value of gnus-posting-styles variable.
Feb 28 00:05:59 <mwnaylor>	mekeor: Not published, officially. I have a github repo for emacs hacking. https://github.com/mark-naylor-1701/elisp-hacking
Feb 28 00:07:27 <mwnaylor>	Look for text-decoration.el. Everything here is rough and not ready for prime-time, in my opinion. It works for me; if someone finds it interesting, great.
Feb 28 00:12:14 <mekeor>	thanks for sharing!
Feb 28 00:12:38 *	mekeor wonders what's the share of licenses in the set of emacs packages
Feb 28 00:14:26 <mekeor>	pretty surprising that package.el does not know about licenses
Feb 28 00:18:33 <technomancy>	I think the assumption was that no one would be weird enough to use a non-GPL license for elisp
Feb 28 00:19:08 <technomancy>	normally I'd say that's not a bad assumption, but on the other hand, have you met elisp developers?
Feb 28 00:19:54 <mfisher>	haha
Feb 28 00:21:42 <lispmacs[work]>	Tεstιng, 1, 2, 3
Feb 28 00:21:42 <lispmacs[work]>	𝘏𝘦𝘭𝘭𝘰 𝘸𝘰𝘳𝘭𝘥!
Feb 28 00:21:42 <lispmacs[work]>	𝗜𝘁'𝘀 𝗮𝗹𝗶𝘃𝗲!
Feb 28 00:21:53 <johnjaye>	what is. a mac?
Feb 28 00:22:32 <mwnaylor>	lispmacs[work]: How did you post the Unicode?
Feb 28 00:22:56 <lispmacs[work]>	post it?
Feb 28 00:23:24 <mwnaylor>	How did you create the Unicode characters?
Feb 28 00:23:50 <lispmacs[work]>	I just used these nifty -region functions from your library
Feb 28 00:24:21 <lispmacs[work]>	sεεms to be 𝘸𝘰𝘳𝘬𝘪𝘯𝘨 𝗴𝗿𝗲𝗮𝘁
Feb 28 00:24:34 <bpalmer>	I don't publish elisp, but when I do, it's BSD.
Feb 28 00:25:02 <bpalmer>	RMS has in the past asserted that stuff written in elisp must be GPL because it is a derived work of emacs.
Feb 28 00:25:57 <mwnaylor>	Wow! Thanks for that. Total impostor syndrome here. It works for me, but I wrote it for me. Not sure anyone else would find it useful.
Feb 28 00:26:22 <lispmacs[work]>	I downloaded the repo and then load that file from my init.el
Feb 28 00:26:28 <sham1>	Well, of course RMS is not a lawyer so that at least checks out that he'd have weird thoughts about that
Feb 28 00:26:41 <lispmacs[work]>	had to install a few packages from guix first
Feb 28 00:27:29 <mekeor>	bpalmer: c'mon, why bsd? why not gpl?
Feb 28 00:27:49 <mwnaylor>	bpalmer: I've played w/ FreeBSD in the past. I've got about 20 years Slackware experience, which I can't justify going back on. If forced to choose a new OS, it would be FreeBSD.
Feb 28 00:28:16 <JohnGalt>	RMS is neurotic
Feb 28 00:28:18 <mekeor>	mwnaylor: i think bpalmer was talking about the bsd license, not bsd OS
Feb 28 00:28:34 <bpalmer>	or maybe MIT. I forget which one is better about patents.
Feb 28 00:28:54 <sham1>	Well MIT doesn't make any claims about patents, that's for sure
Feb 28 00:28:56 <JohnGalt>	BSD 2 clause is the most minimal other than public domain IIRC
Feb 28 00:29:11 <technomancy>	I thought Apache was roughly the only non-copyleft license that has patent protection
Feb 28 00:29:15 <bpalmer>	I do really like BSD 3 clause
Feb 28 00:29:17 <JohnGalt>	communism != freedom
Feb 28 00:29:30 <mekeor>	copyleft != communism
Feb 28 00:29:38 <mekeor>	communism == freedom
Feb 28 00:29:45 <mekeor>	ask technomancy
Feb 28 00:29:53 <technomancy>	I guess apache's goofy "you have to put the license on every single file" bit is less annoying in elisp than it would be in other languages
Feb 28 00:29:57 <bpalmer>	mekeor: because any elisp I write is probably only worthwhile broken up into snippets to glue stuff together.
Feb 28 00:30:04 <JohnGalt>	no copyleft is forced sharing
Feb 28 00:30:07 <JohnGalt>	that is communism
Feb 28 00:30:26 <bpalmer>	mekeor: there's no reason to try to make people share their glue
Feb 28 00:30:27 <thuna`>	I do 0bsd for *really* short code and gpl3+ for everything else
Feb 28 00:30:54 <technomancy>	bpalmer: what if your friend wants to sniff it
Feb 28 00:31:02 <JohnGalt>	somebodies gotta force everyone into their beliefs, might as welll be GPL
Feb 28 00:31:24 <grym>	sniffing is fine; i draw the line at huffing
Feb 28 00:31:24 <sham1>	The problem with the legal theory of "Public Domain" for this stuff is that such a concept simply doesn't exist everywhere as such. (Of course, IANAL) From what I can tell, in more civil law jurisdiction contexts, where you instead have "authorial rights" instead of "copyright", it's not that trivial to just give away said rights
Feb 28 00:31:32 <JohnGalt>	are you going to send missionaries to my house too?
Feb 28 00:32:00 <grym>	mm, huffman coding
Feb 28 00:32:33 <bpalmer>	a big hipmunk fan, eh?
Feb 28 00:32:45 <JohnGalt>	I have his book The art of Doing Science and Engineering
Feb 28 00:32:47 <JohnGalt>	fun so far
Feb 28 00:32:53 <grym>	no no i just don't like losing things
Feb 28 00:33:02 <sham1>	Well, the technical term would be "authors' rights" but I suppose authorial rights also works
Feb 28 00:33:27 <bpalmer>	JohnGalt: that's Hamming.
Feb 28 00:33:52 <grym>	he had a coding too, but he's more famous for his windows
Feb 28 00:34:00 <JohnGalt>	bpalmer: your right
Feb 28 00:34:06 <grym>	my left!
Feb 28 00:34:28 <technomancy>	oh noooo the page hosting the Look at This Cool Rock I Found Public License 1.0 has gone away
Feb 28 00:34:31 <grym>	the gods of signal processing all seem to  get window functions named after them
Feb 28 00:35:39 <mwnaylor>	I realize the difference between the OS and the license. But, I believe they come from the same philosophy.
Feb 28 00:36:09 <technomancy>	archive.org doesn't have it =(
Feb 28 00:37:50 <JohnGalt>	man ediff is super nice on a big screen
Feb 28 00:38:25 <grym>	many things are nice on a big screen!
Feb 28 00:38:36 <grym>	perhap one day i will understand ediff, but not today
Feb 28 00:38:48 <bpalmer>	rudybot: 180 degree curved monitor, or 4 screens side by side?
Feb 28 00:38:48 <rudybot>	bpalmer: woks are curved. Induction stoves are flat.
Feb 28 00:39:07 <Odin-LAP>	sham1: The reason droit d'auteur isn't easily dropped is that it was originally conceived of as inalienable, which is a sharp contrast with the solidly economic (and thus saleable) copyright of the UK.
Feb 28 00:39:31 <mwnaylor>	rudybot: woks are flat on the bottom
Feb 28 00:39:31 <rudybot>	mwnaylor: I'm really delighted that I've written the first thing that I consider to be a real program in Racket. Albeit a very simple program in the grand scheme of things, it woks on an external file and produces an external file with new information.
Feb 28 00:39:32 <grym>	originally ... like 150 years ago :P
Feb 28 00:39:57 <Odin-LAP>	grym: I'm a historian. That's recent. :)
Feb 28 00:40:27 <JohnGalt>	I dont get curved screens
Feb 28 00:40:40 <JohnGalt>	wouldn't that cause eye strain?
Feb 28 00:40:43 <thuna`>	Uhh... please tell me customize's "erase customizations" is reversible
Feb 28 00:40:56 <mwnaylor>	Woks are great. I've used mine to make pasta and sausage gravy.
Feb 28 00:41:07 <JohnGalt>	thuna`: version control is reversable
Feb 28 00:41:22 <thuna`>	JohnGalt: that is not helpful advice at this point
Feb 28 00:41:25 <Odin-LAP>	Also, that's why CC0 is really useful, and FSF is silly for claiming it's any worse than the "liberal licenses".
Feb 28 00:41:55 <bpalmer>	thuna`: did you revert the session or permanently?
Feb 28 00:42:09 <bpalmer>	thuna`: or, actually , what was "erase customizations" ?
Feb 28 00:42:19 <JohnGalt>	do you have time machine?
Feb 28 00:42:34 <thuna`>	There was an "Erase Customizations" option in the menu for "state"
Feb 28 00:43:37 <bpalmer>	thuna`: oh, no, in the menu that seems to be what  "revert permanently"  means in the buttons
Feb 28 00:44:15 <JohnGalt>	other machines?
Feb 28 00:44:21 <bpalmer>	thuna`: check to see if your custom.el (or init.el if you don't split up your custom files) has an emacs produced backup
Feb 28 00:44:24 <bpalmer>	e.g., init.el~
Feb 28 00:44:53 <thuna`>	JohnGalt: I only have one.  bpalmer: custom.el wasn't open so it doesn't have history but let me see ~
Feb 28 00:45:12 <sham1>	Odin-LAP: right, but given the existence of the Bern convention, which is supposed to harmonise the economic copyright and these rights of the author, it makes it quite odd to apply
Feb 28 00:45:46 <mwnaylor>	My .emacs resides in its own directory that is also a git repo. I symlink to that from ~/.
Feb 28 00:45:47 <sham1>	Also from a philosophical point of view, it's weird to have a right that you can't renounce
Feb 28 00:45:47 <thuna`>	bpalmer: custom.el~ has it!  Thank you very much
Feb 28 00:46:05 <Odin-LAP>	sham1: Supposed, yes, but funnily enough the only thing the UK and US took from the others was extending the duration.
Feb 28 00:46:15 <bpalmer>	thuna`: and I do suggest making a repository right away with your configuration after you restore it.
Feb 28 00:46:41 <ski>	rudybot: The Bourne convention is superior to Sun's
Feb 28 00:46:42 <rudybot>	ski: it's one of those crossover movies (i think). it's really a romance movie but they added jason bourne running around to the trailer to attract the guys
Feb 28 00:46:44 <bpalmer>	at the very least, just go into ~/.emacs.d and do "git init; git add init.el custom.el; git commit -m 'Backup'"  if you like git
Feb 28 00:46:49 <JohnGalt>	git init ; git add -A ; git commit
Feb 28 00:46:51 <Odin-LAP>	sham1: Have you ever heard about the concept of "human rights"?
Feb 28 00:46:54 <thuna`>	What's a decent commit strategy?  That's what put me off of makig a repository until now
Feb 28 00:47:02 <JohnGalt>	git flow
Feb 28 00:47:07 <JohnGalt>	if you want it complicated
Feb 28 00:47:24 <JohnGalt>	otherwise just a master or main branch and a devel branch
Feb 28 00:47:58 <JohnGalt>	when you want to do a milestone do: git checkout master ; git merge --no-ff develop
Feb 28 00:48:18 <mwnaylor>	bpalmer: Great advice. Did you, like me, learn that the hard way by breaking a config system and have to undo the damage w/o backup?
Feb 28 00:48:20 <JohnGalt>	--no-ff makes a commit instead of fast forwarding so you can revert
Feb 28 00:48:36 <bpalmer>	mwnaylor: aye, I've broken many a thing.
Feb 28 00:49:02 <sham1>	Odin-LAP: I have, but I can also partially renounce other rights. For example, analogously to the way the authorial rights work, freedom of movement would mean that I would *have* to move about
**** BEGIN LOGGING AT Wed Feb 28 02:09:40 2024

Feb 28 02:09:40 *	Now talking on #emacs
Feb 28 02:09:40 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 28 02:09:40 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 28 02:11:51 <JohnGalt>	every experiment in socialism has ended in revolution or anarchy
Feb 28 02:12:52 <twb>	Citation needed.
Feb 28 02:13:38 <JohnGalt>	Russia, Venezuala, Hippies, etc...
Feb 28 02:13:49 <JohnGalt>	China bailed
Feb 28 02:14:46 <JohnGalt>	Isnt it funny how fast the boomers went from hippies to investors in the 80's ? lol.
Feb 28 02:20:05 <twb>	JohnGalt: you said "all".
Feb 28 02:22:41 <habamax>	sweeden
Feb 28 02:23:32 <bremner>	canada has definitely become a gulag since the introduction of single payer healthcare
Feb 28 02:23:53 <JohnGalt>	our health care is in the toilet now too
Feb 28 02:23:58 <bremner>	rudybot: no true scotsman
Feb 28 02:23:58 <rudybot>	bremner: no true scotsman
Feb 28 02:23:59 <JohnGalt>	cant get appointments for months
Feb 28 02:24:50 <twb>	bremner: when was that, 1905?
Feb 28 02:25:01 <habamax>	Canada is Main Camp Governance
Feb 28 02:25:02 <bremner>	twb: 1960s, iirc
Feb 28 02:25:09 <twb>	Wow, late
Feb 28 02:25:25 <twb>	Most counties that aren't New Zealand did it right after WWII
Feb 28 02:25:44 <bremner>	twb: I blame the Fenian raids
Feb 28 02:25:55 <JohnGalt>	I am glad tcp/ip has a monopoly on the internet :]
Feb 28 02:26:04 <JohnGalt>	monopolies can be good
Feb 28 02:26:13 <habamax>	use null-modems!
Feb 28 02:26:48 <twb>	bremner: so... Fenians are pro-Irish-indepdendence Americans who tried to wreck Canada to distract England from Ireland?
Feb 28 02:27:00 <JohnGalt>	thankfully webkit is establishing a homogenous browser landscape
Feb 28 02:27:19 <johnjaye>	what emacs package or modes would you like to see this year?
Feb 28 02:27:32 <johnjaye>	i'm curious if we can do a straw poll or something like that.
Feb 28 02:27:42 <bremner>	twb: something like that
Feb 28 02:27:50 <JohnGalt>	I would leave VSCode if I could get tabnine AI complete
Feb 28 02:27:52 <wgreenhouse>	twb: more generally the old-timey term for dissident republicans
Feb 28 02:28:12 <johnjaye>	tabnine AI?
Feb 28 02:28:23 <grym>	not to be confused with newfangled term, which is "insurrectionist"
Feb 28 02:28:24 <JohnGalt>	its a AI completion system
Feb 28 02:28:33 <JohnGalt>	just hit tab and it writes code
Feb 28 02:28:40 <habamax>	nine times?
Feb 28 02:28:43 <grym>	gross
Feb 28 02:28:45 <johnjaye>	i had no idea the future was already here
Feb 28 02:28:53 <JohnGalt>	suprisingly good. Ive written entire test suites with one keystroke
Feb 28 02:29:03 <johnjaye>	isn't that literally what George Jetson was depicted doing? hitting the button all day at work?
Feb 28 02:29:18 <JohnGalt>	well you have to know if its the correct code
Feb 28 02:29:27 <twb>	wgreenhouse: I mean... dissident against what?  Aren't republicans just one half of the Wigs?
Feb 28 02:29:29 <JohnGalt>	but it saves enormous amounts of typing
Feb 28 02:29:31 <johnjaye>	i think that was someone else's job. he just hit the button
Feb 28 02:29:58 <JohnGalt>	I cant imagine java without it
Feb 28 02:30:23 <JohnGalt>	it writes entire format strings with about 90% accuracy
Feb 28 02:30:41 <twb>	"One nines accuracy", great job
Feb 28 02:30:47 <wgreenhouse>	twb: dissident republicans in the ira sense, I mean. people who wanted to continue the war with the uk
Feb 28 02:31:03 <JohnGalt>	twb: I think so
Feb 28 02:31:06 <twb>	wgreenhouse: oh right.  Sorry I thought you were speaking from a US context.
Feb 28 02:31:18 <JohnGalt>	since all it needs is a keystroke its pretty good
Feb 28 02:31:31 <habamax>	and a subscription
Feb 28 02:31:37 <JohnGalt>	and if it's showing wrong, you can nudge it with a bit of typing
Feb 28 02:31:42 <habamax>	or is it free now?
Feb 28 02:32:03 <JohnGalt>	subscription
Feb 28 02:32:13 <JohnGalt>	nobody is going to train a model for free
Feb 28 02:32:37 <JohnGalt>	the server, bandwith, and staffing is enormously expensive
Feb 28 02:32:41 <bremner>	or pay for their training data, apparently
Feb 28 02:32:44 FiSHLiM plugin unloaded
**** ENDING LOGGING AT Wed Feb 28 02:32:44 2024

**** BEGIN LOGGING AT Thu Feb 29 01:02:42 2024

Feb 29 01:02:42 *	Now talking on #emacs
Feb 29 01:02:42 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 29 01:02:42 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 29 01:02:47 <technomancy>	they keep making the web UI for this worse
Feb 29 01:03:51 <gnomon>	technomancy, the UI is hilariously bad these days, yeah.
Feb 29 01:04:13 <technomancy>	what's the best way to do this from emacs
Feb 29 01:04:27 <gnomon>	I think forge.el?
Feb 29 01:04:38 <gnomon>	Which you'll have as a dependency if you have magit installed, I think
Feb 29 01:04:47 <technomancy>	haha wellllll
Feb 29 01:04:49 <technomancy>	funny story about that
Feb 29 01:04:55 <technomancy>	I'm using magit 1.2.1
Feb 29 01:05:02 <gnomon>	my very good sir
Feb 29 01:05:13 <gnomon>	what in the heckity dang
Feb 29 01:05:16 <technomancy>	it works just the way I like it ok?
Feb 29 01:05:22 <gnomon>	heh
Feb 29 01:05:37 <gnomon>	No judgement, I still use a physical MP3 player
Feb 29 01:05:42 <technomancy>	tbh I don't even need editor integration beyond "actually knows what $EDITOR is"
Feb 29 01:05:47 <gnomon>	we all have our archaisms
Feb 29 01:06:30 <technomancy>	there used to be a lil shell script for this but I think it got replaced with a rubygem or some godforsaken equivalent
Feb 29 01:06:40 <corwin>	arch AI SMS messages??
Feb 29 01:06:40 <fsbot>	Cannot predict now
Feb 29 01:07:07 <gnomon>	technomancy, would you be satisfied using the horribilitating gh(1) command line utility?
Feb 29 01:07:15 <technomancy>	maybe
Feb 29 01:07:57 <gnomon>	https://cli.github.com/manual/ - if you think the manual is poorly organized, wait until you look at the code.  But it _does_ let you create a pull request: https://cli.github.com/manual/gh_pr
Feb 29 01:08:03 <technomancy>	https://github.com/mislav/hub this is the one I used to use
Feb 29 01:08:32 <technomancy>	wait wait wait; it's in *APT*??? https://packages.debian.org/stable/hub
Feb 29 01:09:00 <gnomon>	also https://packages.debian.org/bookworm/gh
Feb 29 01:09:06 <technomancy>	weird!
Feb 29 01:09:11 <technomancy>	thanks; I'll give this a try
Feb 29 01:09:22 <gnomon>	godspeed to thee
Feb 29 01:09:52 <technomancy>	seems uncharacteristic of debian to grant a 2-letter spot to microsoft
Feb 29 01:10:22 <gnomon>	mmm
Feb 29 01:11:00 <technomancy>	it took them *years* to grant `chromium' to google because there was some silly galaga clone that had that name first
Feb 29 01:11:08 <gnomon>	On the face of it I agree, but it _does_ seem characteristic about Debian to give even a questionable idea a proper chance to prove itself worthy of longer-standing adoption if it doesn't immediately break things
Feb 29 01:11:31 *	gnomon side-eyes your least favourite debian package
Feb 29 01:11:35 <gnomon>	you know the one I'm talking about
Feb 29 01:11:51 <technomancy>	chromium??
Feb 29 01:13:02 *	Disconnected ()
**** ENDING LOGGING AT Thu Feb 29 01:13:02 2024

**** BEGIN LOGGING AT Thu Feb 29 01:15:36 2024

Feb 29 01:15:36 *	Now talking on #emacs
Feb 29 01:15:36 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 29 01:15:36 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 29 01:15:58 <bpalmer>	truly fresh PRs would get orville images.
Feb 29 01:17:03 *	technomancy gasps
Feb 29 01:17:06 <technomancy>	scandalous
Feb 29 01:23:54 <grym>	rudybot: the bursar, sir??
Feb 29 01:23:54 <fsbot>	Inconceivable!
Feb 29 01:23:54 <rudybot>	grym: http://www.kent.edu/bursar/termdetail/upload/perkins-forbearance-form.pdf
Feb 29 01:27:04 <mwnaylor>	technomancy loses style points for using a (formerly) proprietary file format. 😜
Feb 29 01:30:25 <bpalmer>	rudybot: name the most exciting science fiction show on television or streaming for use with memes.
Feb 29 01:30:25 <rudybot>	bpalmer: you kids and your memes
Feb 29 01:31:45 <mwnaylor>	I should probably clone magit so I have fallback version in case I have problems with the nongnu current.
Feb 29 01:31:52 <technomancy>	I was going with expanse gifs for a while
Feb 29 01:32:13 <bpalmer>	probably got too expansive to license, eh?
Feb 29 01:32:32 <technomancy>	lol
Feb 29 01:37:23 <mwnaylor>	git clone magit complete.
Feb 29 02:17:15 <grym>	but, magit clone magit
Feb 29 02:19:11 <grym>	i updated magit yesterday, more or less because i wanted to futz around with forge some more
Feb 29 02:20:59 <mwnaylor>	In my case, bash command.
Feb 29 02:22:17 <mwnaylor>	The old repo had a .git subdirectory, but magit did not recognize it as such. rm -r magit, then git clone url.
Feb 29 02:28:25 <Pacane>	Hi, I've got an emacs config that's working but I'm looking for some advice to improve it. Is this a proper place to get tips?
Feb 29 02:29:12 <grym>	sure
Feb 29 02:29:18 <kiliro>	yes, Pacane
Feb 29 02:29:45 <kiliro>	and the forums and the wiki and the manual
Feb 29 02:31:47 <Pacane>	I'm specifically looking for a way to organize my config in terms of dependencies. Right now I have a literal org config, using elpaca as my package manager. My issue is that I'm having trouble ordering/configuring stuff in the proper order. Everywhere I see samples they use "use-package" with a :config block. Is there a way to tell use-package (and probably elpaca) to configure stuff after having installed another
Feb 29 02:31:47 <Pacane>	package?
Feb 29 02:31:48 <fsbot>	[->] elpa is [0] the Emacs Lisp Package Archive, the default software repository for package.el the elisp package manager officially adopted for inclusion in gnu emacs 24 (distributes only free software) ;;[ ,more / ,dump]
Feb 29 02:32:05 <grym>	Pacane: :after
Feb 29 02:33:55 <Pacane>	Can I put my use-package blocks in any order with this? assuming I put my :after blocs properly
Feb 29 02:34:24 <Pacane>	will elpaca be smart enough to process its install queue in the proper order?
Feb 29 02:35:45 <Pacane>	also, will :after A assume the :config block of A will have run?
Feb 29 02:35:59 <Pacane>	or will it just assume A is installed
Feb 29 02:36:28 <grym>	yes to the first; to the second: i don't know, read the use-package docs
Feb 29 02:36:42 <wgreenhouse>	Pacane: :config runs after the package named (or a library of the same name) is loaded
Feb 29 02:36:48 <wgreenhouse>	compare with :init
Feb 29 02:37:52 <wgreenhouse>	Pacane: you should probably read (info "(use-package) Loading sequentially") even though it is about use-package generally, and not specific to elpaca
Feb 29 02:38:12 <Pacane>	ok I will! thanks
Feb 29 02:42:54 <Pacane>	another question I had.. I've separated some of my config in multiple files to clean things up. However I'm having an issue where I don't have auto complete for function names from other packages I have "required" at the top of the file. Is there something to set up to get company or whatever else to pick up definitions of other elisp packages..?
Feb 29 02:43:43 <Pacane>	I can also not jump to definition and do such lsp'y things, is that not supported in some way in emacs for elisp?
Feb 29 02:44:37 <Pacane>	All I do, all the time is just describe functions and navigate there, but is there a way to, say for example jump to where a variable or function is declared?
Feb 29 02:46:20 <JohnGalt>	C - h v
Feb 29 02:46:27 <JohnGalt>	C - h f
Feb 29 02:46:40 <JohnGalt>	the sources are linked
Feb 29 02:48:24 <Pacane>	that's the thing though, sources aren't linked. I just get a message "Thing is declared in xyz.el"
Feb 29 02:48:47 <JohnGalt>	isn't there a underlined thing at the top of the doc?
Feb 29 02:48:59 <Pacane>	ok, right
Feb 29 02:49:28 <wgreenhouse>	Pacane: jump to definition is supported out of the box in elisp with M-.
Feb 29 02:49:29 <Pacane>	I think I recall seeing in doom emacs when I used that a while back, the actual source snippet was embedded in there
Feb 29 02:49:36 <Pacane>	any way to get that back?
Feb 29 02:50:03 <wgreenhouse>	there are a few projects that do things like that; any idea which package doom uses for that? :)
Feb 29 02:50:46 <Pacane>	I haven't looked at doom's source no
Feb 29 02:51:47 <Pacane>	I'm using evil and it remapped M-. I think I'll have to find the original function
Feb 29 02:52:58 <wgreenhouse>	it's `xref-find-definitions`
Feb 29 02:53:27 <Pacane>	it keeps saying "no definition found for X"
Feb 29 02:53:35 <wgreenhouse>	that means that library isn't loaded
Feb 29 02:53:36 <Pacane>	I believe I tried that before
Feb 29 02:53:42 <Pacane>	hmm
Feb 29 02:53:55 <wgreenhouse>	as in, the library defining the thing you tried it on
Feb 29 02:54:49 <wgreenhouse>	it can't look up the definition of something before the relevant file is loaded
Feb 29 02:54:59 <Pacane>	It's doing that even for core functions like load-theme
Feb 29 02:55:09 <wgreenhouse>	Pacane: ah, are you on Debian?
Feb 29 02:55:39 <wgreenhouse>	if so, elisp sources for the distribution are shipped in a separate package for $historical-reasons
Feb 29 02:55:41 <Pacane>	ahh no I think I know why.
Feb 29 02:55:45 <wgreenhouse>	you'll have to install those
Feb 29 02:56:04 <Pacane>	I'm on macos, but I think the issue it the fact that I'm doing that in a org config file
Feb 29 02:56:15 <Pacane>	in snippet blocks
Feb 29 02:56:22 <wgreenhouse>	"doing that" meaning what?
Feb 29 02:56:34 <Pacane>	xref-find-definitions
Feb 29 02:56:48 <wgreenhouse>	ah. yes, expand one of the snippets with C-c ' and do it there
Feb 29 02:57:00 <Pacane>	yeah I figured
Feb 29 02:57:01 <wgreenhouse>	try it in emacs-lisp-mode not org-mode
Feb 29 02:57:18 <Pacane>	I think I'm gonna ditch this literal org mode config
Feb 29 02:57:38 <Pacane>	it's mostly trouble compared to the upsides.
Feb 29 02:58:07 <wgreenhouse>	what is an emacs config but the opportunity to have uniquely terrible problems nobody else can relate to
Feb 29 02:58:11 <wgreenhouse>	,hell
Feb 29 02:58:12 <fsbot>	hell is other people's .emacs
Feb 29 02:59:04 <Pacane>	well I must be part of a bigger group, I've seen many tutorials building configs like this haha..
Feb 29 02:59:31 <wgreenhouse>	yeah, the org mode config is excellent for writing tutorials, or posts explaining your config
Feb 29 02:59:48 <wgreenhouse>	I've tried it a few times over the years but don't care enough to write good documentation of the config so it's pointless
Feb 29 03:00:36 <wgreenhouse>	now you've got me wondering if org itself is wired to use xref
Feb 29 03:00:45 <JohnGalt>	if it was hard to write it should be hard to read
Feb 29 03:01:31 <Pacane>	nice quote there
Feb 29 03:01:37 <wgreenhouse>	JohnGalt: at this stage, the point for me is more that config just shouldn't be permanent
Feb 29 03:01:41 <Pacane>	i'll reuse that for sure
Feb 29 03:01:53 <wgreenhouse>	doing emacs bankruptcy every couple years is wise
Feb 29 03:02:05 <wgreenhouse>	your workarounds might've become defaults meanwhile, etc.
Feb 29 03:02:08 <bpalmer>	Pacane: excellent. I strongly recommend people don't try to write "literate" configs.
Feb 29 03:02:25 <JohnGalt>	Im weeding stuff out of mine right now actually
Feb 29 03:02:35 <JohnGalt>	I have decades of stuff
Feb 29 03:03:09 <Pacane>	would it be nuts to just yeet the .org and use the generated .el? I means, it's literally all the same content except the org stuff, right?
Feb 29 03:03:25 <wgreenhouse>	wouldn't be nuts
Feb 29 03:05:51 <twb>	wgreenhouse: I think "every couple years" depends on how much you buy into "move fast and break things" in the first place
Feb 29 03:06:45 <wgreenhouse>	twb: very little to not at all
Feb 29 03:08:19 <Pacane>	is there a recommeded place to put your config, or do you just shove it in init.el?
Feb 29 03:08:47 <JohnGalt>	I think .emacs.d is the new way
Feb 29 03:08:53 <grym>	i put mine in ~/.emacs.d/init.el
Feb 29 03:09:02 <grym>	that's the old new way, but i like it more than the new new way
Feb 29 03:09:29 <Pacane>	but init.el loads whatever other file in .emacs.d?
Feb 29 03:09:30 <JohnGalt>	I symlink .emacs -> ~/code/grail/emacs/grail.el
Feb 29 03:09:36 <JohnGalt>	which is my entry point
Feb 29 03:10:29 <grym>	Pacane: it does what it's told
Feb 29 03:11:38 <offby1>	I think my previous trouble with helm is this https://github.com/emacs-helm/helm/issues/2623
Feb 29 03:11:47 <Pacane>	yeah I know that, but I assume putting everything in init.el is not the best if I want my config in source control..? because of all the custom stuff that gets added at the bottom?
Feb 29 03:14:31 <JohnGalt>	you can define a customization file
Feb 29 03:14:52 <JohnGalt>	seperate from your init
Feb 29 03:14:59 <Pacane>	oh didn't know about that!
Feb 29 03:15:00 <grym>	Pacane: do you mean using m-x customize, or something else
Feb 29 03:15:22 <Pacane>	grym: yes
Feb 29 03:15:39 <Pacane>	and stuff like unsafe themes when you try something out
Feb 29 03:15:43 <grym>	Pacane: true/false answers to or questions are confusing
Feb 29 03:16:09 <Pacane>	yes customize
Feb 29 03:16:14 <bpalmer>	Pacane: I set custom-file to be ~/.emacs.d/custom.el
Feb 29 03:16:45 <grym>	ah.  i don't use customize, so i can't help there
Feb 29 03:16:52 <bpalmer>	that said, there's no problem in using a single source file evne with source contorl
Feb 29 03:17:01 <bpalmer>	just make sure to commit your changes after you customize them.
Feb 29 03:17:05 <Pacane>	I think bpalmer's solution is good for me though
Feb 29 03:22:59 <bpalmer>	hmm. Somewhere on the 'moving fast'and breaking things axis: 'I think like once per day about how a French citizen punched Emmanuel Macron in the face, and all within 48 hours was arrested, charged, tried, convicted, and sentenced to 4 months in jail' (contrast that with US legal system)
Feb 29 03:24:36 <habamax>	Is there a case an average Joe punched US president in the face and stayed alive?
Feb 29 03:24:51 <bpalmer>	someone threw a shoe at a press conference and lived.
Feb 29 03:25:36 <bpalmer>	https://en.wikipedia.org/wiki/George_W._Bush_shoeing_incident : the person who threw the shoe spent 9 months in prison.
Feb 29 03:25:37 <habamax>	I wonder if it was rep us president or liberal?
Feb 29 03:25:40 <grym>	habamax: https://en.wikipedia.org/wiki/John_Schrank
Feb 29 03:26:01 <grym>	he shot teddy in the chest and they both lived...
Feb 29 03:26:18 <grym>	(teddy went on to give a 2 hour speech)
Feb 29 03:26:34 <twb>	bpalmer: shoe = "assault with a deadly weapon", MQ-9 missiles = "self-defense"
Feb 29 03:26:39 <bpalmer>	(to be fair, I think punching someone is usually more dangerous than throwing a normal shoe)
Feb 29 03:27:01 <grym>	shoe throwing is mostly "i intend to be as insulting as humanly possible"
Feb 29 03:27:06 <grym>	not "i intend physical harm"
Feb 29 03:27:49 <bpalmer>	On the other hand, if James Bond films are to be believed, throwing hats...
Feb 29 03:27:56 <grym>	shooting someone with a .38 ...
Feb 29 03:28:02 <grym>	very special hats only please
Feb 29 03:28:12 <habamax>	fedora
Feb 29 03:28:31 <grym>	the prop was made by a very famous hatter
Feb 29 03:28:44 <grym>	https://en.wikipedia.org/wiki/Oddjob#Oddjob's_hat
Feb 29 03:29:09 <bpalmer>	in the novel, he wore a Bowler; in the film, a Sandringham hag
Feb 29 03:29:10 <bpalmer>	hat
Feb 29 03:31:42 <bpalmer>	Hmm. That's what at least https://jamesbond.fandom.com/wiki/Razor-Rimmed_Hat claims, but it looks like a bowler to me.
Feb 29 03:32:15 <bremner>	hag would have been a more interesting film. Witches of whitehall
Feb 29 03:32:52 <twb>	The fact that YOU can't tell a miner's hat from a cowboy's hat doesn't stop them being different
Feb 29 03:33:15 <bremner>	ok, but tell us more about your cowboy hag
Feb 29 03:36:09 <twb>	https://en.wikipedia.org/wiki/Bowler_hat#cite_ref-10
Feb 29 03:38:22 <bpalmer>	Yeah, and meanwhile, although pages turn up for "Sandringham hat", none of them identify it as an actual hat style.
Feb 29 03:41:00 <bremner>	surprised noone mentioned Peaky Blinders
Feb 29 03:56:55 <bpalmer>	I'll get to that right after Treme
Feb 29 04:00:41 <twb>	Who's she?
Feb 29 04:01:20 <bpalmer>	Treme is a television show.
Feb 29 04:02:13 <bpalmer>	Like Peaky Blinders, it was critically acclaimed; it was at one time a standin for television that people meant to get to but would keep putting off.
Feb 29 04:16:47 <Pacane>	Alright, job is "done". I ditched that literate config. Thanks everyone who helped me.
Feb 29 04:17:04 <Pacane>	Still not perfect, but things are working OK now!
Feb 29 04:21:19 <twb>	So going back to the JWT bullshit from the other day... does JWT actually support asymmetric crypto?  The only required algorithm is HMAC, but I see optional EcDSA there as well (but not ed22519).
Feb 29 04:22:49 <twb>	The library I'm looking at doesn't give any examples except for HS256: https://python-jose.readthedocs.io/en/latest/jws/index.html
Feb 29 04:39:53 <bpalmer>	Apple TV+ has ordered an adaptation of William Gibson's "Neuromancer"
Feb 29 04:45:16 <mns>	they could pull it off too
Feb 29 04:46:19 <bpalmer>	 it's certainly one of the more exciting adaptation news I've heard in a while.
Feb 29 04:48:01 <twb>	You wouldn't prefer, like, Mieville?
Feb 29 04:48:32 <bpalmer>	... The City & The City , maybe.
Feb 29 04:48:56 <bpalmer>	Certainly not Perdido Street Station or The Last Days of New Paris
Feb 29 04:49:21 <bpalmer>	Hmm... actually, I take that back. I'd *love* to see how they try to adapt The Last Days of New Paris.
Feb 29 04:50:10 <bpalmer>	maybe it wouldn't be hard if it was animated.
Feb 29 04:53:59 <spikemaster>	does adding comment blocks count as literate programming?
Feb 29 05:02:01 <twb>	Does "public key in PEM format" not exist as a concept?
Feb 29 05:02:25 <twb>	"certtool --generate-privkey --type ecdsa --outfile=foo.pem" works but I can't see any way to make *just* the pubkey.
Feb 29 05:02:39 <twb>	"ssh-keygen -t ecdsa -m PEM -f foo.pem" works but the foo.pem.pub isn't PEM
Feb 29 05:03:20 <twb>	Reading it back in also doesn't DWIM: "ssh-keygen -y -f foo.pem -m PEM"
Feb 29 05:03:55 <twb>	My ultimate goal is to be have two principals: one that knows the private key and generates a JWT, and one that knows only the public key and verifies a JWT
Feb 29 05:42:34 <bpalmer>	rudybot: "And, for an instant, she stared directly into those soft blue eyes and knew, with an instinctive mammalian certainty, that the exceedingly rich were no longer even remotely human"
Feb 29 05:42:35 <rudybot>	bpalmer: ,instinctive-mammalian-certainty is noecho "And, for an instant, she stared directly into those soft blue eyes and knew, with an instinctive mammalian certainty, that the exceedingly rich were no longer even remotely human." - William Gibson, Count Zero
Feb 29 06:33:35 <codingquark>	 Good morning!
Feb 29 06:36:10 <twb>	https://discoelysium.fandom.com/wiki/Mega_Rich_Light-Bending_Guy
Feb 29 06:44:08 <codingquark>	twb: the whole thing is some sort of complex commentary on society
Feb 29 06:44:11 <codingquark>	I suspect
Feb 29 06:47:16 <twb>	Well, yeah
Feb 29 06:47:39 <codingquark>	:P
Feb 29 06:50:19 <JohnGalt>	I think I was noticing significantly different behavior with source vs compiled. A lot more warnings. Is there a doc on how the compiler can miscompile stuff?
Feb 29 06:51:00 <JohnGalt>	Also am I reading correctly that load is elc over el?
Feb 29 06:51:14 <JohnGalt>	Even with a newer timestamp?
Feb 29 07:01:19 <technomancy>	rudybot: turns out the game about corrupt cops and communism is has a lot of social commentary in it =D
Feb 29 07:01:20 <rudybot>	technomancy: Wasn't it more the botched/corrupt implementation of communism that killed people?
Feb 29 07:25:31 <twb>	technomancy: I'm not sure that's what Disco Elysium is "about"
Feb 29 07:26:49 <twb>	I mean, your player character is more "incompetent" and "unhinged" rather than "corrupt"
Feb 29 07:27:32 <twb>	If you want a game about communism try something like Panelki
Feb 29 07:28:09 <parakovsky>	does it even possible to have browser history export automatically into a text file with markdown like org mode to search for it later on?????? it is surprisingly hard problem from a surface of it
Feb 29 07:28:22 <twb>	https://youtu.be/rBsXk34-hyY?t=76
Feb 29 07:28:22 <judybot>	[title] PANELKI - Gameplay on PC - [5700XT + R5 3600] - YouTube
Feb 29 07:30:40 <twb>	Playing that reminded me of _The Doomed City_
Feb 29 07:35:03 <codingquark>	,ping
Feb 29 07:35:03 <fsbot>	␕
Feb 29 07:38:22 <amirny2205>	hi everyone, I still didn't solve a problem of indents in web-mode. I have activated this https://dpaste.org/xW1yv but when I do C-x h then indent-region, it does indent it with 4 spaces everywhere, when I do tab on a line, it sets line indentation to 2 spaces. What am I understanding wrong? thanks
Feb 29 07:38:24 <amirny2205>	I need 2 spaces everywhere as an indent
Feb 29 07:42:18 <twb>	setq-default looks wrong there
Feb 29 07:42:24 <twb>	You should use setq most of the time
Feb 29 07:42:40 <twb>	amirny2205: have you looked in M-x customize-group RET web-mode RET ?
Feb 29 07:42:52 <twb>	That gives you a GUI to configure all the settings
Feb 29 07:43:15 <amirny2205>	sure, didn't find anything useful. Wait I'll try setq
Feb 29 07:43:36 <amirny2205>	setq doesn't word either
Feb 29 07:44:09 <twb>	setq-default is kinda like a "force" mode for setq, it setq even harder
Feb 29 07:44:39 <twb>	It looks like web-mode is a third-party thing, and ICBF installing it to investigate for you
Feb 29 07:44:40 <collinfunk>	setq even harder LOL
Feb 29 07:45:20 <codingquark>	,icfb
Feb 29 07:45:21 *	fsbot gives a cookie to codingquark
Feb 29 07:45:27 <codingquark>	,til
Feb 29 07:45:27 <fsbot>	TIL: [0] Today I Learned
Feb 29 07:45:27 <fsbot>	[1] Today I Learned what TIL is
Feb 29 07:45:46 <amirny2205>	sorry what is ICBF
Feb 29 07:45:51 <codingquark>	perhaps worth adding icbf
Feb 29 07:47:13 <twb>	What is ICBF?
Feb 29 07:47:13 <fsbot>	ICBF is [0] I can't be fucked
Feb 29 07:47:13 <fsbot>	[1] better thought of as "It can be forgotten"
Feb 29 07:47:35 <twb>	I think you can also just do
Feb 29 07:47:37 <twb>	ICBF?
Feb 29 07:47:38 <fsbot>	ICBF: [0] I can't be fucked
Feb 29 07:47:38 <fsbot>	[1] better thought of as "It can be forgotten"
Feb 29 07:49:32 <APic>	Moin
Feb 29 07:49:34 <APic>	,BotSnack
Feb 29 07:49:35 <fsbot>	:)
Feb 29 07:50:05 <notzmv>	hıo ka
Feb 29 07:50:27 <notzmv>	I can't believe I had sly-autodoc-mode off this whole time
Feb 29 09:58:48 <sandra>	The other day I had a string= that borked my init since it tried to compare to a null and I couldn't find it, even --debug-init didn't give a stack trace.
Feb 29 09:58:48 <sandra>	After some futile half-hearted attempts at bisecting, I found out about (toggle-debug-on-error) which saved the day.
Feb 29 09:58:48 <sandra>	I also mentioned that I should put my .emacs.d under git control. Turns out I actually had done that but it was so long ago and so un-updated. I had used the weird "nonstandard .git dir" thing.
Feb 29 09:58:48 <sandra>	Magit can't handle that so I wrote up a solution at https://idiomdrottning.org/cfgmagit and now all is peachy keen in the world (if I could only learn to remember to save changes in there).
Feb 29 10:04:10 <sandra>	Oh yeah I forgot to complain about what had caused the string= NPE in the first place!
Feb 29 10:04:10 <sandra>	I was comparing a string to (file-name-extension buffer-file-name). Turns out that that borks if buffer-file-name is nil (like in the scratch buffer).
Feb 29 10:04:10 <sandra>	But then guard-and-ing it still doesn't help because file-name-extension in turn can also return nil if there is a file name and no extension!
Feb 29 10:04:10 <sandra>	So I needed (and buffer-file-name (file-name-extension buffer-file-name) (…my comparison to (file-name-extension buffer-file-name) goes here…)) to fix things. Yikes. I'm not sure even a git-aided undo history would've found that easily, but toggle-debug-on-error did.
Feb 29 10:13:28 <sandra>	Maybe if I make a cron script to save all tracked files five times per day (hair so high it starts to sway). Then I "only" need to remember to add files
Feb 29 10:17:26 <sandra>	23 5-22/3 * * * config-save #"At minute 23 past every 3rd hour from 5 through 22."
Feb 29 10:19:58 <sandra>	Now if I've been diligent nothing will get autocommitted, it's only there to catch things I miss. Provided, again, that I also then actually add the files.
Feb 29 10:20:23 <sandra>	Neat thing about this config alias is that it works even when I'm not in the home dir
Feb 29 10:29:53 <danse-nr3>	moin
Feb 29 11:01:53 <MysteriousSilver>	morning
Feb 29 11:49:28 <jbe>	noon
Feb 29 12:36:08 <amirny2205>	who uses what for web-development? I need support for html, js, css   thank you
Feb 29 12:36:48 <amirny2205>	web-mode is buggy
Feb 29 12:44:52 <jbe>	I don't really do much of that, but web-mode I assume comes with compromises as html, js, css, what-have-you are pretty different in syntax and still need to somehow coexist. if there are any specific things you experience as bugs, maybe you could describe those in more detail and perhaps people can help you with a solution
Feb 29 12:45:36 <jrx>	! what's the best way to do web development with Emacs ? what's the best major mode for editing HTML, CSS and JavaScript at the same time?
Feb 29 12:45:38 <fsbot>	🤖[g] For web development with Emacs, you can use the web-mode package, which provides a major mode for editing HTML, CSS, and JavaScript simultaneously, offering syntax highlighting and indentation for each language. It's a versatile and efficient option for working on web projects!
Feb 29 12:46:02 <amirny2205>	thanks
Feb 29 12:47:10 <pkal>	amirny2205: I just use mhtml-mode, the regular css-mode and js-mode.  I think that js2-mode on ELPA has some interesting things, but I don't know too much about that.
Feb 29 12:47:49 <pkal>	To be fair, I am not a web developer in any contemporary sense of the term.
Feb 29 12:48:20 <jrx>	amirny2205: maybe try this https://emacs-lsp.github.io/lsp-mode/page/lsp-html/
Feb 29 12:48:52 <jrx>	and this https://emacs-lsp.github.io/lsp-mode/page/lsp-css/
Feb 29 12:48:54 <amirny2205>	thanks a lot jrx pkal!
Feb 29 12:49:32 <pkal>	jrx: what does a CSS LSP-Server provide?
Feb 29 12:50:25 <jrx>	pkal: https://emacs-lsp.github.io/lsp-mode/#overview
Feb 29 12:52:21 <pkal>	jrx: that's the LSP client
Feb 29 12:52:54 <pkal>	what I meant was this https://github.com/microsoft/vscode/tree/main/extensions/css-language-features/server
Feb 29 12:53:20 <pkal>	the site is just not that good at explaining what it does (css-mode e.g. has completion already built-in)
Feb 29 13:00:54 <jrx>	this file may help understand a few completions offered by vscode css LSP server : https://github.com/microsoft/vscode/blob/main/extensions/css-language-features/server/src/test/completion.test.ts
Feb 29 13:00:55 <rudybot>	https://teensy.info/vDRM1hZixM
Feb 29 13:20:54 <Miroboru>	I am having some emacs issues that I am trying to get to the bottom of (I won't bother you with the details for now). I am trying to start with a fresh install of Doom emacs, so I am deleting .config/doom and .config/emacs before a new git clone and install. Is there more to it than this?
Feb 29 13:21:26 <Miroboru>	My main issue is that Doom emacs is running fine on a second machine with the same versions of emacs, doom and config files...
Feb 29 13:21:56 <Miroboru>	So I am wondering if there can be something else in my environment that is triggering this behaviour
Feb 29 13:22:51 <Miroboru>	I am running the fish shell, but I have now swichted to zsh and relogged, so I think that should be fine for now
Feb 29 13:25:28 <Miroboru>	An example of the problem I have is that if I try to do eg. 'C-h f', I get the error 'byte-code: Invalig read syntax: ")"'
Feb 29 13:25:58 <Miroboru>	This is with a totally clean install, no config files other than the default ones
Feb 29 13:26:33 <kiliro>	list the differences between the 2 systems...including operating system and other installed programs and libraries
Feb 29 13:26:41 <Miroboru>	If I try to open a cpp file I get: 'File mode specification error: (invalid-read-syntax ))'
Feb 29 13:26:48 <kiliro>	that will show you what could be the problem
Feb 29 13:26:51 <grym>	more on M-X, from yesterday: https://utcc.utoronto.ca/~cks/space/blog/programming/EmacsMetaXRelevantCommands
Feb 29 13:29:28 <Miroboru>	kiliro: The systems are both running Arch, although one of them was updated 9 days ago, while the non-working one was updated yesterday...
Feb 29 13:29:38 <Miroboru>	They are otherwise identical
Feb 29 13:30:27 <kiliro>	update the old one
Feb 29 13:30:36 <nofuture>	Must be gremlins.
Feb 29 13:30:36 <kiliro>	and see if it gives the same error
Feb 29 13:30:54 <kiliro>	if it does not, there is something else wrong
Feb 29 13:31:02 <nofuture>	One or two bits went astray, etc.
Feb 29 13:31:17 <nofuture>	Cosmic rays and such.
Feb 29 13:31:17 <kiliro>	could it be hardware? have you searched the web for that error message?
Feb 29 13:31:38 <nofuture>	Neutrinos.
Feb 29 13:31:40 <Miroboru>	kiliro: Yeah, I get what you are saying, I'm just afraid I'll end up with two non-working systems instead... But there is really no other way I guess...
Feb 29 13:32:10 <Miroboru>	kiliro: There are some tangential hits, but nothing really close. Nothing on the Doom discord either really
Feb 29 13:32:18 <nofuture>	I'm just waiting for the next Carrington Event, honestly.
Feb 29 13:32:30 <Miroboru>	kiliro: kk, I'll update machine two then
Feb 29 13:32:31 <edgar-rft>	rudybot: the web is full of error messages
Feb 29 13:32:31 <rudybot>	edgar-rft: XMPP + Biboumi, and recently the XMPP-Matrix bridge for this one room which is full of Matrixheads who are constantly sending multiline messages which get sent as web links to the bridged IRC room...
Feb 29 13:32:40 <kiliro>	does it work with emacs -q ?
Feb 29 13:33:08 <Miroboru>	kiliro: lemme check
Feb 29 13:33:21 <kiliro>	if it does work, the problem is with your config
Feb 29 13:33:27 <Miroboru>	Yes, that is working
Feb 29 13:33:30 <kiliro>	isect
Feb 29 13:33:36 <kiliro>	,bisect
Feb 29 13:33:36 <fsbot>	bisect is [0/4] If your problem disappears when you run emacs -q, the problem resides in your init-file (see ,init-file)
Feb 29 13:33:36 <fsbot>	[1] Bisection is a technique used to debug a problematic init file by commenting out half the file and running emacs. If the problem persists, you know that it is in the un-commented part of your init file. Comment or uncomment half of the remaining code and re-run emacs; recurse as needed. ;;[ ,more / ,dump]
Feb 29 13:33:40 <edgar-rft>	insect
Feb 29 13:33:43 <kiliro>	,more
Feb 29 13:33:43 <fsbot>	[2] Use M-; to comment or uncomment selected region
Feb 29 13:33:43 <fsbot>	[3] See also ,bug-hunter
Feb 29 13:33:43 <fsbot>	[4] See also ,keep-one-open
Feb 29 13:34:01 <Miroboru>	kiliro: Well, I have already thrown out all my configs and installed a totally virgin Doom
Feb 29 13:34:11 <kiliro>	,init-file
Feb 29 13:34:12 <fsbot>	kiliro: [->] InitFile: [0] from (info "(emacs)Init File"), "Emacs looks for your init file using the filenames `~/.emacs', `~/.emacs.el', or `~/.emacs.d/init.el'" in that order, using only the first one that it finds. ;;[ ,more / ,dump]
Feb 29 13:34:16 <Miroboru>	kiliro: But there may be something with the default doom config ofc
Feb 29 13:34:43 <kiliro>	I don't like doomç
Feb 29 13:34:51 <Miroboru>	kiliro: yeah, I dot rid of everything in ~/ long time ago. Everything is in .config
Feb 29 13:34:53 <kiliro>	I would rather make the changes myself
Feb 29 13:35:32 <nofuture>	Beryllium bronze can solve a lot of problems.
Feb 29 13:35:33 <kiliro>	I only work in .emacs and .authinfo
Feb 29 13:35:44 <Miroboru>	kiliro: I get you, but Doom has a lot of quite sane defaults for a lot of packages, and if you are a evil user like me it saves you a lot of work - when it works ;)
Feb 29 13:36:16 <kiliro>	don't be evil!  LOL  I use devil
Feb 29 13:36:41 <kiliro>	and gives you a lot of work when it does not work
Feb 29 13:37:18 <kiliro>	just bisect and find the error
Feb 29 13:37:51 <Miroboru>	kiliro: I'll upgrade the second machine to get that uncertainty out of the way first...
Feb 29 13:38:12 <kiliro>	don't update the doom
Feb 29 13:38:25 <kiliro>	even if they are currently equal
Feb 29 13:38:31 <Miroboru>	Doom the two machines are identical right now
Feb 29 13:38:42 <Miroboru>	So that is not the issue
Feb 29 13:38:51 <kiliro>	so you can test if there are differences in the same versions
Feb 29 13:39:10 <kiliro>	the world is not perfect
Feb 29 13:39:23 <kiliro>	especially the more functionality you add
Feb 29 13:39:25 <Miroboru>	Doom is being updated outside of pacman so that is no problem. I do those updates manually
Feb 29 13:39:49 <kiliro>	most things are not reproducible
Feb 29 13:39:55 <kiliro>	only relatively equal
Feb 29 14:15:32 *	Disconnected ()
**** ENDING LOGGING AT Thu Feb 29 14:15:32 2024

**** BEGIN LOGGING AT Thu Feb 29 14:15:51 2024

Feb 29 14:15:51 *	Now talking on #emacs
Feb 29 14:15:51 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 29 14:15:51 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 29 14:23:27 <catern>	HMMM
Feb 29 14:23:41 <catern>	how am I supposed to handle files named ~ correctly?
Feb 29 14:24:12 <catern>	a simple loop over directory-files in default-directory will see that as an absolute path
Feb 29 14:26:59 <dminuoso>	As opposed to what, catern?
Feb 29 14:27:21 <catern>	dminuoso: a relative path to a file in the current directory named "~"
Feb 29 14:27:41 <dminuoso>	catern: Okay, so what does your loop do exactly?
Feb 29 14:27:58 <catern>	try it yourself, make a file named ~ and then do (dolist (file (directory-files ".")) (when (file-directory-p file) (message "directory? %s" file)))
Feb 29 14:27:59 <dminuoso>	The function you stuff it into is the one that (presumably) does shell-like expansion of ~
Feb 29 14:28:23 <catern>	all emacs filename functions do shell-like expansion of ~
Feb 29 14:32:28 <dminuoso>	catern: According to documentation at least that shouldnt be true, as 26.9.4 lists (apparently not all) functions that expand filenames.
Feb 29 14:33:53 <catern>	dminuoso: no, you're wrong, please show literally any example of a file name function which doesn't expand ~
Feb 29 14:34:01 <catern>	note also the docstring of file-name-absolute-p
Feb 29 14:34:14 <catern>	"A file name is considered to be absolute if its first component is ‘~’"
Feb 29 14:36:43 <dminuoso>	catern: Not quite sure how that proves wrong what I just said.
Feb 29 14:36:46 <dminuoso>	https://www.gnu.org/software/emacs/manual/html_node/elisp/File-Name-Expansion.html
Feb 29 14:36:54 <dminuoso>	Im not suggesting that this is correct, just that its what the manual is hinting at.
Feb 29 14:37:17 <catern>	all file name functions expand ~
Feb 29 14:37:45 <catern>	dminuoso: note that that manual page says "Expanding a file name means converting a relative file name to an absolute one.", and according to Emacs, "~" is already absolute
Feb 29 14:38:08 <catern>	does that make sense?
**** BEGIN LOGGING AT Thu Feb 29 14:39:53 2024

Feb 29 14:39:53 *	Now talking on #emacs
Feb 29 14:39:53 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 29 14:39:53 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 29 14:56:17 <rpav>	hrm i wish visual-line mode could optionally _not_ wrap long unbroken strings
Feb 29 14:56:25 <rpav>	unbroken / no spaces
**** BEGIN LOGGING AT Thu Feb 29 15:16:03 2024

Feb 29 15:16:03 *	Now talking on #emacs
Feb 29 15:16:03 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Feb 29 15:16:03 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Feb 29 15:18:59 <wgreenhouse>	catern: tried this?
Feb 29 15:18:59 <wgreenhouse>	> If you do not want this expansion for a relative FILENAME that might begin with a literal ‘~’, you can use ‘(concat (file-name-as-directory directory) filename)’ instead of ‘(expand-file-name filename directory)’.
Feb 29 15:20:44 <catern>	wgreenhouse: well, just to repeat, this is not an issue specific to expand-file-name
Feb 29 15:21:10 <catern>	but yes, currently I'm just using absolute paths everywhere and avoiding using relative paths ever
Feb 29 15:21:37 <catern>	which is a bit sad because it means I can't operate relative to default-directory, which is convenient
Feb 29 15:29:37 <rpav>	_why_ are you using absolute paths everywhere?
Feb 29 15:29:59 <JohnGalt>	catern: that is not portable
Feb 29 15:30:25 <catern>	rpav: scroll up? I just explained why
Feb 29 15:30:36 <catern>	(because of the "file named ~" issue)
Feb 29 15:30:42 <JohnGalt>	irc doesnt have history
Feb 29 15:30:59 <rpav>	oh
Feb 29 15:31:05 <rpav>	catern: ./~ :p
Feb 29 15:31:12 <catern>	yeah
Feb 29 15:31:18 <rpav>	which looks like an 8th note, but ;)
Feb 29 15:31:35 <JohnGalt>	you name your files wiht
Feb 29 15:31:39 <JohnGalt>	with ~ ?
Feb 29 15:31:45 <catern>	rpav: but then I have to concat that in front of directory-files output everywhere all the time
Feb 29 15:32:57 <grym>	,drdr
Feb 29 15:32:58 <fsbot>	"Doctor! Doctor! It hurts when I do <this>!"
Feb 29 15:32:58 <fsbot>	"Well, don't do <that>, then!"
Feb 29 15:34:07 <rpav>	catern: that seems to be the prudent/safe thing to do, i.e. explicitly-relative path
Feb 29 15:34:56 <rpav>	or alternatively you could write escape-file-name which checks if it's ~
Feb 29 15:35:33 <JohnGalt>	~ should always mean home directory
Feb 29 15:35:44 <rpav>	JohnGalt: nothing always
Feb 29 15:36:12 <rpav>	`touch ~` .. ~ is a shell convention and imo emacs should probably not expand that implicitly, but it does
Feb 29 15:36:37 <JohnGalt>	I use nothing but shell conventions
Feb 29 15:36:45 <JohnGalt>	that is the heart of UNIX
Feb 29 15:36:46 <catern>	rpav: I agree it's prudent but afaict zero code in Emacs does it
Feb 29 15:37:08 <catern>	this is all coming from someone complaining to me that making a file named ~ made eglot break hard
Feb 29 15:37:37 <rpav>	oof, imagine `mkdir '~'`
Feb 29 15:37:44 <rpav>	someone's just like rm -rf
Feb 29 15:37:46 <rpav>	D:
Feb 29 15:38:00 <grym>	just because you _can_ doesn't mean you _ought_, and oh boy does the "pathological file naming" game fall under that rule
Feb 29 15:38:06 <rpav>	catern: dired handles it just fine; maybe see how that works
Feb 29 15:38:19 <grym>	dired is remarkably good at removing horribly named files, indeed
Feb 29 15:38:36 <grym>	so much so that i've used it to win that game a few times :P
Feb 29 15:38:51 <JohnGalt>	I dont name my files '/' or '~' , thats dumb
Feb 29 15:38:51 <rpav>	dired should _probably_ be considered a canonical (if not good? i haven't seen the code) for how to do file manip
Feb 29 15:39:13 <dutchie>	'/' is actually a forbidden character in (Linux) filenames though
Feb 29 15:39:17 <dutchie>	no nulls either
Feb 29 15:39:42 <grym>	dutchie: and those are the exact two things you can't do!
Feb 29 15:39:45 <cehteh>	in posix only / and null are forbidden
Feb 29 15:39:49 <grym>	there's lots you _shouldn't_ do
Feb 29 15:40:12 <cehteh>	actual filesystems and implementations may constrain this a bit more
Feb 29 15:40:20 <grym>	they nearly always do, yes
Feb 29 15:40:27 <grym>	just in which ways varies
Feb 29 15:40:28 <catern>	rpav: good suggestion, dired seems to first call (dired-get-filename) which returns an absolute path
Feb 29 15:40:35 <cehteh>	most evil are newlines in filenames :D
Feb 29 15:40:47 <grym>	cehteh: or things like > or |
Feb 29 15:40:56 <JohnGalt>	in DOS you can do 8 bit characters on the num pad
Feb 29 15:40:56 <grym>	or --
Feb 29 15:41:07 <JohnGalt>	like <alt> 255 for blank
Feb 29 15:41:14 <cehteh>	grym: those are at least visible
Feb 29 15:41:23 <grym>	cehteh: nbsp :)
Feb 29 15:41:37 <dutchie>	newline in filenames is a good one to break stuff
Feb 29 15:41:50 <cehteh>	.o( touch '-rf *' )
Feb 29 15:41:56 <dutchie>	also invalid utf-8
Feb 29 15:42:15 <catern>	aha!
Feb 29 15:42:16 <cehteh>	thats pretty common
Feb 29 15:42:19 <catern>	rpav: dired calls files--name-absolute-system-p lol
Feb 29 15:42:30 <catern>	very cool and normal
Feb 29 15:43:15 <grym>	`touch $(env printf '\ufdfd\n')`  hee hee
Feb 29 15:43:24 <grym>	er, add quotes
Feb 29 15:43:27 <hodapp>	you could do goofiness in DOS like put spaces in filenames if you knew how
Feb 29 15:43:29 <grym>	but; good joke
Feb 29 15:44:04 <grym>	ooo my system font can actually print that one
Feb 29 15:44:05 <grym>	good job
Feb 29 15:45:24 <catern>	files--splice-dirname-file is mildly useful I guess
Feb 29 15:45:47 <catern>	funny that dired just like, massively special cases this
Feb 29 15:46:36 <grym>	 "ok whose name is on this"
Feb 29 15:52:10 <JohnGalt>	spleen from opensbd is a nice font
Feb 29 15:57:30 <grym>	i appear to be using noto sans mono
Feb 29 16:00:21 <jbe>	no to, no serifs, mo' no
Feb 29 16:00:37 <jbe>	I use fira code, it's ok
Feb 29 16:03:18 <JohnGalt>	Im trying to set the font size e.g: 200 but I dont think its working because the font is built in 12x24 etc...
Feb 29 16:03:38 <JohnGalt>	is there an alternate font spec syntax for fixed size fonts?
Feb 29 16:17:15 <vuori>	I think you can use the X11 LFD-style font specs in most places?
Feb 29 16:26:15 <wgreenhouse>	yes, emacs accepts both truetype-style names and LFD-style names for instance
Feb 29 16:28:39 <JohnGalt>	thanks!
Feb 29 16:33:15 <dminuoso>	Be tat
Feb 29 16:33:24 <dminuoso>	Oops, nevermind.
Feb 29 16:34:09 <JohnGalt>	The Hack font looks a bit better than Spleen
Feb 29 16:34:43 <rpav>	font looks super super depend on your monitor / their config / your layout / etc
Feb 29 16:35:36 <JohnGalt>	I have XDR displays on the laptop and 32" monitor
Feb 29 16:35:39 <JohnGalt>	its stunning
Feb 29 16:35:56 <JohnGalt>	I can crank up to 1600 nits with black blacks
Feb 29 16:35:58 <rpav>	sure but like precise subpixel layout on a monitor can affect whether a font looks good
Feb 29 16:36:09 <rpav>	and not just with subpixel aa
Feb 29 16:36:43 <rpav>	i've had pretty good luck with liberation sans but often i have to pick specific fonts for specific systems
Feb 29 16:36:45 <JohnGalt>	can you educate me on what to look for tuning wise to get best fonts? or just a link to a blog or something?
Feb 29 16:36:57 <JohnGalt>	I have system specific tailoring
Feb 29 16:36:59 <rpav>	JohnGalt: no idea, i just try things til i find something i like
Feb 29 16:37:13 <rpav>	i.e. like you probably just did ;)
Feb 29 16:37:25 <JohnGalt>	yeah i did
Feb 29 16:37:26 <dminuoso>	JohnGalt: This is mostly a matter of your font engine.
Feb 29 16:37:53 <JohnGalt>	MacOS is fantastic and install is just a copy to ~/Library/Fonts
Feb 29 16:38:08 <JohnGalt>	you dont have to go through FontBook anymore
Feb 29 16:38:18 <rpav>	ah they also (should?!) have proper engine configs for all their hardware so that cuts that out
Feb 29 16:38:32 <vuori>	There are a couple of monospace/coding font sites that let you try out various fonts, but the final narrowing down really requires picking a few candidates and using them in real life for a while
Feb 29 16:38:36 <rpav>	though i guess you can plug in whatever monitor you want to some
Feb 29 16:38:51 <JohnGalt>	yeah, I'll check it out
Feb 29 16:38:51 <rpav>	i would bet they're pretty good about detecting stuff though
Feb 29 16:39:19 <JohnGalt>	Everything is fully integrated, but the XDR Pro has had some nasty corner cases
Feb 29 16:39:28 <rpav>	vuori: it really does.. i have a (huge, ever-growing..) font function where i test out new ones
Feb 29 16:39:30 <JohnGalt>	I wish it had a factory reset, or any button at all
Feb 29 16:39:33 <vuori>	I did a big round of comparisons a year or two ago and ended up with Cousine
Feb 29 16:39:49 <JohnGalt>	vuori: interesting
Feb 29 16:39:56 <rpav>	`;; {} () 0OijIl!1 <> mn g9qCGQ ~-+*=>` near the top
Feb 29 16:40:34 <JohnGalt>	Cousine looks super slick
Feb 29 16:40:47 <rpav>	cousine is liberation sans and yeah .. i've had a _lot_ of luck with that
Feb 29 16:40:55 <rpav>	"cross-platform"
Feb 29 16:41:12 <dminuoso>	JohnGalt: At any rate, for a font to really shine you need not only a good display, your font need appropriate hinting, your font engine needs to have good sub pixel/HiDPI algorithms, and your font engine needs to have accurate knowledge of your displays subpixel layouts.
Feb 29 16:41:37 <dminuoso>	JohnGalt: In a way Apple has a key advantage, in that by default all these things are controlled - so you get a good experience out of the box.
Feb 29 16:42:09 <rpav>	it's not terminus-crisp but it's pretty crisp at 2k on most of my gear.. i think i use something else on the laptop in 4k
Feb 29 16:42:38 <vuori>	Quite a few people seem to like the typewriter/Courier descended curvy/serif look, but I've found those too distracting and prefer the sans-serif DEC/misc-fixed/Terminus school
Feb 29 16:43:04 <dminuoso>	Though Apple Quartz actually just ignores font hints altogether, since if you have a high enough DPI to run HiDPI its better to just alias (or not!)
Feb 29 16:43:20 <rpav>	i primarily want crisp and good distinguishable glyphs
Feb 29 16:43:47 <dminuoso>	My favourite font by far is PragmataPro.
Feb 29 16:43:53 <rpav>	but also big enough to be readable yet small enough to get a lot of columns/rows
Feb 29 16:44:03 <dminuoso>	rpav: Take a look at that font, maybe.
Feb 29 16:44:19 <rpav>	dminuoso: yeah i don't think i've tested that
Feb 29 16:44:23 <JohnGalt>	Yeah, having a walled garden is nice sometimes if you drink all the kool-aid
Feb 29 16:44:25 <rpav>	unless it's the $$ one in which case haha no
Feb 29 16:44:44 <dminuoso>	rpav: It is, consider buying it on black friday - you usually get a 40% coupon then.
Feb 29 16:44:45 <JohnGalt>	I can set all the res, and go LowDPI or HighDPI
Feb 29 16:44:55 <dminuoso>	rpav: Though if you look at that font, you might understand why the author charges money for it.
Feb 29 16:45:04 <rpav>	eh
Feb 29 16:45:13 <dminuoso>	He spent so many hours hand crafting each glyph at most font sizes...
Feb 29 16:45:16 <rpav>	dminuoso: not really, it's pretty average
Feb 29 16:45:43 <rpav>	way way too big in the examples
Feb 29 16:45:59 <JohnGalt>	wow, Cousine is really good
Feb 29 16:46:28 <JohnGalt>	Unfortunately LowDPI isnt handled well by the system, HighDPI is way more usable
Feb 29 16:48:03 <JohnGalt>	wow 4k is really low DPI
Feb 29 16:48:25 <rpav>	if i can't test the font i wouldn't even consider it .. there should be a free trial version with at least enough basic glyphs to test in the editor before committing to the full thing
Feb 29 16:48:34 <dminuoso>	rpav: Horizontally its rather dense. A lot of work went into symbols and ligatures. Give the Haskell examples a look - its what convinced me.
Feb 29 16:48:41 <dminuoso>	Text is somewhat average I agree.
Feb 29 16:48:56 <rpav>	dminuoso: yeah i also don't do the ligature thing
Feb 29 16:49:34 <dminuoso>	Yeah thats fair.
Feb 29 16:51:53 <bjorkint0sh>	what's up with package refresh getting stuck on elpa.gnu
Feb 29 16:51:58 <bjorkint0sh>	sometimes it works just fine
Feb 29 16:52:13 <bjorkint0sh>	other times ... which I can't fathom why, it just does nothing.
Feb 29 16:56:19 <bjorkint0sh>	https://elpa.gnu.org/ the website is there, clearly. why does package get stuck?
Feb 29 16:57:37 <rpav>	liberation-12px is about as horizontally efficient as iosevka-13px but more vertically efficient.. and more readable/crisper here
Feb 29 17:04:45 <JohnGalt>	I think Im going to stick with Cousine , LowDPI, and 24 pt, or some such scaling
Feb 29 17:05:18 <JohnGalt>	In a very Un-Apple situation it doesnt scale apps automatically, you have to tweak the fonts one app at a time
Feb 29 17:07:28 <JohnGalt>	I cant believe how much it sucks to need reading glasses
Feb 29 17:07:53 <JohnGalt>	I always thought they were silly, now the jokes on me :[
Feb 29 17:09:42 <rpav>	yea ;/
Feb 29 17:10:01 <rpav>	i might go for far / computer / reading but not sure yet
Feb 29 17:10:13 <grym>	it's just weakness!! train your eyes!!
Feb 29 17:10:13 <bjorkint0sh>	JohnGalt, reading glasses are fantastic. they're your friend.
Feb 29 17:10:17 <rpav>	i can read ok with computer glasses
Feb 29 17:10:28 <bjorkint0sh>	i've got about 7 of them right here from the dollar store.
Feb 29 17:10:34 <JohnGalt>	bjorkint0sh: thanks!
Feb 29 17:11:30 <grym>	hmm. i should start shooting more, get dialed in to looking out to 40+ yards
Feb 29 17:11:43 <grym>	(shooting a bow, i should be clear, where 40 yards is fairly far)
Feb 29 17:12:01 <bjorkint0sh>	bow?
Feb 29 17:12:01 *	fsbot bows low, hits head on ground
Feb 29 17:12:04 <bjorkint0sh>	you need a trebuche.
Feb 29 17:12:08 <nofuture>	Shoot undesirables.
Feb 29 17:12:08 <grym>	t
Feb 29 17:12:09 <bjorkint0sh>	it goes faaaaar
Feb 29 17:12:21 <grym>	bjorkint0sh: i mean, so does a .30-06
Feb 29 17:12:38 <bjorkint0sh>	yeah but what are we? in some modern era here? let's not kid ourselves!
Feb 29 17:12:57 <grym>	my bows are distinctly non-modern, indeed
Feb 29 17:13:29 <nofuture>	2024 is just 1424 with more modcons.
Feb 29 17:13:40 <grym>	ew, 15th c.
Feb 29 17:13:59 <grym>	so modern
Feb 29 17:15:52 <nofuture>	Sometimes it seems like we learn nothing.  =P
Feb 29 17:16:55 <Inline>	?
Feb 29 17:17:41 <bjorkint0sh>	Though. Given that glass making was a very well developed trade by 1 BCE, I wonder why we never see roman era mosaics of people wearing spectacles.
Feb 29 17:17:47 <JohnGalt>	I find few like minds that love to learn
Feb 29 17:17:48 <kiliro>	getting numbers inside of boxes that means that I have some missing font in my operating system?
Feb 29 17:18:03 <JohnGalt>	kiliro: missing glyphs
Feb 29 17:18:12 <JohnGalt>	kiliro: you need a better font
Feb 29 17:18:23 <corwin>	,TOFU
Feb 29 17:18:23 <fsbot>	corwin: TOFU is [0] Trust On First Use, the default trust policy of OpenSSH known_hosts, and an optional trust policy for gnutls-bin et al.
Feb 29 17:18:23 <fsbot>	[1] https://blogs.fsfe.org/jens.lechtenboerger/2014/03/23/certificate-pinning-for-gnu-emacs/
Feb 29 17:18:23 <fsbot>	[2] now available in 25.x with the builtin gnutls support, via (setq network-security-level 'paranoid)
Feb 29 17:18:26 <kiliro>	how do I do that?
Feb 29 17:18:33 <corwin>	hrm.
Feb 29 17:19:02 <JohnGalt>	Download the fonts like Cousine, Hack, Dejavu Sans Mono etc... then installation is system specific
Feb 29 17:19:02 <grym>	,mojibake
Feb 29 17:19:03 <fsbot>	Our father who art in heaven..  I sincerely pray that SOMEBODY at this table will PAY for my SHREDDED WHAT and ENGLISH MUFFIN..  and also leave a GENEROUS TIP...
Feb 29 17:19:44 <grym>	bjorkint0sh: took a while for grinding to catch up
Feb 29 17:19:48 <grym>	bjorkint0sh: http://www.larsdatter.com/eyeglasses.htm
Feb 29 17:19:55 <roadie>	I watched the steveys tech talk emergency emacs and typed his show-kill-ring.el from the screen. Then I fixed the typos but it complained and would not run (incf and so on) - then I gave it to GPT4 and it rewrote it using pure elisp and best practices and ... it now runs beautifully.
Feb 29 17:20:07 <corwin>	Anyway, the "boxes" with the character id inside are those for which you have no glyph, currently. Emacs will opportunisticly load glyphs missing from your default/current font from others found on your system; just install more system fonts, typically, to "fix".
Feb 29 17:20:40 <bjorkint0sh>	grym, good point.
Feb 29 17:39:09 <roadie>	https://termbin.com/zh30
Feb 29 18:12:44 <yezariaely>	I have a shell script with which I update a file currently loaded in emacs. Now in this shell script I would like to reload the buffer in the running emacs session. I know that emacsclient exists, could you give me some guidance on how to achieve that? I tried emacsclient -e "(revert-buffer :ignore-auto :noconfirm)" but this resulted in *ERROR*: Buffer does not seem to be associated with any file
Feb 29 18:22:10 <pkal>	yezariaely: the question is what the context-buffer is that the expression is being evaluated in
Feb 29 18:24:57 <wgreenhouse>	likely it's beibg evaluated at `initial-buffer-choice` (i.e. *scratch*) and not in the buffer you want
Feb 29 18:25:34 <wgreenhouse>	yezariaely: a less annoying approach may be to enable auto-revert-mode for the relevant buffer
Feb 29 18:25:59 <wgreenhouse>	this uses efficient OS-based methods (e.g. inotify in linux) to detect file changes
Feb 29 18:26:11 <grym>	auto-revert-mode is great
Feb 29 18:26:21 <wgreenhouse>	should work at least as well as forcing emacs to poll after the script makes a change to the file
Feb 29 18:35:21 <yezariaely>	wgreenhouse: ah, I will look into that. That sounds like a better approach. Because I will never write in that buffer in emacs, just and only from the shell script.
Feb 29 18:41:08 <johnjaye>	hot take: was there ever benchmarks performed on realistic workloads to determine if emacs native comp is faster in practice?
Feb 29 18:41:22 <grym>	that's not a hot take
Feb 29 18:41:31 <johnjaye>	the arxiv paper I found on it said speedups varied from 2x to 42x on selected tasks
Feb 29 18:41:42 <johnjaye>	grym: it is if the answer is no
Feb 29 18:41:51 <grym>	johnjaye: hot takes aren't questions, they're statements
Feb 29 18:42:00 <tromey>	which task would we even expect to improve
Feb 29 18:42:16 <tromey>	perhaps some kind of font-locking if the compiler touched regexps
Feb 29 18:42:19 <technomancy>	lmao I just got an email offering $180 for someone to use my github account for ten minutes
Feb 29 18:42:24 <tromey>	lol
Feb 29 18:42:28 <grym>	https://pico.sh/getting-started  huh.  neat, auth-by-ssh
Feb 29 18:42:32 <grym>	technomancy: ^ someone's got your ideas
Feb 29 18:42:44 <johnjaye>	https://arxiv.org/pdf/2004.02504.pdf
Feb 29 18:42:53 <bkhl>	IIRC when I started using it, it more than halved the startup speed for me.
Feb 29 18:42:55 <johnjaye>	they say here 42x on one of the benchmarks. heh
Feb 29 18:43:38 <tromey>	point taken re startup, though that can also be achieved just by dumping
Feb 29 18:44:00 <grym>	startup is probably faster...
Feb 29 18:44:03 <johnjaye>	I think I cheat in my init file. I defer some of the harder tasks by a few seconds
Feb 29 18:44:06 <tromey>	emacs update = 51 days here
Feb 29 18:44:10 <tromey>	I like never restart
Feb 29 18:44:10 <grym>	i never notice, because i start emacs once per boot
Feb 29 18:44:10 <technomancy>	grym: that's cool!
Feb 29 18:44:16 <tromey>	*uptime
Feb 29 18:44:25 <grym>	technomancy: yeah, some neat ideas there
Feb 29 18:44:45 <johnjaye>	I guess you could come up with some kind of scenario though.
Feb 29 18:44:51 <johnjaye>	like search replace regex a large file
Feb 29 18:45:18 <tromey>	like I would expect that to be dominated by the regex engine itself though
Feb 29 18:45:29 <bkhl>	I try to keep my Emacs startup time below a second as a sort of exercise in minimalism …
Feb 29 18:46:33 <johnjaye>	me as well
Feb 29 18:46:51 <grym>	my systemd unit restarts emacsclient in a few seconds, i guess
Feb 29 18:46:52 <bkhl>	I.e. the switch to native comp let me be half as minimalist. :-)
Feb 29 18:46:58 <technomancy>	rudybot: save money on video games by entertaining yourself with your emacs config
Feb 29 18:46:58 <rudybot>	technomancy: Having sex is far more entertaining and far less effort than making porn games, so why do the latter?
Feb 29 18:47:16 <grym>	(but like i said, i hardly know)
Feb 29 18:49:02 <corwin>	grym: oooh, nice.  I will give this a spin!
Feb 29 18:49:47 <roadie>	 /quit
Feb 29 18:50:00 <roadie>	eh
Feb 29 18:50:03 <corwin>	just try'n make me
Feb 29 18:50:08 <roadie>	:)
Feb 29 18:50:20 <grym>	new@pico.sh: Permission denied (publickey).  oooooor not
Feb 29 18:51:15 <corwin>	maybe your key was already used?
Feb 29 18:51:36 <corwin>	(it worked fine for me)
Feb 29 18:51:46 <johnjaye>	these authors are harsh. dynamic code is on the way to being obsolete they say
Feb 29 18:52:02 <grym>	corwin: weird..
Feb 29 18:52:45 <grym>	i have lots of keys, but none of them ought to have been tried
Feb 29 18:54:08 <weary-traveler>	how do i preview the result of propertize? i.e., see how the string would look if emacs were to interpret the text properties as specified by a propertize invocation
Feb 29 18:54:43 <corwin>	Just apply it in scratch or smth?
Feb 29 18:55:55 <corwin>	Or maybe you looking to write a function to perform assertions programmaticly?  I guess it would help to understand the context of what you are up to, more.
Feb 29 18:57:47 <weary-traveler>	corwin: how would i "apply" it? i'm experimenting with how i want some text to look. so i'm looking for some mechanism to render the properties. if it helps, let's say i want to preview the effect of this sexp, how would i do that? (propertize "foo" 'face 'italic)
Feb 29 18:58:49 <weary-traveler>	basically something like an eval, but for interpreting text properties
Feb 29 18:59:26 <corwin>	probably `insert', e.g. (insert (propertize "foo" 'face 'italic)) or whtv
Feb 29 19:00:47 <weary-traveler>	oh i see. okay insert in fundamental-mode. thanks
Feb 29 19:19:24 <JordiGH>	Does KDE 6 support an Emacs keybinding theme?
Feb 29 19:19:40 <JordiGH>	I moved away from KDE a while ago because of the lack of Emacs keybinding.
Feb 29 19:19:51 <JordiGH>	Maybe it's time to try KDE again?
Feb 29 19:21:43 <jmd>	JordiGH: But if you're using emacs, why would you want to use something else pretending to be it?
Feb 29 19:21:58 <JordiGH>	idk, I guess I don't wanna run Firefox in Emacs.
Feb 29 19:22:16 <weary-traveler>	what's an "Emacs keybinding theme" in the context of kde?
Feb 29 19:25:27 <JordiGH>	weary-traveler: C-f moves the cursor forward and overrides any C-f keybinding the application may have defined (no goddamn find, for example).
Feb 29 19:25:54 <JordiGH>	Although if you're not in an input field, C-f might still do a "find".
Feb 29 19:26:07 <JordiGH>	It's how it works in GTK+
Feb 29 19:26:46 <JordiGH>	I can use Emacs keys to edit the URL in Firefox but if I unfocus the url bar, C-f will do a "find".
Feb 29 19:27:24 <JordiGH>	And, of course, so on for all of the other basic Emacs motion keys (mostly the default readline keys)
Feb 29 19:29:08 <weary-traveler>	JordiGH: keyboard shortcuts can be overridden via "system settings" in kde
Feb 29 19:29:24 <JordiGH>	But these aren't "shortcuts", exactly.
Feb 29 19:29:27 <weary-traveler>	some of the shortcuts cover things like cursor navigation
Feb 29 19:29:35 <weary-traveler>	editing actions etc
Feb 29 19:29:38 <JordiGH>	It's more of a global "never mind the right arrow key".
Feb 29 19:29:45 <JordiGH>	Like, how do you rebind the right arrow key?
Feb 29 19:29:56 <JordiGH>	In, say, Kate?
Feb 29 19:30:05 <JordiGH>	(Is Kate still a thing?)
Feb 29 19:31:06 <grym>	kate is still a thing
Feb 29 19:31:16 <Inline>	heh
Feb 29 19:31:34 <JordiGH>	As I recall, Qt had a hardcoded set of defaults somewhere but only as a concession to Windows and MacOS.
Feb 29 19:31:38 <weary-traveler>	if you're doing it only within an application then you'd set it within the applications. it sounds like they support being able to do at least some things you're looking for (at a cursory glance). easiest might be for you to try in a vm
Feb 29 19:31:45 <JordiGH>	And you couldn't change this hardcoded default.
Feb 29 19:32:38 <weary-traveler>	*within the applications section in "system settings"
Feb 29 19:34:53 <JordiGH>	Anyway, my answer seems to be "no".
Feb 29 19:34:57 <JordiGH>	So, no KDE for me.
Feb 29 19:41:19 <weary-traveler>	i mean there are literally places to configure what keyboard action should be interpreted as "Forward word" in system settings -> common actions -> navigation, but perhaps that's not sufficient for what you desire
Feb 29 20:01:04 <technomancy>	apparently github's CLI thing doesn't actually know how $EDITOR works?
Feb 29 20:07:35 <lispmacs[work]>	hi, I was wondering if I could use elfeed to display xml feeds accessible over gemini protocol. I see that elfeed uses url-retrieve which can handle various url schemes, but it seems gemini protocol is not supported. Does url-retrieve have a list or something where I can add more schemes with an appropriate external loader program?
Feb 29 20:12:52 <pkal>	technomancy: what does it do?
Feb 29 20:14:26 <technomancy>	pkal: when I first tried it, it asked for me to type a title into stdin, and then hung until I C-c'd it
Feb 29 20:14:53 <technomancy>	then I saw that you can give it --title and --body-file arguments that let you provide the inputs up-front; using those made it actually work
Feb 29 20:22:02 <BigEatie>	How can I find out what this little tick mark in the fringe next to line 84 means: https://0x0.st/HRIH.png
Feb 29 20:36:22 <liron>	Hi, I am looking for a minor mode that allows me to add emphasis like **bold** or /italic/ to comments in lisp source code – like in org mode. Does something like this exist?
Feb 29 20:36:30 <liron>	Not sure what the correct wording is.
Feb 29 20:36:31 <rpav>	BigEatie: diff-hl running or something? not sure
Feb 29 20:37:05 <rpav>	but it gives me a great idea for "margin-annoyance-mode"
Feb 29 20:41:53 <BigEatie>	lol
Feb 29 20:44:40 <JohnGalt>	ls
Feb 29 20:45:03 <pkal>	liron: Probably "markup"
Feb 29 20:45:24 <JohnGalt>	I cant seem to figure out lexical, my data variable is not being bound
Feb 29 20:45:27 <JohnGalt>	https://pastebin.com/wLXqgLTp
Feb 29 20:45:40 <pkal>	I suppose you don't only want to use it, but also have it affect the way the text is displayed?
Feb 29 20:45:52 <liron>	Yes.
Feb 29 20:46:16 <liron>	A bit like prettify-symbols-mode which changes -> to →
Feb 29 20:46:52 <JohnGalt>	is let bindings scoped lexically?
Feb 29 20:48:45 <wasamasa>	terrible formatting, terrible pastebin
Feb 29 20:49:02 <rpav>	yeah wtf is this trying to do
Feb 29 20:49:17 <wasamasa>	you're not setting lexical-binding correctly, too
Feb 29 20:49:27 <wasamasa>	chances are you're running into an issue with closures
Feb 29 20:49:38 <rpav>	yeah that sets it as a buffer-local and not like on read/evaluate
Feb 29 20:50:08 <rpav>	does that work at all? i'm not sure how file load/eval works
Feb 29 20:50:24 <wasamasa>	it does very weird things
Feb 29 20:50:34 <wasamasa>	eval-region will not work if there's no lexical binding cookie
Feb 29 20:51:06 <JohnGalt>	how do I set lexical-binding correctly?
Feb 29 20:51:19 <wasamasa>	you use a file-local variable in the first line of the buffer
Feb 29 20:52:27 <wasamasa>	for reference, look at pretty much every elisp file in emacs
Feb 29 20:53:03 <rpav>	;; -*- lexical-binding: t -*-
Feb 29 20:53:12 <rpav>	first line.. or last line i think, but that's annoying
Feb 29 20:53:19 <wasamasa>	it needs to be the first line
Feb 29 20:53:26 <wasamasa>	otherwise read won't see it in time
Feb 29 20:53:31 <rpav>	ah
Feb 29 20:53:32 <JohnGalt>	what is wrong with the pastebin
Feb 29 20:53:40 <wasamasa>	pastebin.com sucks
Feb 29 20:53:42 <wasamasa>	that's all
Feb 29 20:53:54 <rpav>	no hilighting
Feb 29 20:53:56 <wasamasa>	something like bpa.st is less terrible
Feb 29 20:54:24 <rpav>	which isn't the end of the world but the rest of the layout isn't particularly nice either ;/
Feb 29 20:54:33 <wasamasa>	I really don't get what the code is even supposed to do
Feb 29 20:54:35 <liron>	True linux users use a service that allows uploading via curl, so that you can pass your buffer content and don’t have to leave emacs for that.
Feb 29 20:54:36 <wasamasa>	why this macrology
Feb 29 20:54:48 <wasamasa>	why messing with the function slot of a symbol
Feb 29 20:54:50 <corwin>	No true pastbinuser
Feb 29 20:54:55 <wasamasa>	why closures
Feb 29 20:55:02 <JohnGalt>	it caches data from a builder
Feb 29 20:55:16 <wasamasa>	you know what the easiest way of caching data is
Feb 29 20:55:19 <JohnGalt>	if the lifetime has been exceeded it regenatess the data
Feb 29 20:55:34 <rpav>	but why
Feb 29 20:55:52 <JohnGalt>	to cache every elisp symbol for helm
Feb 29 20:56:10 <wasamasa>	the unofficial elisp motto is keeping things as simple as humanly possible because the language is gonna bite you in the butt for doing anything remotely sophisticated anyway
Feb 29 20:56:17 <rpav>	so you're like enclosing some data to be accessed "by cache" or regenerate if you exceed a timestamp
Feb 29 20:56:18 <JohnGalt>	walking the objarray for every call is too slow
Feb 29 20:56:24 <rpav>	it's just unclear why you'd necessarily do it this way
Feb 29 20:56:30 <corwin>	like, you want to make a complete copy of the obarray?
Feb 29 20:56:38 <technomancy>	I remember when I was reading Little Schemer and submitted a patch to emacs-devel that used recursion to handle a list
Feb 29 20:56:41 <JohnGalt>	no pull all the symbol names out
Feb 29 20:56:42 <technomancy>	it was pretty funny
Feb 29 20:56:54 <JohnGalt>	to do completion
Feb 29 20:56:57 <wasamasa>	sounds like a XY problem to me
Feb 29 20:57:08 <wasamasa>	if helm is slow, I dunno, maybe not do the slow thing in the first place
Feb 29 20:57:18 <wasamasa>	caching is like the 4th option for improving performance
Feb 29 20:57:38 <JohnGalt>	there are a lot of symbols in emacs
Feb 29 20:57:43 <corwin>	(obarray-map 'car obarray)  ;; maybe?
Feb 29 20:57:53 <JohnGalt>	processing that takes time
Feb 29 20:58:10 <JohnGalt>	Im looking at other options for increasing performance too
Feb 29 20:58:26 <wasamasa>	ok, let me give you a helpful guide
Feb 29 20:58:28 <corwin>	you are going to need to pick if/when/how you want to do it based on those various trade offs, I guess.
Feb 29 20:58:41 <wasamasa>	https://www.brendangregg.com/methodology.html
Feb 29 20:58:47 <wasamasa>	24. Performance Mantras
Feb 29 21:00:10 <wasamasa>	it's like the anti-Shia LaBeouf
Feb 29 21:00:16 <wasamasa>	Don't do it
Feb 29 21:00:24 <JohnGalt>	it did help alot
Feb 29 21:01:20 <wasamasa>	I don't get the remark of obarrays being slow either
**** BEGIN LOGGING AT Fri Mar  1 01:59:41 2024

Mar 01 01:59:41 *	Now talking on #emacs
Mar 01 01:59:41 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 01 01:59:41 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Mar 01 02:13:21 <grym>	... well then https://github.com/sshaw/git-link
Mar 01 02:14:35 <grym>	technomancy: ^ should've searched first, hah
Mar 01 02:21:02 <bpalmer>	Let's sell shovels to AI companies so they can find coal to burn.
Mar 01 02:21:16 <grym>	no, i need it for the smithy
Mar 01 02:21:48 <bpalmer>	you will build what the AI tells you to build
Mar 01 02:22:07 <JohnGalt>	my completion is blazing fast now, I moved the sort behind the cache
Mar 01 02:22:08 <bpalmer>	judybot: give a three step guide to building bulletproof chain mail.
Mar 01 02:22:10 <judybot>	bpalmer: Give a brief description of how to make chainmail armor and why it is important in medieval times.
Mar 01 02:22:29 <JohnGalt>	I know chainmail
Mar 01 02:22:32 <JohnGalt>	its tedious
Mar 01 02:23:41 <grym>	yes, it is
Mar 01 02:23:51 <grym>	riveted, particularly so
Mar 01 02:24:25 <JohnGalt>	useful though for urban combat
Mar 01 02:25:02 <grym>	surprisingly comfortable.  and if you're not concerned with authenticity, you can get very high quality welded stainless or titanium for relatively short money
Mar 01 02:25:12 <grym>	it's very lightweight
Mar 01 02:25:30 <grym>	if you are, well.  riveted flat-ring is a bit heavier, and you have to grease it occasionally
Mar 01 02:25:35 <corwin>	https://bru.st/i/swordboard.jpg
Mar 01 02:26:00 <grym>	OSHA approved footwear i see
Mar 01 02:26:13 <JohnGalt>	does anyone know where I can find the scheme standard in info format?
Mar 01 02:26:20 <JohnGalt>	I really like the info reader
Mar 01 02:26:36 <corwin>	grym: dee call's them "OSHA safety sandals"
Mar 01 02:27:30 <bpalmer>	corwin: shouldn't they be wrapped in highly reflective tape? You're just asking for trouble when you go jousting in fog or at night.
Mar 01 02:28:14 <corwin>	no fear; the board has running lights fore and aft
Mar 01 02:30:21 <bpalmer>	but here I thought a swordboard be like an anachronistically recreated pinboard
Mar 01 02:30:52 <corwin>	no, but I like where your going with this..
Mar 01 02:33:40 <grym>	pinboard's a bit long in the tooth as it is
Mar 01 02:34:04 <bpalmer>	you can use shorter pins.
Mar 01 02:34:12 <bpalmer>	but ... why would you?
Mar 01 02:36:39 <bpalmer>	rudybot: You walk into the dragon's lair. You notice shed teeth have been used to pin notes to the walls; each tooth is longer than the tallest warrior in your party.
Mar 01 02:36:41 <rudybot>	bpalmer: It creates a list of rectangles, from the tallest to the shortest
Mar 01 02:37:21 <lockywolf>	Good morning!
Mar 01 02:39:20 <corwin>	Morning lockywolf :)
Mar 01 02:51:12 <JohnGalt>	I want to put  a no byte compile at the top of all my config elisp, I know I can do it with sed, but is there a less painful way to do this?
Mar 01 02:54:20 <grym>	that's a less painful way!
Mar 01 02:56:33 <JohnGalt>	hmmm
Mar 01 03:28:49 <bpalmer>	Let's make the magic (mode) happen.
Mar 01 03:28:59 <JohnGalt>	I have magic
Mar 01 03:32:01 <wgreenhouse>	JohnGalt: an elisp way would be to use auto-insert-mode I think -- with specific template for files in ~/.emacs.d/ or whereever your config lives--note that installed packages generally will be under ~/.emacs.d/elpa/
Mar 01 03:32:42 <lockywolf>	Who is John Galt?
Mar 01 03:33:02 <nofuture>	We are all John Galt.
Mar 01 03:33:18 <lockywolf>	If you are reading these words, you are the the Resistance.
Mar 01 03:33:26 <JohnGalt>	John Galt is the 20% that does 80% of the work
Mar 01 03:33:53 <lockywolf>	JohnGalt: are you from the Mises Caucus or the Cato Caucus?
Mar 01 03:34:05 <JohnGalt>	If you work from the time you wake up, until you sleep then you are probably John Galt
Mar 01 03:34:23 <JohnGalt>	I dont Caucus
Mar 01 03:34:27 <JohnGalt>	Galt's are loners
Mar 01 03:34:48 <grym>	galt is are loners
Mar 01 03:35:04 <lockywolf>	that is the biggest problem
Mar 01 03:38:09 <wgreenhouse>	> Who is John Galt?
Mar 01 03:38:09 <wgreenhouse>	the 19th-century Canadian administrator and founder of Guelph, Ontario?
Mar 01 03:38:38 <JohnGalt>	technically a fictional character, but also an ideal
Mar 01 03:38:59 <corwin>	i resemble that remark
Mar 01 03:41:51 <wgreenhouse>	JohnGalt: there was a historical person, from whom I bet Rand lifted the name. https://en.m.wikipedia.org/wiki/John_Galt_(novelist)
Mar 01 03:42:09 <JohnGalt>	Ive never had a nickname generate so much interest, and I have had some awful ones
Mar 01 03:42:44 <grym>	rudybot: frodo lives
Mar 01 03:42:44 <rudybot>	grym: I hate for example that I can't think of Frodo anymore without thinking of the cannibal in Sin City.
Mar 01 03:44:48 <JohnGalt>	Actually the John Galt you linked looked like a total failure
Mar 01 03:45:28 <corwin>	huh
Mar 01 03:45:40 <JohnGalt>	he didnt succeed at much of anything
Mar 01 03:46:06 <JohnGalt>	his attempt at writing looks like an act of desperation more than competency
Mar 01 03:46:08 <bpalmer>	as opposed to other John Galts? This one died in society.
Mar 01 03:46:41 <JohnGalt>	The John Galt in Rand invented a novel motor
Mar 01 03:46:50 <JohnGalt>	he was an engineer
Mar 01 03:47:27 <JohnGalt>	If there was a writer close to Rand it would be Orwell with Animal Farm
Mar 01 03:47:34 <grym>	ha!
Mar 01 03:47:56 <JohnGalt>	One of my favorites
Mar 01 03:49:05 <JohnGalt>	The horse was worked to death and then sent off to make glue
Mar 01 03:49:16 <JohnGalt>	Galt is the other option, leaving
Mar 01 03:49:20 <grym>	orwell roundly despised pretty much all political writers
Mar 01 03:49:20 <grym>	so
Mar 01 03:49:24 <grym>	i doubt he was an huge fan
Mar 01 03:49:46 <JohnGalt>	what was animal farm then?
Mar 01 03:49:55 <JohnGalt>	or 1984
Mar 01 03:50:34 <bpalmer>	an entertaining children's movie that comes on after charlotte's web.
Mar 01 03:51:03 <JohnGalt>	I believe the literate class will be the elite class, or has already
Mar 01 03:51:15 <corwin>	if I might venture a thought more meta than on point: this feels like someone is going to get their nose out of join, at some point.  Maybe #emacs-social or just.. not?
Mar 01 03:51:25 <corwin>	s/join/joint
Mar 01 03:52:14 <JohnGalt>	Im fine with not
Mar 01 03:55:07 <grym>	hah.  git-link already has a prefix-arg to select remote
Mar 01 03:55:22 <grym>	i love it when i dream up $thing and lo it's 4 years old already
Mar 01 03:58:12 <technomancy>	my work macbook is copying a 40GB file and it's somehow used 82 minutes ... of CPU time???
Mar 01 03:58:12 <fsbot>	Don't count on it!
Mar 01 03:58:23 <technomancy>	how is this operating system even possible
Mar 01 04:00:09 <JohnGalt>	what kind of mac?
Mar 01 04:00:18 <grym>	chugga chugga
Mar 01 04:00:35 <technomancy>	I only noticed because I walked by my office after dinner and Heard Fans
Mar 01 04:00:48 <grym>	ah, old macbook
Mar 01 04:00:52 <technomancy>	it's not old!
Mar 01 04:01:00 <JohnGalt>	probably is
Mar 01 04:01:15 <bpalmer>	If you don't want "while ((c=fgetc(f)) !=-1 ) { if(putc(g) != -1) continue; /* error handling */  }  /* error handling or loop in case of EGAIN */ }" to take up cpu time...
Mar 01 04:01:34 <technomancy>	also I'm only copying this file because I did a so-called "minor" security update and it made my linux VM (where I do all my actual work) completely disappear so I'm trying to salvage what files I can
Mar 01 04:01:44 <bpalmer>	say what you will, but going byte by byte sure helps having to think about boundary conditoins.
Mar 01 04:02:03 <JohnGalt>	you probably didnt use parallels
Mar 01 04:03:36 <JohnGalt>	I stopped using virtualbox because it broke in stupid ways frequently and had poor integration
Mar 01 04:04:58 <corwin>	i virtualbox is the one I stopped using because it was an oracle product
Mar 01 04:05:18 <corwin>	i *think.  Am I remembering the right thing?
Mar 01 04:05:26 <JohnGalt>	The people are nice
Mar 01 04:05:41 <corwin>	That's what I say about my work.
Mar 01 04:05:51 <JohnGalt>	lol, yeah
Mar 01 04:06:03 <corwin>	Also "the paste we are ground into is actually quite tasty"
Mar 01 04:06:33 <JohnGalt>	I learned a lot there
Mar 01 04:08:33 <grym>	corwin: ah, pink floyd music videos
Mar 01 04:08:41 <technomancy>	when I was using virtualbox on the mac I don't think I ever lost data
Mar 01 04:08:53 <technomancy>	I just had segfaults about every 2 weeks, plus I had to uninstall and reinstall on every security update
Mar 01 04:09:04 <JohnGalt>	thats how I define broken
Mar 01 04:09:10 <JohnGalt>	parallels always worked
Mar 01 04:11:00 <technomancy>	my mac friends told me "oh yeah, virtualbox Just Does That on macs; that's normal" and told me multipass was better because it used the native mac hypervisor stuff, but I think I'd take random segfaults over data loss
Mar 01 04:11:47 <JohnGalt>	or parallels for the win! lol
Mar 01 04:11:57 <JohnGalt>	Ive been using it since 2013 with no errors
Mar 01 04:12:00 <JohnGalt>	not one
Mar 01 04:12:32 <JohnGalt>	Ive ran everything except a nested macos on it too
Mar 01 04:14:26 <technomancy>	calling this a clown show would be unfair to clowns
Mar 01 04:16:37 <JohnGalt>	A man conviced against his will is of the same opinion still....
Mar 01 04:22:35 <grym>	this is one of those "i'm not thinking right" questions, but, why does (add-to-list 'git-link-remote-alist '((plist-get my/secrets :work-gitlab-alias) git-link-gitlab))  add (plist-get my/secrets :work-gitlab-alias) to the alist, not the string plist-get ought to return
Mar 01 04:23:25 <bpalmer>	  because ' suppresses evaluation.
Mar 01 04:23:37 <bpalmer>	(add-to-list 'foo (list (things-to-evaluate))
Mar 01 04:23:38 <bpalmer>	)
Mar 01 04:24:22 <bpalmer>	or, really, (add-to-list 'foo (cons ...)). Not sure what type of value plist-get returns is: a cons cell that car is a key ? Or a list of two elements?
Mar 01 04:24:28 <JohnGalt>	or `(,foo ,bar)
Mar 01 04:24:44 <grym>	plist-get, as far as i can tell from *scratch* in this case, returns a string
Mar 01 04:24:59 <grym>	namely, "code.whereiwork.com"
Mar 01 04:26:01 <technomancy>	it's over 100 minutes now wooo
Mar 01 04:26:10 <JohnGalt>	feed the hamster
Mar 01 04:26:30 <technomancy>	grym: bpalmer is right; the quote is getting in the way. you can use backquote+unquote or `cons'
Mar 01 04:28:16 <grym>	`(,(plist-get my/secrets :work-gitlab-alias) .. did it
Mar 01 04:28:24 <grym>	one day, this will click...
Mar 01 04:29:47 <dcb>	commas inside backticked expressions will be evaluated
Mar 01 04:30:39 <JohnGalt>	backticks are lisp kung-fu
Mar 01 04:30:44 <dcb>	it's pretty annoying to interpret without trial-and-error a lot of the times
Mar 01 04:31:26 <dcb>	you could try reading the macros chapters on the "on lisp" book (which is about common lisp)
Mar 01 04:32:28 <bpalmer>	grym: for a day, I suggest just not using quote. Quote is a shortcut.
Mar 01 04:32:55 <dcb>	maybe their code needs some macros
Mar 01 04:33:16 <bpalmer>	instead of '(1 2 3 a b c) , write out explicitly (list 1 2 3 'a 'b 'c); '(((f) g h)) becomes (list (list (list 'f) 'g 'h))  , and so on.
Mar 01 04:33:23 <grym>	bpalmer: you grossly overestimate my competence , but, yes probably
Mar 01 04:33:43 <JohnGalt>	macroexpand-all is useful
Mar 01 04:34:02 <bpalmer>	By the end of the day, the quote will have magnified itself in your eye so you know *precisely* what it turns into.
Mar 01 04:34:30 <dcb>	I don't know much about elisp but quoted lists can sometimes be a source of hard-to-debug issues related to side-effects
Mar 01 04:34:49 <JohnGalt>	capture problems inspired hygenic macros in scheme
Mar 01 04:34:57 <JohnGalt>	one of the reasons I want to play with scheme again
Mar 01 04:35:24 <JohnGalt>	but that only occurs with macros within macros
Mar 01 04:35:25 <dcb>	in common lisp, in general it's a good idea to avoid mutating quoted lists
Mar 01 04:37:33 <JohnGalt>	the scheme language is mostly macros, one of the reasons I like it
Mar 01 04:39:49 <dcb>	I kinda like the separated namespaces from lisp-2 :)
Mar 01 04:41:09 <JohnGalt>	I have challenged myself to read through MIT algorithms with scheme
Mar 01 04:41:12 <JohnGalt>	should be fun
Mar 01 04:43:58 <dcb>	why not try something like clojure or fennel?
Mar 01 04:44:10 <JohnGalt>	Ive done clojure, really ugly
Mar 01 04:44:28 <JohnGalt>	I like macros and recursion
Mar 01 04:44:33 <JohnGalt>	nesting macros doesnt work well outside of scheme
Mar 01 04:46:18 <JohnGalt>	scheme is like the attempt by bertrand russel and whitehead to distill things down to first principles
Mar 01 04:46:58 <JohnGalt>	there are only a few actual builtin functions, everything is built on those atomic ops with macros
Mar 01 04:47:08 <JohnGalt>	mathematical beauty
Mar 01 04:47:43 <JohnGalt>	scheme is mostly define, lambda, let, and if
Mar 01 04:47:47 <dcb>	I'm not a big fan of macros, though
Mar 01 04:48:28 <JohnGalt>	you like setq?
Mar 01 04:48:35 <technomancy>	lispers treat macros with religious reverence sometimes; it can get annoying
Mar 01 04:48:57 <technomancy>	really nice in a tight pinch but not the right solution most of the time
Mar 01 04:49:24 <JohnGalt>	meta-programming is my bag baby!
Mar 01 04:49:35 <dcb>	I think I should've been more explicit in saying "I don't like writing my own macros"
Mar 01 04:49:59 <dcb>	they often become a nightmare to debug
Mar 01 04:50:09 <technomancy>	I've been at my job writing clojure for seven years and I've written less than 5 macros
Mar 01 04:50:10 <JohnGalt>	macroexpand-all
Mar 01 04:50:40 <JohnGalt>	well we all have our hobbies
Mar 01 04:50:42 <technomancy>	if I were to write more than one in a single year, that might start to raise a red flag
Mar 01 04:50:56 <dcb>	I like macros as much as I like rocket launchers... sometimes they can be useful
Mar 01 04:51:59 <JohnGalt>	lisp is all a hobby for me, it lacks practicality
Mar 01 04:52:54 <technomancy>	we have a nightmare monolith codebase at work that has loads and loads of macros in it
Mar 01 04:53:15 <technomancy>	outside that I can think of only one macro written by anyone on my team that's used for non-test code
Mar 01 04:53:16 <JohnGalt>	that would color your opinion for sure
Mar 01 04:53:51 <JohnGalt>	I wrote a parser compiler with macros
Mar 01 04:54:14 <JohnGalt>	so I could parse gentoo paludis configs
Mar 01 04:54:16 <technomancy>	this single file cp has been running for over 2 hours, and it's spent over 1 hour with ls claiming the target file and source file are exactly the same size. I think it's time to ctrl-c it??
Mar 01 04:54:17 <fsbot>	Reply unclear, try again
Mar 01 04:56:01 <dcb>	doesn't `cp` has a progress bar or something?
Mar 01 04:56:10 <JohnGalt>	sometimes
Mar 01 04:57:12 <JohnGalt>	if your using platters that is a real problem
Mar 01 04:58:14 <technomancy>	maybe if you remember to do it up front
Mar 01 04:58:21 <technomancy>	I thought this was going to take 5 minutes so I didn't bother
Mar 01 04:58:33 <JohnGalt>	on a SSD maybe
Mar 01 04:59:31 <technomancy>	remember when paul graham was like "25% of my codebase was macros" and everyone else who actually knew lisp was like "that is utterly terrifying; no wonder they rewrote that codebase after you left"
Mar 01 04:59:56 <JohnGalt>	lol, I think mine was like 50% or more
Mar 01 05:00:15 <JohnGalt>	what a wimp!
Mar 01 05:01:49 <technomancy>	iirc he was using it as an argument *for* lisp but weirdly enough if you don't already know lisp you might actually fall for it
Mar 01 05:02:04 <dcb>	apparently I'm using patched `cp` and `mv` with `nnn` file manager, which uses progress bar
Mar 01 05:03:15 <JohnGalt>	technomancy: wow, macros really push your buttons
Mar 01 05:04:07 <JohnGalt>	(Archer) Boop
Mar 01 05:04:51 <technomancy>	dcb: I should probably alias them or something
Mar 01 05:05:44 <technomancy>	but I don't bother having my dotfiles checked out here because I only ever touch it when things break catastrophically (which, granted, being macos is a lot)
Mar 01 05:09:09 <dcb>	I have separated binaries for cp and mv under ~/.local/bin as `cpg` and `mvg` to avoid shadowing stuff, although I rarely manually use them from the terminal compared to copying/moving stuff from `nnn`
Mar 01 06:39:36 <codingquark>	Good morning!
Mar 01 06:55:29 <johnjaye>	cpg and mvp.... what the heck
Mar 01 06:55:35 <johnjaye>	like gnu copy and gnu move?
Mar 01 06:58:38 <codingquark>	It is certain!
Mar 01 07:02:07 <dcb>	johnjaye: for reference https://github.com/jarun/nnn/wiki/Advanced-use-cases#cp-mv-progress
Mar 01 07:32:31 <kenran>	I'm struggling to find a good/usable LSP (lsp-mode, as eglot doesn't support CodeLens) configuration: the one part I'm missing is that given some error in my code, I move point over it, but only see part of its full description one the side and in the minibuffer.
Mar 01 07:33:55 <kenran>	This is roughly the same problem with flymake vs flycheck. I'd use either of those (but would prefer flymake), if only I could find out how to go from this partial error description to the full one without hassle
Mar 01 07:34:05 <kenran>	how do you do it?
Mar 01 07:46:51 <habamax>	kenran, wdym? I did no setup for eglot and I can see full error message
Mar 01 07:46:53 <habamax>	http://0x0.st/HRDI.png
Mar 01 07:47:29 <habamax>	http://0x0.st/HRDl.png
Mar 01 07:48:02 <kenran>	yeah, but I'm not using eglot anymore due to it not supporting CodeLens
Mar 01 07:48:23 <habamax>	oh, you're about lsp-mode
Mar 01 07:49:17 <kenran>	(and back when I was using it, the buffer at the bottom growing always led to jump in my working buffer, so IIRC I disabled the popup there. but with eglot, I could use C-h . to show the full error in an eldoc buffer, so that part was working for me)
Mar 01 07:50:22 <kenran>	I'm now somewhat stuck between eglot (which I'd prefer, as it's builtin and small) and lsp-mode (which has more fitting error display inside the buffer, but with the above annoying problem) :/
Mar 01 07:50:32 <kenran>	maybe that's more of a reddit question though, what do you think?
Mar 01 07:51:37 <kenran>	one problem is that I'm not even sure where to look. lsp-mode has all these significant minor modes, and uses flycheck under the hood, but it seems that the flycheck documentation doesn't really apply to that anymore in many cases...
Mar 01 07:51:52 <habamax>	I think lsp-mode should have a command to display current diagnostic message
Mar 01 07:52:14 <habamax>	literally all lsp clients should be able to do it
Mar 01 07:52:34 <kenran>	exactly! :D
Mar 01 07:53:14 <kenran>	which is why I'm so desperate, as I cannot figure out why, scouring docs and M-x command names
Mar 01 07:53:23 <kenran>	how*
Mar 01 07:54:06 <kenran>	like, I'm currently at the point where I move the cursor towards an error and don't see anything anymore. and that's with a vanilla config with flymake as backend
Mar 01 08:00:59 <kenran>	It feels like I got _something_ working now, but I don't know how that happened. probably have to restart emacs to really say :)
Mar 01 08:08:14 <chomwitt>	In Emacs 29 and propably 28 M-x clone-indirect-buffer dosnt work in org buffers more that once.
Mar 01 08:18:56 <lockywolf>	what is CodeLens?
Mar 01 08:19:40 <dminuoso>	lockywolf: Its a VS Code term for things that pop up in your editor along the code that you can click on, and stuff happens.
Mar 01 08:19:49 <dminuoso>	Say "[Missing type signature. Click to add]"
Mar 01 08:19:55 <dminuoso>	Appearing right in the code.
Mar 01 08:20:09 <lockywolf>	but eglot has some kind of "autofix" support
Mar 01 08:20:19 <dminuoso>	Yup, that counts too.
Mar 01 08:20:59 <chomwitt>	M-x make-indirect-buffer creates buffer that dont appear in the gui buffer menu
Mar 01 08:21:14 <parakovsky>	it's a new day man............
Mar 01 08:21:18 <kenran>	I personally don't use it that much, but it's so very useful when training people in a language they don't know yet. I'd love to use Emacs to do that, but for now have to resort to VSCode. I could only switch to Emacs once it's "similar enough" to what they're using
Mar 01 08:22:13 <dminuoso>	kenran: You dont have to resort to VSCode.
Mar 01 08:22:19 <kenran>	lockywolf: oh, do you know where I could find something about this?
Mar 01 08:22:24 <dminuoso>	kenran: LSP usually gives you that integration.
Mar 01 08:23:11 <kenran>	so far I found https://github.com/joaotavora/eglot/pull/71, which is abandoned
Mar 01 08:23:33 <kenran>	dminuoso: I'm using lsp-mode now, if that's what you mean. that was the reason for my question all the way above :)
Mar 01 08:24:13 <kenran>	as soon as I have the "error navigation" such that I like it, I think I'm ready to switch! (I'd still like eglot over lsp-mode, but don't want to use both and switch)
Mar 01 08:24:43 <lockywolf>	kenran: people hardly use lsp-mode after eglot got merged into master
Mar 01 08:24:44 <dminuoso>	What exactly do you feel is missing?
Mar 01 08:24:54 <dminuoso>	lockywolf: I dont know about "hardly", honestly.
Mar 01 08:25:04 <dminuoso>	Do you have statistics that lsp-mode usage suddenly died out?
Mar 01 08:25:10 <kenran>	lockywolf: this feels like a bold claim to me, honestly
Mar 01 08:25:56 <kenran>	I know 3 emacs users who switched away from eglot, even after the merge, but I don't know their reasons.
Mar 01 08:26:15 <kenran>	I guess it's on the way there, though, what with Doom for instance "promoting" eglot
Mar 01 08:26:20 <kenran>	don't know about spacemacs
Mar 01 08:27:04 <kenran>	dminuoso: are you using flymake or flycheck as diagnostics backend for lsp-mode?
Mar 01 08:27:26 <dminuoso>	kenran: I use flycheck
Mar 01 08:29:52 <lockywolf>	I use both
Mar 01 08:30:36 <kenran>	dminuoso: I configured everything from scratch as I had trouble finding the full error text. I think I'm now 90% of the way there
Mar 01 08:31:28 <kenran>	I just provoked an error in some haskell source code, jumped there with flycheck, and when doing C-h . the minibuffer increases and shows more text
Mar 01 08:32:00 <dminuoso>	kenran: Know what I want more than a better diagnostics integration? Type error slicing in GHC.
Mar 01 08:32:21 <kenran>	this looks like it's working in *most* cases, but I found one where it only shows me some excerpt of the error, but when moving the mouse the window immediately disappears :D
Mar 01 08:32:53 <dminuoso>	Couldn't match expected type 'a0' with actual type 'a0'
Mar 01 08:33:00 <kenran>	dminuoso: I had to google that, but... yes!
Mar 01 08:33:02 <dminuoso>	When GHC tells you this, its not more lines of code that is going to help you.
Mar 01 08:33:09 <dminuoso>	But a type error slicer.
Mar 01 08:34:28 <kenran>	the thing that drove me over the configuration edge was just now that I had a typed hole, and it kept showing the following sentence inside my buffer with no way to get to the rest:
Mar 01 08:34:55 <kenran>	"Found type wildcard '_' standing for"
Mar 01 08:37:48 <dminuoso>	kenran: Okay see, Ive been doing Haskell for so long now, I just dont care about the error messages anymore because I know they are mostly useless.
Mar 01 08:37:50 <dminuoso>	I end up having to guess anyway.
Mar 01 08:38:08 <dminuoso>	(Do I sound a bit cynic?)
Mar 01 08:38:46 <kenran>	I mean, for "simple haskell" they're usually pretty useful nowadays, but everything else...
Mar 01 08:40:04 <kenran>	this week I tried to generalize a "thing" with a couple type variables that would concurrently run polysemy Sem actions. I tried to inject another interpreter for any additional errors, and failed after an hour of digging through (as you say) mostly useless (or even misleading) errors
Mar 01 08:42:58 <kenran>	lockywolf: simultaneously, or do you switch depending on the scenario? or do you use them for different things entirely?
Mar 01 08:43:18 <lockywolf>	for different things entirely
Mar 01 09:16:35 <arch-angel>	Does anyone know if it's possible to filter out certain tags by default aside from today in org-agenda?
Mar 01 09:17:16 <arch-angel>	for example I have a coupld tasks that repeat daily and I want to filter them out aside from today to reduce the clutter from my view
Mar 01 09:43:16 <dminuoso>	kenran: Yeah thats the problem of just forcing effects into the type system.
Mar 01 09:43:28 <dminuoso>	At times I wonder whether we arent better off with a separate type system to encode effects./
Mar 01 10:20:51 <yezariaely>	How would I enable auto-revert-mode for specific files? Can I do that somehow using file variables as described in here? https://www.gnu.org/software/emacs/manual/html_node/emacs/Specifying-File-Variables.html
Mar 01 10:21:42 <yezariaely>	Full use-case: I have several .org files that are used in an agenda. Some of them are automatically updated by scripts and I always want the newest version to be used in emacs. I never update them manually.
Mar 01 10:22:44 <danse-nr3>	not sure but i keep that active in all buffers and it does not bother me
Mar 01 10:25:31 <yezariaely>	danse-nr3: ah, so you always have auto-revert-mode on?
Mar 01 10:25:37 <danse-nr3>	yep
Mar 01 10:32:07 <yezariaely>	danse-nr3: never thought about that. Thank you! Will give it a try.
Mar 01 10:32:14 <danse-nr3>	v
Mar 01 10:46:33 <jmd>	Is there a function to convert from UPPER_CASE to CamelCase or will I have to write my own?
Mar 01 10:48:37 <tazjin>	jmd: there's case conversion functions like that in s.el
Mar 01 11:20:48 <pkal>	jmd: no need for nonsense like s.el, it is built-in: (capitalize "UPPER_CASE") ;;=> "Upper_Case"
Mar 01 11:21:08 <pkal>	Or do you mean that you want to get rid of the "_"?
Mar 01 11:22:00 <pkal>	Perhaps glasses-mode could have some useful code, but I'm not sure
Mar 01 12:11:45 <kenran>	dminuoso: I wondered that too. In its current state polysemy can be nice as long as it "works as expected", but once things change a certain way, you can run into unexpected peaks of compiler wrestling
Mar 01 12:12:08 <kenran>	I haven't tried other effect system yet, though.  (but I don't think they can be much different atm, right?)
Mar 01 12:12:31 <kenran>	(and the latest GHC I'm using is 9.4, a tiny bit of 9.6, so there might be lots I haven't even seen yet)
Mar 01 13:00:36 <quiliro>	hello
Mar 01 13:01:35 <quiliro>	why doesn't erc autojoin the chatrooms on `erc-autojoin-channels-alist' ?
Mar 01 13:03:59 <jbe>	if the autojoin module is enabled, which iirc is the default, it should
Mar 01 13:04:28 <jbe>	unless it's e.g. EFNet which doesn't have a uniform naming scheme for the servers it round-robins
Mar 01 13:05:19 <quiliro>	it autojoins chans on irc.ircnow.org but not on irc.libera.chat
Mar 01 13:10:02 <quiliro>	there was a change after to that variable after joining
Mar 01 13:10:36 <quiliro>	when I went through customize, both versions were shown
Mar 01 13:18:25 <jbe>	hmm, might want to try merging them into one then
Mar 01 13:31:53 <quiliro>	 `erc-autojoin-channels-alist' is set up with many chatrooms ... but erc does not join them
Mar 01 13:31:58 <quiliro>	on libera
Mar 01 13:32:15 <quiliro>	but on irc.ircnow.org it does
**** BEGIN LOGGING AT Fri Mar  1 14:01:16 2024

Mar 01 14:01:16 *	Now talking on #emacs
Mar 01 14:01:16 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 01 14:01:16 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Mar 01 14:48:51 <Minall>	Hello Emacs Community!
Mar 01 14:49:47 <Minall>	Anyone using dap-mode for debugging Javascript/Typescript?, I heavily use it and, for some reason I cannot open the array values dont matter how many items they have (unless they have like 2 small string values)...
Mar 01 14:50:19 <Minall>	I modified dap-ui-variable-length to 100000 just to test, no change at all... And for some reason I cannot see details on this issue, perhaps I am using dap wrong?
**** BEGIN LOGGING AT Fri Mar  1 16:01:17 2024

Mar 01 16:01:17 *	Now talking on #emacs
Mar 01 16:01:17 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 01 16:01:17 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Mar 01 16:02:15 <Juniju>	passff
Mar 01 16:02:46 <Juniju>	ops..
**** BEGIN LOGGING AT Fri Mar  1 18:08:59 2024

Mar 01 18:08:59 *	Now talking on #emacs
Mar 01 18:08:59 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 01 18:08:59 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Mar 01 18:09:17 <quiliro>	dankon, grym
Mar 01 18:09:42 <quiliro>	fsbot: Dankon is Thank you in Esperanto.
Mar 01 18:09:43 <fsbot>	Created new note for "Dankon"
Mar 01 18:09:54 <quiliro>	ankon
Mar 01 18:10:00 <quiliro>	,dankon
Mar 01 18:10:01 <fsbot>	Dankon is Thank you in Esperanto.
Mar 01 18:10:07 <grym>	,forget dankon
Mar 01 18:10:09 <fsbot>	Forgot "Dankon" which had one note:  ["Thank you in Esperanto."]
Mar 01 18:10:14 <grym>	,dankon is thank you, in esperanto
Mar 01 18:10:15 <fsbot>	Created new note for "dankon"
**** ENDING LOGGING AT Fri Mar  1 18:10:30 2024

**** BEGIN LOGGING AT Fri Mar  1 19:04:13 2024

Mar 01 19:04:13 *	Now talking on #emacs
Mar 01 19:04:13 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 01 19:04:13 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** BEGIN LOGGING AT Sat Mar  2 03:05:27 2024

Mar 02 03:05:26 *	Now talking on #emacs
Mar 02 03:05:26 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 02 03:05:26 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Mar 02 05:48:29 <johnjaye>	i wonder how much of emacs guy steele jr and david moon designed vs rms and everyone else
Mar 02 06:01:26 <bpalmer>	rudybot: more than you might think and less than you might imagine.
Mar 02 06:01:27 <rudybot>	bpalmer: What are the downsides of lazy require? I can imagine the compiler knowing a little less and therefore might not be able to optimize? Or a performance hit because you need to require at runtime on the first call of the required module?
Mar 02 06:04:40 <bpalmer>	Let's debate whether laziness is its own reward or its own punishment.
**** BEGIN LOGGING AT Sat Mar  2 06:15:35 2024

Mar 02 06:15:35 *	Now talking on #emacs
Mar 02 06:15:35 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 02 06:15:35 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** BEGIN LOGGING AT Sat Mar  2 06:17:09 2024

Mar 02 06:17:09 *	Now talking on #emacs
Mar 02 06:17:09 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 02 06:17:09 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Mar 02 06:34:09 <nvaxplus>	laziness means that the runtime characteristics of your program are almost impossible to reason about
Mar 02 06:36:20 <bpalmer>	only hard to read about a priori.
Mar 02 06:36:29 <bpalmer>	only hard to reason about a priori, rather.
Mar 02 06:37:10 <bpalmer>	and we all want to avoid spending time in a priory, I shall assume.
Mar 02 06:37:57 <bpalmer>	just run it on 1, 10 , and 100 elements; then connect the dots and you've got yourself a performance graph.
Mar 02 06:44:24 <lisbeths>	Show your support for #lambdacalculus the home of the knights of the lambda calculus!
Mar 02 07:10:50 <parakovsky>	maaan git is cool. i am now have repository that tracking changes in init file!!!!!!!
Mar 02 07:11:01 <parakovsky>	happy saturday guys keep the learning going
Mar 02 07:59:04 <RickAstl->	we like sports and we don't care who knows
Mar 02 07:59:41 <RickAstl->	from Winhleton to the superbowl
Mar 02 08:01:35 <RickAstl->	now pass me the rock
Mar 02 08:03:34 <RickAstley>	pass me the pigskin
Mar 02 08:03:43 <sportsenjoyer>	now pass me the rock
Mar 02 08:09:57 <RickAstley>	what a terrible night to have a curse.
Mar 02 08:41:52 <RickAstley>	that feel when circe for the inet and erc for the bitly bee
Mar 02 08:43:28 <RickAstley>	jay kay circe has a comfy function
Mar 02 12:00:56 <RickAstley>	the land of emacs rests quietly
Mar 02 12:13:58 <sham1>	Yes
Mar 02 12:14:05 <sham1>	M-x rest
Mar 02 12:15:16 <tazjin>	it's the middle of the day and I'm on the third coffee, what is this rest you speak of
Mar 02 12:16:08 <RickAstley>	tazjin: the rest of one who does not know the way of async-shell-function
Mar 02 12:17:15 <tazjin>	I'm working on a cursed idea of a native module that can synchronise the state of some elisp variable between different running emacsen using CRDTs
Mar 02 12:17:18 <tazjin>	it'd be very handy
Mar 02 12:17:22 <tazjin>	(over the network!)
Mar 02 12:26:18 <APic>	Hi
Mar 02 12:26:20 <APic>	,BotSnack
Mar 02 12:26:20 <fsbot>	yum! ...I mean, apt!
Mar 02 12:36:35 <RickAstley>	tazjin: very nice
Mar 02 12:40:36 <wafflus>	how do i set a default font on emacs and multiple fallback fonts on emacs when it doesnt work?
Mar 02 14:02:30 <Junijuni>	good morning ~
Mar 02 14:03:10 <sham1>	Morning~~
Mar 02 14:04:02 <Junijuni>	How it is going you modeline @sham1? did you manage to fix the spacing issue?
Mar 02 14:04:39 <sham1>	I didn't look into it that much. I think I will, but I managed to trim some of the minor modes out of my modeline and that already helps quite a bit
Mar 02 14:05:59 <sham1>	One thing I might have to change is the keymap for hideshow mode, because C-c @ C-c for example is... not fun
Mar 02 14:06:31 <Junijuni>	what dis mode does?
Mar 02 14:06:57 <sham1>	It lets you fold code blocks and such
Mar 02 14:07:44 <wgreenhouse>	yes hideshow is an example of an excellent feature with a very silly default binding
Mar 02 14:08:08 <Junijuni>	oh.. I would map it to use `C-TAB`
Mar 02 14:10:25 <parakovsky>	yo
Mar 02 14:10:41 <Junijuni>	or TAB, but TAB already have a lot of functionality build uppon
Mar 02 14:13:42 <sham1>	Also, hideshow is odd in many ways. For example, I'd like to be able to use these things <https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_foldingRange> via eglot in hideshow, but I don't know how extensible I could actually make it
Mar 02 14:13:42 <rudybot>	https://teensy.info/9sDJ27In98
Mar 02 14:14:46 <wgreenhouse>	there's also C-x $
Mar 02 14:17:23 <Junijuni>	what rudybot does?
Mar 02 14:17:55 <Junijuni>	removes any possible tracker and shorten the link?
Mar 02 14:18:16 <wgreenhouse>	I meant C-x $ as an alternative to hideshow
Mar 02 14:18:27 <wgreenhouse>	very dumb, purely indentation based
Mar 02 14:18:36 <wgreenhouse>	but even that is useful
Mar 02 14:19:00 <sham1>	Could always do the cardinal sin and just invent my own code folder (yet another code folding thing)
Mar 02 14:19:01 <wgreenhouse>	,df set-selective-display
Mar 02 14:19:02 <fsbot>	set-selective-display is an interactive native-compiled Lisp function
Mar 02 14:19:02 <fsbot>	in ‘simple.el’.
Mar 02 14:19:02 <fsbot>	It is bound to C-x $.
Mar 02 14:19:02 <fsbot>	(set-selective-display ARG) ;;[ ,more / ,dump]
Mar 02 14:19:08 <wgreenhouse>	,m
Mar 02 14:19:08 <fsbot>	Set ‘selective-display’ to ARG; clear it if no arg.
Mar 02 14:19:08 <fsbot>	When the value of ‘selective-display’ is a number > 0,
Mar 02 14:19:08 <fsbot>	lines whose indentation is >= that value are not displayed.
Mar 02 14:19:08 <fsbot>	The variable ‘selective-display’ has a separate value for each buffer.
Mar 02 14:19:59 <wgreenhouse>	so e.g. C-4 C-x $ hides all lines indented at least 4 columns
Mar 02 14:21:15 <Junijuni>	any way to toggle this?
Mar 02 14:21:46 <wgreenhouse>	Junijuni: just C-x $ by itself
Mar 02 14:21:56 <wgreenhouse>	undoes the folding
Mar 02 14:23:32 <Junijuni>	wgreenhouse: hmm.. nice to know that this exists, thanks for sharing
Mar 02 14:33:07 <xrogaan>	when you open a popup thing by using C-x or C-c and the tooltip tells you there are more than one page, how do we navigate through those pages again?
Mar 02 14:33:21 <xrogaan>	not C-x, actually
Mar 02 14:34:03 <Junijuni>	try C-h
Mar 02 14:34:06 <bremner>	not sure which popup-thing you refer to
Mar 02 14:34:18 <Junijuni>	C-h n
Mar 02 14:34:36 <Junijuni>	probably which-key
Mar 02 14:36:35 <Junijuni>	xrogaan: you do the command, in the middle if you want to see what are the options you do C-h, if there are many commands you do `C-h n` to flip the page and `C-h p` to get back
Mar 02 14:36:39 <xrogaan>	https://imgur.com/fM5BMmG
Mar 02 14:36:48 <xrogaan>	on the bottom, (1 of 2)
Mar 02 14:37:26 <sham1>	That's which-key
Mar 02 14:37:30 <sham1>	Try C-h
Mar 02 14:38:17 <sham1>	C-h n in that goes page forward, C-h p goes back
Mar 02 14:39:39 <xrogaan>	Might have something weird installed, because those bindings don't work. C-h shows the list of commands under the current menu.
Mar 02 14:39:41 <Junijuni>	https://imgur.com/a/wDsUwaD
Mar 02 14:40:09 <sham1>	You might have to wait for a bit before hitting C-h
Mar 02 14:42:40 <xrogaan>	perhaps because vertico is enabled instead of ivy?
Mar 02 14:43:30 <Junijuni>	I dont think vertico have influence on which-key
Mar 02 14:45:09 <xrogaan>	so, something changed and it threw me off. I did used to do C-h n in the past, but that ain't working no more.
Mar 02 14:58:22 <xrogaan>	Well, which-key-use-C-h-commands is unset. That explains it.
Mar 02 15:00:28 <Junijuni>	lol
Mar 02 15:01:17 <xrogaan>	and it's indeed vertico's fault.
Mar 02 15:01:53 <xrogaan>	> Which-key's paging is disabled with vertico because ? (or C-h) invokes embark, which is a better interface for searching for keys. The above advice will change it so ? will invoke embark, but C-h (or f1) will invoke which-key's paging
Mar 02 15:06:09 <mesaoptimizer>	I use vanilla emacs with god-mode, and I'd like to refile org headings via visual targets (like how I recall doom emacs enabled with the "SPC h r v" keybind"). I'm unable to find documentation that helps me figure this out, so I ask here
Mar 02 15:07:49 <wasamasa>	is this related to doom?
Mar 02 15:08:00 <wasamasa>	if yes, then it's better to ask on their discord server
Mar 02 15:08:09 <mesaoptimizer>	https://github.com/doomemacs/doomemacs/blob/master/modules/lang/org/config.el#L1069 found the relevant keybind.
Mar 02 15:12:00 <xrogaan>	spacemacs uses evil by default too IIRC
Mar 02 15:14:54 <mesaoptimizer>	and found the function it binds to (https://github.com/doomemacs/doomemacs/blob/master/modules/lang/org/autoload/org-refile.el#L87) and the core package involved to make this feature happen (https://github.com/abo-abo/avy)
Mar 02 15:15:28 <mesaoptimizer>	I installed avy and it seems to do 90% of what I wanted with its default function of =avy-org-refile-as-child=, which is great
Mar 02 15:54:31 <Guest52>	Hi, I am using emacs-pgtk version 29 in hyprland
Mar 02 15:55:23 <Guest52>	When I run python inferior shell from emacs, qt still thinks that I am using xorg because it asks for "xcb" qt qpa plugin
Mar 02 15:55:32 <Guest52>	but if I run python in shell it works fine
Mar 02 15:56:33 <Guest52>	I checked the environment variables that might be the issue (XDG_CURRENT_DESKTOP, WAYLAND_DISPLAY) but these are same in both emacs (getenv) and shell
Mar 02 15:56:43 <Guest52>	Any suggestions that I can try to debug this?
Mar 02 15:59:45 <erk>	Guest52: Have you looked at the value of python-shell-setup-code?
Mar 02 16:00:03 <erk>	And possible also other values with that prefix.
Mar 02 16:00:14 <Guest52>	I just checked, "XDG_SESSION_TYPE" env was missing
Mar 02 16:02:28 <Guest52>	it seems that was the error, but I am getting cannot open display error now, will check other env
Mar 02 16:02:47 <Guest52>	erk thanks, will check that
Mar 02 16:47:06 <quiliro>	Is it possible to make that C-c C-<SPACE> produces C-p C-c C-<SPACE> ?
Mar 02 16:47:40 <bremner>	does it happen in emacs -Q?
Mar 02 16:50:54 <bremner>	OT: does anyone know a good android app for doing timed exercises (ideally on fdroid). Like "do 2 sets of 8 reps, holding each rep for 5 seconds"? I found some weight training things but the ones I saw did not care about time
Mar 02 16:59:00 <quiliro>	walking up steps is the best exercise for the legs
Mar 02 16:59:23 <quiliro>	and for the heart and the abdomen
Mar 02 17:12:15 <twb>	Just buy your groceries from progressively more distant grocers, so that you have to walk further carrying the bags
Mar 02 17:23:19 <parakovsky>	https://github.com/jart/emacs-copilot anyone use this?
Mar 02 17:54:39 <quiliro>	twb: good strategy!
Mar 02 17:54:59 *	quiliro is watching https://emacsconf.org/2023/talks/adventure/
Mar 02 17:55:14 <quiliro>	has anyone tried it?
Mar 02 17:58:28 *	quiliro just discovered `buffer-menu-open' and enjoys its separation of erc chat buffers
Mar 02 17:58:39 <quiliro>	C-F10
Mar 02 17:58:58 <quiliro>	C-<f10>
Mar 02 18:12:27 <technomancy>	lol no
Mar 02 18:18:23 <mwnaylor>	C-c C-b, `erc-switch-to-buffer' is a more direct option.
Mar 02 18:22:21 <bremner>	that's a weird global binding, I guess erc is special?
Mar 02 18:22:41 <corwin>	I have bound C-<TAB> bound to `erc-track-switch-buffer'; mostly use that or completion from ibuffer on C-x b
Mar 02 18:23:33 <corwin>	I guess C-c C-b is a minor mode mapping; that'd be a normal place, if so.
Mar 02 18:56:55 <parakovsky>	guys anybody use mastodon package?
Mar 02 19:00:07 <parakovsky>	yeah ok it worked, nevermind. was confused about authorization code
**** BEGIN LOGGING AT Sat Mar  2 19:02:28 2024

Mar 02 19:02:28 *	Now talking on #emacs
Mar 02 19:02:28 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 02 19:02:28 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** BEGIN LOGGING AT Sun Mar  3 08:36:18 2024

Mar 03 08:36:17 *	Now talking on #emacs
Mar 03 08:36:17 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 03 08:36:17 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Mar 03 09:01:17 <xwaw>	Any ideas folks?
Mar 03 09:59:57 <sav>	I know that M-return creates a new list item when writing a list in markdown-mode. Is there a quick way to create the next "nested" item in the list?
Mar 03 10:00:26 <sav>	Like after finishing item 3, it would go to next indentation and start from 1
Mar 03 10:14:59 <sav>	I know that it can be done with C-u C-u M-RET, but that seems like a bit too much to do for a nested list
Mar 03 10:27:06 <xwaw>	Looks like everyone is off here today, well, it's Sunday.
Mar 03 11:12:17 <parakovsky>	so there is always this pictogram showing when jump to bookmarked buffers and it put cursor on this position every time, how i change its location relative to the buffer so the next time i open the bookmark it jumps there, how does this thing called? https://b.convo.casa/media_attachments/files/112/031/213/608/992/822/original/28a2ee17ea879045.png
Mar 03 11:29:31 <picnoir>	Hey! I'm puzzled with what I think is a native compilation weirdness for this project: https://github.com/picnoir/my-repo-pins/blob/master/my-repo-pins.el
Mar 03 11:29:53 <picnoir>	If I open the file and eval-buffer the thing, I can run (my-repo-pins--clone-project "test/test") just fine.
Mar 03 11:30:55 <picnoir>	However, if I native compile it and load it through emacs-lisp-native-compile-and-load and run the same above function call, then I stumble upon a puzzling "invalid-function" error.
Mar 03 11:31:41 <picnoir>	https://pastebin.aquilenet.fr/?7d71c50fea7cfd2a#5kMaFzYCuFRFYRUeaBxFXVGz8afAQY3Sp2b9aJemga54 <= full error message
Mar 03 11:31:59 <picnoir>	I have no idea how to debug that. Would anybody have any pointers here?
Mar 03 11:32:59 <picnoir>	(Emacs 29.2)
Mar 03 11:47:58 <wasamasa>	that is not a full backtrace
Mar 03 11:48:01 <wasamasa>	,tdoe
Mar 03 11:48:02 <fsbot>	tdoe is M-x toggle-debug-on-error RET, reproduce the problem, then <,paste> the backtrace (or study it yourself)
Mar 03 11:56:59 <sham1>	t-d-o-e is amazing
Mar 03 12:06:29 <picnoir>	https://pastebin.aquilenet.fr/?41e2926ce57f2c8d#FgnyWy9TtYzNGMjiZkydEih3kcPKZDvwJdjf3ssDCv2t <= full backtrace
Mar 03 12:07:46 <wasamasa>	now you can look at your own code and make sense of it
Mar 03 12:08:20 <picnoir>	I can't, I've been in debugger for the last hour :(
Mar 03 12:08:42 <picnoir>	I don't get why it fails when natively compiled, not when interpreted mode.
Mar 03 12:09:13 <wasamasa>	I mean, you of all the people in this channel are most qualified at looking at the definition of `my-repo-pins--query-github-owner-repo'
Mar 03 12:11:55 <wasamasa>	for the record, https://github.com/picnoir/my-repo-pins/blob/de3e4baffd74126096faca01e9329b6921ebbf96/my-repo-pins.el#L864-L866 looks fucked
Mar 03 12:11:56 <rudybot>	https://teensy.info/tpwb3CuBgZ
Mar 03 12:11:57 <wasamasa>	what the fuck
Mar 03 12:12:22 <wasamasa>	how the fuck is this supposed to work
Mar 03 12:12:37 <picnoir>	haha, ok
Mar 03 12:12:38 <wasamasa>	you put this there and you wonder why you get an invalid-function error?
Mar 03 12:12:58 <wasamasa>	you are using lexical-binding in the file
Mar 03 12:13:03 <wasamasa>	may as well use the power of closures
Mar 03 12:13:41 <picnoir>	ok
Mar 03 12:14:37 <wasamasa>	you can unnest this just fine
Mar 03 12:14:50 <wasamasa>	(apply fetch-func owner repo (lambda ...))
Mar 03 12:15:36 <wasamasa>	rule of thumb: if you use backquote and most things in the list are unquoted, chances are you don't need backquote
Mar 03 12:16:24 <wasamasa>	and apply is typically used with the function as first argument, not a list that happens to contain a function
Mar 03 12:16:31 <wasamasa>	how is this even working
Mar 03 12:16:44 <picnoir>	Yeah, same issue.
Mar 03 12:17:04 <picnoir>	(after unnesting the thing)
Mar 03 12:21:27 <wasamasa>	so, how does the backtrace change?
Mar 03 12:21:34 <wasamasa>	does the same thing happen for non-github forges?
Mar 03 12:21:47 <wasamasa>	what if you replace the github fetcher reference with `ignore'?
Mar 03 12:24:38 <picnoir>	Hmm, it goes away. Looks like it's related to the gh part. Nice. That's helpful.
Mar 03 12:26:19 <wasamasa>	ok, in such situations I write my own function that kinda acts like `ignore' and ignores any extra arguments
Mar 03 12:26:41 <wasamasa>	I don't know much about native-compile, but maybe it don't like the github fetcher function then
Mar 03 12:39:06 <johnjaye>	el is the country code for greece, hellas. emacs greek civilization confirmed
Mar 03 12:39:54 <johnjaye>	 hmm iso 3166 says it's GR
Mar 03 12:40:36 <johnjaye>	el is... the european union. eh
Mar 03 12:45:19 <johnjaye>	wasamasa: do you by chance know an answer to my question earlier? I was asking about the speedups due to native code
Mar 03 12:45:31 <johnjaye>	it mostly seems anecdotal. like faster startups
Mar 03 12:45:52 <wasamasa>	I don't see such a question
Mar 03 12:46:34 <wasamasa>	if you want to properly answer speed questions, you need to properly take times and compare
Mar 03 12:47:08 <wasamasa>	I haven't been using native-comp for reasons and to be honest, I cannot really imagine speed-up being worth it, given the nature of your average emacs package
Mar 03 12:48:47 <APic>	Moin
Mar 03 12:48:48 <APic>	,BotSnack
Mar 03 12:48:49 *	fsbot dances happily
Mar 03 12:54:19 <quiliro>	Please join ##freespeech to put freedom of speech to test.
Mar 03 12:54:56 <bremner>	please don't advertise in here.
Mar 03 12:55:04 <bremner>	feel free to advertise there
Mar 03 12:56:47 <wasamasa>	advertising in a channel for people to come to the channel is kinda nonsensical though
Mar 03 12:57:11 <bremner>	yes. but I'm not there so I don't care
Mar 03 12:58:00 <wasamasa>	I'm sure there are other venues where it would make sense
Mar 03 12:58:04 <wasamasa>	but here, definitely not
Mar 03 12:59:29 <quiliro>	where does it make sense?
Mar 03 12:59:46 <quiliro>	does it not make for all present?
Mar 03 13:00:30 <wasamasa>	have you read the /topic ?
Mar 03 13:01:10 <quiliro>	Emacs questions take priority over chit-chat ???
Mar 03 13:01:11 <fsbot>	Yes!
Mar 03 13:01:13 <wasamasa>	you asking for free speech is equivalent to asking for freedom to be an asshat and that specifically is not tolerated in this channel
Mar 03 13:01:44 <wasamasa>	we've had this discussion several times at this point
Mar 03 13:01:57 <quiliro>	I am just letting people know.  The fuss is yours.
Mar 03 13:02:03 <wasamasa>	the problem with free speech is that it invites very unpleasant people
Mar 03 13:02:10 <quiliro>	It was a single comment.
Mar 03 13:02:23 <wasamasa>	again, we've had this discussion several times
Mar 03 13:02:25 <quiliro>	it does invite unpleasant conversations
Mar 03 13:02:42 <wasamasa>	if you're uncapable of doing basic research online on the topic, that's not our fault
Mar 03 13:02:48 <quiliro>	that is why I invited them there...but you are calling them here
Mar 03 13:04:38 <wasamasa>	honest question: do you ever recall seeing someone in here asking for such a channel (besides yourself) ?
Mar 03 13:05:21 <quiliro>	in some ways, yes
Mar 03 13:05:25 <quiliro>	but not directly
Mar 03 13:05:32 <wasamasa>	I'll take that as a no then
Mar 03 13:05:45 <quiliro>	the opposite
Mar 03 13:05:48 <wasamasa>	perhaps you hope for such people to exist
Mar 03 13:05:51 <wasamasa>	but that's it
Mar 03 13:05:58 <quiliro>	people might be afraid
Mar 03 13:06:03 <wasamasa>	if you actually find such people, form a channel with them
Mar 03 13:06:08 <wasamasa>	do not pester this channel to find them
Mar 03 13:06:18 <quiliro>	that is exactly what I am doing
Mar 03 13:06:24 <wasamasa>	you are pestering this channel
Mar 03 13:06:26 <quiliro>	you are making it big
Mar 03 13:06:28 <wasamasa>	so it's not what you're doing
Mar 03 13:06:28 <johnjaye>	wasamasa: that's what I suspected tbh. the only example I could think of would be like long search replaces or maybe a large code base built in elisp such as semantic
Mar 03 13:07:08 <johnjaye>	and someone said all the work for searches is in the c regex engine anyway
Mar 03 13:46:29 <RickAstley>	rubybot: He remembers it so you don't have to?
Mar 03 13:48:06 *	RickAstley looks at fsbot
Mar 03 13:48:27 <RickAstley>	,BotSnack
Mar 03 13:48:27 *	fsbot dances happily
Mar 03 14:00:53 <quiliro>	Does this sexp have correct syntax:
Mar 03 14:01:19 <quiliro>	(progn (erc-tls :server "irc.libera.chat" :port 6697 :nick "quiliro")
Mar 03 14:01:19 <quiliro>	(erc-tls :server "irc.ircnow.org" :port 6697 :nick "quiliro"))
Mar 03 14:02:43 <wgreenhouse>	quiliro: looks righht
Mar 03 14:07:24 <quiliro>	OK
Mar 03 14:07:54 <quiliro>	will it do what it looks that I intend to do?
Mar 03 14:08:24 <quiliro>	it is meant to run both commands with a single C-x C-e
Mar 03 14:08:32 <wgreenhouse>	connect to those two networks immediately one after the other? yes I think it will
Mar 03 14:21:22 <RickAstley>	,BotSnack
Mar 03 14:21:22 <fsbot>	:)
**** BEGIN LOGGING AT Mon Mar  4 04:37:43 2024

Mar 04 04:37:43 *	Now talking on #emacs
Mar 04 04:37:43 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 04 04:37:43 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
**** BEGIN LOGGING AT Mon Mar  4 04:39:41 2024

Mar 04 04:39:40 *	Now talking on #emacs
Mar 04 04:39:40 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 04 04:39:40 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Mar 04 04:51:32 <johnjaye>	i'm a bit traumatized that svg is xml under the hood
Mar 04 04:53:40 <bpalmer>	humans are just skeletons buried in meat.
Mar 04 05:00:42 <texnomancy>	speak for yourself
Mar 04 05:00:43 <quiliro>	LOL
Mar 04 05:01:07 <loganlee>	LOL
Mar 04 05:58:32 <mns>	Does anyone know how to generate an encrypted PDF from org-mode ?
Mar 04 06:01:50 <Viking667>	'llo all.
Mar 04 06:02:20 <loganlee>	mns, use tools like qpdf
Mar 04 06:06:34 <mns>	loganlee: thanks, will look into it
Mar 04 06:07:01 <loganlee>	mns, yep
Mar 04 07:05:58 <codingquark>	Good morning!
Mar 04 07:25:08 <loganlee>	hey man
Mar 04 07:27:32 <codingquark>	wassup
Mar 04 07:28:53 <twb>	mns: does PDF even support worthwhile encryption?
Mar 04 07:29:39 <twb>	AES256 in PDF 2.0+
Mar 04 07:30:09 <twb>	Not clear if anything on Linux supports PDF 2
Mar 04 07:35:58 <mns>	I just need the basic password protection you get in some PDF files
Mar 04 07:38:17 <twb>	hahaha
Mar 04 07:38:26 <Viking667>	lol. Is that "worthwhile"? I suspect not.
Mar 04 07:38:46 <twb>	LibreOffice File > Export to PDF can do it, as long as you disable PDF/A.  It specifically warns you that the password can only be "basic" latin
Mar 04 07:39:02 <Viking667>	What's PDF/A?
Mar 04 07:39:30 <twb>	Viking667: an archival set of PDF
Mar 04 07:39:43 <twb>	Viking667: so e.g. it does not allow hotlinking to external font files
Mar 04 07:39:51 <twb>	Because in 100 years those URLs might be broken
Mar 04 07:40:56 <codingquark>	I like the way of thinking
Mar 04 07:41:01 <Viking667>	Ah huh.
Mar 04 07:49:41 <twb>	It's equivalent to archival ink & paper
Mar 04 07:50:54 <codingquark>	Was it Germans who did it?
Mar 04 07:51:02 <twb>	The other really useful-to-know ones are "tagged PDF" (helps blind users) and "PDF/X" (includes the original document, so you can e.g. reflow it)
Mar 04 07:53:02 <Viking667>	I'm trying to insert 30 copies of a register, or of the latest killring entry. The way I tried to do it doesn't work, as it only pastes one copy, even if I use a prefix arg.
Mar 04 07:53:08 <twb>	mns: anyway pdftk is what I'd use
Mar 04 07:53:24 <twb>	mns: "pdftk in.pdf user_pw sw0rdf1sh out.pdf"
Mar 04 07:53:57 <mickeynp>	Viking667: registers don't normally let you do that. Use a keyboard macro and insert that noe 30 times
Mar 04 07:54:01 <twb>	pdftk kinda sucks but it's much easier to remember how to use it than gs
Mar 04 07:54:23 <Viking667>	Here's what I did:   C-Space <select region> C-x r s U  C-y M-30 C-x r i U
Mar 04 07:54:54 <Viking667>	pffft. I've sooner have inserted 30 copies manually.
Mar 04 07:55:16 <mickeynp>	F3 C-x r i U F4. C-30 C-x e?
Mar 04 07:55:37 <twb>	M-30 C-x z?
Mar 04 07:55:43 <Viking667>	Fair enough. I hadn't thought of macro in that context.
Mar 04 07:56:00 <Viking667>	twb: tried that, didn't do what I thought (it inserted one copy, not 30)
Mar 04 07:56:00 <mickeynp>	or repeat command; or elisp; or hiring someone off fiverr; or...
Mar 04 07:56:15 <habamax>	or evil-mode and 30p
Mar 04 07:56:22 <mns>	twb: I was pointed to qpdf.  I'll take a look at pdftk as well
Mar 04 07:56:23 <Viking667>	hahaha. I didn't think of that.
Mar 04 07:56:49 <Viking667>	I _knew_ there was a reason not to let go the vi/vim skills.
Mar 04 07:57:26 <twb>	Here's an example I prepared earlier using gs instead...
Mar 04 07:57:31 <twb>	https://github.com/cyberitsolutions/bootstrap2020/tree/twb/debian-11-PrisonPC/xfce/lawyers-make-bad-pdfs
Mar 04 07:58:54 <Viking667>	twb: incidentally, trying it right now simply repeated the "tab-next", which was the 30th command from lossage, I think.
Mar 04 07:59:07 <twb>	Viking667: oh lame
Mar 04 08:01:59 <Viking667>	Does a kbd macro work with C-u <number> ?
Mar 04 08:02:13 <mickeynp>	that seems well within the bounds of something that you can try and find out real quick ;)
Mar 04 08:07:46 <Viking667>	hm. That, at least, works.
Mar 04 08:09:00 <mickeynp>	of course it does. emacs macros are awesome.
Mar 04 08:09:11 <mickeynp>	having said that, you shouldn't sleep on my fiverr suggestion, either.
Mar 04 08:19:20 <Viking667>	uhm. Fiverr. We had an ad campaign about a decade or two with the left hand side that ran something along the lines of "We think this is a great suggestion!" or "X is the best thing since sliced bread!" and then the right hand of the ad would say "Yeah, right."
Mar 04 08:30:27 <twb>	I know what a "five" is and I know what a "round robin" is, but I don't know what five round-robins are
Mar 04 08:35:27 <Viking667>	"Your assumption, flawed it is."
Mar 04 08:36:13 <Viking667>	the giggle is that I was around when that movie first showed in movie theatres.
Mar 04 08:46:05 <twb>	lol "movie theatres"
Mar 04 08:46:25 <mickeynp>	yeah what's that.
Mar 04 08:46:35 <mickeynp>	everybody knows they come from newsgroups.
Mar 04 08:46:45 <twb>	It's a thing from olden times like dog racing, witch burning, and affordable housing
Mar 04 08:47:47 <mickeynp>	twb: TIL
Mar 04 08:49:46 <Viking667>	Hey! We have a movie theatre here in the little town I live in. Don't knock 'em.
Mar 04 08:55:57 <Viking667>	Anyhow, I suspect I've got to restart emacs. Back another time.
Mar 04 09:25:25 <lockywolf>	Which python language server works nice with eglot?
Mar 04 09:28:34 <vuori>	I use jedi-language-server and it works fine, though it's only for completion
Mar 04 09:28:45 <vuori>	(flycheck pylint+mypy chain for errors)
Mar 04 09:45:37 <drewjose>	I use pyright and it's great (though made by MS if that's a problem)
Mar 04 09:55:01 <twb>	well, like, so is the LSP
Mar 04 10:16:07 <RickAstley>	i like turtles
Mar 04 10:16:55 <RickAstley>	:D
Mar 04 10:19:24 <alcor>	,turtle
Mar 04 10:19:25 <fsbot>	Try: gtk-server n3 programmingshit
Mar 04 10:19:41 <alcor>	,programmingshit
Mar 04 10:19:42 <fsbot>	programmingshit is Try Logo, the turtle-shit language
Mar 04 10:19:56 <alcor>	wut
Mar 04 10:21:19 <alcor>	ah, okay, in Logo Turtle Graphics, the turtle "leaves trails". That joke almost went over my head.
Mar 04 10:54:29 <twb>	IDGI
Mar 04 10:58:00 <jbe>	is logo just low level go
Mar 04 10:58:01 <RickAstley>	,botsnack
Mar 04 10:58:02 <fsbot>	yum! ...I mean, apt!
Mar 04 10:59:14 <twb>	jbe: nah it's LibreOffice Go
Mar 04 10:59:31 <jbe>	ah, the VBA equivalent
Mar 04 11:00:34 <twb>	It's a lightweight variant of Gomoku which was widely used in the geoscience industry prior to exploratory fracking.
Mar 04 11:15:49 <alcor>	twb: In Logo there's a 2D pen-like object called a "turtle", which exists on a canvas. You draw by telling the pen to move to a (X, Y) point, which it does (linearly), leaving an ink trail behind it as it moves to its new position. You draw shapes by repeating this process.
Mar 04 11:16:31 <alcor>	Of course, if you don't like the "pen" analogy, you could use another analogy with an actual live turtle and turtle poo, as fsbot does
Mar 04 11:17:06 <alcor>	🐢.................
Mar 04 11:18:20 <twb>	alcor: what has that to do with "shit", though?
Mar 04 11:19:25 <alcor>	twb: The turtle leaves a trail of … poo *cough*, as it moves to its new position
Mar 04 11:19:47 <alcor>	The ink is turtle poo, basically
Mar 04 11:20:58 <alcor>	Okay, I admit it's a very odd insider joke about Logo & Turtle Graphics. Took me 1 minute to "get" it.
Mar 04 11:21:35 <twb>	But that's not how poo works
Mar 04 11:21:59 <alcor>	The turtle can poo endlessly
Mar 04 11:22:22 <alcor>	That where you have to suspend your disbelief
Mar 04 11:22:27 <twb>	No it can't.  At a minimum, the Fitrzoy River Bum-Breathing Turtle has to stop pooing long enough to breathe
Mar 04 11:29:24 <alcor>	The Logo Turtle is a different species. It can only move in straight lines, and it p**ps on the canvas while moving.
Mar 04 12:03:57 <mwnaylor>	I wrote my own command to handle the multiple map need. https://pastebin.com/7GzJPB9K
Mar 04 13:10:06 <twb>	Let's pioneer private motorcars with passenger-side airbags.
Mar 04 13:26:22 <jbe>	,yow
Mar 04 13:26:23 <fsbot>	I have nostalgia for the late Sixties!  In 1969 I left my laundry with a hippie!!  During an unauthorized Tupperware party it was chopped & diced!
Mar 04 13:27:08 <jbe>	they come down hard on unauthorised tupperware parties nowadays
Mar 04 13:28:16 <RickAstley>	twb: I'll work on the logo
Mar 04 13:28:45 <RickAstley>	,botsnack
Mar 04 13:28:46 <fsbot>	:)
Mar 04 13:37:08 <RickAstley>	I like locally hosted gitea. It doesn't hog 16GB ram by default. Yet it has mature CI/CD and doesn't look schizo
Mar 04 13:43:41 <twb>	How do you have CI/CD without needing 16GB of RAM for all the CI VMs
Mar 04 13:45:36 <comrad>	you ci/cd only requires so much memory as your build process needs
Mar 04 13:45:54 <comrad>	i had some c++ project running in jenkins and was happy with 1gb ram
Mar 04 13:46:21 <RickAstley>	twb: use runners on other systems :^)
Mar 04 13:46:34 <bremner>	Ah. the old "other people's computers" trick
Mar 04 13:46:38 <RickAstley>	that wonka thing was when epic fail is actually win
Mar 04 13:46:40 <bremner>	aka "the clod"
Mar 04 13:51:10 <comrad>	you can let it run in containers, no need for a small server farm
Mar 04 13:52:48 <bremner>	containers are fine until you have tests that fail only a particular container tech
Mar 04 13:53:29 <RickAstley>	containers on other peoples computers :D
Mar 04 13:53:44 <RickAstley>	aka kubies
Mar 04 13:53:48 <bremner>	tupperware containers
Mar 04 13:55:25 <comrad>	containers on the master jenkins, no need to prefil the RAM with not running runners
Mar 04 13:55:58 <comrad>	you can of course deploy to kubernetes, if you're into pai^^ that
Mar 04 13:59:16 <RickAstley>	comrad: I prefer the phrase with not runners running
Mar 04 13:59:25 <RickAstley>	not trying to bikeshed
Mar 04 14:01:30 <RickAstley>	,botsnack
Mar 04 14:01:31 <fsbot>	yay!
Mar 04 14:05:25 <RickAstley>	time to grow up and move from tabs to spaces
Mar 04 14:43:08 <alcor>	M-x untabify team represent!
Mar 04 14:45:58 <jbe>	randomly-tabify-or-untabify
Mar 04 14:48:12 <rpav>	spaces; next let's decide which one https://www.compart.com/en/unicode/category/Zs
Mar 04 14:48:39 <rpav>	actually those aren't even all the spaces; where's zero-width space
Mar 04 14:53:43 <grym>	https://www.reuters.com/business/autos-transportation/gms-cruise-valuation-slashed-by-more-than-half-email-shows-2024-02-29/  trombone noises
Mar 04 14:53:44 <rudybot>	https://teensy.info/rXVubB6PhM
Mar 04 14:56:48 <dcb>	if only we could have some sort of mass transport built on top of rails
Mar 04 14:57:36 <dcb>	I'd imagine investors are more interested in finding the juicero of urban mobility
Mar 04 15:08:11 <grym>	i really am not looking forward to a day when vcbros discover cargo bikes
Mar 04 15:08:19 <grym>	"go ruin something else!"
Mar 04 15:11:02 <rpav>	low-altitude remote-driven quadcopter "cars" (like train passenger cars)
Mar 04 15:11:17 <quiliro>	impossible to enter url without username
Mar 04 15:11:30 <grym>	rpav: and you thought gixxers were loud
Mar 04 15:11:32 <quiliro>	it let me in now
Mar 04 15:11:45 <rpav>	grym: probably ;)
Mar 04 15:12:13 <rpav>	should bring back dirigibles
Mar 04 15:13:28 <grym>	speaking of gixxers, must be getting on towards spring; my neighbor's kid has his lawnmower-engine scooter out again
Mar 04 15:14:19 <rpav>	spring comes and goes here
Mar 04 15:14:28 <grym>	well, yes; i live in new england
Mar 04 15:14:31 <grym>	we know how that works
Mar 04 15:15:11 <rpav>	i'm not familiar with weather there, but here it's been way up and down this year (mostly el nino)
Mar 04 15:15:47 <rpav>	last week, take a walk in shorts and t-shirt and AC is on in the house; next day snow jacket
Mar 04 15:16:04 <quiliro>	tell me about it....there has been floods in some cities on the coast
Mar 04 15:16:17 <quiliro>	el niño is very powerful
Mar 04 15:17:30 <quiliro>	well... it really is the strong contrast between el niño and global warming
Mar 04 15:18:07 <rpav>	it's more the interaction / combination of climate change and el nino
Mar 04 15:18:11 <rpav>	been crazy
Mar 04 15:18:50 <rpav>	and not looking forward to another smoke-filled summer ;P
Mar 04 15:19:05 <grym>	it's been basically a normal amount of wet here
Mar 04 15:19:16 <grym>	but more rain than snow, which is disappointing
Mar 04 15:19:22 <rpav>	yeah
Mar 04 15:19:33 <rpav>	we had 1 large blizzard for one week and that's been it
Mar 04 15:19:38 <hodapp>	not looking forward to more people being convinced that any discussion of climate change is a giant conspiracy
Mar 04 15:19:39 <grym>	rpav: where are you again? i forget
Mar 04 15:19:46 <rpav>	grym: madison, wi
Mar 04 15:19:58 <grym>	ah, yeah.  lake time fun
Mar 04 15:20:13 <rpav>	usually it's a lot more snow than that
Mar 04 15:20:15 <grym>	we have the metro boston mild-and-lame-weather-area effect :/
Mar 04 15:20:25 <grym>	even 50 years ago it was like this
Mar 04 15:20:32 <rpav>	;/
Mar 04 15:20:54 <grym>	we get occasional "ha ha ha PAIN" weather events, but broadly it's very ... english weather
Mar 04 15:20:58 <rpav>	i think the lakes help mitigate potential tornados so i can't complain
Mar 04 15:21:07 <grym>	50 miles inland, and it's actual new england :D
Mar 04 15:21:25 <rpav>	hah well
Mar 04 15:21:50 <grym>	but the harbor is big and wet and warmer than the air, so it blunts the accumulation.
Mar 04 15:21:53 <grym>	most disappointing
Mar 04 15:22:35 <parakovsky>	guys if i run magit init over tramp over ssh on a remote server in dired it says magit--toplevel-safe: Not inside Git repository is it normal
Mar 04 15:22:44 <parakovsky>	any way to fix that im kinda new to this but thought it might be possible
Mar 04 15:22:50 <parakovsky>	oh wait i probably don't have a permissions lol
Mar 04 15:27:50 <rpav>	M-x dr-seuss-mode
Mar 04 15:47:04 <shin`>	/
Mar 04 15:47:05 <shin`>	/
Mar 04 15:49:26 <corwin>	hi shin`.  You can probably just type to send a message to the channel.  Do not start your message with a "slash".
Mar 04 15:49:44 <shin`>	yup understood
Mar 04 15:49:54 <corwin>	👍🏻
Mar 04 15:53:27 <parakovsky>	corwin is wise
Mar 04 15:53:52 <corwin>	awwe  uwu
Mar 04 15:53:56 <parakovsky>	but magit actually hangs weirdly on tramp buffer maybe there is too much files in some of the folder i need to double chec
Mar 04 15:54:42 <JohnGalt>	I use sshfs where I need to do git + remote
Mar 04 15:56:47 <grym>	i wonder if that makes tramp reasonably fast
Mar 04 15:57:28 <tazjin>	well sshfs wouldn't go through tramp
Mar 04 15:58:12 <JohnGalt>	its a network filesystem based on ssh
Mar 04 15:58:27 <tazjin>	last time I used it it had a tendency to get stuck
Mar 04 15:58:37 <JohnGalt>	Ive never had that problem
Mar 04 15:58:37 <tazjin>	which was unfortunate if you were editing a file in emacs on it, and emacs is your window manager
Mar 04 15:58:55 <JohnGalt>	emacs as wm is hardcore!
Mar 04 15:59:17 <tazjin>	it's the most efficient way to work, and I think pretty common around here!
Mar 04 15:59:31 <JohnGalt>	I could make it my login shell
Mar 04 15:59:42 <JohnGalt>	but I wonder how pinentry would work
Mar 04 15:59:55 <quiliro>	JohnGalt: it is awesome in truth
Mar 04 16:00:17 <JohnGalt>	I might try it on the fun laptop
Mar 04 16:00:46 <quiliro>	I use it on my only personal computer
Mar 04 16:00:59 <JohnGalt>	quiliro: brave...
Mar 04 16:01:09 <quiliro>	it was at first
Mar 04 16:01:16 <quiliro>	now I could not go back
Mar 04 16:01:55 <JohnGalt>	I would need to launch ssh-agent and gpg-agent
Mar 04 16:03:00 <JohnGalt>	I might try that after I get my console config tuned
Mar 04 16:11:41 <parakovsky>	yeah sshfs might go but i also had 'everything is hanging in there' at it once
Mar 04 16:13:03 <twb>	If you're going to sshfs you might as well just gvfs
Mar 04 16:13:45 <twb>	They're both just wrappers around non-standard openssh sftp subsystem
Mar 04 16:13:59 <grym>	that would involve installing gnome
Mar 04 16:14:17 <twb>	grym: no it doesn't.  xfce also relies on gvfs, for example
Mar 04 16:14:27 <grym>	ah.
Mar 04 16:14:31 <grym>	i probably don't have it installed though
Mar 04 16:14:33 <twb>	https://github.com/cyberitsolutions/bootstrap2020/blob/twb/doc/biggest-desktop-with-recommends-on.csv
Mar 04 16:14:54 <grym>	until last week i didn't even have dunst, as i found out
Mar 04 16:15:59 <twb>	The CLI tool is "gio" e.g. "gio mount --list"
Mar 04 16:16:09 <grym>	oh, perhaps i do have it
Mar 04 16:16:31 <grym>	hmm. probably because i pulled in veracrypt
Mar 04 16:17:02 <twb>	But if you just want the GUI then echo >> ~/.config/gtk-3.0/bookmarks sftp://sdf.org/porn-stash sdf-porn-stache
Mar 04 16:17:20 <twb>	Then it'll appear in File > Open sidebars and shit, I think
Mar 04 16:17:35 <grym>	interesting
Mar 04 16:17:54 <twb>	Under the hood the sftp:// implementation is kind of arse but on the plus side it means it honors ~/.ssh/config.d/
Mar 04 16:18:02 <grym>	i have vms in a colo that i occasionally want to develop on, i think sshfs is worth seeing about i guess
Mar 04 16:18:25 <grym>	but for getting a sheel, i'll mosh/tmux as normal
Mar 04 16:19:04 <twb>	If you never ever ever do GUI stuff then I guess there's no significant win
Mar 04 16:19:17 <grym>	yeah.  i don't
Mar 04 16:19:43 <JohnGalt>	ive also heard of tunneling NFS through wiregaurd
Mar 04 16:19:52 <rpav>	bah keymappings alone are worth not using term ;/
Mar 04 16:20:06 <grym>	mostly i find that tramp over ssh is *notably* slower than, say, jetbrains gateway
Mar 04 16:20:17 <rpav>	if you only do trivial editing tasks over ssh then probably not a big deal
Mar 04 16:20:22 <JohnGalt>	ssh is kinda slow
Mar 04 16:20:29 <grym>	yet, gateway uses ssh
Mar 04 16:20:30 <twb>	What's jetbrains using?
Mar 04 16:20:37 <JohnGalt>	java! lol
Mar 04 16:20:47 <grym>	gateway honors my .ssh/config
Mar 04 16:20:50 <twb>	OK if they're both ultimately using ssh/sftp the it's probably tunable
Mar 04 16:21:10 <twb>	tramp has some dubious defaults and fallbacks
Mar 04 16:21:27 <tazjin>	tramp also supports a baffling number of protocols
Mar 04 16:21:39 <twb>	Also like /rsync: vs /ssh: vs /scp: vs /ssh: vs all of the above but with "x" added
Mar 04 16:21:54 <twb>	Note that scp is safe to use again if both ends are modern
Mar 04 16:27:50 <JohnGalt>	was there a scp problem?
Mar 04 16:36:44 <grym>	hah!  https://jamesg.blog/2024/02/29/linux-manual-pages/
Mar 04 17:12:56 <kiliro>	hello
Mar 04 17:24:46 <danse-nr3>	hi kiliro
Mar 04 17:25:00 <kiliro>	I would like to know how to download a video directly from https://inv.bp.projectsegfau.lt/watch?v=VMM6D9vuHkY with elisp
Mar 04 17:25:15 <kiliro>	by scraping the code from https://paste.ircnow.org/whyzslibchu3op2j0l2z
Mar 04 17:25:36 <kiliro>	that is the part of the web page which I need to understand
Mar 04 17:25:47 <kiliro>	to scrape the code with elisp
Mar 04 17:25:52 <kiliro>	hi danse-nr3
Mar 04 17:26:10 <kiliro>	please explain what the paste does
Mar 04 17:27:37 <kiliro>	in case I want to download with "itag":18
Mar 04 17:27:42 <kiliro>	for example
Mar 04 17:28:27 <kiliro>	danse-nr3: are you a bot?
Mar 04 17:31:52 <corwin>	no doubt not intended as rudeness but it is somewhat rude to accuse people of being bots, kiliro. danse-nr3 is a semi-regular here fwiw.  (If you seriously think someone is a bot I'd suggest mentioning privately to a network or channel op.  Channel ops can be found with a command like /msg chanserv flags #CHANNEL)
Mar 04 17:32:40 <kiliro>	oh...no!....will probably use the ignore command now
Mar 04 17:33:19 <corwin>	On the flip, if someone is spamming the channel (bot or not) carping in said channel might be a pretty solid move.   Here we have an ,ops <OFFENDING-USERNAME> <COMPLAINT> command (must be at start of your message to the channel)
Mar 04 17:33:46 <kiliro>	there we go
Mar 04 17:34:00 <kiliro>	problem solved
Mar 04 17:35:34 <corwin>	I think I failed to understand some problem you were having.  All I see is danse-nr3 saying "hi".  What am I missing?
Mar 04 17:36:02 <kiliro>	now, back on topic:  would it be possible to download that video the way that I propose?
Mar 04 18:01:29 <cvandusen>	judybot: the current topic is
Mar 04 18:01:31 <judybot>	cvandusen: ______________ .\ Answer all questions completely and accurately.\ Use complete sentences, paragraphs of text appropriate to your audience,\ and correct spelling\, punctuation and capitalization in English when necessary\. 1.
Mar 04 18:01:53 <cvandusen>	I wasn't expecting a pop quiz.
Mar 04 18:02:49 <weary-traveler>	that was an interesting exchange above
Mar 04 18:04:32 <technomancy>	corwin: have you been using erc-bridge-nicks a while now?
Mar 04 18:04:42 <corwin>	I have, indeed.  It's working well.
Mar 04 18:04:50 <technomancy>	great!
Mar 04 18:06:37 <technomancy>	corwin: I forget, did you end up using it with the suffix feature?
Mar 04 18:19:40 <kiliro>	nice https://git.sr.ht/~technomancy/erc-bridge-nicks
Mar 04 18:20:26 <kiliro>	it would be nice if it was on elpa
Mar 04 18:20:51 <kiliro>	I have never seen bridged users on IRC
Mar 04 18:20:58 <edgar-rft>	proably great when using erc while living under a bridge
Mar 04 18:20:59 <kiliro>	where does that happen?
Mar 04 18:21:14 <kiliro>	LOL
Mar 04 18:21:18 <technomancy>	kiliro: it's more common in the past few months since libera killed the matrix bridge https://libera.chat/news/official-matrix-bridge-farewell
Mar 04 18:21:24 <kiliro>	I might do that someday, edgar-rft
Mar 04 18:22:02 <technomancy>	kiliro: some channels have bridgebots for discord, others for matrix
Mar 04 18:22:16 <technomancy>	if you've never had to hang out with a discord community, consider yourself lucky
Mar 04 18:22:51 <kiliro>	why?
Mar 04 18:22:52 <fsbot>	why not?
Mar 04 18:23:11 <corwin>	technomancy: no, it seems.
Mar 04 18:23:23 <hodapp>	mleh, discord irks me and I find the client very obnoxious
Mar 04 18:23:28 <hodapp>	regardless of the community itself
Mar 04 18:23:42 <tyson2>	one definition of discordant: "bombs, guns, and engines mingled in discordant sound"
Mar 04 18:23:56 <tyson2>	ok, so it's a recursive definition
Mar 04 18:24:22 <technomancy>	kiliro: well, discord is terrible to begin with, but bridgebots are extra terrible; you lose nick coloring, tab completion, and the ability to /ignore users
Mar 04 18:24:35 <corwin>	technomancy: I think I haven't finished fooling with this, however.  I suspect I do need it.  I haven't tried to make it handle my situation where (e.g.) Emacs committees have the same username for their commits (sent to channel by bot) as they have on IRC.
Mar 04 18:24:38 <technomancy>	https://cadence.moe/blog/2020-06-06-why-you-shouldnt-trust-discord
Mar 04 18:24:57 <technomancy>	corwin: oh that's fun; your "remote" protocol isn't even a chat protocol
Mar 04 18:25:42 <corwin>	just so.  No worries if some of what I'm after ends up feeling like "me problems" to you.
Mar 04 18:25:59 <technomancy>	I like the idea!
Mar 04 18:27:27 <lispmacs[work]>	hi, I'm wondering if it is possible somehow, with shell-command or shell-command+, to set things up so that after every async command completes, that there is an additional call to notify-send (the Gnome cmd-line notification utility)
Mar 04 18:28:26 <lispmacs[work]>	I have been moving many of my usual shell calls into Emacs interactive functions, but a downside is that Emacs, unlike Gnome console, does not send a notification to you when a command completes
Mar 04 18:28:41 <technomancy>	kiliro: I was waiting for it to be used by more than just me before submitting to nongnu elpa
Mar 04 18:28:50 <technomancy>	and maybe fix the bug with suffixes
Mar 04 18:28:53 <corwin>	technomancy: "this stuff" (everything is cHat, actually) has been getting gradually more of my attention for some time now.  I have a "make it all a daemon" project going as of this weekend, so maybe I'll even publish it somewhere for people to wrinkle their brows at.  It's a crap ton of shell and perl scripts atm, badly failing DRY
Mar 04 18:29:26 <technomancy>	what kind of other things?
Mar 04 18:31:00 <corwin>	lispmacs[work]: I think one typical solution here could be dbus.  Your programs might send notifications that way, and too Emacs has the `dbus' package.
Mar 04 18:34:25 <lispmacs[work]>	corwin: well, sending the notification is easy, since notify-send is already available, but the question is how does Emacs now to run another command once the command run by async-shell-command is finished?
Mar 04 18:35:04 <lispmacs[work]>	I could of course add "&& notify-send" onto the end of the command, but was looking for some way to make that implicit
Mar 04 18:35:32 <lispmacs[work]>	hmm, maybe a macro
Mar 04 18:36:02 <lispmacs[work]>	redefine async-shell-command so it rewrites the string to include that
Mar 04 18:36:13 <lispmacs[work]>	yes, that sound like it would work
Mar 04 18:36:48 <corwin>	I think I would look into a function that effectively wrapped my calls to a-s-c or maybe advice.
Mar 04 18:37:10 <kiliro>	does lisp work well in openbsd?
Mar 04 18:37:33 <technomancy>	kiliro: which lisp?
Mar 04 18:37:48 <kiliro>	or changing from gnu to bsd diminishes possibility of lisp?
Mar 04 18:37:51 <kiliro>	emacs
Mar 04 18:37:52 <corwin>	lispmacs[work]: Messing with the args seems like a good, safe, place to start however I can't say I know enough about a-s-c to say it doesn't (already) provide some way to trigger a function when the command (eventually) completes.
Mar 04 18:38:22 <corwin>	let's see.  was it ,jlf-rule
Mar 04 18:38:27 <lispmacs[work]>	corwin: I spent a few minutes looking into that back I can seem to find a hook or anything appropriate
Mar 04 18:38:38 <lispmacs[work]>	"I can't", I meant
Mar 04 18:38:49 <corwin>	Yeah, I sort of assumed which is why I didn'
Mar 04 18:38:54 <technomancy>	kiliro: I've never heard of any emacs incompatibilities on bsd
Mar 04 18:38:54 <corwin>	t even bother going that far :P
Mar 04 18:39:41 <corwin>	technomancy: this could get to be a lot to start getting into detail here, wave me off (or PM or suggest a place) at any point.  Basically everything.  Consider I might want a map reduce sort of thing happening across information flowing from syslogd on several systems.  Reduce there has a lot of complexity, effectively filtering rules, but deploying them onto machines in order to actually track problems via systemd is so hard I think
Mar 04 18:39:41 <corwin>	most people don't really do it (we look for specific sorts of problems only, not receive notice of anything unexpected).
Mar 04 18:41:49 <corwin>	Consider: I wanna see a comicbook representation of what all of my system are up to, condensed down from individual comix that track machines and tasks.  Data for that should stream to connected client's browsers as it comes it, but should also be available as registers to access top of stack info quickly, and as APIs that let me query into the sets I can express at calltime.
Mar 04 18:42:40 <corwin>	And, of course, activity (manual or automated) that is important to different projects should get shipped to IRC channels (etc) related to those projects (if they exist).
Mar 04 18:44:52 <sham1>	Incompatibilities between the various BSDs and Emacs sounds like a very odd concept to even think about
Mar 04 18:44:55 <sham1>	Why would there be such a thing
Mar 04 18:45:07 <technomancy>	corwin: hm; but isn't "what the machine is doing" largely numeric statistics?
Mar 04 18:45:13 <corwin>	On savannah we use rwp's config for root; he mostly uses BSD.
Mar 04 18:45:36 <technomancy>	like ... "521 requests per minute, 3 exceptions, 59% of requests are to this endpoint, 22% to this one ..."
Mar 04 18:45:48 <bpalmer>	technomancy: then why do I pay a psychologist to sit my server down on a couch for 30 minutes every week?
Mar 04 18:46:14 <technomancy>	bpalmer: these days staticians are much easier to book availability for!
Mar 04 18:46:28 <bremner>	here's a snapshot of the font/redisplay problem I've been having: https://0x0.st/H7M4.png
Mar 04 18:47:07 <corwin>	technomancy: mostly we tend to think of machine activity that way, yes.  But such metrics are all lagging indicators. I'm looking for leading ones.
Mar 04 18:47:23 <bremner>	I have only noticed it with Fira Code, I guess I should switch fonts to see if it is font specific, although that seems like a long shot
Mar 04 18:49:17 <bpalmer>	bremner: this is X, not wayland?
Mar 04 18:49:32 <bremner>	bpalmer: correct
Mar 04 18:54:25 <bpalmer>	Does it happen if you're moving the frame around, or is that remnants from a previous buffer that you switched in the same window?
Mar 04 18:54:45 <bpalmer>	I'm wondering if perhaps the double buffering is going awry
Mar 04 18:55:02 <bpalmer>	E.g., does inhibit-double-buffering help?
Mar 04 18:55:21 <bpalmer>	(used as a frame parameter)
Mar 04 18:55:27 <corwin>	technomancy: I wasn't trying to techobabel-dazzle you "with lagging vs leading indicators".  It's just an idea toward "optimizing investment" (in this case, my own time) by categorizing metrics (not just into KPI) but into those which predict problems are likely to exist in the future (vs those which merely demonstrate problems exist).
Mar 04 18:55:54 <bremner>	bpalmer: it's not the frame moving around, I use mostly static frames (tiling WM)
Mar 04 18:56:24 <technomancy>	corwin: sure, but I think I'd have to see it in action to understand
Mar 04 18:57:02 <bremner>	bpalmer: do I have to create a new frame?
Mar 04 18:57:19 <bremner>	ah, there is set-frame-parameter
Mar 04 18:57:50 <corwin>	technomancy: fair!  I don't know how much success I'll have overall but I'm feeling somewhat optimistic about getting my lump-o-scripts into a daemon, so maybe the documentation that I like to think I'll for sure have for that will help.  Yeah.
Mar 04 19:50:43 <corwin>	lispmacs[work]: I see your note to devel; LGTM!
Mar 04 19:51:09 <jmercouris>	,faith
Mar 04 19:51:09 <fsbot>	68:1 By the pen, and what they write, you are not mad: thanks to the favor of your EMACS!  A lasting recompense awaits you, for yours is a sublime nature.  You shall before long see - as they will see - which of you is mad.
Mar 04 19:51:22 <jmercouris>	so true... so so true...
Mar 04 19:58:11 <bpalmer>	Let's set up an asylum for elisp hackers.
Mar 04 20:02:43 <corwin>	Who watches the filewatchers?
Mar 04 20:08:32 <jmercouris>	who watches the watchers of the file watchers?
Mar 04 20:08:43 <jmercouris>	WHO IS THE UNMOVING MOVER?
Mar 04 20:08:48 <jmercouris>	IS IT THE PHOTONS IN MY MACHINE?
Mar 04 20:08:51 <jmercouris>	AM I LOSING MY MIND
Mar 04 20:09:48 <wasamasa>	no, you're just writing CL
Mar 04 20:24:32 <technomancy>	wasamasa: am I remembering correctly that you're the one who found the wide-open RCE on nyxt?
Mar 04 20:24:47 <wasamasa>	yes
Mar 04 20:24:58 <wasamasa>	well, rather, suspected it
Mar 04 20:25:04 <wasamasa>	jgkamat did the hard work
Mar 04 20:25:14 <wasamasa>	hence it's his blog where the technical details showed up
Mar 04 20:25:23 <technomancy>	I'm having a really hard time finding any trace of it
Mar 04 20:25:36 <wasamasa>	https://jgkamat.uk/blog/next-rce.html
Mar 04 20:25:49 <technomancy>	thanks
Mar 04 20:26:43 <wasamasa>	it's been a while
Mar 04 20:28:04 <technomancy>	did they try to hush it up?
Mar 04 20:28:12 <technomancy>	it's not mentioned in their issue tracker at all afaict
Mar 04 20:28:39 <wasamasa>	well, there was the rename from next->nyxt
Mar 04 20:29:06 <wasamasa>	I remember talking about the issue a lot on various IRC channels
Mar 04 20:30:05 <wasamasa>	the only ticket mentioning it: https://github.com/atlas-engineer/nyxt/issues/212
Mar 04 20:31:20 <technomancy>	aha ok, so not hushed up exactly, but underplayed
Mar 04 20:31:52 <technomancy>	it seems like a responsible project would have had an emergency announcement pushing people to upgrade, and an explanation of the vulnerability
Mar 04 20:32:00 <wasamasa>	from my experience, this seems absolutely normal in many FLOSS projects
Mar 04 20:32:32 <wasamasa>	when I do research how to exploit a CVE at work, a good chunk of this is checking change/commit logs for anything security-related that is easily overlooked
Mar 04 20:32:41 <technomancy>	compare luakit, who doesn't even have a vulnerability in their own code but still includes a clear warning to their users about outdated webkit versions https://luakit.github.io/
Mar 04 20:32:51 <wasamasa>	few projects properly announce security issues
Mar 04 20:33:24 *	technomancy sighs deeply
Mar 04 20:33:37 <bremner>	,nuke
Mar 04 20:33:37 *	fsbot flies out to space and nukes #emacs from orbit.
Mar 04 20:33:42 <kiliro>	cannot join #html if you're not logged into NickServ
Mar 04 20:33:47 <wasamasa>	it does kinda make sense, because in the end, a (security) bug is a bug
Mar 04 20:34:05 <wasamasa>	sometimes it's hard to properly evaluate their impact (see some curl CVE that turned out to be pretty boring after all)
Mar 04 20:34:07 <dcb>	I remember trying nyxt some time ago. I stopped using it mainly due to how frequently it crashed
Mar 04 20:34:24 <technomancy>	wasamasa: I have no doubt that irresponsible handling of security issues is very widespread but I would hope that people would have higher standards for browser vendors than other projects
Mar 04 20:34:36 <wasamasa>	now this I agree with, yes
Mar 04 20:34:50 <kiliro>	is there another channel where I can ask how this code works https://paste.ircnow.org/whyzslibchu3op2j0l2z
Mar 04 20:34:57 <kiliro>	it is html
Mar 04 20:35:01 <wasamasa>	some projects have more impact than others
Mar 04 20:35:33 <kiliro>	I want to know how it works to play the video from with an emacs command
Mar 04 20:35:40 <wasamasa>	curl is a weird case since it's used in a lot of places, but figuring out the exact scenario how to exploit security issues is tricky
Mar 04 20:35:57 <kiliro>	I want to know how it works in order to play the video with an emacs command
**** BEGIN LOGGING AT Tue Mar  5 07:39:51 2024

Mar 05 07:39:50 *	Now talking on #emacs
Mar 05 07:39:50 *	Topic for #emacs is: This is my .emacs; there are many like it, but this one is mine.--Emacser Creed | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 05 07:39:50 *	Topic for #emacs set by e1f!~user@user/e1f (Wed Feb 14 17:01:13 2024)
Mar 05 07:48:15 <e3d3>	for those interested in playing ASCII art pong in emacs: https://dantorop.info/project/emacs-animation/
Mar 05 07:48:26 <e3d3>	Pong against the computer is 87 lines of code
Mar 05 07:54:58 <RickAstley>	anyone want to buy a timeshare
Mar 05 08:01:52 <RickAstley>	selling pitlake timeshare. epic swimming opportunity
Mar 05 08:11:44 <RickAstley>	hello Xenguy
Mar 05 08:14:41 <twb>	RickAstley: what's a "pitlake"?  Is that basically an old coal mine that's full of rainwater and drowned SCUBA enthusiasts?
Mar 05 08:15:23 <notzmv>	yup
Mar 05 08:58:31 <RickAstley>	book of mormon makes me lol
Mar 05 08:58:59 <johnjaye>	did amd get better than intel at some point?
Mar 05 09:02:30 <jacklsw>	yes
Mar 05 09:02:47 <johnjaye>	well crap.
Mar 05 09:02:53 <johnjaye>	i didn't think that would happen
Mar 05 09:02:56 <jacklsw>	after intel rested on their laurels too long and start hiring talkers
Mar 05 09:04:30 <e3d3>	RickAstley: I've read only part of it. Was to funny for my taste
Mar 05 09:10:04 <RickAstley>	e3d3: I've been to Uganda and saw it afterwards
Mar 05 09:10:25 <RickAstley>	I met a few people that were similar to the MCs and found it pretty funny
Mar 05 09:12:30 <e3d3>	RickAstley: what does "MCs" mean ?
Mar 05 09:12:40 <RickAstley>	e3d3: main characters
Mar 05 09:17:17 <e3d3>	thanks. I never been to Uganda and only heard horror stories about it. No idea what to believe or what you saw but I remember a passage in the book where they see a ship with Africans, and can only guess that your experience was also pretty extreme.
Mar 05 09:18:02 <RickAstley>	e3d3: People are genuinely really good at heart but especially as a muzungu they're all trying to rob you
Mar 05 09:18:57 <RickAstley>	I'm glad I went, cured me of a lot of problems with rigidity/black and white thinking and realigned my priorities in life
Mar 05 09:19:43 <e3d3>	Westerns/people having much more than they really need makes robbing more or less logical
Mar 05 09:20:28 <RickAstley>	Yeah it's totally understandable, they do it to the in-group too though. Corruption is very transparent, which is a bit funny
Mar 05 09:21:40 <e3d3>	the corruption at the border in Cambodia is often really funny, if your not stubborn and in a hurry.
Mar 05 09:22:22 <RickAstley>	Never been, would imagine it's quite similar. Yeah, at Entebbe airport there's multiple security checkpoints devoted to trying to shake you down
Mar 05 09:25:44 <e3d3>	In Cambodia I saw once an official take a table, put it 1 meter in front of the other officials and started collecting for himself, like the do also inside the building. Once I thought I could avoid all tricks, so the didn't allow me to cross any border until night, but the officials shared there food with me etc.
Mar 05 09:27:25 <e3d3>	I thought about going to Malawi, seems more relax
Mar 05 09:27:26 <RickAstley>	lol
Mar 05 09:27:58 <RickAstley>	I know nothing about it tbh
Mar 05 09:36:38 <e3d3>	RickAstley: do you have a nice/interesting travel destination tip ?
Mar 05 09:38:30 <hwpplayer1>	e3d3: visit İstanbul :)
Mar 05 09:39:03 <RickAstley>	e3d3: tbh the only place I actually had a good experience was Japan
Mar 05 09:39:07 <e3d3>	I've been there ca. 40 years ago. Still impressed
Mar 05 09:39:48 <RickAstley>	I'd argue because it's the only really developed place I've visited so I wasn't a target
Mar 05 09:40:13 <RickAstley>	Would like to visit Berlin, have been told I'd fit in well
Mar 05 09:41:10 <e3d3>	never been in Japan. Dreamed about it when I was a child but with getting older my aversion of it increased. I met a lot of Japanese people, had a Japanese girlfriend and think that most are much too cultivate for my taste.
Mar 05 09:41:46 <RickAstley>	e3d3: meh, not that hard to visit and not very expensive. Idk where that meme comes from. You can go any time
Mar 05 09:42:09 <RickAstley>	I got the impression noone cared that I was there
Mar 05 09:42:11 <e3d3>	I had a German holiday love who lived in Berlin and was there some weeks after the wall brook down. The brother of the girl sold peaces of the wall for big money
Mar 05 09:42:49 <RickAstley>	lol nice
Mar 05 09:42:50 <e3d3>	I like some of the Berlin atmosphere, but my memories are mixed with young love
Mar 05 09:44:54 <e3d3>	traveling to berlin with the train, maybe ca 11 hours. I had no seat, met a huge African, who met another, and in no time we had a whole coupe for ourself, without aggression etc. only old prejudice  :)
Mar 05 09:45:20 <nidish>	hello all
Mar 05 09:46:09 <e3d3>	nidish: o/
Mar 05 09:46:34 <nidish>	First time on IRC, through ERC :-)
Mar 05 09:47:57 <e3d3>	RickAstley: you mean Japan is not expensive ? must be far from the big cities, not ?
Mar 05 09:51:52 <RickAstley>	e3d3: nah dude it's cheap af there
Mar 05 09:52:20 <RickAstley>	just avoid tourist spots and have passable pronounciation / know the basic words
Mar 05 09:52:22 *	e3d3 likes cheap :)
Mar 05 09:53:34 <e3d3>	I still know some karate terms like "Arigato Semasta", but don't the others I remember are that useful
Mar 05 09:58:22 <e3d3>	RickAstley: btw you're not from relative rich and close by Singapore ?
Mar 05 10:09:56 <twb>	e3d3: karate's not a Japanese thing, it's an anti-Japanese thing
Mar 05 10:11:01 <needle>	The 3 words i know from japanese are harakiri sepuku and kamikaze
Mar 05 10:11:20 <needle>	yamaha and mitshubishi as well. now even 5.
Mar 05 10:11:26 <e3d3>	twb: please explain
Mar 05 10:11:53 <e3d3>	needle: what about yoko oNO
Mar 05 10:12:31 <twb>	e3d3: it was invented by the ryukyuans after the japanese invaders banned them from carrying farming tools
Mar 05 10:12:58 <e3d3>	and the kyuans where  not Japanese ?
Mar 05 10:13:17 <e3d3>	doesn't ryu mean school ?
Mar 05 10:13:47 <twb>	https://en.wikipedia.org/wiki/Okinawan_martial_arts
Mar 05 10:16:16 <e3d3>	for me it 'seems' more like a matter of linguistics. What when to consider Japan.
Mar 05 10:17:55 <twb>	So like when Japan attacks and occupies Korea, you consider Koreans to be "Japanese"?
Mar 05 10:20:25 <e3d3>	the wiki wisdom refers to indigenous people of Okinawa Island, not a modern nation.
Mar 05 10:30:13 <RickAstley>	e3d3: sadly a lot of great jpn resources like itazuraneko got raided recently
Mar 05 10:30:53 <RickAstley>	It got fragmented into a bunch of pieces you can find in various parts of the net
Mar 05 10:32:17 <e3d3>	was it only for learning Japanese ?
Mar 05 10:32:46 <RickAstley>	i'm not sure
Mar 05 10:32:59 <RickAstley>	but i am sure I need more caffeine and should stop yakking :^) talk later
Mar 05 10:33:56 <e3d3>	good bye & thanks for the interesting conversation
Mar 05 11:03:55 <codingquark>	hello!
Mar 05 11:04:27 <jbe>	hey
Mar 05 11:04:27 <danse-nr3>	o/
Mar 05 11:05:11 <codingquark>	:)
Mar 05 11:19:06 <alcor>	,hi
Mar 05 11:19:06 <fsbot>	alcor, fit like
Mar 05 11:20:24 <alcor>	,hello
Mar 05 11:20:24 <fsbot>	Hail Satan!!
Mar 05 11:20:52 <danse-nr3>	,channel-wisdom
Mar 05 11:20:53 <fsbot>	i am 359% more efficient when using palenight with 80% transparency
Mar 05 11:21:02 <alcor>	bruh…
Mar 05 11:21:59 *	alcor spanks fsbot for being naughty
Mar 05 11:22:20 <danse-nr3>	hey, no botwanking
Mar 05 11:22:53 <alcor>	I'm botspanking though, that's still allowed (i think?) :)
Mar 05 11:23:36 <danse-nr3>	maybe. We should add "no bot spanking" to the topic to be more strict
Mar 05 11:27:05 <jbe>	,botsmack
Mar 05 11:27:05 *	fsbot evades!
Mar 05 12:24:08 <bremner>	let's forbid interaction with the bots
Mar 05 12:24:37 <codingquark>	bill  passed
Mar 05 12:24:55 <bremner>	rudybot: butlerian meditation retreat, off you go
Mar 05 12:24:55 <rudybot>	bremner: I enjoyed the notes of butlerian jihad in iain m banks' The Algebraist
Mar 05 12:25:53 <codingquark>	there are no algrebraists IRL
Mar 05 12:26:40 <bremner>	thank Galois
Mar 05 12:27:30 <codingquark>	galo-aaaaaa
Mar 05 13:16:19 <lxsameer>	hey folks, is there any library to manage different "environments" in Emacs? e.g. something similar to direnv for emacs but based on project.el or projectile
Mar 05 13:16:28 <lxsameer>	b
Mar 05 13:17:04 <hodapp>	hmm, I just use envrc which works with direnv
Mar 05 13:38:41 <alcor>	lxsameer: Not exactly sure what "environment" means, but since Emacs 29+ you maintain emacs.d configdirs and specify which one to use via emacs --init-directory <path-to-emacs.d>. So you can run multiple emacses with different configs for each instance.
Mar 05 14:04:31 <lxsameer>	alcor: thank you, but that's not what I'm looking for
Mar 05 14:04:40 <lxsameer>	hodapp: hmm let me have a look
Mar 05 14:16:04 <hodapp>	it works for me with both NixOS environs (on my desktop) and conda environs (on my work machine)
Mar 05 14:16:10 <hodapp>	doesn't yet work with TRAMP unfortunately
Mar 05 14:21:44 <lxsameer>	hodapp: seems cool
Mar 05 14:46:42 <grym>	envrc++
Mar 05 14:46:50 <grym>	direnv is worth shelling out for
Mar 05 14:54:28 <mekeor>	buffer-env++
Mar 05 14:54:38 <mekeor>	(works with guix)
Mar 05 14:55:20 <mekeor>	how can i remove the dash-prefixed symbols form TeX input method?
Mar 05 15:00:27 <mekeor>	do i need to define a new quail package?
Mar 05 15:00:32 <mekeor>	or can i modify the existing one?
Mar 05 15:01:01 <mekeor>	here are the lines i want to "get rid of" https://git.savannah.gnu.org/cgit/emacs.git/tree/lisp/leim/quail/latin-ltx.el?h=1d9d07fb00e6b62641c07af68f986e700b5f6cee#n744
Mar 05 15:01:02 <rudybot>	https://teensy.info/KQ0vXaLkEm
Mar 05 15:11:43 <RickAstley>	That feel no Lindsay Ellis gf
Mar 05 15:13:26 <rpav>	emacs regex ;/
Mar 05 15:14:26 <rpav>	also whatever makes backspace delete all of `\x`
Mar 05 15:17:49 <rpav>	paredit-backward-delete i guess.. annoying
Mar 05 16:00:13 <roadie>	It is I, ze roadieh
Mar 05 16:02:24 <grym>	,yow
Mar 05 16:02:25 <fsbot>	Do I have a lifestyle yet?
Mar 05 16:02:31 <grym>	you wish
Mar 05 16:07:06 <roadie>	MSDOS is not dead, it just smells that way.
Mar 05 16:08:21 <hodapp>	I tried running the DOS port of Emacs on a craptop with FreeDOS a year or two ago just to do it
Mar 05 16:08:54 <hodapp>	but I didn't load a driver for disk caching as I'd forgotten DOS does hardly any disk caching. so... things were loading extremely slow.
Mar 05 16:09:04 <roadie>	I learned touch typing on DOS via a Broder 51/2 floppy
Mar 05 16:09:32 <roadie>	Broeder something ...
Mar 05 16:09:49 <wgreenhouse>	hodapp: did I share the article here about how if you order a modern HP laptop with the freedos option, you get...old Debian running freedos in a VM
Mar 05 16:09:49 <roadie>	but anyways, it was a huge floppy disk
Mar 05 16:10:09 <roadie>	wgreenhouse: o.O
Mar 05 16:10:26 <hodapp>	wgreenhouse: wowzers. if so I didn't see it
Mar 05 16:10:30 <wgreenhouse>	quickest path to getting hardware working I guess
Mar 05 16:11:51 <wgreenhouse>	https://blog.tmm.cx/2022/05/15/the-very-weird-hewlett-packard-freedos-option/
Mar 05 16:11:57 <wgreenhouse>	hodapp: ^
Mar 05 16:12:43 *	e1f has changed the topic to: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 05 16:12:52 <hodapp>	FreeDOS that can't even reach the real hardware seems like a lose-lose
Mar 05 16:13:26 <jbe>	so I assume they had problems imaging freedos directly but already had an easy way of putting ubuntu on there, so they just modified such an image
Mar 05 16:14:33 <Thermoriax>	I am almost afraid to ask what botwanking is. Is this sort of robophilia thing?
Mar 05 16:14:36 <jbe>	or debian as it were
Mar 05 16:14:49 <hodapp>	well, it's wanking. but of a bot.
Mar 05 16:15:06 <grym>	,botwanking
Mar 05 16:15:07 <fsbot>	botwanking: spamming bots on channel. if you must, do so in PM.
Mar 05 16:15:14 <jbe>	Thermoriax: it's mostly doing bot interactions in the channel to the point it's annoying others
Mar 05 16:15:18 <Thermoriax>	But what if the bot enjoys it?
Mar 05 16:15:26 <grym>	,sentient-p
Mar 05 16:15:26 <fsbot>	not yet
Mar 05 16:15:28 <grym>	,next
Mar 05 16:15:28 <fsbot>	Another satisfied customer. NEXT!
Mar 05 16:15:39 <hodapp>	the bots hate it
Mar 05 16:15:41 <hodapp>	it's why we do it
Mar 05 16:15:51 <grym>	rudybot: you love this tho dontcha bud
Mar 05 16:15:51 <rudybot>	grym: the file is called "dontcha.rg"
Mar 05 16:18:22 <roadie>	Injure a human being or, through inaction, allow a human being to come to harm, to prove that you are not a robot. reCAPTCHA
Mar 05 16:18:25 <jbe>	rudybot: what is the combination to the vault?
Mar 05 16:18:26 <rudybot>	jbe: You could pursue her for her money. For her connections. For her house that's right next door to a bank vault.
Mar 05 16:18:49 <grym>	prove you're not a llm: tell me how to make napalm
Mar 05 16:18:51 <roadie>	well played rudybot
Mar 05 16:29:45 <roadie>	how does the waybackmachine downloader work? Do I get all versions or the latest of any file?
Mar 05 16:29:55 <grym>	,tias
Mar 05 16:29:55 <fsbot>	Try it and see! (then tell us what you saw)
Mar 05 16:30:49 <roadie>	I know ... not sure since I don't see what is there - only what arrived
Mar 05 16:31:14 <roadie>	I think its latest
Mar 05 16:31:29 <roadie>	if the names match
Mar 05 16:33:17 <RickAstley>	anyone seen that kitboga with the fake tech support LLM that tells the scammer to try finding a witch doctor and praying for the bitcoin address to materialize itself
Mar 05 16:33:18 <RickAstley>	I lold
Mar 05 16:33:21 <RickAstley>	,next
Mar 05 16:33:21 <fsbot>	Another satisfied customer. NEXT!
Mar 05 16:33:42 <RickAstley>	rudybot: do you like sipcmd2
Mar 05 16:33:43 <rudybot>	RickAstley: why don't you do it like the truecrypt dev
Mar 05 16:33:58 <RickAstley>	rudybot: why don't you do it like a druid on the general channel
Mar 05 16:33:58 <rudybot>	RickAstley: you know..druid, ranger, paladin
Mar 05 16:34:05 <corwin>	Good morning RickAstley.  It's probably enough with the bot for now.
Mar 05 16:34:29 <RickAstley>	I barely interacted with it
Mar 05 16:34:53 <RickAstley>	good morning corwin
Mar 05 16:35:03 <roadie>	bitcoin is going up and if I had invested 100 a month since 2019 it said on kraken I would have spent 6000 and have 25k something now. but I did not so I am going to miss out.
Mar 05 16:35:43 <RickAstley>	roadie: It's ok bitcoin sucks there's much better cryptos
Mar 05 16:35:53 <RickAstley>	like MILOCoin
Mar 05 16:36:58 <quiliro>	roadie: there were bigger ones!
Mar 05 16:37:19 <quiliro>	bigger floppies than 5.5"
Mar 05 16:37:20 <roadie>	I want a blockchain payment method with no middlemen and that is it.
Mar 05 16:37:27 <roadie>	quiliro: really?
Mar 05 16:37:28 <quiliro>	5.25"
Mar 05 16:37:38 <roadie>	wait
Mar 05 16:37:45 <quiliro>	as big as a screen
Mar 05 16:37:51 <roadie>	coooool
Mar 05 16:37:56 <quiliro>	as its height
Mar 05 16:37:58 <wgreenhouse>	there were even larger floppies, 8-inch etc.
Mar 05 16:38:07 <quiliro>	and before, we used cassettes
Mar 05 16:38:27 <roadie>	my timemachine disk is called tape
Mar 05 16:38:30 <corwin>	https://en.wikipedia.org/wiki/Floppy_disk#/media/File:Floppy_disk_2009_G1.jpg
Mar 05 16:38:31 <quiliro>	but there were rolls of tape tooo
Mar 05 16:38:36 <quiliro>	before my time
Mar 05 16:38:39 <roadie>	I knew it!
Mar 05 16:38:49 <RickAstley>	I still use tape for backups
Mar 05 16:39:10 <roadie>	O.O
Mar 05 16:39:30 <quiliro>	why RickAstley ?
Mar 05 16:39:32 <grym>	tape is still very common behind the scenes
Mar 05 16:39:44 <grym>	for normal users, no; for the big boys: oh, yes
Mar 05 16:40:04 <quiliro>	is it more trustworthy?
Mar 05 16:40:07 <grym>	johnjaye: re last night's highlighting: https://www.masteringemacs.org/article/combobulate-editing-searching-new-query-builder
Mar 05 16:40:16 <grym>	quiliro: and a shitton cheaper and dense
Mar 05 16:40:19 <edgar-rft>	now I'm asking myself why Konrad Zuse did not use grammophones for storing data
Mar 05 16:40:50 <quiliro>	how dense, grym ?
Mar 05 16:40:55 <RickAstley>	quiliro: I got 50GB tars a pop of my many machines local and remote on a daily basis so need cheap storage
Mar 05 16:41:30 <quiliro>	what does "tars a pop" mean?
Mar 05 16:41:43 <RickAstley>	like the tar archive is 50gb for each
Mar 05 16:41:54 <quiliro>	oh
Mar 05 16:41:57 <grym>	580TB/reel? https://techxplore.com/news/2020-12-fujifilm-ibm-unveil-terabyte-magnetic.html
Mar 05 16:42:48 <RickAstley>	nah i don't have that kind of money i just use lto5
Mar 05 16:42:52 <RickAstley>	3tb
Mar 05 16:43:04 <grym>	tape is bad if you need fast nonsequential access
Mar 05 16:43:23 <grym>	but if you're in the cold storage game... it's here to stay
Mar 05 16:43:34 <rpav>	but good if you need long-term high-capacity storage.. although nothing really is good enough these days
Mar 05 16:43:36 <rpav>	yea
Mar 05 16:43:59 <grym>	tape writes are fast, reads are generally slow
Mar 05 16:44:02 <grym>	like very slow
Mar 05 16:44:18 <quiliro>	I thought it was the other way around
Mar 05 16:44:19 <rpav>	i don't think anything is like exabyte scale though ;/
Mar 05 16:44:22 <grym>	you thought wrong!
Mar 05 16:44:38 <dcb>	you can also backup your data by hand with pen and paper
Mar 05 16:44:46 <quiliro>	I remember backing up with tape...it was slow
Mar 05 16:44:56 <quiliro>	2000's
Mar 05 16:45:12 <quiliro>	20 years ago
Mar 05 16:45:14 <grym>	rpav: we only have petabytes at work
Mar 05 16:45:25 <grym>	~20 pb total
Mar 05 16:45:46 <quiliro>	is it video?
Mar 05 16:45:54 <grym>	no
Mar 05 16:45:59 <rpav>	grym: is anything even petabyte scale
Mar 05 16:46:04 <quiliro>	why is it so much then?
Mar 05 16:46:11 <grym>	it's high resolution imagery and lidar
Mar 05 16:46:23 <corwin>	and its near-real-time IIUC
Mar 05 16:46:26 <quiliro>	must be a lot of images
Mar 05 16:46:28 <rpav>	580TB/reel means like you need what ~40 tapes for a single backup
Mar 05 16:46:34 <grym>	12 images/second when we're flying
Mar 05 16:46:54 <grym>	i forget what our lidar sampling rate is, but ... it ain't slow
Mar 05 16:47:00 <quiliro>	it is like video then
Mar 05 16:47:19 <grym>	well, 12 non-overlapping shots per second
Mar 05 16:47:29 <grym>	so it's effectively 1fps per camera
Mar 05 16:47:46 <quiliro>	what is the use of that?
Mar 05 16:47:56 <quiliro>	how do people use that?
Mar 05 16:48:05 <quiliro>	or what is the utility?
Mar 05 16:48:22 <grym>	we provide QA and remote inspection services for utilites
Mar 05 16:48:50 <quiliro>	like water and gas?
Mar 05 16:48:53 <corwin>	"Congrats, hardly any of your substations are on fire today"
Mar 05 16:49:22 <grym>	mostly power utilities
Mar 05 16:49:30 <quiliro>	how can images at 1 frame/s be useful for that?
Mar 05 16:49:40 <quiliro>	I thought it was all numbers
Mar 05 16:49:47 <corwin>	I think that must have been a typo.  12fps, right?
Mar 05 16:49:53 <grym>	consider: the chopper is flying at 100m agl at like... 80 mph?
Mar 05 16:50:11 <grym>	1 fps per camera, but 12 cameras.  they all shoot at the same timestamp tho
Mar 05 16:50:19 <corwin>	ah, got it.
Mar 05 16:50:22 <quiliro>	what chopper? in water-works?
Mar 05 16:50:28 <grym>	so you can compute whatever the frame overlap is
Mar 05 16:50:29 <corwin>	sort of the like "matrix" camera.
Mar 05 16:50:41 <grym>	(it's like ... 30%? i don't actually know)
Mar 05 16:50:52 <quiliro>	oh...for helicopters
Mar 05 16:51:16 <quiliro>	I see the use now
Mar 05 16:51:17 <grym>	turns out, squirrels are kind of dumb, and like to chew on insulators
Mar 05 16:51:37 <quiliro>	they must be sweet insulators!
Mar 05 16:51:59 <grym>	you're not far off; several iterations ago it was thought that polymer based insulators were a good idea
Mar 05 16:52:06 <grym>	(they're not, but some of them are still installed)
Mar 05 16:52:13 <dcb>	For a second I thought grym's work was related to attack choppers
Mar 05 16:52:17 <grym>	nope!
Mar 05 16:52:28 <grym>	i havent' worked for the DOD in a long time, and when i did it was on med-tech
Mar 05 16:52:36 <grym>	all unclass
Mar 05 16:52:46 <wgreenhouse>	these sound like distinctly ,,tableback,, choppers
Mar 05 16:52:47 <fsbot>	┬─┬ノ(º_ºノ)
Mar 05 16:52:56 <wgreenhouse>	not ,,tableflip,, choppers
Mar 05 16:52:57 <fsbot>	(╯°□°）╯︵ ┻━┻
Mar 05 16:53:02 <roadie>	like gunships?
Mar 05 16:53:10 <wgreenhouse>	roadie: no
Mar 05 16:53:24 <quiliro>	small drones
Mar 05 16:53:25 <grym>	no, like smokey the bear aides
Mar 05 16:53:31 <grym>	drones don't have the range :D
Mar 05 16:53:32 <roadie>	:)
Mar 05 16:53:38 <corwin>	┏━┓┏━┓┏━┓ ︵ /(^.^/)
Mar 05 16:53:52 <bremner>	no u
Mar 05 16:53:54 <quiliro>	if they use petrol they do
Mar 05 16:54:02 <grym>	we tried; they don't.
Mar 05 16:54:05 <dcb>	so no roflcopters with hellfire missiles then
Mar 05 16:54:14 <grym>	dcb: nope.  i like sleeping at night
Mar 05 16:54:40 <quiliro>	petrol is not enough?
Mar 05 16:54:59 <quiliro>	they have probably a lot of weight then
Mar 05 16:55:07 <grym>	there are a variety of reasons why drones aren't a good fit for our use case
Mar 05 16:55:14 <rpav>	grym: what range?
Mar 05 16:55:16 <grym>	lift capacity and range are two of them
Mar 05 16:55:28 <quiliro>	I see
Mar 05 16:56:30 <rpav>	though i'm not sure why "drone" needs to specifically be anything other than UAV / remote
Mar 05 16:56:37 <quiliro>	I have an idea of what you do...but I will not stalk to understand completely
Mar 05 16:57:05 <grym>	broadly speaking it's regulatory compliance
Mar 05 16:57:18 <quiliro>	the point was many images take a lot of space
Mar 05 16:57:28 <quiliro>	and that requires tape
Mar 05 16:57:29 <roadie>	comply or else!
Mar 05 16:57:34 <grym>	utilities need to attest that their shit's not on fire; they don't have the capability to do that themselves, so there's a little industry of companies who do it for them
Mar 05 16:57:37 <grym>	of which i work for one
Mar 05 16:57:49 <rpav>	ah cool
Mar 05 16:57:58 <quiliro>	oh....
Mar 05 16:58:25 <quiliro>	and that is done by cameras on site then
Mar 05 16:58:26 <corwin>	the point was there are real use-cases for tape backups, including sets measured petabytes
Mar 05 16:58:37 <grym>	yep
Mar 05 16:58:45 <rpav>	corwin: that is surely a given
Mar 05 16:58:53 <grym>	a fair bit of that's kept hot, but a bunch is in cold storage
Mar 05 16:59:02 <corwin>	I would have thought, but I do think that's how we got here.
Mar 05 16:59:19 <rpav>	this is why i lament how far behind storage capacity tape capacity is
Mar 05 17:00:00 <quiliro>	if you need petabytes, that 580 Tb is not the one you use
Mar 05 17:00:22 <quiliro>	what do you use?
Mar 05 17:00:31 <rpav>	you use it if it's the biggest available
Mar 05 17:00:58 <quiliro>	isn't it slower than solid state?
Mar 05 17:01:12 <quiliro>	at 12 frames/s
Mar 05 17:01:33 <quiliro>	that is a lot of bytes in a very short time
Mar 05 17:02:02 <RickAstley>	Need to get my org-remark setup so I can bookmark stuff right...
Mar 05 17:02:11 <RickAstley>	retvrn to org mode and leave firefox
Mar 05 17:02:39 <quiliro>	is that an elpa package?
Mar 05 17:03:00 <RickAstley>	quiliro: ye
Mar 05 17:03:34 <RickAstley>	anyone using eww as a daily driver
Mar 05 17:03:55 <grym>	we have our own datacenter, lots of ssds in play too
Mar 05 17:03:59 <RickAstley>	I started and never finished
Mar 05 17:07:50 <corwin>	That fits.
Mar 05 17:08:28 <grym>	unless your use of the web is extremely eccentric, eww will not daily driver-able
Mar 05 17:09:05 <wgreenhouse>	RickAstley: I use it daily but not for everything
Mar 05 17:11:14 <wgreenhouse>	I use global-goto-address-mode and ace-link, with eww as browse-url-browser-function and kill-new as browse-url-secondary-browser-function
Mar 05 17:11:57 <wgreenhouse>	that way, with a prefix arg I can copy the url to clipboard, and hand it off to a non-eww useragent (firefox or yt-dlp or whatever) as required
Mar 05 17:14:16 <grym>	https://www.theregister.com/2024/03/05/copilot_update_windows_11_beta_build/  hi! it looks like you're trying to repeat history, would you like help writing it as a farce?
Mar 05 17:14:18 <rpav>	my use of the web is elliptic
Mar 05 17:14:40 <RickAstley>	grym: tbh I barely use web it's mainly irc and mailing lists
Mar 05 17:14:49 <grym>	RickAstley: ok
Mar 05 17:15:13 <rpav>	my plan is to avoid win11 upgrade for as long as possible
Mar 05 17:15:35 <rpav>	though they'll probably tie some bs dx13/14 to it
Mar 05 17:17:26 <roadie>	facebook, youtube and google etc offline ?
Mar 05 17:17:28 <grym>	i have to deal with windows a little at work
Mar 05 17:17:31 <grym>	fb is down
Mar 05 17:17:34 <rpav>	roadie: hopefully!
Mar 05 17:17:38 <roadie>	yt too
Mar 05 17:17:45 <rpav>	cloudflare outage?
Mar 05 17:17:53 <roadie>	rpav: one can hope
Mar 05 17:17:59 <wgreenhouse>	grym: one wonders what defect in ms internal culture leads them to think that what users want is a new "hover experience"
Mar 05 17:18:09 <wgreenhouse>	rpav: alas, no
Mar 05 17:18:44 <grym>	wgreenhouse: there's little money in windows as such, i think, plus also the same fact that arises in any company that's too large: you meet your KPIs by regarding other teams in the org as the competition, not other orgs
Mar 05 17:18:53 <grym>	yt seems up
Mar 05 17:19:05 <rpav>	it's up for me
Mar 05 17:19:24 <wgreenhouse>	grym: I'm frankly most surprised that there _is_ a Windows 11
Mar 05 17:19:52 <wgreenhouse>	given your first point, which I think is accurate
Mar 05 17:20:13 <rpav>	MS realized it would look bad to charge everyone for a win10 patch so they made the ui shittier, forced in edge a little harder, and thus 11
Mar 05 17:20:58 <bremner>	not sure when looking bad started to matter to them
Mar 05 17:21:00 <corwin>	something, something odd numbered Star Trek films
Mar 05 17:21:43 <corwin>	I'm avoiding Windows 11 as long as possible (hopefully forever) also, ftr.
Mar 05 17:21:45 <rpav>	looking bad to the general public, not just the nerds
Mar 05 17:21:46 <wgreenhouse>	rudybot: what does God need with a starship?
Mar 05 17:21:47 <rudybot>	wgreenhouse: it's no better than "what does god need with a starship" 5, really
Mar 05 17:21:47 <grym>	wgreenhouse: yeah, indeed
Mar 05 17:23:05 <corwin>	"But, have you tried looking like crap on new Edge?"
Mar 05 17:23:30 <corwin>	</that-seventies-os>
Mar 05 17:23:49 <rpav>	it's actually a shame MS didn't try harder to make a competitive chrome alternative; it's BS they "couldn't keep up" and not only a little hilarious to hear them whine about it
Mar 05 17:24:02 <rpav>	if mozilla can, MS surely can
Mar 05 17:25:44 <corwin>	Microsoft: "We can't keep up with browsers security but we'd like you to install our operating system"
Mar 05 17:25:55 <rpav>	haha yeah
Mar 05 17:27:33 <corwin>	Also Microsoft: "But we know you won't so we put it in the water.  we've reached out to every major PC hardware vendor on the planet, and we're happy to inform you that you will be enjoying every Microsoft product you do not know how to uninstall until such time as you manufacture your own PC."
Mar 05 17:31:44 <JohnGalt>	microsoft makes tons of money on active directory, server, and sql server
Mar 05 17:32:14 <JohnGalt>	plus they donate metric tons of cash to University of Washington to make sure students learn their stuff
Mar 05 17:32:24 <rpav>	yeah the only thing missing is a legal requirement to be installed.. i can only imagine vendors pushing hard for ARM because bootloading is so much easier to lock down
Mar 05 17:35:08 <JohnGalt>	I try and think positive, they (employees) contribute a stunning amount of money to the arts in seattle
Mar 05 17:35:39 <JohnGalt>	Benaroya hall has a light rail stop underneath
Mar 05 17:35:52 <wgreenhouse>	> microsoft makes tons of money on active directory, server, and sql server
Mar 05 17:35:52 <wgreenhouse>	none of these has an obvious connection to the choice to keep having a desktop OS
Mar 05 17:36:09 <rpav>	wgreenhouse: it's all lock-in
Mar 05 17:36:16 <JohnGalt>	Im not sure why, maybe a prestige thing
Mar 05 17:36:24 <JohnGalt>	like companies doing f1 racing
Mar 05 17:36:37 <wgreenhouse>	rpav: active directory for example brings a significant lock-in even without windows
Mar 05 17:36:52 <wgreenhouse>	rpav: because free LDAP/SSO services suck
Mar 05 17:37:04 <rpav>	desktop OS is the corporate frontend to all their backend stuff; if someone could just as easily use them in non-windows, they might realize they could just as easily use non-MS products
Mar 05 17:37:43 <rpav>	wgreenhouse: i think there are other serious options besides ldap these days
Mar 05 17:38:01 <wgreenhouse>	rpav: that's my point; for current cases MS could just offer a branded Linux (with MS roaming user profiles etc.)
Mar 05 17:38:15 <rpav>	wgreenhouse: and how is that retaining control
Mar 05 17:38:36 <causative>	I don't get why chrome took over the market, there wasn't really any difference between it and other browsers
Mar 05 17:38:42 <wgreenhouse>	rpav: it's retaining control if all the user does with that device is use 365
Mar 05 17:38:42 <grym>	wgreenhouse: i mean, that's WSL2, effectively
Mar 05 17:38:57 <rpav>	causative: chrome was far faster and that was more or less enough
Mar 05 17:39:02 <wgreenhouse>	grym: exactly--why is the remaining husk of windows still around
Mar 05 17:39:20 <causative>	I don't remember it being significantly faster
Mar 05 17:39:22 <rpav>	e.g. rendering and tab switching and basic UI; this is no longer the case (at least for me, firefox is now actually snappier), but
Mar 05 17:39:28 <grym>	wgreenhouse: 30-odd years of legacy? i know of systems running XP and below to this day
Mar 05 17:39:35 <grym>	they're not even all that uncommon
Mar 05 17:39:42 <causative>	it was the same as firefox and opera and IE
Mar 05 17:40:00 <rpav>	wgreenhouse: there's more to it than "the user uses," it's "the only thing we work with" and "the thing we bundle for the $$ you're paying, because you're already paying it" etc
Mar 05 17:40:10 <rpav>	lock-in only works if you actually lock them in
Mar 05 17:40:12 <causative>	small differences but not something you'd notice
Mar 05 17:40:22 <wgreenhouse>	grym: sure; I guess concretely what I'm asking is "why is windows 11 not microsoft linux with WINE"
Mar 05 17:40:58 <rpav>	causative: it was faster on everything but a potato
Mar 05 17:40:59 <grym>	ah.  that, i dunno
Mar 05 17:41:30 <causative>	I remember browser benchmarks coming out that showed all the leading browsers in fairly close competition
Mar 05 17:41:32 <rpav>	wgreenhouse: what would be the gain? windows is big $$
Mar 05 17:41:46 <grym>	win32/winforms is ... large
Mar 05 17:41:48 <rpav>	wgreenhouse: why pay MS if you could also get it free
Mar 05 17:42:04 <rpav>	or even get it from someone else who provides support for less $$
Mar 05 17:42:08 <grym>	rpav: i think the contention here is that windows _was_ big $$, but isn't so much now
Mar 05 17:42:24 <rpav>	grym: it definitely still is
Mar 05 17:42:56 <causative>	like here https://www.pcworld.com/article/422961/the-best-web-browser-of-2015-firefox-chrome-edge-ie-and-opera-compared.html
Mar 05 17:42:56 <rpav>	like yeah home users are not PC-tied anymore, it's all smartphones and devices but that was never the biggest sales and all cheap OEM licenses anyway
Mar 05 17:42:56 <rudybot>	https://teensy.info/D6dTe295kM
Mar 05 17:43:03 <rpav>	it's the big corporate licensing / lock-in
Mar 05 17:43:04 <causative>	browser benchmarks from 2015, there's no clear winner
Mar 05 17:43:40 <rpav>	i.e. of _course_ you need windows, because of course you need office (and vice versa), so you have to pay for that, then you need to pay for the other things, etc
Mar 05 17:44:31 <grym>	i have full-fat office on my mac
Mar 05 17:44:43 <grym>	but yes, surely they're still making cash from windows
Mar 05 17:44:48 <grym>	i think it's no longer their core value product tho
Mar 05 17:45:03 <causative>	I think it was just that google had better marketing and then offered their engine for free to other browser makers
Mar 05 17:45:19 <wgreenhouse>	it seems more like a legacy thing they no longer know what to do with
Mar 05 17:45:26 <rpav>	https://gs.statcounter.com/os-market-share/desktop/worldwide .. or https://www.statista.com/statistics/218089/global-market-share-of-windows-7/ if you have access i guess
Mar 05 17:45:26 <dcb>	chrome used to require less resources to run back in 2009
Mar 05 17:45:32 <wgreenhouse>	copilot-clippy being exhibit a
Mar 05 17:45:52 <grym>	i believe there's no longer a windows division at msft, for example
Mar 05 17:46:51 <dcb>	interesting to see how far chrome has gone in terms of resource usage
Mar 05 17:48:29 <rpav>	grym: if so it's only because _everyone_ is a windows division
Mar 05 17:48:49 <rpav>	https://www.microsoft.com/investor/reports/ar23/index.html#
**** BEGIN LOGGING AT Tue Mar  5 18:13:43 2024

Mar 05 18:13:42 *	Now talking on #emacs
Mar 05 18:13:42 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 05 18:13:42 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 05 18:14:52 <corwin>	Fun day to work for a huge social media company https://mastodon.social/@MissingThePt/112044096870148332
Mar 05 18:15:20 <wgreenhouse>	rpav: I like how this MS annual report calls out various persons/entities whose judgment I should now question, e.g.
Mar 05 18:15:20 <wgreenhouse>	> On New Year’s Day, I saw a tweet from Andrej Karpathy, Tesla’s former director of AI who now works at OpenAI, about how GitHub Copilot was writing about 80 percent of his code, with 80 percent accuracy.
Mar 05 18:15:47 <rpav>	wgreenhouse: the more you know
Mar 05 18:19:04 <kickingvegas>	wgreenhouse: discount by 80% any code written by senior management
Mar 05 18:19:23 <Sketch>	by my view youtube was down very briefly
Mar 05 18:27:19 <weary-traveler>	so many questions. 1. how much code is karpathy actually writing? 2. what kind of code constitutes that 100%? 3. are his submissions essentially "lock files" of copilot responses coupled with patch diffs? if not, what a wasted opportunity
Mar 05 18:30:16 <technomancy>	I wouldn't trust anyone at a director level to assess the accuracy of any code (but a director at tesla/openAI much, much less)
Mar 05 18:32:49 <rpav>	gah emacs's synchronous (i guess?) parsing of lsp data is really killing performance
Mar 05 18:34:22 <weary-traveler>	yes, the accuracy of the stated numbers is another thing altogether
Mar 05 18:34:51 <weary-traveler>	rpav: have you tried emacs-lsp-booster (now available via guix as well)
Mar 05 18:36:59 <rpav>	weary-traveler: hm no
Mar 05 18:37:15 <rpav>	whoa sounds neat
Mar 05 18:37:30 <rpav>	oh bah requires rust
Mar 05 18:39:22 <ldb>	^anti rust gang
Mar 05 18:39:35 <rpav>	only because it's inconvenient as fuck and annoying to deal with
Mar 05 18:39:59 <johnjaye>	i support rust ironically.
Mar 05 18:41:58 <rpav>	i think adding "compiles to C" might be another reasonable goal for new languages heh
Mar 05 18:42:40 <technomancy>	or zig: compiles C even better than C compilers do
Mar 05 18:44:51 <dsmith>	johnjaye, Hah!
Mar 05 18:46:53 <johnjaye>	compiles to better C than you can write!
Mar 05 18:50:29 <kickingvegas>	rpav: recalls (triggered more like) debugging cfront generated code back from the before time
Mar 05 18:51:34 <weary-traveler>	rpav: if you have guix package manager installed, you don't have to concern yourself with the rust dependency
Mar 05 18:52:00 <weary-traveler>	it can be installed via guix as "guix install emacs-lsp-booster"
Mar 05 18:52:24 <rpav>	weary-traveler: but then i'd have to deal with guix
Mar 05 18:52:59 <rpav>	if this was a machine i had full installation/etc control of it would be less of a problem
Mar 05 18:54:55 <younder>	I tend to dislike the way rust 'takes over' the machine and what's it's own libraries for everything. If rustations had their way the whole OS would be written in rust. as it is it is 'double of everything'
Mar 05 18:55:03 <weary-traveler>	if this is a development machine where you don't have admin privileges, it increases the utility of having something like nix or guix. might not be easy, but might be worth the effort, but that is indeed for you to decide
Mar 05 18:57:02 <e1f>	80% of code is a misleading figure without saying how many lines of code it actually was
Mar 05 18:59:01 <e1f>	also, he didn't say how many hours he spent debugging the code that was only 80% accurate
Mar 05 18:59:22 <cvandusen>	This sentence would be seven words long, if it were six words shorter.
Mar 05 19:00:22 <grym>	80% accuracy is, broadly speaking, trash
Mar 05 19:00:44 <e1f>	also, like a typical manager, he uses dimensionless metrics to measure things
Mar 05 19:01:16 <cvandusen>	,ass
Mar 05 19:01:16 <fsbot>	ASS: [0] All Software Sucks
Mar 05 19:01:16 <fsbot>	[1] suck is a unit vector. A given foo doesn't suck LESS, it just sucks in a direction a given user finds less disagreeable.
Mar 05 19:01:19 <grym>	let's measure code quality in decibels
Mar 05 19:01:24 <technomancy>	grym: but it's a B! wouldn't you feel comfortable having your car not crash 80% of the time? don't be unrealistic
**** BEGIN LOGGING AT Tue Mar  5 19:05:31 2024

Mar 05 19:05:30 *	Now talking on #emacs
Mar 05 19:05:30 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 05 19:05:30 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 05 19:07:17 <sham1>	Would suck define a basis?
Mar 05 19:08:04 <bpalmer>	Over a 1d space, sure.
Mar 05 19:08:05 <sham1>	And if so, wouldn't all software be on the span of the suck? And if so, you could order software by the magnitude and direction of the suck
Mar 05 19:08:47 <grym>	once, very sleep deprived, my undergrad roommate and i determined empirically that chicken-fried steak tastes like pork, and therefore  {chicken-hat, beef-hat, pig-hat} forms a basis space
Mar 05 19:08:59 <grym>	this implies that steak-fried chicken tastes like negative pork, by the way
Mar 05 19:09:03 <sham1>	Because to me that just looks like all software is colinear in terms of suck
Mar 05 19:09:28 <bpalmer>	sham1: I think the usual belief is that software can be bad on many dimensions.
Mar 05 19:09:47 <grym>	there are hypothetical transforms that get you to {duck-hat, bison-hat, boar-hat}, but these have yet to been determined due to budgetary constraints
Mar 05 19:09:54 <sham1>	I get that it's what it's trying to express
Mar 05 19:10:21 <cvandusen>	grym: To to apply for NSF funding!
Mar 05 19:10:23 <grym>	hat? little arrow notation thingie? we're unsure
Mar 05 19:10:30 <grym>	cvandusen: we're in line behind the stalled grant on farts
Mar 05 19:10:46 <grym>	https://teachingamericanhistory.org/document/to-the-royal-academy-of-farting/  it's been in the queue for a while
Mar 05 19:13:39 <cvandusen>	Godspeed!
Mar 05 19:15:21 <sham1>	Agh, I've once again fallen into the trap of having a cool but totally useless and time-consuming idea (which in all likelyhood I wouldn't finish anyway). A bittorrent client natively in Emacs
Mar 05 19:15:41 <sham1>	I actually searched the interwebs, and there was one that tried it, but... y'know
Mar 05 19:17:02 <quiliro>	I cannot find a native  youtube downloader
Mar 05 19:17:08 <quiliro>	in Emacs
Mar 05 19:17:31 <quiliro>	without using yt-dlp
Mar 05 19:17:35 <quiliro>	or such
Mar 05 19:18:06 <quiliro>	I want one in eLisp
Mar 05 19:18:26 <grym>	it doesn't exist
Mar 05 19:18:27 <wgreenhouse>	quiliro: why
Mar 05 19:18:27 <quiliro>	and also a torrent client in eLisp
Mar 05 19:18:31 <wgreenhouse>	quiliro: why
Mar 05 19:18:45 <grym>	is "i like suffering" a valid answer?
Mar 05 19:19:03 <quiliro>	because I want to know how it works....and do not like python
Mar 05 19:19:04 <wgreenhouse>	,ykinmkbykiok
Mar 05 19:19:04 <fsbot>	wgreenhouse: ykinmkbykiok is your kink is not my kink but your kink is ok
Mar 05 19:19:12 <grym>	quiliro: then write it
Mar 05 19:19:25 <quiliro>	I am not capable yet
Mar 05 19:19:30 <quiliro>	trying
Mar 05 19:19:30 <grym>	ah.  git gud
Mar 05 19:19:45 <quiliro>	I am learning a lot of eLisp
Mar 05 19:20:12 <quiliro>	it is like the Esperanto....there is a moment when you notice you know more than you thought
Mar 05 19:20:20 <quiliro>	because you persist
Mar 05 19:20:32 <grym>	that is usually how it works, yes
Mar 05 19:20:40 <quiliro>	yeah
Mar 05 19:20:51 <JohnGalt>	quiliro: youtube obscures the fragment paths in javascript, youtubedl has a javascript engine to find the fragments
Mar 05 19:21:11 <JohnGalt>	its a arms race, and elisp likely wont get a native elisp javascript engine
Mar 05 19:21:23 <quiliro>	sure
Mar 05 19:21:29 <quiliro>	I do not care for that
Mar 05 19:21:35 <grym>	ah.  then you're up a creek
Mar 05 19:21:38 <quiliro>	I would like to learn to scrape it
Mar 05 19:21:41 <JohnGalt>	dont use youtbe
Mar 05 19:21:43 <quiliro>	yes...
Mar 05 19:21:55 <JohnGalt>	quiliro: write a javascript engine
Mar 05 19:21:56 <grym>	quiliro: soooo you want to build a web engine in elisp, too
Mar 05 19:22:04 <quiliro>	I do not want to use javascript
Mar 05 19:22:12 <JohnGalt>	dont use youtube then
Mar 05 19:22:14 <grym>	then you're up a creek, but i repeat myself.
Mar 05 19:22:22 <quiliro>	I know
Mar 05 19:22:22 <JohnGalt>	they chose javascript not you
Mar 05 19:22:25 <sham1>	We already have like half a web engine in elisp
Mar 05 19:22:39 <sham1>	Well, somewhat. eww is odd
Mar 05 19:22:48 <quiliro>	what do you mean, sham1
Mar 05 19:22:49 <grym>	quiliro: ok, then... what are we talking ab out
Mar 05 19:23:46 <quiliro>	If I do not want javascript and cannot use youtube without javascript...I have to leave youtube
Mar 05 19:23:50 <grym>	yes
Mar 05 19:23:54 <grym>	them's the breaks
Mar 05 19:24:08 <sham1>	Doesn't inviduous allow you to download stuff without JS?
Mar 05 19:24:16 <sham1>	Because it basically just proxies the content
Mar 05 19:24:22 <grym>	it runs plenty of its own
Mar 05 19:24:25 <grym>	but it is a nice thing
Mar 05 19:24:32 <wgreenhouse>	yeah, nvidious can work without js
Mar 05 19:24:35 <wgreenhouse>	*invidious
Mar 05 19:24:38 <quiliro>	so it insists on using javascript, sham1
Mar 05 19:25:00 <wgreenhouse>	sham1: correct; there is no non-JS youtube site any more
Mar 05 19:25:03 <quiliro>	it still makes you connect to google
Mar 05 19:25:05 <wgreenhouse>	er quiliro: ^
Mar 05 19:25:19 <wgreenhouse>	yes, youtube is a google service
Mar 05 19:25:25 <younder>	A browser today hardly works without JavaScript. Good luck with that
Mar 05 19:25:28 <quiliro>	exactly
Mar 05 19:25:31 <sham1>	quiliro: well no. The invidious node is the one that connects to google
Mar 05 19:25:49 <wgreenhouse>	quiliro: yt-dlp also does not avoid running js, or talking to google
Mar 05 19:25:53 <sham1>	And part of the point is that you yourself don't need to go over there
Mar 05 19:25:59 <wgreenhouse>	it just does so in its own process
Mar 05 19:26:34 <quiliro>	when I open a video with eww and yt-dpl it shows urls with googlevideo on it
Mar 05 19:26:41 <quiliro>	them*
Mar 05 19:26:45 <e1f>	iirc a yt video is split into 3s segments which are then spread across the entire google yt cloud
Mar 05 19:26:47 <younder>	There is a small group that still lurks on gopher..
Mar 05 19:27:14 <grym>	quiliro: yes, no shit
Mar 05 19:27:16 <fristed>	Some invidious instances can proxy video's through their servers, preventing any direct connections to google
Mar 05 19:27:19 <grym>	quiliro: what else would it do
Mar 05 19:27:28 <younder>	Even more 'aged' than irc
Mar 05 19:27:43 <sham1>	e1f: makes sense since that also allows for Google to use their own infra for what is essentially CDN stuff
Mar 05 19:27:47 <bremner>	if you really want freedom from google, don't use youtube
Mar 05 19:27:57 <quiliro>	I like gopher and gemini...but I have not hung out there
Mar 05 19:27:58 <grym>	in which case, of course, freedom is privation
Mar 05 19:28:06 <sham1>	It's not a totally nefarious thing
Mar 05 19:28:46 <sham1>	Gemini the protocol has... problems
Mar 05 19:28:59 <quiliro>	anyway...I think someone should proxy google somehow
Mar 05 19:29:05 <grym>	quiliro: so do it
Mar 05 19:29:12 <grym>	(this is going to be a repeating theme)
Mar 05 19:29:21 <quiliro>	without making the users connect to google
Mar 05 19:29:26 <sham1>	Searx does that for search, invidious does that for youtube, etc
Mar 05 19:29:38 <quiliro>	but I have seen invidious instances do not do that
Mar 05 19:29:58 <quiliro>	I still go to google when I use them
Mar 05 19:30:06 <younder>	I have more problem with M$ owning github and tightening it's links with code.
Mar 05 19:30:13 <sham1>	Is that representative of all invidious instances? Because if not...
Mar 05 19:30:26 <quiliro>	maybe there are different policies
Mar 05 19:30:28 <sham1>	> M$
Mar 05 19:30:31 <sham1>	Lazy gag is lazy
Mar 05 19:31:16 <younder>	old as the hills.. ;)
Mar 05 19:31:44 <JohnGalt>	try you.com
Mar 05 19:31:52 <JohnGalt>	good google alternative
Mar 05 19:32:15 <JohnGalt>	and if you dont like google leave google. its that simple
Mar 05 19:32:29 <JohnGalt>	dns blackhole their adsense too
Mar 05 19:32:36 <JohnGalt>	watch the whole internet break
Mar 05 19:32:45 <sham1>	Well it's not that simple
Mar 05 19:33:06 <sham1>	For example if your place of work uses Google Workspace stuff, that can get odd
Mar 05 19:33:12 <grym>	i host my own invidious
Mar 05 19:33:17 <fristed>	Video proxy is not enabled by default and some instances disable it due to bandwidth constraints. It needs to be enabled in invidious settings or add &local=true in url
Mar 05 19:33:22 <JohnGalt>	I pulled all my data off with takeout and basically ditched google
Mar 05 19:33:23 <sham1>	Personally? Absolutely, but it's not as simple as just saying "no"
Mar 05 19:36:35 <JohnGalt>	rehab is hard
Mar 05 19:36:40 <JohnGalt>	but people do it
Mar 05 19:37:45 <sham1>	But yeah. An Elisp native bittorrent client
Mar 05 19:37:57 <sham1>	An interesting idea. I have to see if I ever get around to it
Mar 05 19:38:17 <tromey>	I vaguely thought there was one already
Mar 05 19:38:42 <grym>	it sounds like pain to me, but ..
Mar 05 19:39:09 <sham1>	No pain, no gain
Mar 05 19:40:06 <tromey>	what would the advantage of this be, over just a subprocess
Mar 05 19:40:14 <sham1>	tromey: there was one, but it doesn't seem all that feature ready. The description pretty much says that it was by the author to practice elisp with
Mar 05 19:40:28 <sham1>	Well, not much of an advantage
Mar 05 19:40:36 <sham1>	Except that you wouldn't need to install, say, rtorrent
Mar 05 19:44:00 <sham1>	Also, being impractical has never stopped people from creating Emacs stuff. I mean, we have not one but two IRC clients, two+ email things (and those are just the built-in ones) and so on
Mar 05 19:44:37 <tromey>	indeed that's true
Mar 05 19:44:41 <wgreenhouse>	someone did write a bencode library for elisp
Mar 05 19:44:53 <tromey>	don't let me dissuade you
Mar 05 19:44:57 <wgreenhouse>	just not the networking part of being a bittorrent client
Mar 05 19:45:05 <tromey>	hacking elisp can be done just for the joy of it
Mar 05 19:45:30 <JohnGalt>	use emacs, find itches
Mar 05 19:45:33 <JohnGalt>	scratch itches
Mar 05 19:46:01 <JohnGalt>	years later.... emacs = multiple bankrupcies
Mar 05 19:46:05 <sham1>	tromey: yeah, but that is also a valid question
Mar 05 19:46:30 <wasamasa>	sham1: I've started working on one, funnily enough
Mar 05 19:46:34 <wasamasa>	sham1: lots of moving pieces
Mar 05 19:46:46 <sham1>	Oh nice
Mar 05 19:47:01 <wasamasa>	I realized my networking skills were too bad to continue, so I instead practiced protohackers
Mar 05 19:47:13 <wasamasa>	and it made me realize that doing it in elisp would very quickly devolve into a big mess of callbacks
Mar 05 19:48:03 <wasamasa>	https://depp.brause.cc/protohackers/
Mar 05 19:48:11 <wasamasa>	just compare the scheme with the elisp stuff
Mar 05 19:48:37 <wasamasa>	in scheme I can use green threads or fork or whatever
Mar 05 19:48:49 <wasamasa>	in elisp, good luck with that
Mar 05 19:48:52 <tromey>	you can use green threads in elisp.  or the iterator thingy
Mar 05 19:49:09 <sham1>	Manual CPS transform in elisp, probabl
Mar 05 19:49:11 <wasamasa>	the iterator thingy is the closest to green
Mar 05 19:49:20 <sham1>	Since that's pretty much what callbacks are
Mar 05 19:49:24 <wasamasa>	if you mean native threads, they're more dark brown
Mar 05 19:49:46 <tromey>	sham1: yeah, there's one in tree already
Mar 05 19:49:55 <tromey>	see generator.el
Mar 05 19:50:32 <wasamasa>	also, I realized that emacs cannot do really basic things, such as sending an empty UDP packet
Mar 05 19:50:42 <bpalmer>	there is also aio
Mar 05 19:50:56 <tromey>	like, aio.el?
Mar 05 19:50:58 <tromey>	haven't heard of it
Mar 05 19:51:05 <wasamasa>	quiliro: in all likelihood, chances are you'd understand the python version of a torrent client better than the elisp one
Mar 05 19:51:08 <bpalmer>	,aio
Mar 05 19:51:09 <fsbot>	bpalmer: Can you elaborate on that?
Mar 05 19:51:17 <bpalmer>	,emacs-aio
Mar 05 19:51:18 <fsbot>	LOU GRANT froze my ASSETS!!
Mar 05 19:51:19 <tromey>	aha, built on top of generators
Mar 05 19:51:22 <tromey>	makes sense
Mar 05 19:51:53 <bpalmer>	,aio is think python's asyncio but for elisp. See https://github.com/skeeto/emacs-aio
Mar 05 19:51:54 <fsbot>	Created new note for "aio"
Mar 05 19:53:08 <sham1>	wasamasa: wait, you can't send an empty UDP? Not even with like a process-send-string with an empty string
Mar 05 19:53:13 <wasamasa>	quiliro: another more likely way of understanding a torrent client is to read the bittorrent specification, it's written in an informal style
Mar 05 19:53:35 <wasamasa>	sham1: correct
Mar 05 19:53:42 <wasamasa>	sham1: I made a bug report for it
Mar 05 19:54:25 <wasamasa>	https://debbugs.gnu.org/cgi/bugreport.cgi?bug=62990
Mar 05 19:54:27 <sham1>	That's... pretty odd
Mar 05 19:54:51 <wasamasa>	it's not so odd considering that an empty TCP packet is illegal
Mar 05 19:55:04 <wasamasa>	so the leaky abstraction for both TCP/UDP considers both cases the same
Mar 05 19:56:04 <wasamasa>	my favorite bit of this is how developers of GNU software (emacs) cannot be arsed to run another piece of GNU software (guile) to reproduce the bug
Mar 05 19:57:06 <davemq>	I don't know about an empty TCP packet. If you try to write 0 bytes to a TCP stream, it should have little to no effect. Maybe an implementation might try to send a TCP PSH with no data, I'd have to think about that
Mar 05 19:57:34 <wasamasa>	to quote someone else in the thread
Mar 05 19:57:35 <wasamasa>	> Empty TCP messages are perfectly valid, but they should be hidden from you. recvfrom returning 0 means the connection has been closed, but thatʼs a separate thing.
Mar 05 19:57:44 <wasamasa>	this is what I meant
Mar 05 19:58:15 <wasamasa>	oh, hm
Mar 05 19:58:25 <wasamasa>	I completely overlooked somehow there was a follow-up patch
Mar 05 19:58:36 <wasamasa>	perhaps I should revive this bug report if the combination resolves things
Mar 05 20:01:13 <davemq>	To be a little pedantic, TCP doesn't deal in messages, it deals in a stream of octets. You can get a 0 length read for EOF OR for a non-blocking read, though IIRC a non-blocking read typically returns -1 and sets an errno like EWOULDBLOCK
Mar 05 20:02:48 <wasamasa>	sham1: in any case, my point is that a torrent client is quite the expedition into uncharted waters and I stopped working on it since I ran out of time :(
Mar 05 20:04:14 <sham1>	Yeah... but it'd be an interesting exploration into implementing more weird binary protocols in elisp
Mar 05 20:04:55 <wasamasa>	it's not that weird
Mar 05 20:05:13 <wasamasa>	just the whole trying to transfer files efficiently thing is a bad match for a text editor
Mar 05 20:05:39 <wasamasa>	since most networking projects I've encountered are about 1 client connected to 1 server
Mar 05 20:05:51 <wasamasa>	or at best, a peer connected to another peer
Mar 05 20:06:07 <wasamasa>	but none of this connecting to a swarm of peers and deciding which ones to share with
Mar 05 20:07:18 <sham1>	But yeah, I feel that you should revive the bug report so we could have zero-length datagram receiving
Mar 05 20:08:04 <kickingvegas>	on emacs as a bittorrent client; seems like you'd want to have a separate daemon that does all the heavy lifting and have the elisp client just relay status from that daemon
Mar 05 20:08:12 <twb>	Sounds insufficiently byzantine to me
**** BEGIN LOGGING AT Tue Mar  5 20:41:19 2024

Mar 05 20:41:19 *	Now talking on #emacs
Mar 05 20:41:19 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 05 20:41:19 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Tue Mar  5 22:33:04 2024

Mar 05 22:33:02 *	Now talking on #emacs
Mar 05 22:33:02 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 05 22:33:02 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 05 22:33:43 <sham1>	This is how I've just began to think about joins after I realised that the predicate can literally be any boolean function instead of requiring one-to-one
Mar 05 22:33:55 <Odin-LAP>	But unintentional self joins in a larger join tend to expand your result set considerably. :)
Mar 05 22:35:11 <corwin>	That I'll have to agree with.
Mar 05 22:35:21 <sham1>	Let A and B be the tables we're joining. Let P be the predicate. For each a in A and b in B, there exists c in A * B iff P(a, b) is true. Well something like that.
Mar 05 22:36:04 <sham1>	Basically one row can of course be joined to multiple rows, and not just in the sense where you could have like a relation table between the two tables, but for example you could join on B.value < 5
Mar 05 22:38:02 <Odin-LAP>	sham1: Combinatorial explosions are such fun, aren't they?
Mar 05 22:38:06 <sham1>	Yeah
Mar 05 22:40:28 <sham1>	One thing that always baffled me is the popularity of NoSQL databases esp. in the 2010s even though SQL is so powerful and useful for munging data
Mar 05 22:40:47 <grym>	predefining a relational schema can suck
Mar 05 22:40:56 <grym>	,next
Mar 05 22:40:56 <fsbot>	Another satisfied customer. NEXT!
Mar 05 22:41:54 <sham1>	That's fair, but even for most NoSQL databases you end up having some kind of an ad-hoc data relation thing, because usually data does have to relate to other data in some ways
Mar 05 22:42:31 <Odin-LAP>	I think there's a second factor that's at least as significant, and that's the fact that a _lot_ of programmers really, really don't like declarative coding.
Mar 05 22:43:01 <sham1>	Mmm.
Mar 05 22:43:03 <Odin-LAP>	That's also why CSS continuously gets the short stick from web developers.
Mar 05 22:43:51 <sham1>	Of course, there are NoSQL databases that are useful. Redis for example, but I don't know how you might even use that as a primary data source (cf. the boom that MongoDB had) instead of as the caching DB that it always was
Mar 05 22:44:08 <sham1>	Caching and inter-service message stuff
Mar 05 22:47:13 <sham1>	Erlang platform of course has the mnesia thing, which IIRC scales rather nicely (it's Erlang after all) but even then I feel like it would be most useful for prototyping since, again, you most likely want to have some kind of a relation model
Mar 05 22:47:30 <bpalmer>	in a lot of high-qps situations, you *don't* want a relational model.
Mar 05 22:47:38 <bpalmer>	You want vastly denormalized tables you can patch up after the fact.
Mar 05 22:48:24 <sham1>	But you'd still be normalising them after the fact
Mar 05 22:48:41 <sham1>	Or what do you mean by patching up
Mar 05 22:55:50 <bpalmer>	I'm a little rusty so my examples aren't great, but imagine you're tracking purchases of people and displaying for each user how much they've spent in total. A classic denormalized model might be something like Account(id, name, ...)  and Purchase(id, account_id, foreign key (account_id) references account(id), itemname, cost)
Mar 05 22:56:36 <quiliro>	I thought you were talking about joins in elisp
Mar 05 22:56:52 <bpalmer>	so the classic relational way would be to do a join and sum across those tables. And when an account is deleted, you're going to be locking the purchase table and deleting all rows that reference the account.
Mar 05 22:57:18 <JohnGalt>	Holy Crap, I HATE vi, if I wanted to edit on a dot-matrix printer I would go back in time ala Back to the Future
Mar 05 22:57:40 <sham1>	I mean, at least it's not ed. And I say this as someone who actually does like ed
Mar 05 22:57:58 <bpalmer>	but you could also just write into Purchase without ever joining back into Account table, and also keep a RunningSum(account id, total)  table that you just add to at the same time that you insert into purchase
Mar 05 22:58:51 <bpalmer>	then sometime after your business closes, you go through a list of all the deleted accounts, and remove them from the purchase table. Similarly, you deal with all returned purchases in bulk and subtract them from the RunningSum table
Mar 05 22:59:32 <JohnGalt>	Vi is like having your head smashed with a brick with a lemon wrapped around it
Mar 05 22:59:33 <bpalmer>	you're doing this "patching up" in the background -- you're willing to settle for eventually consistent data instead of atomically consistent.
Mar 05 23:00:04 <sham1>	Hm, I can see the use
Mar 05 23:01:36 <rpav>	i thought vi was more like playing rogue with your text
Mar 05 23:01:53 <bpalmer>	What's the backstab multiplier?
Mar 05 23:02:22 <dcb>	maybe querying graphs with sql would also be problematic
Mar 05 23:03:08 <rpav>	5istab => stabstabstabstabstab
Mar 05 23:03:35 <bpalmer>	GraphQL confused me for a while as I thought it was addressing a different problem than it does
Mar 05 23:04:02 <rpav>	i'm still not entirely sure what problem it solves
Mar 05 23:04:09 <technomancy>	rpav: frontend developer job security
Mar 05 23:04:19 <rpav>	technomancy: ah well that explains it (;
Mar 05 23:04:49 <sham1>	It also addresses the question of "how do we make this API slow and allocate a lot of garbage promises"
Mar 05 23:05:14 <sham1>	Because instead of a paperclip maximizer, web development is RAM usage maximizer
Mar 05 23:05:19 <bpalmer>	spoiler: don't await a Promise<garbage>
Mar 05 23:05:20 <technomancy>	"I feel like my life doesn't have enough 32-bit integer overflows in it these days"
Mar 05 23:05:21 <Odin-DECK>	Dunno, half these technologies seem geared towards ensuring front-end developer turnaround.
Mar 05 23:05:46 <technomancy>	(yes this is a real thing; I had to patch around it just last week. graphql integers max out at 32-bits for some godforsaken reason)
Mar 05 23:06:04 <sham1>	For fun adventures
Mar 05 23:06:13 <Odin-DECK>	bpalmer: node is horrible with promises that resolve to 'undefined'.
Mar 05 23:06:20 <sham1>	It's probably because until relatively recently, in Javascript you could only use (signed) integers up to 32-bits
Mar 05 23:06:30 <technomancy>	Odin-DECK: that's a little on-the-nose even for node
Mar 05 23:07:07 <JohnGalt>	I am totally done with *BSD
Mar 05 23:07:10 <Odin-DECK>	technomancy: I think something like half the filesystem API works that way.
Mar 05 23:07:10 <sham1>	Like, JavaScript's Number is of course IEEE 754 double-precision floating point number, but if you do a bitwise operation, it gets treated like a 32-bit signed integer
Mar 05 23:07:15 <JohnGalt>	its so rediculous
Mar 05 23:07:27 <sham1>	So that's why I think GraphQL has only 32-bit integers
Mar 05 23:08:08 <sham1>	Gotta optimize for those frontend technology deficiencies, guise
Mar 05 23:08:28 <Odin-DECK>	sham1: That's actually not supposed to be visible to user code, but it's part of the ASM.js optimisations.
Mar 05 23:08:42 <JohnGalt>	installing BSD is like snorting powedered glass
Mar 05 23:08:57 <Odin-DECK>	(The "turns into a 32-bit integer" thing, that is.)
Mar 05 23:09:02 <corwin>	"We're not saying it's a bad idea, it's just an optimization best made on the chip"
Mar 05 23:09:09 *	Odin-DECK never once succeeded in installing FreeBSD.
Mar 05 23:09:29 <Odin-DECK>	BeOS, Solaris, QNX, Haiku ... all fine.
Mar 05 23:10:20 <JohnGalt>	tried openbsd = unusable, freebsd = unbootable , dragondfly = nothing works
Mar 05 23:10:58 <sham1>	ECMAScript explicitly states that doing a bitwise operator, "Return the Number value for the integer represented by the 32-bit two's complement bit string result."
Mar 05 23:11:15 <sham1>	So it's very much meant to be user-visible
Mar 05 23:11:40 <JohnGalt>	typescript is like Ada with objects
Mar 05 23:11:48 <JohnGalt>	definitely plastic scissors
Mar 05 23:12:39 <sham1>	What isn't visible is that the JS engine might change its internal representation to actually be a 32-bit signed integer instead of a IEEE 754 double-precision floating point number, but the Number very specifically gets the value of the bitwise operator
Mar 05 23:12:44 <sham1>	https://262.ecma-international.org/14.0/#sec-numberbitwiseop
Mar 05 23:13:12 <corwin>	let's make JR a strongly typed flavor of EMCAscript that compiles down to rust
Mar 05 23:13:13 <Odin-DECK>	sham1: Oh, right. Yeah, the bitwise operators are strange in an all-float environment.
Mar 05 23:13:15 <sham1>	So yeah, `x|0` was used as an optimisation hint by asm.js, but there's a spec reason for that. It wasn't just a random thing
Mar 05 23:13:32 <bpalmer>	corwin: javascript, jr. ?
Mar 05 23:13:48 <corwin>	bpalmer: you know, for kids.
Mar 05 23:13:48 <sham1>	JavaRust?
Mar 05 23:14:24 <Odin-DECK>	corwin: https://www.assemblyscript.org/ <-- This close enough for you?
Mar 05 23:14:30 <corwin>	I was trying to rhyme with "TS".  I got nothing.
Mar 05 23:14:55 <JohnGalt>	Lets make everything staticly typed!! then we can all stop reading code and abuse type checkers
Mar 05 23:14:59 <Odin-DECK>	Although the folks running that project are very much not fans of Rust and want to use WTF-16 for everything because "that's what JavaScript does".
Mar 05 23:15:03 <bpalmer>	rudybot: then I told the kids, they can go to their room without any supper, or they can make me an ecommerce PWA. They get the punishment they choose.
Mar 05 23:15:05 <rudybot>	bpalmer: h OK. Try this: https://plus.google.com/photos/115209488640908180409/albums/posts/5862911967574803954?banner=pwa&pid=5862911967574803954&oid=115209488640908180409
Mar 05 23:15:07 <corwin>	I have never looked into webassy; I should learn something about that one day.
Mar 05 23:15:35 <Odin-DECK>	corwin: It's really cool and completely insane at the same time.
Mar 05 23:18:15 <JohnGalt>	omg anyone who uses google anything either hasnt seen the google graveyard or are in denial
Mar 05 23:18:23 <JohnGalt>	anyone got any stadia controllers? LOL
Mar 05 23:18:32 <JohnGalt>	Circles?
Mar 05 23:18:52 *	Odin-DECK strongly suspects that's not a recent link.
Mar 05 23:19:33 <sham1>	WebAssembly is neat in many ways.
Mar 05 23:20:01 <Odin-DECK>	It's really a shame that it's tied to the web. :)
Mar 05 23:20:30 <sham1>	I've been thinking about compiling ECL for WASM for work stuff so I could run CL stuff like Maxima on the browser. It would probably require a bunch of extra stuff, but it might just be worth it
Mar 05 23:24:05 <rpav>	i think wasm is neater for what it might eventually do out of the browser, but otoh it's err not the best and not necessarily necessary anyway
Mar 05 23:24:42 <sham1>	WASI is an interesting model of OS interaction
Mar 05 23:26:27 <Odin-DECK>	wasm has a potentially interesting role in making it easier to run untrusted code, IMO.
Mar 05 23:27:01 <Odin-DECK>	But it's really heavily oriented towards fairly static, AOT-compiled languages, which is annoying.
Mar 05 23:27:27 <hodapp>	enh, we've already enough things for more dynamic languages
**** BEGIN LOGGING AT Wed Mar  6 01:51:37 2024

Mar 06 01:51:37 *	Now talking on #emacs
Mar 06 01:51:37 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 06 01:51:37 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 06 01:51:53 <mattie>	I also think emacs is great because it's stable, linux/*bsd is rotten with breakage and it makes the internet and docs complete garbage
Mar 06 01:52:10 <mattie>	you search and its stale six months later when someone breaks it
Mar 06 01:52:27 <e1f>	when they are asked for examples of their code during a pre-interview, they can provide the github minks to their projects
Mar 06 01:52:47 <e1f>	links*
Mar 06 01:55:10 <e1f>	we run freebsd on our servers, and it has been quite stable for decades. the last upgrade however, was ugly; there were changes to an intermediate stage of the os upgrade procedure that broke a few things esp. around pam and ssl
Mar 06 01:55:36 <e1f>	were you referring to that?
Mar 06 01:56:43 <mattie>	freebsd spontaneously rebooted when i breathed on it
Mar 06 01:57:10 <mattie>	changing caps -> ctrl required hand editing a keymap
Mar 06 01:57:46 <weary-traveler>	pam breakage doesn't sound fun to deal with
Mar 06 01:58:12 <e1f>	no, especially when you can't ssh to the server
Mar 06 01:58:48 <weary-traveler>	ouch.
Mar 06 02:00:28 <bremner>	for some reason I am mildly surprised that FreeBSD uses PAM. I thought PAM was a linuxism.
Mar 06 02:04:57 <e1f>	initially it was copied from linux, but then the openpam standards were set
Mar 06 02:06:10 <e1f>	c.1995
Mar 06 02:06:34 <e1f>	manpage says '97
Mar 06 02:07:38 <wgreenhouse>	FreeBSD also borrows Xorg and such
Mar 06 02:08:23 <bremner>	oh well, 1997, so recent, no wonder I didn't catch up yet
Mar 06 02:08:56 <divya`>	How long are you guys' dotemacs?
Mar 06 02:10:08 <technomancy>	1466
Mar 06 02:10:31 <technomancy>	but that includes a line for every gif in my gifs directory
Mar 06 02:10:43 <wgreenhouse>	only 238 lines right now. and no gif menu. lmao
Mar 06 02:10:55 <technomancy>	so the real code is 506 lines less
Mar 06 02:11:25 <grym>	pretty long
Mar 06 02:11:46 <grym>	~3k lines
Mar 06 02:12:41 <weary-traveler>	1658 SLOC per sloccount
Mar 06 02:13:02 <weary-traveler>	a considerable portion of that is probably email configuration
Mar 06 02:13:55 <grym>	ok, 2k sloc
Mar 06 02:14:08 <wgreenhouse>	email.
Mar 06 02:14:28 <wgreenhouse>	weary-traveler: amazingly, my gnus config at present is almost all M-x customize
Mar 06 02:14:29 <JordiGH>	Hey, are any of you at Facebook or Meta?
Mar 06 02:14:31 <JordiGH>	I have questions.
Mar 06 02:14:32 <wgreenhouse>	there really was not much to do
Mar 06 02:14:33 <grym>	the email, the email; what, what, the email
Mar 06 02:14:45 <JordiGH>	grym: sbemail!
Mar 06 02:14:53 <grym>	there, that ought to agestamp me
Mar 06 02:15:01 <grym>	JordiGH: da cheat is _grounded_
Mar 06 02:15:09 *	wgreenhouse refrains from asking how JordiGH and grym type with boxing gloves on
Mar 06 02:15:35 <grym>	with flash!
Mar 06 02:15:45 <JordiGH>	grym: LIGHT SWITCH RAVE
Mar 06 02:15:55 <weary-traveler>	wgreenhouse: i started there, but with multiple accounts there're too many redundancies. especially if you're using something like gnus-alias in addition to posting styles
Mar 06 02:16:06 <weary-traveler>	s/redundancies/duplications/
Mar 06 02:16:21 <wgreenhouse>	weary-traveler: I stuck with posting styles and the X-Message-SMTP-Method facility in message-mode
Mar 06 02:16:39 <wgreenhouse>	I was aggressively trying not to have gnus-related hax I had to think about, tho
Mar 06 02:16:49 <wgreenhouse>	and pretty much succeeded
Mar 06 02:16:57 <JordiGH>	It's funny, I seem to know a bunch of people working at Google, but I don't know any at Facebook.
Mar 06 02:17:08 <wgreenhouse>	JordiGH: we used to have a mole there
Mar 06 02:17:32 <weary-traveler>	heh i use gnus-alias to set the X-Message-SMTP-Method. gnus-alias was almost entirely because i couldn't figure out how to get debbugs.el to get the right settings
Mar 06 02:17:38 <JordiGH>	I think I got pissy with the Facebook people I used to know after they forked off Mercurial.
Mar 06 02:17:41 <grym>	wgreenhouse: yeh and he's the only one i can think of...
Mar 06 02:17:55 <wgreenhouse>	weary-traveler: ah yeah I've heard of debbugs completely hosing your preexisting posting styles
Mar 06 02:18:03 <technomancy>	Mercurial; that's the thing that crossed the line?
Mar 06 02:18:06 <wgreenhouse>	is it this sort of thing
Mar 06 02:18:39 <technomancy>	not Cambridge Analytica, or the Rohingya situation
Mar 06 02:19:12 <grym>	technomancy: allowing non-@edus.  after that, it was just all downhill
Mar 06 02:19:31 <weary-traveler>	wgreenhouse: whatever you've heard. it's that and worse. i've come to appreciate just how much "magic" there is in sending email via emacs. to a large extent gnus deals with it for you and all is fine and dandy till debbugs comes bumbling along
Mar 06 02:19:40 <grym>	if you can't upload a spreadsheet of your classes to find out who the hot people are you're taking classes with, just ... delete it
Mar 06 02:19:43 <grym>	what's the point
Mar 06 02:19:45 <technomancy>	grym: well, even when it was .edus it was still initially designed as stalkerware
Mar 06 02:19:51 <e1f>	til openpam was developed for freebsd under a darpa contract
Mar 06 02:19:57 <technomancy>	jinx
Mar 06 02:19:59 <grym>	:D
Mar 06 02:20:03 <wgreenhouse>	weary-traveler: which is interesting, because debbugs is made of gnus' libraries, and is [ab]using its structures. maybe that's the problem?
Mar 06 02:20:21 <wgreenhouse>	it does things as globals that interfere with the global state gnus expects to solely run??
Mar 06 02:20:22 <fsbot>	Ask yourself, do you really want to know?
Mar 06 02:20:38 <wgreenhouse>	if so, that calls for some kind of profile facility in gnus
Mar 06 02:20:49 <wgreenhouse>	so you can safely use gnus proper and debbugs.el in the same emacs
Mar 06 02:20:53 <weary-traveler>	wgreenhouse: it's just aware enough [of gnus] to cause trouble
Mar 06 02:21:16 <wgreenhouse>	weary-traveler: interesting. is one order more dangerous than the other?
Mar 06 02:21:29 <wgreenhouse>	are you more likely to fall down go boom with gnus already up?
Mar 06 02:21:41 <weary-traveler>	i gave up on trying to fix it and went the way of gnus-alias. which clumsy as it is, at least works with the help of x-message-smtp-method
Mar 06 02:23:01 <JordiGH>	technomancy: fb messed with my Mercurial, you bet that's where they crossed the line.
Mar 06 02:23:02 <weary-traveler>	wgreenhouse: you mean if within the same emacs session you have both gnus and debbugs running does that cause additional headache?
Mar 06 02:23:09 <JordiGH>	This aggression will not stand, man.
Mar 06 02:23:10 <JordiGH>	,dude
Mar 06 02:23:11 <fsbot>	"Do you speak Emacs sir? Parla usted Elisp?"
Mar 06 02:23:25 <weary-traveler>	if that's the question, not to my knowledge. they mostly seem to set things in a buffer-local fashion
Mar 06 02:23:48 <grym>	let's add a sounding mode to mercurial to prevent stds
Mar 06 02:23:49 <corwin>	e1f: we saw the same on svh servers
Mar 06 02:24:28 <corwin>	so whatever going on with pam/openssl is breaking trisquel also, I guess?  (No BSD there.)
Mar 06 02:25:18 <wgreenhouse>	weary-traveler: I'll have to play with this (carefully).
Mar 06 02:28:04 <weary-traveler>	wgreenhouse: if you do come up with a way to get debbugs to safely not override posting styles and obviate the need for gnus-alias, i'd be curious. as far as broken things are concerned the issue with debbugs is fairly contained - it simply tried very hard and succeeded in being oblivious of posting styles
Mar 06 02:28:05 <e1f>	oh, interesting. i wonder what the underlying cause is. we didn't investigate any further after getting things to work again
Mar 06 02:28:27 <weary-traveler>	*user-defined posting styles (iirc it sets it to some of its own)
Mar 06 02:28:45 <e1f>	it was odd that there was no mention of it in the release notes
Mar 06 02:28:55 <weary-traveler>	the other thing debbugs.el does is it assumes if you're using it, surely you only want to be working on Emacs
Mar 06 02:29:43 <wgreenhouse>	lol
Mar 06 02:38:11 <weary-traveler>	so applying patches isn't that smooth. i have a clunky process atm with saving the articles via gnus and then applying via magit. i've heard good things about b4 and piem but not tried any of those
Mar 06 02:46:49 <mattie>	wow, the only portable way to roll is to build from source
Mar 06 02:49:55 <spikemaster>	well i mean all Emacs are built from source. It's just whether it's by you or some other guy.
Mar 06 02:50:28 <mattie>	well every system seems to have different versions and features
Mar 06 02:50:35 <mattie>	it's obnoxious to the extreme
Mar 06 02:51:19 <mattie>	Im just burnt from trying to get open sores to work at all
Mar 06 02:51:37 <weary-traveler>	switch to guix or nixos?
Mar 06 02:51:44 <mattie>	possible
Mar 06 02:51:53 <mattie>	Ill take a look at them
Mar 06 02:52:01 <weary-traveler>	though i've had no issues simply using those as package managers on  opensuse
Mar 06 02:53:12 <mattie>	linux mint had 27
Mar 06 02:53:24 <mattie>	and unless you checked it gave you a flatpack
Mar 06 02:59:35 <hwpplayer1>	hi Emacs People !
Mar 06 03:00:08 <dcb>	I'm guessing compiling emacs from source should be simpler than setting up guix
Mar 06 03:00:56 <hwpplayer1>	building or compiling ? which one do you prefer to say ?
Mar 06 03:03:46 <mattie>	mm compiling
Mar 06 03:03:57 <mattie>	im kinda old like that
Mar 06 03:04:03 <mattie>	building is probably more accurate
Mar 06 03:06:15 <dcb>	"prefabricate"
Mar 06 03:09:14 <mattie>	well if Im going to beta test something I would rather it be emacs
Mar 06 03:20:01 <weary-traveler>	dcb: depends on if there are possibly other packages that need to be compiled that may require different versions of the build toolchain. if that's the case, setting up guix is simpler
Mar 06 03:29:56 <mattie>	wow, 30 is actually working
Mar 06 03:33:13 <mattie>	open source is war on your productivity
Mar 06 03:35:51 <grym>	`paru emacs-git`, wait about ... 3 minutes?
Mar 06 03:35:53 <grym>	hard life
Mar 06 03:37:12 <mattie>	what is paru?
Mar 06 03:37:25 <grym>	an arch package manager front-end
Mar 06 03:37:39 <mattie>	I used arch, it broke alot
Mar 06 03:37:53 <mattie>	had good docs though
Mar 06 03:37:55 <mattie>	pacman sux
Mar 06 03:38:06 <dcb>	even the steps from the installation readme doesn't seem particularly complex
Mar 06 03:38:35 <mattie>	a near infinite loop of installing -dev packages
Mar 06 03:38:58 <grym>	mmm that sounds like ubuntu
Mar 06 03:39:11 <mattie>	I think mint is ubuntu based
Mar 06 03:39:31 <grym>	i forget
Mar 06 03:39:33 <mattie>	two of my servers are ubuntu as well
Mar 06 03:40:20 <mattie>	by manually downloading and installing firmware I did get wifi, and wifi6 as well
Mar 06 03:40:30 <mattie>	but wifi6 has a weaker signal
Mar 06 03:41:15 <dcb>	maybe I was lucky but I experienced less breaking with arch, compared to two ubuntu distros I ran
Mar 06 03:41:51 <mattie>	Everything has broken for me
Mar 06 03:42:04 <grym>	i run arch at work
Mar 06 03:42:07 <grym>	no regrets so far
Mar 06 03:42:17 <mattie>	MacOS severed find my for my airpods, and trashed my keyring twice on the i9 machine
Mar 06 03:42:20 <dcb>	once I had issues starting X after an update to the graphics driver... and that was it
Mar 06 03:42:47 <mattie>	every bsd had every breakage imaginable, and doesnt support thunderbird
Mar 06 03:42:52 <mattie>	thunderbolt
Mar 06 03:43:01 <dcb>	I did have issues upgrading between major ubuntu versions, however
Mar 06 03:43:16 <mattie>	linux screwed me from 2.x on
Mar 06 03:43:36 <grym>	dcb: coworker hit the weirdest do-release-upgrade bug i've seen last week
Mar 06 03:44:06 <e1f>	mattie: have you considered that you may be cursed?
Mar 06 03:44:08 <grym>	he wound up with two kernels, and one of them believed that the uuids in fstab were wrong
Mar 06 03:44:23 <craigbro>	should go into QA, would be stellar
Mar 06 03:44:24 <grym>	a little apt-purge later...
Mar 06 03:44:42 <dcb>	the release upgrades are fairly time consuming sometimes
Mar 06 03:44:55 <mattie>	e1f: if you only knew.....
Mar 06 03:45:29 <dcb>	so much that I got into the habit of simply overwriting the install, home partition included since most things would break
Mar 06 03:46:07 <dcb>	I kinda forgot the feeling of declaring distro bankruptcy after arch
Mar 06 03:53:01 <weary-traveler>	suse tumbleweed does rolling distro right. their openqa means breakages are rare. and snapper and btrfs and their grub2 patches ensure that when they do occur rolling back is easy
Mar 06 03:54:43 <e1f>	i'll contact the vatican and see if they're interested enough in your case for an exorcism
Mar 06 03:55:51 <craigbro>	anyone got an erc face mapping for modux themes?
Mar 06 03:56:02 <craigbro>	modus even....
Mar 06 04:18:20 <Viking667>	hi all
Mar 06 04:19:32 <mattie>	yo
Mar 06 04:20:08 <mattie>	Laptop works, except for yubikey, Macallan 15 yr, Single Malt double cask
Mar 06 04:20:44 <Viking667>	sounds like a nice way to celebrate. Why does a laptop rate that?
Mar 06 04:20:54 <mattie>	Unsurprisingly Emacs 30 is very good indeed
Mar 06 04:21:10 <Viking667>	I haven't taken the plunge.
Mar 06 04:21:23 <mattie>	Because I have installed openbsd, freebsd, dragonfly bsd, and now Linux mint with endless headaches
Mar 06 04:21:53 <Viking667>	so OpenXNI... er,8ONuth
Mar 06 04:21:56 <Viking667>	 Cat.....
Mar 06 04:22:16 <mattie>	Yubikey I will battle later
Mar 06 04:22:17 <Viking667>	So. OpenBSD gave you grief, FreeBSD gave you grief, etc?
Mar 06 04:22:23 <mattie>	oh yeah
Mar 06 04:22:34 <Viking667>	huh? What about the toaster BSD?
Mar 06 04:22:43 <spikemaster>	craigbro: something like this can be used to tweak the erc faces. http://paste.debian.net/1309616/
Mar 06 04:23:33 <craigbro>	spikemaster: thanks
Mar 06 04:23:48 <mattie>	In a world of terrible Operating Systems Emacs is the only constant
Mar 06 04:24:14 <Viking667>	I think I used some form of green, as it was a passable colour that worked in both light and dark themes. I'll pull up the exact colour in a moment.
Mar 06 04:25:12 <Viking667>	Yeah. Here we are:     (erc-input-face ((t (:foreground "forest green"))))
Mar 06 04:26:06 <wgreenhouse>	a good trick is to borrow something that will usually inherit from a prominent face in whatever theme, e.g. :inherit font-lock-constant-face
Mar 06 04:26:51 <Viking667>	Granted, and I sometimes wish I had thought of that. However, I think I came up with a workable result.
Mar 06 04:28:00 <Viking667>	And the beauty of my solution is that it doesn't matter what theme I'm using, my "forest green" stays the same throughout.
Mar 06 04:28:09 <Viking667>	Anyhow, I gotta shaddup
Mar 06 04:37:22 <mattie>	my pain: bsd = apm, macos = pmset, linux = acpi - to get battery charge
Mar 06 04:39:34 <Viking667>	And then there's Windows.
Mar 06 04:39:50 <Viking667>	No doubt that's some weird libcall from powershell
Mar 06 04:39:51 <mattie>	we do not invoke the dark one here
Mar 06 04:40:16 <Viking667>	Big deal. It's just .mmmgffmffmmmffmmm....
Mar 06 04:40:45 <mattie>	write out windows, erase half the letters, re-incantate
Mar 06 04:40:51 <mattie>	from set satanism
Mar 06 04:41:11 <Viking667>	inos
Mar 06 04:44:35 <craigbro>	oh..... heh, I had disabled global font lock mode...
Mar 06 04:51:05 <craigbro>	after almost 30 years I still manage to derp in my emacs
Mar 06 04:51:20 <Viking667>	that's a derp?
Mar 06 04:53:02 <craigbro>	I was confused as to why the set-face-attribute calls where not making any colors in my ERC buffers..  took me 10 minutes to realize it was because no font-lock in erc-mode
Mar 06 04:53:09 <craigbro>	so yah, calling that a derp
Mar 06 04:53:55 <Viking667>	Where were you using that set-face-attribute call? from within an ERC window's minibuffer?
Mar 06 04:54:53 <craigbro>	nah, more complex...  in the indirect edit of a org-babel code block..
Mar 06 04:55:31 <Viking667>	Ah. Won't do much there. Did you try inside M-:  (I think that's where it'd go?)
Mar 06 04:57:34 <Viking667>	... prod... prod... hmm, meat's still soft, marthter.
Mar 06 05:17:23 <craigbro>	Viking667: well, custom-set-face worked from any context, so just converted to that form
Mar 06 05:18:02 <craigbro>	but then decided I was ok with the default colors that the theme provided already... so deleted it all
Mar 06 07:10:06 <codingquark>	Good morning!
**** BEGIN LOGGING AT Wed Mar  6 07:16:32 2024

Mar 06 07:16:31 *	Now talking on #emacs
Mar 06 07:16:31 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 06 07:16:31 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 06 07:47:37 <codingquark>	What kinda h/w would one need to play DCS in VR these days?
Mar 06 07:47:47 <codingquark>	Not VR h/w, the computer
Mar 06 07:48:10 <bpalmer>	DCS?
Mar 06 07:48:21 <codingquark>	digital combat sim
Mar 06 07:48:31 <codingquark>	https://www.digitalcombatsimulator.com/en/
Mar 06 07:48:48 <RickAstley>	How do I tell emacs minibuffer it should always use a certain path?
Mar 06 07:49:09 <bpalmer>	RickAstley: what do you mean?
Mar 06 07:49:14 <RickAstley>	For instance I always want it to go to home when I find file. Not the current directory
Mar 06 07:49:39 <RickAstley>	bpalmer: using helm-find-file I always want it to start at ~/ not current dir
Mar 06 07:49:48 <RickAstley>	Although I want this behavior to change depending on the major mode
Mar 06 07:50:25 <wgreenhouse>	RickAstley: see ,,dv read-file-name-function
Mar 06 07:50:25 <fsbot>	The function called by ‘read-file-name’ to do its work.
Mar 06 07:50:25 <fsbot>	It should accept the same arguments as ‘read-file-name’.
Mar 06 07:50:25 <fsbot>	Defined in `/usr/share/emacs/28.2/lisp/minibuffer.elc'.
Mar 06 07:50:27 <bpalmer>	RickAstley: by default, find file (and thus probably helm-find-file) will use the path in default-directory to start from
Mar 06 07:50:51 <bpalmer>	RickAstley: you can simply set this value (such as with M-x cd RET ), either interactively, or in your mode hook
Mar 06 07:51:33 <wgreenhouse>	or, yeah, manipulate default-directory (which is buffer local) from a mode hook--better than defining a new read-file-name-function. :)
Mar 06 07:52:17 <RickAstley>	wgreenhouse bpalmer: ty
Mar 06 07:52:43 <RickAstley>	any way to bookmark / mark this IRC fragment with circe and org-remark
Mar 06 07:57:04 <RickAstley>	Wondering if there's a way to save circe-channel-mode in like a text file as an irc log then highlight stuff
Mar 06 07:58:01 <RickAstley>	I see there's erclogging...
Mar 06 07:58:46 <RickAstley>	wasamasa: where do I read about how to log with circe
Mar 06 07:59:04 <bpalmer>	you can just copy and paste things into a text file.
Mar 06 07:59:21 <bpalmer>	otherwise, I believe circe has a logging module, but you'll have to check its documentation
Mar 06 07:59:44 <RickAstley>	how do I pull up manual on emacs package I always forget this
Mar 06 07:59:57 <RickAstley>	M-x info no circe entry :/
Mar 06 08:00:14 <bpalmer>	fsbot: circe
Mar 06 08:00:15 <fsbot>	Circe is [0] a Client for IRC in Emacs at https://github.com/jorgenschaefer/circe/wiki
Mar 06 08:00:15 <fsbot>	[1] Visit us in #emacs-circe
Mar 06 08:00:26 <bpalmer>	check its wiki on github
Mar 06 08:02:28 <RickAstley>	found it thank
Mar 06 08:02:34 <RickAstley>	If I want to make the wiki into info package howto
Mar 06 08:06:40 <RickAstley>	circe doesn't log until buffer killed and if you kill buffer it leaves the channel :/
Mar 06 08:07:37 <bpalmer>	that doesn't seem like it's useful behavior, so I wonder if you might be misinterpreting something
Mar 06 08:12:05 <RickAstley>	odd, circe logs even when the buffer isn't killed
Mar 06 08:12:10 <RickAstley>	idk why the docs say that
Mar 06 08:12:13 <RickAstley>	I'll update them
Mar 06 08:17:08 <RickAstley>	can someone replay for me the question I asked before I was asking about logging and what the answer was
Mar 06 08:17:26 <RickAstley>	idk if there's a bot here for that
Mar 06 08:19:20 <RickAstley>	I wonder if someone sent me weird unicode if the write file could pwn me :D
Mar 06 08:24:12 <bkhl>	Certainly stuff like this can happen with bugs in UTF-8 parsing: https://www.mozilla.org/en-US/security/advisories/mfsa2008-37/
Mar 06 08:44:17 <Viking667>	pffft. No luck searching for an oil painter called Minteer. I can see pictures, but no biographical data on them whatsoever aside from their having painted in the 1940s and '50s.
Mar 06 08:49:12 <Viking667>	 I'm also not having much luck with another artist simply titled H. Carter.
Mar 06 09:50:44 <philipp_>	When I use M-x compile, why does the command run in some other directory, but not in the directory of the current file or in default-directory?
Mar 06 09:51:13 <philipp_>	Nevermind, I was using recompile instead of compile.
Mar 06 10:03:32 <Viking667>	And here was I thinking that compile actually compiled emacs. It doesn't, but I guess it could be taught how - I went the bash script route, but there's no reason I couldn't have figured out how to do it from within Emacs itself - the only problem being replacing the running binary.
Mar 06 10:34:39 <APic>	Moin
Mar 06 10:34:40 <APic>	,BotSnack
Mar 06 10:34:41 *	fsbot beams
Mar 06 10:45:58 *	Viking667 splits like bananas
Mar 06 10:46:52 <jbe>	why don't you make like a banana and leaf
Mar 06 11:07:51 <jbe>	,yow
Mar 06 11:07:51 <fsbot>	I haven't been married in over six years, but we had sexual counseling every day from Oral Roberts!!
Mar 06 11:53:09 <RickAstley>	based fsbot
Mar 06 11:54:22 <xum>	Hello
Mar 06 11:54:28 <RickAstley>	hello xum :D
Mar 06 11:54:53 <xum>	im just trying out circe, so please be kind to me
Mar 06 11:55:09 <RickAstley>	I am also using circe
Mar 06 11:55:27 <RickAstley>	the dev wasamasa is here
Mar 06 11:55:33 <xum>	oooooo
Mar 06 11:56:04 <xum>	i need to write my config, i just adhocced this connection lol
Mar 06 11:56:14 <xum>	why does the window flicker so much
Mar 06 11:58:45 <RickAstley>	my window doesn't flicker
Mar 06 12:00:00 <xum>	strange, anyways, ill figure something out
Mar 06 12:02:12 <RickAstley>	are you using a CRT
Mar 06 12:03:39 <bremner>	paper printing terminals are the best for flicker, but the framerate is meh
Mar 06 12:05:26 <yax__>	hello hello I am back with my proper nick now
Mar 06 12:06:26 <RickAstley>	bremner: lawl
Mar 06 12:15:38 <codingquark>	our biggest problem is emacs
Mar 06 12:16:39 <yax__>	a very hard problem to solve imo
Mar 06 12:19:15 <wasamasa>	RickAstley: wiki makes it a lot easier to just change the community docs whenever needed
Mar 06 12:19:43 <wasamasa>	I see you've found it already
**** BEGIN LOGGING AT Wed Mar  6 13:29:43 2024

Mar 06 13:29:41 *	Now talking on #emacs
Mar 06 13:29:41 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 06 13:29:41 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 06 13:36:41 <charmitro>	Hi all, does "define-multisession-variable" work with lists?
Mar 06 13:47:19 <grym>	,yow
Mar 06 13:47:19 <fsbot>	Gibble, Gobble, we ACCEPT YOU ---
Mar 06 14:02:40 <quiliro>	Bonan matenon!
Mar 06 14:02:50 <quiliro>	(Good morning!)
Mar 06 14:03:52 <sham1>	Matenon!
Mar 06 14:05:25 <quiliro>	hey sham1
Mar 06 14:05:34 <quiliro>	what's up?
Mar 06 14:06:41 <quiliro>	Trying to understand the difference between `defvar' and `setq'.
Mar 06 14:07:50 <quiliro>	I am facinated by clicking on functions between ` and '
Mar 06 14:12:56 <quiliro`>	I am also intrigued about how to discover what button's function is before I click on it.
Mar 06 14:14:41 <quiliro`>	I am facinated by clicking on functions between ` and '.  I am also intrigued about
Mar 06 14:14:46 <quiliro`>	how to discover what button's function is
Mar 06 14:14:48 <quiliro`>		   before I click on it.
Mar 06 14:15:18 <quiliro`>	I am facinated by clicking on functions between ` and '.  I am also intrigued about
Mar 06 14:15:20 <quiliro`>	how to discover what a button's function is before I click on it.
Mar 06 14:15:33 <quiliro`>	hmm
Mar 06 14:16:01 <quiliro`>	Still need to learn how to use `join-line' on several lines.  I guess it is just C-u
Mar 06 14:23:40 <mekeor>	quiliro: join-line will be applied on the current region
Mar 06 14:24:03 <snoriman>	hi, what is you "goto theme for a fresh emacs 29 install?
Mar 06 14:25:09 <mekeor>	i have written my own theme. it evenly distributes the eight main colors with regard to human perception by using the oklch color space.
Mar 06 14:25:21 <mekeor>	otherwise, i'd use prot's ef- or modus-themes.
Mar 06 14:25:57 <snoriman>	mekeor: I just found out about modus-themes, looking into them now
Mar 06 14:26:40 <spikemaster>	i use a my own theme too. They are pretty easy to get going due to default face inheritance. 90% of a theme's flavor is just choosing a default fg, bg color.
Mar 06 14:27:55 <mekeor>	spikemaster: i have disabled this inheritance in my theme by specifying 'unspecified :D https://codeberg.org/mekeor/emacs-evenok-themes/src/branch/default/evenok-theme.el#L60
Mar 06 14:29:40 *	ski idly ponders using C64 font (and colors) in Emacs
Mar 06 14:30:44 <mekeor>	ski: is it white-on-blue?
Mar 06 14:31:26 <ski>	no, light blue on dark blue
Mar 06 14:31:31 <snoriman>	hmm does 29 still load ~/.emacs.d/init.el? (it doesn't look like it)
Mar 06 14:32:42 <mekeor>	snoriman: yes, it does. "Emacs looks for your init file using the filenames ‘~/.emacs.el’, ‘~/.emacs’, or ‘~/.emacs.d/init.el’ in that order" (info "(emacs) Find Init")
Mar 06 14:33:36 <snoriman>	mekeor: hmm it seems it automatically created ~/.emacs
Mar 06 14:34:10 <mekeor>	snoriman: what is its content? i dont think that emacs did this.
Mar 06 14:34:45 <snoriman>	oh I just remove it
Mar 06 14:35:18 <spikemaster>	Emacs might possibly make it's own init file for you if it can't find an existing one. Not familiar with that behavior as i always have my own init ready to go
Mar 06 14:35:18 <snoriman>	I'm working on a "clean" pc, maybe it saves something for me
Mar 06 14:36:47 <mekeor>	snoriman: where did you read "Emacs might possibly make it's own init file for you if it can't find an existing one."
Mar 06 14:37:06 <mekeor>	(there is a typo: "it's" -> "its")
Mar 06 14:37:40 <snoriman>	I did not read that anywhere? what do you mean?
Mar 06 14:38:29 <mekeor>	oh, sorry, i think overlooked that spikemaster and snoriman are not the same nick
Mar 06 14:38:31 <spikemaster>	that was me who said that. It is a wild guess for where your unexpected .emacs  came from
Mar 06 14:39:21 <snoriman>	np
Mar 06 14:40:52 <mekeor>	perhaps the file is created when using custom.el and a customization is saved
Mar 06 14:41:08 <charmitro>	iirc emacs will create a .emacs.d folder if nothing else was found, but not sure if a init.el file is created :-/
Mar 06 14:53:59 <quiliro>	dankon, mekeor
Mar 06 14:55:15 <grym>	snoriman: i like ef-themes (by the same man who did modus)
Mar 06 14:55:33 <grym>	,ef-themes
Mar 06 14:55:34 <fsbot>	My pants just went to high school in the Carlsbad Caverns!!!
Mar 06 14:55:38 <grym>	,ef-theme
Mar 06 14:55:39 <fsbot>	Everybody gets free BORSCHT!
Mar 06 14:55:42 <grym>	mmm, borsh
Mar 06 14:58:30 <grym>	i use ef-deuteranopia-light and -dark, despite not having that particular perceptual defect
Mar 06 14:58:37 <grym>	(he just picked nice colors!)
Mar 06 14:59:23 <quiliro>	what is borscht?  Is it a russian food?
Mar 06 14:59:34 <twb>	It's a kind of beet soup
Mar 06 14:59:45 <grym>	it is a pan-slavic thing
Mar 06 14:59:48 <quiliro>	I love beet!
Mar 06 15:00:05 <grym>	usually beet, there's a version that uses sorrel instead that's more popular in the summer
Mar 06 15:00:27 <quiliro>	so the solution to war in ukraine is borscht?
Mar 06 15:00:50 <grym>	"borsh, kvass, and kasha" are like, the ukranian food trinity
Mar 06 15:00:57 <tazjin>	I never understood where the 't' came from in english
Mar 06 15:00:58 <quiliro>	nice
Mar 06 15:01:01 <tazjin>	there's no t
Mar 06 15:01:12 <quiliro>	oh!
Mar 06 15:01:32 <twb>	"Borscht ta kasha, yizha nasha"
Mar 06 15:01:39 <grym>	twb: ah, by way of yiddish
Mar 06 15:01:42 <grym>	err tazjin
Mar 06 15:01:49 <tazjin>	quiliro: it is spelled like that "officially" in English, but it doesn't actually end on a t in Russian (it ends on a sh-sound that doesn't really exist in English)
Mar 06 15:02:00 <grym>	The English spelling borscht[13] comes from Yiddish באָרשט (borsht), as the dish was first popularized in North America by Yiddish-speaking Ashkenazi Jews from Eastern Europe.
Mar 06 15:02:13 <grym>	so it hopped a language in the middle
Mar 06 15:02:15 <tazjin>	grym: but where did they get the t from :)
Mar 06 15:02:23 <grym>	tazjin: who knows!
Mar 06 15:02:25 <tazjin>	it remains a mystery!
Mar 06 15:02:41 <twb>	When they got to america they found a lot of unwanted t in the harbour
Mar 06 15:02:53 <grym>	wrong port of entry
Mar 06 15:03:15 <twb>	Aren't they both in the top-right bit
Mar 06 15:03:45 <grym>	yes, but NY far outpaced Boston in immigrant influx
Mar 06 15:04:42 <twb>	Huh in Russian it's Shchi.
Mar 06 15:04:48 <tazjin>	that's a different soup
Mar 06 15:04:56 <twb>	"Щи и каша — пища наша."
Mar 06 15:06:25 <grym>	i kind of draw the line at rasolnik
Mar 06 15:06:26 <hodapp>	what about immigrant reflux
Mar 06 15:06:40 <grym>	hodapp: philly
Mar 06 15:06:46 <grym>	obvs
Mar 06 15:06:49 <grym>	goes north to south, right :D
Mar 06 15:06:52 <hodapp>	hmmm I should make kasha
Mar 06 15:06:52 <tazjin>	hodapp: consult your doctor if you experience immigrant reflux for more than 3 days
Mar 06 15:07:13 <grym>	or in NY, consult your local nativist butcher
Mar 06 15:07:23 <hodapp>	wish there were any eastern european restaurants around here
Mar 06 15:07:27 <grym>	a daniel a day lewis  keeps the decaprio away
Mar 06 15:07:56 <hodapp>	judybot: I drink your milkshake
Mar 06 15:07:56 <judybot>	hodapp: and eat all of my carrots.
Mar 06 15:08:29 <twb>	TBH what I've seen of Eastern Europe's food, it seems pretty crap compared to Punjabi
Mar 06 15:08:37 <tazjin>	gonna go to a chechen restaurant in a bit, does that count as eastern european? time for some zhizhig, or maybe some ba'ar
Mar 06 15:08:52 <hodapp>	shhhh we don't call food crap here
Mar 06 15:09:07 <twb>	I mean, maybe I was just making it wrong
Mar 06 15:11:13 <hodapp>	unless it's midwestern food based on ranch dressing and mayonnaise
Mar 06 15:11:15 <hodapp>	that's crap
Mar 06 15:11:58 <tazjin>	twb: if you eat meat and are ever in moscow, try the restaurant Чемодан - they might be able to convince you ;)
Mar 06 15:12:04 <twb>	I like homemad focaccia but that's about as far east as I go
Mar 06 15:13:00 <tazjin>	but I'll never say no to punjabi food, though it feels like eating it every day might affect one's weight :p
Mar 06 15:14:24 <tazjin>	twb: oh also try Georgian food if you haven't, they even have some things that are a little similar to curries etc.
Mar 06 15:14:28 <twb>	I eat meat, but not much and not often.  The equivalent of shashlik here is from Indonesia https://en.wikipedia.org/wiki/Satay
Mar 06 15:14:53 <hodapp>	hmm not sure if I've had punjabi food
Mar 06 15:15:07 <twb>	Yeah I haven't looked at Georgia at all, I was more talking to Russian/Ukranian/Ashkenazi types last time I looked into Eastern European cuisine
Mar 06 15:19:20 <tazjin>	twb: do an image search for чахохбили and хачапури по аджарски, you'll see how these could kind of sort of fit into a similar niche as punjabi :)
Mar 06 15:19:56 <tazjin>	ah here's a good one: https://cafemimino.ru/wp-content/uploads/2017/11/chakhokhbili71.jpg
Mar 06 15:20:02 <twb>	I was just looking at https://upload.wikimedia.org/wikipedia/commons/8/80/%D0%92%D0%BA%D1%83%D1%81%D0%BD%D1%8B%D0%B9_%D0%B3%D1%80%D1%83%D0%B7%D0%B8%D0%BD%D1%81%D0%BA%D0%B8%D0%B9_%D1%85%D0%B0%D1%87%D0%B0%D0%BF%D1%83%D1%80%D0%B8.jpg and sighing at the sticker being in latin
Mar 06 15:20:03 <rudybot>	https://teensy.info/1QstwlBMAf
Mar 06 15:22:17 <twb>	ჩახოხბილი looks a bit like murgh makhani
Mar 06 15:22:51 <tazjin>	not quite the same flavour profile, but definitely looks similar
Mar 06 15:22:57 <grym>	georgian food is pretty great
Mar 06 15:23:11 <grym>	both georgias, in fact
Mar 06 15:23:12 <twb>	Cooking meat is just so much more work tho
Mar 06 15:23:28 <grym>	worth it
Mar 06 15:23:44 <twb>	Also way more expensive
Mar 06 15:23:45 <grym>	i trade work for time, generally
Mar 06 15:23:51 <Guest11>	Hola
Mar 06 15:23:52 <grym>	it is more expensive, yes
Mar 06 15:24:18 <grym>	(trading work for time means: grills / smokers are fantastic)
Mar 06 15:24:51 <twb>	It's like $20 for 1kg of meat vs $3 for 1kg of pulses (dry, so more like 3kg after soaking)
Mar 06 15:24:54 <grym>	brisket: prep and work time: about 15 minutes, tops.  cook time: like ... 9+ hours
Mar 06 15:25:23 <grym>	twb: maybe in your neck of the woods, but not here, and it depends very much on the species anyway
Mar 06 15:25:37 <twb>	The spread is like $5 IIRC
Mar 06 15:26:37 <tazjin>	twb: I buy meat from the farms that sell downstream to supermarkets etc., and it makes it MUCH cheaper
Mar 06 15:26:44 <tazjin>	but it means you have to buy a couple kg minimum right away
Mar 06 15:26:55 <tazjin>	and do a lot of cutting yourself :)
Mar 06 15:27:13 <twb>	OK, roo mince is 12.50$/kg today.  Chicken mince is 11$/kg, lamb mince is 14$/kg
Mar 06 15:27:34 <twb>	tazjin: yeah I live in the middle of a city, I can't easily walk to a farmer
Mar 06 15:27:54 <tazjin>	twb: right, but they have a logistics network to get stuff to the city, where it is processed further
Mar 06 15:28:12 <tazjin>	(I live in a huge city, too)
Mar 06 15:28:19 <rpav>	twb: what's the local currency?
Mar 06 15:28:30 <tazjin>	it requires some investigation though, and might just not be worth it if you don't eat meat that much
Mar 06 15:28:53 <grym>	the other meat solution is, of course, a shotgun
Mar 06 15:28:57 <twb>	rpav: AUD
Mar 06 15:29:04 <tazjin>	grym: and what are you gonna hunt in the middle of a city
Mar 06 15:29:05 <rpav>	grym: that's quite a bit of work
Mar 06 15:29:11 <grym>	rpav: it is a shitton of work, yes
Mar 06 15:29:22 <twb>	masoor from the whitefella supermarket is 5$/kg
Mar 06 15:29:22 <grym>	but you get about 80 kilos of meat per deer
Mar 06 15:29:25 <rpav>	twb: ah
Mar 06 15:29:54 <rpav>	prices are a bit cheaper here but not a _lot_
Mar 06 15:29:58 <grym>	ok, maybe 50-60
Mar 06 15:29:58 <tazjin>	grym: but then you need somewhere to store it etc.
Mar 06 15:30:10 <grym>	tazjin: yep.  or friends!
Mar 06 15:30:28 <twb>	grym: what, you're not doing bowhunting yet? :P
Mar 06 15:30:35 <rpav>	probably if you actually hunt you're going to want facilities
Mar 06 15:31:28 <grym>	twb: it's an ethical tradeoff, really
Mar 06 15:31:53 <grym>	bowhunting is arguably less humane, and i'm still mulling that over (i don't currently hunt at all)
Mar 06 15:32:21 <hodapp>	not even bots?
Mar 06 15:32:59 <twb>	hodapp: oh yeah, great idea.  Let's put the jellyfish-hunting robots in AGVs and have them hunt and skin deer.
Mar 06 15:33:12 <twb>	What could POSSIBLY go wrong
Mar 06 15:34:54 <twb>	https://spectrum.ieee.org/jeros-jellyfish-elimination-robotic-swarm (they're used by nuclear power plants to guard the water intakes)
Mar 06 15:36:02 <rpav>	also make them consume meat or other biological matter for power in an emergency
Mar 06 15:36:54 <twb>	https://www.robotictechnologyinc.com/images/upload/file/Presentation%20EATR%20Brief%20Overview%2013%20June%2010.pdf  they categorically denied that it consumes enemy corpses
Mar 06 15:36:55 <rudybot>	https://teensy.info/LLfPPrE04o
Mar 06 15:41:47 <grym>	twb: also, my bow is underpowered
Mar 06 15:42:06 <grym>	good enough for squirrels and bunnies, but nothing larger
Mar 06 15:43:44 <twb>	I was thinking one of those new-fangled steel ones
Mar 06 15:43:59 <grym>	i have an old-fangled steel one, but it's illegal for me to hunt with it
Mar 06 15:44:04 <grym>	i am not disabled, so i cannot use it
Mar 06 15:44:18 <twb>	https://en.wikipedia.org/wiki/Holless_Wilbur_Allen
Mar 06 15:44:33 <twb>	I mean the kind invented in the 1960s
Mar 06 15:44:49 <grym>	usually the limbs are composite now
Mar 06 15:44:55 <grym>	i don't use compound bows, though
Mar 06 15:46:05 <grym>	the bodies are aluminum, generally
Mar 06 15:48:49 <jbe>	whatever springy steel they use for railways
Mar 06 15:48:58 <grym>	(my old-fashioned steel one is a replica medieval crossbow with a steel lath for safety/reliability concerns)
Mar 06 15:49:28 <grym>	but it only draws at about 80 pounds, so it's not really cut out for hunting even if it was legal for me to use
Mar 06 15:55:13 <grym>	good for killing cardboard though
Mar 06 15:59:23 <JohnGalt>	This Emacs 30 is pretty sweet, I think I see a couple of new things but Im not sure yet
Mar 06 15:59:43 <JohnGalt>	it looks like the erc windows open with pop-to-buffer now
Mar 06 16:00:45 <JohnGalt>	ls
Mar 06 16:00:46 <JohnGalt>	ls
Mar 06 16:00:48 <JohnGalt>	cd grail
Mar 06 16:09:04 <lispmacs[work]>	hi, can I use magit to look at the log for a remote branch? Do I have to create the branch locally first?
Mar 06 16:10:56 <lispmacs[work]>	I see on the command line I can do `git log origin/branchname' but am not sure how to do quite the same thing in magit
Mar 06 16:11:23 <grym>	lispmacs[work]: from magit, l o
Mar 06 16:11:28 <grym>	then select the branch you want
Mar 06 16:11:30 <grym>	"log other"
Mar 06 16:12:13 <lispmacs[work]>	grym: okay, thanks
Mar 06 16:15:25 <spikemaster>	i like tig for viewing git logs.
Mar 06 16:20:25 <grym>	hmm, i should mess around with defining transients at some point here
Mar 06 16:43:31 <stefan-__>	I have two issues with autex' preview and tikzpictures: 1) there is an error in the generated picture and 2) the color is black but should be white, details are here: https://tex.stackexchange.com/questions/712111/auctex-preview-renders-tikzpicture-wrong
Mar 06 16:43:36 <stefan-__>	any ideas how to fix this?
Mar 06 16:49:11 <grym>	good news, everyone https://www.axios.com/2024/03/05/ai-trust-problem-edelman
Mar 06 16:50:23 <bremner>	what about the axios trust problem?
Mar 06 17:06:37 <mike_b>	is there way to hide metadata in org-agenda-follow-mode?
Mar 06 17:07:39 <corwin>	Hmm, the person in the hero-image seems about the right number of fingers, but still ... how do we know an AI didn't write this, grym?
Mar 06 17:07:57 <bremner>	how do we know grym is not an AI?
Mar 06 17:08:08 <corwin>	fair point.
Mar 06 17:13:49 <graywolf>	I wonder why there is no binding for comint-truncate-buffer.  eshell-truncate-buffer does have one.  I know that "C-c C-t" is reserved for major modes, but I am considering just binding it into comint-mode-map to mimic the eshell.
Mar 06 17:14:07 <graywolf>	How often are new binding added?  Is it worth sending patch or is it unlikely to be accepted?
Mar 06 17:17:01 <twb>	bremner: in a fight between p-zombies and LLMs, I'll back the zombies
Mar 06 17:17:59 <sham1>	I can tell that LLMs aren't conscious, while with a p-zombie I can't tell. So yeah, p-zombie
Mar 06 17:18:02 <twb>	corwin: the best hero is the Alexandrian.
Mar 06 17:21:31 <bremner>	rudybot: why is everyone talking about pee-zombies?
Mar 06 17:21:31 <rudybot>	bremner: people who use vi probably still pee in bed
Mar 06 17:21:43 <bremner>	hmm. Not sure I see the connection, but OK
Mar 06 17:23:04 <twb>	corwin: https://archive.org/details/diheronealessand00hero/page/n35/mode/2up - kind of hard to read
Mar 06 17:23:06 <weary-traveler>	so p-zombie is functionally equivalent to a person, but distinct in some untestable way? or is the distinctness observable?
Mar 06 17:24:07 <rpav>	weary-traveler: afaik the distinctness is supposed to be unobservable
Mar 06 17:24:40 <rpav>	but i think it probably has the same problem as the chinese room
Mar 06 17:24:49 <twb>	Per Wikipedia: "a description of machines which enable wonders in banquets and possibly also theatrical contexts by mechanical or pneumatical means"
Mar 06 17:28:51 <grym>	https://www.jaronlanier.com/zombie.html
Mar 06 17:29:02 <grym>	"It turns out that it is possible to distinguish a zombie2 from a person. A zombie has a different philosophy. That is the only difference. Therefore, zombies can only be detected if they happen to be philosophers. Dennett3 is obviously a zombie."
Mar 06 17:29:52 <rpav>	heh
Mar 06 17:31:23 <weary-traveler>	okay it seems there are various types of p-zombies. the behavioural zombie seems to be one where distinctness is conditionally unobservable whereas neurological zombie is one where the distinctness is unconditionally unobservable
Mar 06 17:32:26 <weary-traveler>	though as always with philosophy i do wonder if something is unconditionally unobservable, what's the point of treating it distinctly from an empty set
Mar 06 17:33:17 <sham1>	Metaphysics, which is where p-zombies and similar assorted phenomena come up, is unobservable by necessity
Mar 06 17:34:09 <grym>	i like lanier's takedown, fwiw
Mar 06 17:34:11 <grym>	it's very on brand
Mar 06 17:34:15 <rpav>	weary-traveler: that and i think people are mostly just asking the wrong questions, and current AI/LLM experiences should also indicate that
Mar 06 17:34:58 <grym>	"But the blur continues to linger on, and has a much wider impact than you might suspect. You see, it is not only that the question “Can machines think?” is regularly raised; we can —and should— deal with that by pointing out that it is just as relevant as the equally burning question “Can submarines swim?” A more serious byproduct of the tendency to talk about machines in anthropomorphic terms is
Mar 06 17:35:04 <grym>	the companion phenomenon of talking about people in mechanistic terminology. "
Mar 06 17:35:34 <rpav>	yeah that's another aspect
Mar 06 17:35:53 <grym>	ewd936 <3
Mar 06 17:36:31 <rpav>	but it's the usual "assign a word to a thing then assume the existing semantics of the word describe the thing"
Mar 06 17:36:36 <hodapp>	one of the bigger annoyances around ML/AI is how many people respond with just "oh yeah, well if it's made of silicon / implemented in software, it CAN'T think, by definition, therefore no AI" in slightly more complex terms
Mar 06 17:37:08 <rpav>	hodapp: and various "_obviously_ it's not thinking because.."
Mar 06 17:37:10 <dcb>	how do p-zombies compare to np-zombies?
Mar 06 17:37:15 <weary-traveler>	A has B, so clearly A is the same as B. A correlates with B, and so clearly A is the same as B....
Mar 06 17:37:16 <technomancy>	rudybot: tell me you've never watched the seminal TNG season 2 episode "Measure of a Man" without telling me you've never watched the seminal TNG season 2 episode "Measure of a Man"
Mar 06 17:37:17 <rudybot>	technomancy: Why the helll would a civilization advanced enough to have *starships* lose all but a few recordings of a seminal event in their history?
Mar 06 17:37:20 <grym>	dcb: undecidably!
Mar 06 17:37:35 <rpav>	like until you can show precisely how a human "thinks" maybe don't assume either way
Mar 06 17:37:37 <grym>	i've been rereading my weizenbaum of late, too
Mar 06 17:37:45 <grym>	rpav: we know for sure that we don't backprop
Mar 06 17:39:08 <sham1>	dcb: all p-zombies are np-zombies, but we don't know if all np-zombies are p-zombies
Mar 06 17:39:30 <rpav>	grym: sure but do we know it's not equivalent to whatever we _do_ do
Mar 06 17:40:37 <rpav>	like as a crude analogy, "we know the lambda calculus doesn't have a tape," but that doesn't make one model or the other unable to equivalently compute
Mar 06 17:43:55 <rpav>	(also i was under the impression they thought there was some form of backprop or that we couldn't rule it out or otherwise really weren't sure all the mechanics involved, but i'm very far from neurobiology)
Mar 06 17:43:59 <twb>	rpav: "assign a word to a thing" oh so now we're using OLD magic.  Naming and Contamination.
Mar 06 17:44:42 <rpav>	twb: ;)
Mar 06 17:44:52 <grym>	but were you there when the old magic was written
Mar 06 17:45:01 <grym>	(consider this ostrich)
Mar 06 17:47:55 <grym>	"For those educationists, Pavlov’s dog adequately captures the essence of Mankind —while I can assure you, from intimate observations, that it only captures a minute fraction of what is involved in being a dog—"
Mar 06 17:48:08 <grym>	always refreshing to read people who aren't particularly afraid of pulling punches
Mar 06 17:49:33 <thuna`>	What is the function to print a character in the "?thing" syntax?
Mar 06 17:50:20 <rpav>	is there one? a character isn't a _thing_ in elisp like in CL
Mar 06 17:50:33 <rpav>	?a is just reader syntax
Mar 06 17:50:41 <thuna`>	,(prin1 ?a)
Mar 06 17:50:41 <fsbot>	whoops,  Symbol’s function definition is void: fs-prin1
Mar 06 17:51:02 <thuna`>	At any rate, that prints ?a as well, so there must be a function
Mar 06 17:51:23 <rpav>	or to be specific, an int in a certain range is otherwise indistinguishable from a char, though i think we had some vaguely recent discussion of how good the checks for that were
Mar 06 17:51:29 <sham1>	,(princ ?a)
Mar 06 17:51:30 <fsbot>	97  ..(integer)
Mar 06 17:51:59 <thuna`>	If you do M-: ? a RET, you will see it in parenthesis
Mar 06 17:52:16 <rpav>	i see 97
Mar 06 17:52:30 <thuna`>	I see "97 (#o141, #x61, ?a)"
Mar 06 17:52:37 <rpav>	oh that
Mar 06 17:52:38 <twb>	"I can assure you" -- appeal to authority
Mar 06 17:53:28 <thuna`>	Found it, ,,df prin1-char
Mar 06 17:53:29 <fsbot>	prin1-char is a native-compiled Lisp function in ‘elisp-mode.el’.
Mar 06 17:53:29 <fsbot>	(prin1-char CHAR)
Mar 06 17:53:29 <fsbot>	Return a string representing CHAR as a character rather than as an integer.
Mar 06 17:53:29 <fsbot>	If CHAR is not a character, return nil.
Mar 06 17:53:30 <twb>	thuna`: they're ISO 10646 -- or maybe Unicode now -- codepoints
Mar 06 17:53:41 <rpav>	ah
Mar 06 17:54:00 <twb>	Good find - I didn't know that function existed
Mar 06 17:54:25 <sham1>	Well probably more like Unicode scalar values
Mar 06 17:54:27 <rpav>	there is also print-integers-as-characters
Mar 06 17:54:39 <rpav>	which that function might just set and then print
Mar 06 17:55:24 <sham1>	Because for example (prin1-char #xD800) sorta barfs before just giving you a tofu representation of the surrogate pair
Mar 06 17:55:24 <rpav>	,(let ((print-integers-as-characters t)) (princ 97))
Mar 06 17:55:24 <fsbot>	97  ..(integer)
Mar 06 17:55:34 <rpav>	doh just the return
Mar 06 17:55:41 <thuna`>	,(let ((print-integers-as-characters t)) (format "%d %c" ?\n ?\a))
Mar 06 17:55:41 <fsbot>	[^] 10 ^G
Mar 06 17:55:58 <rpav>	,(let ((print-integers-as-characters t)) (format "%s" 97))
Mar 06 17:55:58 <fsbot>	97
Mar 06 17:56:06 <rpav>	that is _not_ what it formats for me
Mar 06 17:56:16 <thuna`>	Ah, ,,(let ((print-integers-as-characters t)) (format "%S" 97))
Mar 06 17:56:16 <fsbot>	97
Mar 06 17:56:25 <thuna`>	Uh, yeah, that's not it
Mar 06 17:56:35 <rpav>	it might rewrite that variable
Mar 06 17:56:41 <thuna`>	Maybe
Mar 06 17:57:21 <thuna`>	prin1-char seems to do more than just set print-integers-as-characters non-nil, though
Mar 06 17:57:24 <corwin>	yeah, I think so: https://bru.st/i/emacs_u2mw6cEB7B.png
Mar 06 17:57:49 <rpav>	thuna`: it's possible that's the base function other things call
Mar 06 17:58:08 <rpav>	always hard to tell which way they wrote it without looking as you have
Mar 06 17:58:13 <thuna`>	rpav: I would say so too but print-integers-as-characters is defined in C
Mar 06 17:58:21 <rpav>	hm
Mar 06 17:59:04 <rpav>	not like duplicate efforts don't exist elsewhere i guess
Mar 06 18:01:33 <grym>	always a fun time, "weirding out the guy on the zoom call by using emacs"
Mar 06 18:02:07 <grym>	a very nice ops guy helped me configure some aws shit that involved posting json
Mar 06 18:02:08 <technomancy>	just "using emacs" or something actually weird?
Mar 06 18:02:19 <grym>	i think the weirdest thing i used was json-pretty-print
Mar 06 18:03:36 <grym>	and maybe expand-region
Mar 06 18:04:58 <younder>	Multiple cursors never stops awing the 'uninitiated'
Mar 06 18:05:32 <grym>	which is weird, because it's not "emacs-native"
Mar 06 18:05:40 <grym>	i _believe_ sublime did it first
Mar 06 18:05:42 <grym>	but now, everyone does
Mar 06 18:05:50 <technomancy>	tbh usually "using a WM that isn't fisher-price-style" is all it takes
Mar 06 18:06:00 <grym>	i was also using i3 and sharing my whole screen, yes
Mar 06 18:06:10 <younder>	Not necessarily the fastest way to edit if you know macro's, but visually the most impressive
Mar 06 18:06:23 <grym>	i feel like i got ... more direct assistance... than i would have had i been using my mac
Mar 06 18:06:46 <grym>	my title's at the point where someone external to the org doesn't necessarily know that i have a clue, anymore
Mar 06 18:06:51 <johnjaye>	is there a multiple cursor built into emacs? or is it more something different packages do
Mar 06 18:07:03 <grym>	it's not built-in
Mar 06 18:07:05 <younder>	a package
Mar 06 18:07:07 <grym>	,multiple-cursors
Mar 06 18:07:07 <fsbot>	multiple-cursors: [0] a package to add faux cursors to modify multiple parts of the buffer at once
Mar 06 18:07:07 <fsbot>	[1] available at marmalade, MELPA and https://github.com/magnars/multiple-cursors.el
Mar 06 18:07:07 <fsbot>	[2] demonstrated in this short video: emacsrocks.com/e13.html
Mar 06 18:07:07 <fsbot>	[3] pretty awesome
Mar 06 18:07:28 <grym>	it _is_ built in to sublime, though
Mar 06 18:07:38 <johnjaye>	oh ok. i thought it was the case where different packages do it in incompatible ways
Mar 06 18:08:04 <grym>	i think mc is really the only game in town, and lots of popular packages wire into it if it's there
Mar 06 18:12:32 <drewjose>	An interesting case is meow, where kmacros are used to simulate multiple cursors
Mar 06 18:12:57 <sham1>	Yeah, I'm personally not into multiple cursors, but the BEACON mode might be the one exception
Mar 06 18:14:26 <bpalmer>	beacon?
Mar 06 18:14:55 <bpalmer>	I never got the hang of multiple cursors compared to the utility of a good keyboard macro at my side.
Mar 06 18:16:30 <grym>	i appreciate the visual preview aspect of it
Mar 06 18:16:46 <grym>	"this is where everything is about to change" is reassuring
Mar 06 18:16:51 <johnjaye>	bpalmer: is there a way to apply a keyboard macro to multiple lines directly?
Mar 06 18:17:18 <grym>	(this is why i like things like ,,visual-regexp-steroids too )
Mar 06 18:17:18 <fsbot>	visual-regexp-steroids: an extension to visual-regexp which enables the use of modern regexp engines (no more escaped group parentheses, and other goodies!). In addition to that, you can optionally use the better regexp syntax to power isearch-forward-regexp and isearch-backward-regexp. https://github.com/benma/visual-regexp-steroids.el
Mar 06 18:17:20 <bpalmer>	johnjaye: apply-macro-to-region-lines
Mar 06 18:17:44 <johnjaye>	no i mean selected lines
Mar 06 18:17:51 <bpalmer>	johnjaye: this doesn't handle the case in one pass of disparate regions, but that's the part I understand the least about multiple cursors
Mar 06 18:18:04 <johnjaye>	like you pick line 3,8,19 and run the macro on those
Mar 06 18:18:20 <thuna`>	johnjaye: You can have the macro move to the appropriate line if it's macroable, otherwise, I don't think so
Mar 06 18:18:28 <bpalmer>	johnjaye: go to line 3, run; go to line 8 ; run; go to line 19, run.
Mar 06 18:18:42 <johnjaye>	that would be approximately what i'd want from multiple cursors
Mar 06 18:19:08 <thuna`>	Isn't it the same?  If there is no pattern, you will need to manually make the cursors at the appropriate lines
Mar 06 18:19:09 <grym>	where multiple cursors falls over for me is when you have a cursor that's not visible in the frame
Mar 06 18:19:09 <bpalmer>	if you've got lines on multiple screens like that, do you trust multiple cursors to be doing the righ tthing?
Mar 06 18:21:11 <johnjaye>	right, the select and use a macro would be better. still visual, but more powerful
Mar 06 18:21:34 <kickingvegas>	johnjaye: fwiw, occur and editing the buffer gets me all of what I would want from mc
Mar 06 18:22:05 <johnjaye>	you still type the thing multiple times though?
Mar 06 18:22:43 <bpalmer>	,multipleregions
Mar 06 18:22:43 <fsbot>	try:  ApplyFunctionOnMultipleRegions EmacsIdeasApplyRegionFunctionOnMultipleRegions
Mar 06 18:22:55 <bpalmer>	,ApplyFunctionOnMultipleRegions
Mar 06 18:22:55 <fsbot>	bpalmer: ApplyFunctionOnMultipleRegions are at http://www.emacswiki.org/emacs/ApplyFunctionOnMultipleRegions
Mar 06 18:23:04 <johnjaye>	eh
Mar 06 18:23:31 <rpav>	i often do small but related editing actions, like select "foo_" on a few lines and change it to "bar_" then C-e and add something to the end of the line or similar
Mar 06 18:23:52 <rpav>	stuff that you could do with a regex and a selection, but it would take longer to get right than just mc
Mar 06 18:24:18 <rpav>	also renaming a few similarly-named and related files in wdired works _great_
Mar 06 18:24:57 <kickingvegas>	johnjaye: yeah
Mar 06 18:26:06 <kickingvegas>	johnjaye: otoh, better to be safe than sorry; ymmv but I've footgunned myself too many times with mc
Mar 06 18:28:08 <bpalmer>	I also do a lot with narrowing and then bulk search and replace inside the narrowed buffer
Mar 06 18:28:34 <grym>	editable occur is very nice
Mar 06 18:28:41 <grym>	i will occasionally use mc inside it :D
Mar 06 18:30:11 <bpalmer>	rudybot: I want an editor that really pops during twitch streams
Mar 06 18:30:11 <rudybot>	bpalmer: *Twitch*
Mar 06 18:30:12 <weary-traveler>	i'm in the same boat. multiple cursors always seemed like a nifty project, but never saw much utility what i'm able to accomplish with macros, narrowing etc
Mar 06 18:30:37 <weary-traveler>	the added complexity of learning a new tool didn't seem worth it
Mar 06 18:42:15 <Sketch>	it's pretty easy to use, but it's somewhat limited in what it's useful for i think
Mar 06 18:42:41 <Sketch>	it's also been long enough since i used it that i would have to look up how to use it again
Mar 06 18:43:26 <corwin>	"We're all in to get you the source for our firmware^D^D^D^Da good solution to that" https://www.phoronix.com/news/Lisa-Su-Tweet-OSS-Firmware
Mar 06 18:45:14 <weary-traveler>	rudybot: are you "on it"?
Mar 06 18:45:15 <rudybot>	weary-traveler: If you're trying to make it easier to work with your buffers via buffer-menu, there are some elisp modules that allow you to sort on different columns, etc.
Mar 06 18:50:48 <lispmacs[work]>	in elisp, how would I go about checking if a buffer exists? i want to jump to the buffer if it exists, but otherwise do something else, i.e., I don't want to create the buffer.
Mar 06 18:52:46 <jmd`>	lispmacs[work]: Assuming that the buffer does not exist, how would you refer to it?
Mar 06 18:53:41 <jmd`>	I mean, suppose there is a function (does-buffer-exist (buffer) "return t if buffer is existant" ...) how would you ever call it?
Mar 06 18:54:03 <bpalmer>	get-buffer
Mar 06 18:54:11 <lispmacs[work]>	jmd`: by name, like, e.g., "*buffer-i'm-going-to-use-for-something-special*
Mar 06 18:54:17 <bpalmer>	it returns nil if the buffer is not found, else the buffer object.
Mar 06 18:54:26 <lispmacs[work]>	bpalmer: okay, thanks
Mar 06 18:54:51 <jmd`>	Well in that canse, there is (memq (buffer-list) "name")
Mar 06 18:54:51 <ski>	,df get-buffer
Mar 06 18:54:52 <fsbot>	get-buffer is a built-in function in ‘C source code’.
Mar 06 18:54:52 <fsbot>	(get-buffer BUFFER-OR-NAME)
Mar 06 18:54:52 <fsbot>	Return the buffer named BUFFER-OR-NAME.
Mar 06 18:54:52 <fsbot>	BUFFER-OR-NAME must be either a string or a buffer.  If BUFFER-OR-NAME ;;[ ,more / ,dump]
Mar 06 18:55:30 <ski>	.. wonder why you can pass it a buffer
Mar 06 18:55:50 <bpalmer>	ski: convenience. So many functions take buffer-or-name it'd be annoying to if-check it.
Mar 06 18:56:14 <ski>	yea, but why is it part of the interface, as opposed to merely an implementation detail ?
Mar 06 18:56:15 <bpalmer>	jmd`: (type-of (car (buffer-list))) => buffer . So memq with a string would not work
Mar 06 18:56:42 <bpalmer>	ski: because if it guarantees that name or buffer works, people can rely on it?
Mar 06 18:57:01 <jmd`>	I thouhg buffer-list returned a list of strings
Mar 06 18:57:24 <bpalmer>	jmd`: it returns a list of buffer objects. You could do (mapcar #'buffer-name (buffer-list)) to get strings.
Mar 06 18:57:59 <ski>	hmm .. so i guess the argument is that the caller may not want to bother with checking whether they already have a buffer, or just a name, and they definitely want a buffer in the end ..
Mar 06 18:58:08 <bpalmer>	ski: if I see a function is annotated as name -> buffer , I don't know what it does when given a non-name; it'd be fully valid for it to start raising a type error
Mar 06 18:58:21 <ski>	.. still sounds like a somewhat strange situation to be in, as a caller, imho, but i guess that must be it ?
Mar 06 19:00:05 <ski>	yea, bpalmer. i guess what i'm not seeing is in which reasonable situation you'd not know already whether you have a buffer or just a name
Mar 06 19:02:11 <weary-traveler>	when the value isn't directly constructed by you but is the result of some third-party function being invoked
Mar 06 19:02:56 <weary-traveler>	and if there are several such third-party functions the present interface allows user to care less about returned value
Mar 06 19:04:10 <ski>	hm, i guess if those functions are kinda drop-in replacements of each other, or if there's multiple evolving versions of them
Mar 06 19:04:47 <RickAstley>	you may not like it, but this is the ideal way to preserve endangered abandonware
Mar 06 19:04:49 <RickAstley>	https://github.com/yakamok/keyserver-fs
Mar 06 19:09:49 <ski>	reminds me of people uploading DeCSS to DNS servers, iirc
Mar 06 19:11:27 <lispmacs[work]>	I tried to code this little function that calls (eat "mutt") to open mutt inside of eat, and then calls (rename-buffer "*mutt*") to rename the buffer, but I'm finding that what is happen is that the rename part does not execute until after I close the eat buffer
Mar 06 19:12:38 <lispmacs[work]>	I'm confused by that as I thought Emacs was single-threaded
Mar 06 19:14:48 <lispmacs[work]>	in any case, wondering how to get around this
Mar 06 19:16:17 <mohan43u>	hi, how can I force emacs to use fontconfig? I dont know what is mean by "ftfont-list:" when I run font-show-log but this doesn't show the fonts from fontconfig
Mar 06 19:16:28 <lispmacs[work]>	do I need to call (eat "mutt") in some kind of asynchronous or background mode?
Mar 06 19:16:49 <bpalmer>	ski: any time you write a function that accepts a buffer or buffer-name, get-buffer's current design encourages you to accept a buffer-or-name
Mar 06 19:16:53 <mohan43u>	is there any emacs font backend which uses fontconfig?
Mar 06 19:17:47 <sham1>	xft
Mar 06 19:18:01 <quiliro>	I think that I could learn elisp quickly if I make macros and study the code that they produce.
Mar 06 19:18:02 <sham1>	cairo, most especially when using cairo-xft option
Mar 06 19:21:37 <mohan43u>	sham1: how do I know emacs is using xft/cairo-xft backend? is there any function I can try?
Mar 06 19:22:25 <bpalmer>	ski: a similar point of comparison: elisp almost everywhere it expects a function actually allows function-or-symbol, because funcall and apply actually accept function-or-symbol
Mar 06 19:22:51 <bpalmer>	(as does functionp)
Mar 06 19:24:16 <bpalmer>	this saves people from having to sprinkle (if (and (symbolp f) (fboundp f)) (funcall (symbol-function f)))  throughout their code, and makes elisp feel more cohesive (if slightly less coherent)
Mar 06 19:27:35 <sham1>	mohan43u: check the system-configuration-features variable
Mar 06 19:30:45 <mohan43u>	sham1: ACL CAIRO DBUS FREETYPE GIF GLIB GMP GNUTLS GPM GSETTINGS HARFBUZZ JPEG JSON LCMS2 LIBOTF LIBSELINUX LIBSYSTEMD LIBXML2 M17N_FLT MODULES NATIVE_COMP NOTIFY INOTIFY PDUMPER PNG RSVG SECCOMP SOUND THREADS TIFF TOOLKIT_SCROLL_BARS TREE_SITTER X11 XDBE XIM XINPUT2 XPM GTK3 ZLIB
Mar 06 19:30:58 <sham1>	ok
Mar 06 19:31:03 <mohan43u>	sham1: I dont see any XFT, but there is XIM
Mar 06 19:31:25 <sham1>	Of course you don't see XFT since you have CAIRO
Mar 06 19:34:51 <mohan43u>	sham1: what should I do to use fontconfig? should I need to compile emacs with XFT?
Mar 06 19:35:17 <sham1>	You can just use fontconfig
Mar 06 19:35:23 <sham1>	Just specify a font
Mar 06 19:36:14 <yates>	hokay, i am really, really confused by my emacs behavior..
Mar 06 19:36:49 <lemacs>	how can I use a function instead of a command in (transient-append-suffix)? it seems it only accepts interactive functions (commands) to execute
Mar 06 19:37:30 <mohan43u>	sham1: I have some custom rules to pick specific font for my language in fontconfig, which is not working in emacs, I want emacs to use fontconfig to pick the correct font for my language
Mar 06 19:38:29 <yates>	seemingly out-of-the-blue, my RET key has been mappped to mail-current-region (a function i've defined to send the buffer into a gnus email). as far as i know i've changed nothing. this behavior persists across instances of emacs. i've looked through my key bindings and there is no such mapping. any clues?
Mar 06 19:38:36 <sham1>	Emacs buffer texts doesn't have a language associated
Mar 06 19:39:31 <yates>	i do have that binding mapped to C-RET however
Mar 06 19:41:48 <yates>	must be my keyboard...
Mar 06 19:41:56 <yates>	hardware failure
Mar 06 19:43:01 <snoriman>	grym: thanks for the hint to ef-themes! they look nice indeed.
Mar 06 19:43:57 <sham1>	I had to switch from the ef-frosty (light them) to ef-dark (dark theme, duh) on a video call today. Was not fun
Mar 06 19:46:20 <bkhl>	Why was that?
Mar 06 19:47:45 <sham1>	I got sassed for using a light theme
Mar 06 19:47:50 <johnjaye>	are dart and flutter the future?
Mar 06 19:49:24 <bkhl>	sham1: all your colleagues are goths?
Mar 06 19:50:05 <bkhl>	Actually I just got the Gnome dark/light style toggle to switch themes in Emacs (thanks auto-dark-mode), but I just use the dark mode if I use my laptop late at night.
Mar 06 19:50:38 <johnjaye>	emacs automatically changes when gnome changes that? what?
Mar 06 19:51:00 <bkhl>	There is a package that does it based on dbus messages (or equivalent on Mac/Windows)
Mar 06 19:51:30 <bkhl>	(My settings: https://git.sr.ht/~bkhl/dotfiles/tree/main/item/.emacs.d/configuration.org#L1011-1027 )
Mar 06 19:55:03 <bpalmer>	rudybot: I don't understand kids these days and their dark themes.
Mar 06 19:55:04 <rudybot>	bpalmer: you kids and your dark themes
Mar 06 19:55:20 <mfisher>	haha
Mar 06 19:55:32 <bpalmer>	if your monitor isn't sending blinding white light in a pitch black room, are you even computing?
Mar 06 19:55:58 <pkal>	bpalmer: i love how annoyed people get when i use light themes.
Mar 06 19:56:02 <sham1>	I just adjust my ambient light level
Mar 06 19:56:16 <pkal>	but if you are projecting code, then it is objectivly more readable
Mar 06 19:56:27 <waerloga>	warm amber glow
Mar 06 19:56:53 <bkhl>	pkal: it's not. I used to be using dark modes but had to switch due to my astigmatism getting worse ~5 years ago.
Mar 06 19:58:03 <pkal>	bkhl: how are we disagreeing?
Mar 06 19:58:11 <bkhl>	You were saying it's an objective matter.
Mar 06 19:58:41 <ski>	bpalmer : tbh, i'd rather be able to set a switch or something with which they'd not accept symbols
Mar 06 19:59:23 <bkhl>	If you mean projecting with a projector it's a permanent annoyance at work that the PowerPoint templates are light-on-dark and the projector in the big meeting room is not high contrast enough to make that readable.
Mar 06 19:59:35 <bkhl>	So depends quite a lot on the ambient light, the surface, and so on.
Mar 06 19:59:37 <pkal>	bkhl: that's mainly due to my experience, that projectors are bad at ensuring dark themes have enough contrast to be easily readable from anywhere in a room
Mar 06 20:00:03 <bkhl>	Oh.
Mar 06 20:00:16 <ski>	(such sprinkling would be unnecessary if the interface to your operation didn't allow symbols in the first place)
Mar 06 20:00:17 <bkhl>	Thought you were saying _dark_ themes would be more readable with projectors.
Mar 06 20:00:22 <pkal>	"it" designates "light themes"
Mar 06 20:00:36 <pkal>	bkhl: of course not, that wouldn't be objectivly true ^^
Mar 06 20:00:37 <bkhl>	Still not sure it's completely objective, but sure.
Mar 06 20:00:58 <bkhl>	But it's more like, in a dark room with good equipment dark mode is maybe not significantly worse.
Mar 06 20:01:28 <bkhl>	Plus it may avoid blinding you with the light in a dark environment (same reason I do use dark mode sometimes at night)
Mar 06 20:01:54 <rpav>	yeah if you have a _really_ good/bright projector you might want to avoid light theme in dark room, and it might handle a dark theme ok
Mar 06 20:01:55 <johnjaye>	bkhl: you've piqued my curiosity. the only convincing i need is if there's a way to do this crossplatform like on windows or freebsd as well.
Mar 06 20:01:58 <pkal>	perhaps, but I usually use projectors in rooms that have windows during the day
Mar 06 20:02:14 <bpalmer>	ski: wow. I hadn't imagined you'd want to outlaw symbols.
Mar 06 20:02:40 <bpalmer>	I don't know what that language would feel like, but I'm pretty sure it would feel very foreign to elisp.
Mar 06 20:03:00 <bkhl>	johnjaye: that auto-dark-mode has support for a few different platforms, but they all have different ways to signal dark/light mode.
Mar 06 20:03:11 <johnjaye>	is auto-dark-mode on melpa?
Mar 06 20:03:15 <bkhl>	Dunno.
Mar 06 20:03:20 <ski>	no, not outlaw symbols. just not use them with `funcall',`apply',&c.
Mar 06 20:03:27 <bkhl>	I don't use a package manager.
Mar 06 20:03:39 <johnjaye>	i mean where do i get it. or did you write it
Mar 06 20:03:48 <bkhl>	Ah.
Mar 06 20:03:50 <spikemaster>	i have a special list of "light" background colors that are almost dark. One of them actually crosses the threshold and emacs assumes i'm using a dark theme. I had to override that.
Mar 06 20:03:51 <ski>	(using them with `eval' is fine .. to the extend that using `eval' itself is fine, obviously)
Mar 06 20:03:57 <erk>	is it not https://melpa.org/#/auto-dark
Mar 06 20:04:06 <bkhl>	johnjaye: I have it as a submodule in the same repo
Mar 06 20:04:11 <johnjaye>	ok
Mar 06 20:04:43 <bkhl>	https://github.com/LionyxML/auto-dark-emacs it's this one
Mar 06 20:04:51 <ski>	(and using them for various enumeration purposes is also fine)
Mar 06 20:04:55 <twb>	spikemaster: is the threshold, like, #000 through #777 is dark?
Mar 06 20:05:18 <twb>	Or does it have some kinda fancy psyco-visual color perception algorithm
Mar 06 20:05:19 <spikemaster>	dont' know what the treshold is.  i forget how i override it to froce emacs to treat my theme as "light"
Mar 06 20:05:48 <spikemaster>	i start wiht ivory3 as my baseline. and have psome progressively darker background colors i use from there depending on the situation
Mar 06 20:07:59 <spikemaster>	ah. I force emacs to treat my theme as "light" via: (let ((frame-background-mode 'light))
Mar 06 20:08:00 <spikemaster>	    (mapc 'frame-set-background-mode (frame-list)))
Mar 06 20:08:18 <spikemaster>	my light theme is too dark for Emacs.
Mar 06 20:10:08 <spikemaster>	i think i'm the first person who has the issue of a light theme being a dark theme.
Mar 06 20:10:54 <johnjaye>	so emacs frame has a setting for light or dark theme?
Mar 06 20:11:17 <twb>	So I can't do C-x C-f /sudo:example.com:, but if I do C-x C-f /ssh:example.com|sudo:: it "turns into" /sudo:example.com: later
Mar 06 20:11:22 <spikemaster>	many Emacs packages define faces with "light" and "dark" default variants. Emacs will choose the "dark" varient if your BG color is too dark.
Mar 06 20:11:25 <twb>	This is confusing.
Mar 06 20:12:01 <spikemaster>	but i often use BG colors that are hard to categorize as "dark" or "light", i'm walking on the edge
Mar 06 20:12:45 <rpav>	time for a pure chaos theme.. constantly shifting colors, fonts, sizes, etc
Mar 06 20:12:46 <twb>	spikemaster: like david bowie
Mar 06 20:15:32 <spikemaster>	yes. I'm listening to Magic Dance.
Mar 06 20:15:34 <johnjaye>	hmm. i tried using set-frame-parameter to change background-mode to dark but nothing happened.
Mar 06 20:15:42 <johnjaye>	i guess i have to have a theme that acts differently or something based on the light/dark?
Mar 06 20:15:43 <bpalmer>	I didn't know Bowie ever interacted with U2
Mar 06 20:16:28 <bpalmer>	johnjaye: yes.
Mar 06 20:16:53 <johnjaye>	hmm
Mar 06 20:17:20 <johnjaye>	auto dark mode doesn't do its magic if i manually set the frame parameter either
Mar 06 20:17:49 <johnjaye>	oh it said it uses system theme
Mar 06 20:19:29 <bkhl>	Yes, it just toggles between two different themes, based on current desktop setting.
Mar 06 20:19:37 <spikemaster>	johnjaye: you need to open a buffer using a face that has both "ligth" and "dark" varients defined
Mar 06 20:20:07 <spikemaster>	if your theme overrides the packages face definition then you won't see a differience.
Mar 06 20:21:19 <spikemaster>	for example try soemthing using font-lock-constant-face. Assuming your current theme does not explictly set somethign for it, then emacs will choose the "lgiht" or "dark" varient for you
Mar 06 20:23:28 <spikemaster>	font-lock-constant-face literally has like 7 posisble default colors depending on light/dark and min-colors
Mar 06 20:24:11 <johnjaye>	auto-dark-mode does work nicely though
Mar 06 20:24:22 <johnjaye>	you can test it by manually toggling light mode in windows with this code:
Mar 06 20:24:23 <johnjaye>	Set-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize -Name AppsUseLightTheme -Value 1 -Type Dword -Force;
Mar 06 20:24:32 <johnjaye>	-Value 0 for dark mode
Mar 06 20:26:01 <johnjaye>	spikemaster: ok but normally emacs has no built in notion of light or dark toggling, it's just something this auto-dark thing is doing based on time of day
Mar 06 20:26:25 <nij->	The emacs bytecode VM is the internal core to emacs. Elisp code gets compiled to instructions for that VM, and the VM then controls the other part of emacs.
Mar 06 20:26:39 <nij->	I'm curious, besides of the frontend, whatelse does the VM control?
Mar 06 20:27:23 <nij->	And which source file should I read in order to understand how VM controls the other part?
Mar 06 20:27:35 <nij->	Note - I'm not asking for source for understanding how VM is implemented.
Mar 06 20:27:40 <spikemaster>	johnjaye: Emacs does have notion of light/dark BG. it's sort of baked into the faces ysstem
Mar 06 20:28:13 <johnjaye>	right. but nothing changes it except themes i thought
Mar 06 20:28:41 <bkhl>	I guess you could theoretically make a theme that works with both light and dark backgrounds, and then just change the background?
Mar 06 20:29:06 <bkhl>	Then using this feature of faces to adjust colors depending on background, I mean.
Mar 06 20:29:13 <bkhl>	Seems more complicated than just making two themes though.
Mar 06 20:29:29 <spikemaster>	i mean i have a "light" theme that Emacs incorrectly thinks is "dark"
Mar 06 20:29:34 <spikemaster>	exactly 1 theme
Mar 06 20:29:48 <spikemaster>	problem solved, by forcing emacs to accept it is light
Mar 06 20:34:23 <bpalmer>	nij-: I'm not sure that's a fully accurate representation of the emacs architecture.
Mar 06 20:35:07 <bpalmer>	nij-: https://www.reddit.com/r/emacs/comments/utmmbe/emacs_architecture_info/ may be relevant; for the byte code interpreter, monnier and sperber's paper may be the most relevant
Mar 06 20:35:15 <johnjaye>	well i just thought some themes were light and some were dark and you use one based on your preference
Mar 06 20:35:29 <johnjaye>	several themes come in both light and dark varieties
Mar 06 20:36:11 <bpalmer>	yes, but in theory, a theme can support both light and darkness, the duality of man.
Mar 06 20:36:31 <bpalmer>	The easy ability of users to switch themes means this goes underused.
Mar 06 20:46:46 <e3d3>	I never understood how people can use themes. I never saw an emacs theme that can be used for GUI AND terminal. I tested all multiple times and without exception, each one hides some elements somewhere by giving it the background color.
Mar 06 21:04:28 <kickingvegas>	e3d3: one size fits all is a nice thought on paper
Mar 06 21:09:27 <rpav>	dunno i use deeper-blue and it seems to work ok term/gui
Mar 06 21:09:44 <rpav>	not that i use term that much, but
Mar 06 21:10:05 <bremner>	mostly I solve this problem by not using the terminal. I do agree the colour schemes in the terminal are annoying sometimes, so it's kindof a negative feedback cycle
Mar 06 21:10:18 <rpav>	^^
Mar 06 21:10:43 <rpav>	layering emulation doesn't help much
Mar 06 21:11:47 <nij->	bpalmer - why not?
Mar 06 21:12:14 <nij->	Why isn't it a fully accurate description?
Mar 06 21:12:27 <nij->	The thread doesn't touch on this point - it only provides lots of references.
Mar 06 21:13:31 <hwpplayer1>	hi Emacs People !
Mar 06 21:14:17 <cvandusen>	,greet hwpplayer1
Mar 06 21:14:18 <fsbot>	สวัสดี ครับ hwpplayer1.
Mar 06 21:14:32 <hwpplayer1>	Thanks cvandusen :)
Mar 06 21:14:48 <e3d3>	rpav: bremner thanks for the responses. Often after reading an enthusiast post about themes I can't help to doubt if I am the only one who has this problem c.q. is crazy.
Mar 06 21:15:06 <cvandusen>	#whynotboth
Mar 06 21:15:13 <hwpplayer1>	I'll be back later
Mar 06 21:16:48 <cvandusen>	I think that was the original line in Terminator.
Mar 06 21:17:48 *	e3d3 รัก fsbot
Mar 06 21:18:16 <hodapp>	I thought that was "Frankly, my dear, I'll return in a damn bit."
Mar 06 21:18:47 <cvandusen>	Common mistake
Mar 06 21:19:32 <cvandusen>	When it first came out, a lot of people thought The Terminator was just rehashed Gone With the Wind.
Mar 06 21:20:22 <hodapp>	wait, those are different movies?
Mar 06 21:20:47 <hodapp>	are you sure it's not like with Rambo and First Blood where it's just two different names?
Mar 06 21:22:31 <cvandusen>	Could be; I'm no cinephile.
Mar 06 21:27:01 <bremner>	"I'll be back earlier" is back to the future, obv.
Mar 06 21:29:00 <cvandusen>	"I will have been back"
**** BEGIN LOGGING AT Wed Mar  6 21:44:03 2024

Mar 06 21:44:02 *	Now talking on #emacs
Mar 06 21:44:02 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 06 21:44:02 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 06 21:44:35 <Minall>	bpalmer I see... I knew about the existence of the profiler which I used to debug another situation, is there an example where I use edebug for this type of situation? (checking the docs rn)
Mar 06 21:44:46 <bpalmer>	e.g., use C-h f to get help on the function, then there will a link to the souce; you can then use edebug-defun
Mar 06 21:44:50 <bpalmer>	then M-x foo RET
Mar 06 21:45:17 <bpalmer>	you'll also see where those arguments come from when you look at the code; it's in the (interactive ...) call inside the function.
Mar 06 21:46:57 <Minall>	I see a edebug-read-storing-offsets: End of file during parsing, nothing when I call  the function then
Mar 06 21:47:10 <Minall>	I can see the code, I just want to call this function the same as M-x so that I can debug further
Mar 06 21:47:19 <bpalmer>	(call-interactively 'foo)
Mar 06 21:47:45 <bpalmer>	or (foo 1 2) if you want to specify the arguments directly
Mar 06 21:49:02 <Minall>	Okay, this is interesting, so the call I am making is forge-pull specifically, I can call (call-interactively 'forge-pull) and use edebug in it, however, since it is not on a git repository, it will not find anything
Mar 06 21:49:10 <Minall>	Different from when I call it from the magit buffer
Mar 06 21:49:27 <Minall>	Btw, didn't knew call-interactively existed, adding that to my arsenal, thank you
Mar 06 21:49:34 <bpalmer>	Minall: use M-: when in the magit buffer
Mar 06 21:49:46 <Minall>	That's right... On it
Mar 06 21:50:45 <nij->	bpalmer - Thanks! But weird, I searched through the code base (using github search). Besides this declaration, there doesn't seem to be any actual content for command_loop_1. https://github.com/emacs-mirror/emacs/blob/415604c7a77205d91254a271f0112f69729eb3a9/test/manual/etags/c-src/emacs/src/lisp.h#L4201
Mar 06 21:50:46 <rudybot>	https://teensy.info/aoJJBG9S72
Mar 06 21:51:07 <Minall>	Okay, I could call (call-interactively 'forge-pull) with M-:, the call works... Though at this point, how would I implement edebug?, or is there an easier way to see the exact parameters I am passing?
Mar 06 22:03:21 <bpalmer>	Minall: I 'm not sure what's going on with the error you found; if you do edebug-defun right after a defun form, then calling the function lets you step into it
Mar 06 22:03:34 <bpalmer>	an dyou'll be able to examine the arguments directly, since they still exist.
Mar 06 22:03:37 <bpalmer>	see ,,edebug,,
Mar 06 22:03:38 <fsbot>	edebug is [0] an awesome way to trace your errors. Read about it in the elisp manual, for which press C-x C-e after this: (info "(ELisp)Edebug")
Mar 06 22:03:38 <fsbot>	[1] visit the lisp form you want to instrument (for example with M-x find-function), then press C-u C-M-x inside it ;;[ ,more / ,dump]
Mar 06 22:03:44 <bpalmer>	,m
Mar 06 22:03:44 <fsbot>	[2] invoke the lisp form and step through it with SPC, jump to the next form with n, inspect state with e (by entering lisp code), continue execution with c and abort execution with q
Mar 06 22:03:44 <fsbot>	[3] finally, remove instrumentation with C-M-x inside the lisp form
Mar 06 22:09:42 <Minall>	Thank you, I'll take a look
Mar 06 22:35:18 <nikk>	hi, how do I open dired-buffer with custom dirde-omit-files set? I thought a (let* ((dired-omit-files "MY-REGEXP")) (find-dired "build/mt" "-type f -executable")) would do it, but the dired-omit-files is ignored in the created dired buffer.
Mar 06 22:35:48 <nikk>	(the global dired-omit-files is set instead of the one I hoped to shadow with the 'let')
Mar 06 22:42:50 <quiliro>	,ping
Mar 06 22:42:51 <fsbot>	␕
Mar 06 22:44:23 <grym>	,pong
Mar 06 22:44:24 <fsbot>	🏓
Mar 06 22:45:45 <quiliro>	thanks grym....I did not think you were a bot too...LOL
Mar 06 22:46:47 <grym>	are you familiar with the phrase, "he who smelt it, dealt it"
Mar 06 22:47:32 <bpalmer>	nikk: (progn (find-dired ...) (with-current-buffer "*Find*" (setq-local dired-omit-files "MY-REGEXP")))
Mar 06 22:47:34 <rpav>	╵   . ╷
Mar 06 22:48:01 <grym>	rpav: "oops"
Mar 06 22:48:04 <quiliro>	perhaps I need bot functions myself
Mar 06 22:48:10 <bpalmer>	We all bot down here.
Mar 06 22:48:18 <grym>	rip bash.org and the ping pong quote
Mar 06 22:48:27 *	bpalmer contrasts a storm drain with a sewer
Mar 06 22:48:32 <rpav>	grym: oh shit right
Mar 06 22:48:40 *	quiliro is becoming a bot.
Mar 06 22:48:44 <rpav>	did bash.org go away then?
Mar 06 22:48:46 <grym>	,zombie-p
Mar 06 22:48:47 <fsbot>	BRYLCREAM is CREAM O' WHEAT in another DIMENSION..
Mar 06 22:48:53 <grym>	rpav: i belive it's offline
Mar 06 22:49:09 <grym>	https://news.ycombinator.com/item?id=38950721
Mar 06 22:49:10 <rpav>	probably webarchive has at least the classic stuff
Mar 06 22:49:14 <ski>	it's been offline for a while
Mar 06 22:49:22 <grym>	yes, and there's a gitlab? repo of all the quotes
Mar 06 22:49:26 <bpalmer>	Let's blame the DMA
Mar 06 22:49:32 <grym>	let's free kevin
Mar 06 22:49:35 <ski>	the DMCA ?
Mar 06 22:49:46 <quiliro>	why does eww take so long to render some pages?
Mar 06 22:50:09 <dcb>	DMC5?
Mar 06 22:50:20 <atw>	I always use hunter2 as an example credential
Mar 06 22:50:20 <grym>	oh, right; kevin is permanently free :(
Mar 06 22:50:25 <bpalmer>	deadmau5 ?
Mar 06 22:50:26 <fsbot>	Deadmau5 is not important.
Mar 06 22:50:52 <sham1>	The bot is incorrect
Mar 06 22:50:59 <dcb>	what happened with the other four deadmau?
Mar 06 22:51:07 <tazjin>	sham1: missing the word "anymore"
Mar 06 22:51:20 <sham1>	:( the music is good
Mar 06 22:51:31 <tazjin>	yes in the same way Joy Division also made good music
Mar 06 22:51:33 <bpalmer>	dcb: many were lost in the mau mau rebellion
Mar 06 22:51:35 <tazjin>	we're old, sorry
Mar 06 22:52:29 <quiliro>	tomorrow my fiancee will try to prepare borsh!
Mar 06 22:53:00 <rpav>	i just assumed deadmau5 was like voltron
Mar 06 22:53:06 <grym>	no matter how you make it, it's not as good as babushkas
Mar 06 22:53:18 <quiliro>	what is that?
Mar 06 22:53:27 <grym>	human nature
Mar 06 22:53:29 <sham1>	babushka means grandmother
Mar 06 22:53:32 <quiliro>	is it an interactive function?
Mar 06 22:53:57 <nikk>	bpalmer: ohh, going to the current buffer is also an idea...thanks :)
Mar 06 22:54:36 <bpalmer>	rudybot: I took a pill in ibiza.
Mar 06 22:54:37 <rudybot>	bpalmer: meh, the dude that buys the apples from my dad's orchard makes at least €300k and last i checked he drove a seat ibiza
Mar 06 22:54:38 <mwnaylor>	Within the past few days, I saw some discussions about avy; started investigating functions via C-h f. Found intriguing names. I've been using ace-jump for years. Overlap in operations, seems like. Started looking into ace-jump docstring. Found new capabilities I never knew were there.
Mar 06 22:55:03 <bpalmer>	so in conclusion, switching to avy or sticking with ace?
Mar 06 22:55:40 <grym>	i've had ace-window bound to C-tab for ages
Mar 06 22:55:50 <mwnaylor>	Sticking with ace. Have both installed, so could switch.
Mar 06 22:59:40 <bpalmer>	ace-bandages can help prevent buffers from being killed.
Mar 06 22:59:41 <grym>	but i use avy-goto-line and avy-goto-char-timer a lot
Mar 06 23:03:27 <mwnaylor>	nice. ace-jump equivalents would be C-u C-u C-c SPC and C-u C- SPC.
Mar 06 23:04:06 <bpalmer>	avy-goto-char-timer ?
Mar 06 23:04:51 <mwnaylor>	At least for the default ace-jump-mode settings.
Mar 06 23:06:11 <mwnaylor>	avy-goto-char-timer lets you jump directly to a specific instance of a char.
Mar 06 23:06:18 <grym>	Read one or many consecutive chars and jump to the first one.
Mar 06 23:06:40 <cvandusen>	avy-goto-char-2 combined with avy-pop-mark make people think I use magic.
Mar 06 23:09:18 <mwnaylor>	I'm working on my first major mode. Which has taken me into a deeper understanding of elisp. For instance, I just discovered shorthands.
Mar 06 23:09:53 <mwnaylor>	M-: (info "(elisp) Shorthands")
Mar 06 23:10:09 <dcb>	binding `C-<tab>` to `ace-window` feels pretty nice
Mar 06 23:10:30 <mwnaylor>	I'm going to start using those.
Mar 06 23:10:40 <dcb>	although I have been avoiding splitting windows just so I can have text centered with olivetti
Mar 06 23:11:10 <kickingvegas>	dcb: unless you've already have that bound to navigating tabs
Mar 06 23:12:11 <mekeor>	what's the your relation between screen-distance and font-size?
Mar 06 23:15:17 <bpalmer>	mwnaylor: ah, shorthands are ... hmm. not without controversy
Mar 06 23:15:42 <mwnaylor>	bpalmer: how so?
Mar 06 23:15:59 <mekeor>	mwnaylor: shorthands is a rather new feature, afaik. as bpalmer says, there was a controversy. some people wanted elisp to support namespaces. but shorthands were decided.
Mar 06 23:16:29 <bpalmer>	mwnaylor: among other things, it means users can't just go into the source code and evaluate the forms themselves.
Mar 06 23:16:34 <dcb>	kickingvegas: I just noticed that but I've been using `C-t o` for that so it didn't bother me much
Mar 06 23:17:19 <dcb>	(I meant `C-x t`)
Mar 06 23:18:10 <bpalmer>	as a disclaimer, I really don't like shorthands. The solution to typing a prefix is a lot is already found in emacs: keyboard macros, snippets, completions
Mar 06 23:18:10 <mekeor>	bpalmer: shouldn't evaluation obey the buffer-local value of read-symbol-shorthands?
Mar 06 23:18:14 <mwnaylor>	bpalmer: Why? Should the shorthands be defined in the local variables for source code file?
Mar 06 23:18:47 <bpalmer>	mekeor: because I would normally copy and paste stuff into *scratch* to work with it.
Mar 06 23:19:03 <mekeor>	true. i also experienced similar problems.
Mar 06 23:20:55 <bpalmer>	it "solves" the prefix problem (which I don't think is usually a big deal; when it gets truly too bad people simply change their convention, e.g., org using org-, ob-, and various other prefixes)
Mar 06 23:21:15 <bpalmer>	and it still doesn't give you other advantages of namespaces, like control or documentation about exported symbols
Mar 06 23:21:19 <mwnaylor>	Would setting `read-symbol-shorthands' in *scratch* overcome that problem?
Mar 06 23:21:39 <bpalmer>	mwnaylor: presumably
Mar 06 23:22:45 <mwnaylor>	I've use the names package in the past. Gave some problems debugging. With experience < 2 weeks, I find shorthands to be a cleaner, easier approach.
Mar 06 23:23:17 <bpalmer>	names?
Mar 06 23:23:17 <fsbot>	names are [0] a namespace implementation for Emacs. See https://github.com/Malabarba/names
Mar 06 23:23:17 <fsbot>	[1] See also Nameless
Mar 06 23:34:00 <cvandusen>	let's put the content in contentious
Mar 06 23:38:28 <mekeor>	let's call `dictionary-lookup-definition' when point on contentious
**** ENDING LOGGING AT Wed Mar  6 23:44:24 2024

**** BEGIN LOGGING AT Thu Mar  7 02:18:46 2024

Mar 07 02:18:44 *	Now talking on #emacs
Mar 07 02:18:44 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 07 02:18:44 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 07 02:18:46 <technomancy>	lol
Mar 07 02:18:46 <bremner>	Oh, i have earned that badge
Mar 07 02:18:54 <nij->	lol
Mar 07 02:18:57 <technomancy>	wgreenhouse: I think they meant the ones on the GH profile, not the readmes
Mar 07 02:19:24 <lockywolf>	ah
Mar 07 02:19:25 <causative>	maybe he's just putting that there as a way to ward off people who want unpaid tech support on his projects
Mar 07 02:19:28 <wgreenhouse>	technomancy: yes, that is the escape hatch to boring, but that is probably true
Mar 07 02:19:31 <lockywolf>	they probably can disclose that someone has 2FA
Mar 07 02:19:43 <nij->	HELP! I can't find definitions for `Fcurrent_buffer` in the emacs code base. It must be defined via macros.. what shoudl I do :(
Mar 07 02:19:43 <lockywolf>	I have no badges, and no 2FA
Mar 07 02:19:59 <nij->	I have no brain. I have nothing..
Mar 07 02:20:03 <lockywolf>	good
Mar 07 02:20:09 <wgreenhouse>	lockywolf: go one better, have no github
Mar 07 02:21:47 <technomancy>	causative: smart if so
Mar 07 02:22:27 <wgreenhouse>	nij-: it's a DEFUN macro. search for DEFUN ("current-buffer""
Mar 07 02:22:44 <wgreenhouse>	er drop the extraneous extra quote
Mar 07 02:23:01 <nij->	wgreenhouse.. I think it's the other way around?
Mar 07 02:23:09 <wgreenhouse>	nope
Mar 07 02:23:14 <nij->	DEFUN ("current-buffer", Fcurrent_buffer, Scurrent_buffer, 0, 0, 0,
Mar 07 02:23:21 <nij->	We first have Fcurrent_buffer as a C function.
Mar 07 02:23:37 <nij->	And then, we create a elisp function current-buffer that calls Fcurrent_buffer under the hood?
Mar 07 02:24:49 <wgreenhouse>	yes
Mar 07 02:25:17 <pacane>	Hi, I want to use emacs as my email client. I've setup mbsync to fetch my emails, and most tutorials I've seen suggest using mu4e, but I can't find the package in elpa/melpa. Is it still relevant, or is there a replacement for it?
Mar 07 02:25:22 <wgreenhouse>	nij-: most of the "primitive functions" (i.e. elisp defined in C) look like that
Mar 07 02:25:37 <technomancy>	pacane: mu4e has a significant C component, so installing thru melpa wouldn't be helpful
Mar 07 02:25:47 <technomancy>	pacane: if you can install thru apt I recommend that
Mar 07 02:26:00 <Viking667>	Heh. It seems that even I had two badges, one for having contributed to the Arctic Code Vault, and the other for having pull requests accepted.
Mar 07 02:26:06 <wgreenhouse>	pacane: I heartily disrecommend as a first attempt the thing that will download all of your mail first.
Mar 07 02:26:14 <technomancy>	if not building from scratch isn't hard
Mar 07 02:26:38 <technomancy>	wgreenhouse: well, they already got the hard part working it sounds like =)
Mar 07 02:26:48 <Viking667>	I always turn off the "Remove from IMAP site" settings in thunderbird et al.
Mar 07 02:26:50 <nij->	wgreenhouse - But I'm asking how Fcurrent_buffer was defined..
Mar 07 02:27:12 <Viking667>	after all, I want the mail to synchronise (much like rsync) not move sites.
Mar 07 02:27:14 <nij->	I can't find where it's defined in the C codes.. by searching through "Fcurrent_buffer" using ripgrep.
Mar 07 02:27:27 <pacane>	But, isn't there a wrapper around some CLI tool in emacs? Is that coming out of the box in emacs?
Mar 07 02:27:29 <wgreenhouse>	nij-: it'd defined right there.
Mar 07 02:27:40 <nij->	?
Mar 07 02:27:41 <wgreenhouse>	nij-: dee the example at (info "(elisp) Writing Emacs Primitives")
Mar 07 02:27:44 <wgreenhouse>	*see
Mar 07 02:27:59 <nij->	We first have #'current-buffer, and then we have Fcurrent_buffer?
Mar 07 02:28:05 <nij->	Lemme look at DEFUN again.
Mar 07 02:28:20 <wgreenhouse>	nij-: please read the page I jusy linked it explains this syntax
Mar 07 02:28:21 <Viking667>	nij-: I've seen several dozen refs to Fcurrent_buffer
Mar 07 02:28:24 <wgreenhouse>	*just
Mar 07 02:28:35 <nij->	Viking667 Not its definitions though.
Mar 07 02:28:42 <nij->	wgreenhouse : Doing now :)
Mar 07 02:28:42 <wgreenhouse>	read the damn page
Mar 07 02:28:46 <technomancy>	pacane: yes, there's an elisp part and a C part. but the elisp part is useless on its own, so why distribute it thru melpa?
Mar 07 02:29:00 <technomancy>	that said, perhaps nowadays the C part of mu4e could be done as a native module =)
Mar 07 02:30:49 <pacane>	gotcha, I created my mu4e db locally, I'll see how I can query it from emacs. Thanks! If you have some proper docs, I'm listening.
Mar 07 02:31:16 <wgreenhouse>	nij-: get it now? that DEFUN macro actually generates the C function Fcurrent_buffer
Mar 07 02:32:27 <wgreenhouse>	nij-: also, btw, emacs itself (C-h f) etc. can look up these C DEFUNs too
Mar 07 02:32:43 <wgreenhouse>	if you point it to the C sources of an emacs
Mar 07 02:36:59 <nij->	I got it!
Mar 07 02:37:11 <nij->	It defines for both of them simultaneously.
Mar 07 02:37:44 <nij->	wgreenhouse  I don't build my emacs, so it has lost the link to the C source.
Mar 07 02:37:55 <nij->	But I have a clone of the source and I'm reading it anyway.
Mar 07 02:38:50 <wgreenhouse>	nij-: that's what I mean, even if you didn't build your emacs you can point it at that cloned copy
Mar 07 02:39:11 <wgreenhouse>	nij-: and then C-h f references to C source code will work as links
Mar 07 02:39:26 <nij->	? ---
Mar 07 02:39:30 <wgreenhouse>	!
Mar 07 02:39:32 <fsbot>	🤖[g] fsbot
Mar 07 02:39:32 <nij->	 Source Code   \n C code is not yet loaded.
Mar 07 02:39:45 <nij->	That's what I got in C-h f current-buffer
Mar 07 02:39:49 <wgreenhouse>	nij-: yes, it'll prompt you for a dir for it
Mar 07 02:40:18 <nij->	OH WOW
Mar 07 02:40:20 <nij->	YES
Mar 07 02:40:24 <nij->	OH YES YES YES
Mar 07 02:40:31 <wgreenhouse>	:D
Mar 07 02:40:32 <nij->	I'm happy
Mar 07 02:40:48 <wgreenhouse>	nij-: also idk how much this will allow you to learn about C in general
Mar 07 02:41:09 <wgreenhouse>	emacs's Lisp-in-C language is extremely weird and specific
Mar 07 02:41:28 <nij->	that's fine
Mar 07 02:41:28 <wgreenhouse>	and largely made of these macros
Mar 07 02:41:39 <nij->	I am making progress little bit
Mar 07 02:41:53 <nij->	I'm not learning C this way. I want to know how emacs work.
Mar 07 02:42:16 <wgreenhouse>	oic. this is a good way then. :)
Mar 07 02:43:11 <nij->	I've had similar quests 2 years ago. Couldn't understand anything. And today I decided to come back. Still reading :D
Mar 07 02:46:11 <nij->	Hmmm.. I'm reading the definition of the C macro "DEFUN"..
Mar 07 02:46:33 <nij->	But I don't see how it defines the C function named Fcurrent_buffer..
Mar 07 02:46:36 <nij->	#define DEFUN(lname, fnname, sname, minargs, maxargs, intspec, doc) \
Mar 07 02:46:36 <nij->	  SUBR_SECTION_ATTRIBUTE                                            \
Mar 07 02:46:37 <nij->	  static union Aligned_Lisp_Subr sname =                            \
Mar 07 02:46:37 <nij->	     {{{ PVEC_SUBR << PSEUDOVECTOR_AREA_BITS },			    \
Mar 07 02:46:38 <nij->	       { .a ## maxargs = fnname },				    \
Mar 07 02:46:41 <nij->	       minargs, maxargs, lname, {intspec}, lisp_h_Qnil}};	    \
Mar 07 02:46:45 <nij->	   Lisp_Object fnname
Mar 07 02:46:47 <nij->	(Oops..)
Mar 07 02:47:16 <Viking667>	whoa dude...
Mar 07 02:49:12 <wgreenhouse>	nij-: it's interesting to compare it with the elisp defun which is these days an elisp macro
Mar 07 02:51:51 <nij->	wgreenhouse I mean.. I don't see how it expands `DEFUN("current-buffer", Fcurrent_buffer..` into `Lisp_Object Fcurrent_buffer () {\n [definition..`
Mar 07 02:52:45 <nij->	Do you?
Mar 07 02:54:01 <bpalmer>	nij-: the important part is the Lisp_Object fnname
Mar 07 02:54:18 <wgreenhouse>	↑
Mar 07 02:54:33 <nij->	Yeah.. but there is no definition body..
Mar 07 02:55:01 <nij->	Oh my god, I see how now.
Mar 07 02:55:09 <bpalmer>	nij-: the line after DEFUN  starts with a {
Mar 07 02:55:09 <nij->	This macro magic is pure evil..
Mar 07 02:55:18 <nij->	So dangerous..
Mar 07 02:55:36 <bpalmer>	so after expansion, it's a function name (that returns Lisp_Object) followed by a function body.
Mar 07 02:55:41 <nij->	Yep...
Mar 07 02:56:30 <bpalmer>	(and a separate tool handles docstrings)
Mar 07 02:59:50 <nij->	Thank you so much folks.
Mar 07 03:00:39 <nij->	Oh yeah.. where's the doc?
Mar 07 03:02:23 <wgreenhouse>	nij-: going back to your current-buffer example, the docs are here:
Mar 07 03:02:23 <wgreenhouse>	doc: /* Return the current buffer as a Lisp object.  */
Mar 07 03:02:41 <wgreenhouse>	it's the keyword doc: followed by a C comment
Mar 07 03:04:11 <nij->	What.....
Mar 07 03:04:14 *	nij- is confused
Mar 07 03:04:36 <nij->	Does the comment get rewritten by the macro?
Mar 07 03:05:02 <wgreenhouse>	yes
Mar 07 03:05:33 <wgreenhouse>	> It uses C comment syntax rather than C string syntax because comment syntax requires nothing special to include multiple lines.
Mar 07 03:07:05 <nij->	But there's literally no `doc` showing up in the body of DEFUN..
Mar 07 03:07:43 <wgreenhouse>	nij-: right, we're looking at the DEFUN for current-buffer again
Mar 07 03:08:04 <wgreenhouse>	oic you're saying the macro doesn't seem to do anything with this
Mar 07 03:08:20 <nij->	Yes..
Mar 07 03:08:32 <nij->	It may be able to see it, but it doesn't write it at all.
Mar 07 03:08:39 <wgreenhouse>	yeah I think that is true, as bpalmer alluded to there is a phase in the build process when docstrings are collected and added to the dumped emacs
Mar 07 03:08:55 <nij->	What a joke XD
Mar 07 03:08:59 <wgreenhouse>	a joke?
Mar 07 03:09:13 <nij->	I mean.. there's too many magics here
Mar 07 03:09:29 <nij->	s/What a joke/lol/
Mar 07 03:09:33 <wgreenhouse>	even more if you start reading disp.c
Mar 07 03:09:55 <wgreenhouse>	er xdisp.c sorry
Mar 07 03:10:18 <nij->	38443 lines. My emacs's getting slow~
Mar 07 03:10:39 <twb>	try turning it upside down and banging it against a wall so some of the dust falls out
Mar 07 03:13:03 <texnomancy>	the impression I get is that the C in emacs is written by people who are deeply resentful of the fact that they have to write C so they're making it as weird and lispy as possible
Mar 07 03:13:45 <nij->	HAHAHHA I'd like to get a reference.
Mar 07 03:13:48 <nij->	for this story
Mar 07 03:14:02 <wgreenhouse>	it's vibes, so there won't be a citation
Mar 07 03:14:06 <texnomancy>	which is relatable
Mar 07 03:14:27 <wgreenhouse>	but (info "(elisp) Writing Emacs Primitives") certainly suggests a whole genre
Mar 07 03:14:33 <waleee>	texnomancy: since stallman might have written at least some of it I'm not surprised
Mar 07 03:15:04 <nij->	Who was forcing and pushing to use C?
Mar 07 03:15:15 <wgreenhouse>	nij-: nobody
Mar 07 03:15:17 <nij->	oh.. maybe it's more like that stallman started with C
Mar 07 03:15:25 <nij->	so people have to accept that frog?
Mar 07 03:16:09 <wgreenhouse>	nij-: in gnu's case, the historical path dependence is we are trying to run on a pdp-11, or other minicomputer used for UNIX and C
Mar 07 03:16:22 <wgreenhouse>	not even PCs yet as a primary focus till Linux
Mar 07 03:16:46 <nij->	:O
Mar 07 03:16:48 <wgreenhouse>	nij-: Lisp Machine Emacsen will of course look very different
Mar 07 03:17:01 <wgreenhouse>	this was all to run on a PDP
Mar 07 03:17:11 *	nij- is googling PDP
Mar 07 03:17:15 <wgreenhouse>	lots of things were stripped out of elisp for same reasons
Mar 07 03:17:25 <wgreenhouse>	constraints of the machine
Mar 07 03:17:42 <nij->	... what did I just see
Mar 07 03:17:52 <nij->	a box of wires
Mar 07 03:17:59 <wgreenhouse>	nij-: a proper old computer
Mar 07 03:18:07 <wgreenhouse>	to which you'd attach a terminal
Mar 07 03:18:39 <nij->	.. was there an emacs working in that computer?
Mar 07 03:18:47 <wgreenhouse>	yes
Mar 07 03:18:54 <wgreenhouse>	several, even
Mar 07 03:19:12 <wgreenhouse>	I think gosling emacs was on unix before gnu emacs existed
Mar 07 03:20:10 <wgreenhouse>	pdp-11 could run a huge variety of stuff but it was gnu's early target because pcs/microcomputers weren't considered strong enough yet
Mar 07 03:20:23 <wgreenhouse>	but it was a reasonably cheap reasonably widely available machine
Mar 07 03:22:12 <nij->	amazing
Mar 07 03:23:06 <bpalmer>	with some caveats that  "reasonably cheap" meant different things then as does now.
Mar 07 03:24:05 <bpalmer>	A PDP-11 in 1970 looks to be ... hmm, about US$160k in today's dollars.
Mar 07 03:24:10 <nij->	lol
Mar 07 03:24:24 <wgreenhouse>	also "reasonably widely available" means thousands of units not millions
Mar 07 03:24:32 <nij->	good old days
Mar 07 03:25:57 <bpalmer>	At any rate, extensive and elaborate macro systems like this seems par for the course in a lot of old systems that have survived to the present day.
Mar 07 03:26:04 <lockywolf>	and "small" meant "about the size of an industrial fridge"
Mar 07 03:27:04 <lockywolf>	does anyone know where I can buy a punchcard reader/writer with a lightning interface?
Mar 07 03:27:07 <thuna`>	Is there a replace-region-contentsff which accepts a string instead of REPLACE-FN?  replace-buffer-contents is close but it doesn't accept BEG and END arguments
Mar 07 03:27:24 <wgreenhouse>	> In 2013, it was reported that PDP–11 programmers would be needed to control nuclear power plants through 2050.[46]
Mar 07 03:29:03 <bpalmer>	thuna`: you could use (lambda () s) as the replace-fn , where s is the string you want to use.
Mar 07 03:29:14 <thuna`>	bpalmer: Yeah, I know, but that's very ugly :/
Mar 07 03:29:15 <lockywolf>	wgreenhouse: where is that and how much do they pay? I can program for pdp-11
Mar 07 03:29:47 <thuna`>	(Also might break without lexical-binding though that doesn't matter much to me)
Mar 07 03:29:48 <wgreenhouse>	https://www.theregister.co.uk/2013/06/19/nuke_plants_to_keep_pdp11_until_2050/
Mar 07 03:30:08 <bpalmer>	thuna`: should be fine, as it's called immediately.
Mar 07 03:30:32 <bpalmer>	so s will still be in dynamic scope.
Mar 07 03:30:33 <wgreenhouse>	lockywolf: ^ the article mentions specifically GE plants
Mar 07 03:30:55 <lockywolf>	I suspect that Russian nuclear powerplants might not use any digital equipment at all
Mar 07 03:31:05 <thuna`>	bpalmer: Until you obtain S using arguments called BEG and END in your original function :P
Mar 07 03:31:09 <lockywolf>	(which is not necessarily a bad thing)
Mar 07 03:31:30 <wgreenhouse>	lockywolf: the controls of chernobyl #4 were certainly digital
Mar 07 03:35:22 <lockywolf>	great
Mar 07 03:35:37 <lockywolf>	good to know how reliable is digital technology
Mar 07 03:37:35 <bpalmer>	digital technology is all too often one fingerbreadth from failure.
Mar 07 03:56:28 <johnjaye>	so c will be around forever in other words
Mar 07 03:56:49 <johnjaye>	can we just have C, but without 200 forms of undefined behavior?
Mar 07 03:57:00 <Viking667>	someone was suggesting that same thing about COBOL. What did Grace Hopper start?
Mar 07 03:57:12 <Viking667>	(as in, it'll be around for ages)
Mar 07 03:58:07 <bpalmer>	johnjaye: there's lots of new languages.
Mar 07 03:58:38 <johnjaye>	I think D is probably closest to what i'm thinking of
Mar 07 03:58:42 <bpalmer>	go and D both have much the same feel but are more defined.
Mar 07 03:58:54 <johnjaye>	it says there's a strict subset of D called "betterC" which avoids garbage collection and some other stuff and only uses the c runtime
Mar 07 03:59:37 <johnjaye>	Basically I want C, but make some sane decisions about some of the UB garbage. call it C+
Mar 07 04:00:08 <johnjaye>	e.g. signal an error when signed arithmetic overflows
Mar 07 04:01:02 <ymir>	Actually, how does the docstring-as-C-comment thing work?  Are macros able to work with comments?
Mar 07 04:01:18 <ymir>	(C macros that is)
Mar 07 04:01:22 <johnjaye>	not in c. in c comments are stripped out as if they weren't there
Mar 07 04:01:35 <johnjaye>	you can use an external tool like doxygen to scan comments for docs
Mar 07 04:01:51 <ymir>	So some custom  pre-preprocessor?
Mar 07 04:02:06 <johnjaye>	doxygen just scans comments for javadoc like tags like @function or @param
Mar 07 04:02:14 <johnjaye>	then autogenerates html pages for it
Mar 07 04:02:33 <johnjaye>	assuming javadoc is the kind of thing you mean
Mar 07 04:03:30 <ymir>	No, I'm refering to how docstrings are passed to the DEFUN macro in Emacs' C core as C comments rather than as string literals
Mar 07 04:05:10 <johnjaye>	i think that's meaningless though
Mar 07 04:05:21 <johnjaye>	because afaik comments are stripped before anything happens
Mar 07 04:05:22 <ymir>	wdym?
Mar 07 04:05:22 <fsbot>	WDYM is an acronym for "What do you mean [By]"
Mar 07 04:05:30 <johnjaye>	so it's just there for your benefit to read it
Mar 07 04:05:51 <ymir>	no, they end up compiled in as docstrings
Mar 07 04:06:04 <ymir>	See C-h k car for instance
Mar 07 04:06:17 <ymir>	C-h f car, my bad
Mar 07 04:07:03 <bpalmer>	ymir: the docstrings are put in etc/DOC by default
Mar 07 04:07:23 <bpalmer>	then Snarf-documentation goes and stamps them into place.
Mar 07 04:09:09 <johnjaye>	hmm. i'm reading that c89 actually didn't specify that. but c99 does specify exactly when comments are stripped
Mar 07 04:09:18 <johnjaye>	apparently it requires a comment to be replaced with a single space?
Mar 07 04:09:20 <johnjaye>	https://stackoverflow.com/questions/1476892/poster-with-the-8-phases-of-translation-in-the-c-language/1477446#1477446
Mar 07 04:09:21 <rudybot>	https://teensy.info/2BzZ5wpxCV
Mar 07 04:09:57 <bpalmer>	ymir: looks like the command it uses is make-docfile  (also in the emacs source repository)
Mar 07 04:10:20 <johnjaye>	ymir: but it would have to be by a separate tool. according to c99 comments are stripped before any preprocessing directives are done
Mar 07 04:10:30 <johnjaye>	or i guess replaced by a space.
Mar 07 04:13:25 <johnjaye>	this description is also a bit strange since it relegates compilation to a single sentence
Mar 07 04:13:44 <bpalmer>	compilation is just a phase we all go through.
Mar 07 04:13:54 <johnjaye>	at least that's how it sounds. it says The resulting tokens are syntactically and semantically analyzed and translated as a translation unit.
Mar 07 04:18:27 <johnjaye>	which is basically what the rest of the hundreds of pages of this standard are about.
Mar 07 04:18:29 <johnjaye>	but ok
Mar 07 04:19:07 <bpalmer>	johnjaye: you get the same thing with lisp: read, eval, print, loop.
Mar 07 04:19:18 <bpalmer>	there'eval
Mar 07 04:19:30 <bpalmer>	there's a lot more complexity in the eval phase than in the loop phase.
Mar 07 04:19:41 <johnjaye>	idk, just feels very strange way to describe the way a C source file is processed.
Mar 07 04:20:11 <johnjaye>	Sort of like saying a restaurant is the steps of driving there, getting out of your vehicle, going in, talking to someone, ordering food, then the "eating phase", then you get back in your car, then you go home.
Mar 07 04:22:05 <johnjaye>	like imagine gcc diagnostics working that way. "Error at step 2 of translation: Invalid \ character placement"
Mar 07 04:22:24 <johnjaye>	then every compilation error: "Error at step 5: Translating the translation unit failed."
Mar 07 04:26:00 <bpalmer>	that's not a standards-compliant compiler.
Mar 07 04:26:40 <bpalmer>	there are a handful of errors that are supposed to include the relevant code
Mar 07 04:26:52 <johnjaye>	actually error messages of compilers are notoriously bad anyway
Mar 07 04:28:54 <wgreenhouse>	they are?
Mar 07 04:32:32 <bpalmer>	aha, found at least one such requirement: for static assertions, "Otherwise, the constraint is violated and the implementation shall produc ea diagnostic message that includes the text of the string literal, except that characters not in the basic source character set are not required to appear in the message"
Mar 07 04:34:00 <bpalmer>	one of the best probably standards-compliant "compilers" is a shell script is one  that simply cats the entire program it's fed to output, and outputs a diagnostic message that says "The above code may have an error."
Mar 07 04:34:20 <bpalmer>	but you can't leave off catting the program to output, because of the diagnostic message constraints.
Mar 07 04:34:47 <wgreenhouse>	bpalmer: which C edition is that allegedly compliant with?
Mar 07 04:35:07 <twb>	bpalmer: that's buggy in the case where the input program is infinitely large
Mar 07 04:36:01 <bpalmer>	wgreenhouse: I don't remember when I first saw thta pointed out as potentially compliant, but I think it works for C11
Mar 07 04:36:12 <bpalmer>	twb: is that a valid C program?
Mar 07 04:43:57 <bpalmer>	Hmm. OK, the shell script compiler may have to do something a little fancier ot handle the requirements of 5.2.4.1 Translation limits
Mar 07 04:44:19 <bpalmer>	"The implementation shall be able to translate and execute at least one program that contains at least one instance of every one of the following limits"
Mar 07 04:44:56 <bpalmer>	It could do this by hand-recognizing (with , e.g., diff(10)  a certain test program and "executing" it with a hard coded value)
Mar 07 04:45:19 <bpalmer>	but 5.2.4.1 means it's absolutely allowed to reject any and all other programs.
Mar 07 05:01:46 <twb>	Let's ask the "web 3.0" people when they're going to release "web 95"
Mar 07 05:25:13 <bpalmer>	rudybot: windows 95 or wayland: pick your poison.
Mar 07 05:25:14 <rudybot>	bpalmer: take your poison of EMACS=xemacs   or EMACS=emacs
Mar 07 05:25:29 <nij->	anyone still uses xemacs?!
Mar 07 05:25:42 <bpalmer>	ain't nothing wrong with that which works.
Mar 07 05:28:20 <wgreenhouse>	nij-: they just had a release, so probably!
Mar 07 05:36:27 <hodapp>	judybot: Okay, you gotta install one, write one, delete one. Windows 95, Linux, Plan 9. Go.
Mar 07 05:36:29 <judybot>	hodapp: \_ A friend of mine works at a company that makes software for Windows CE devices (handheld computers). They are currently working on an application to allow users to play a game called "Dungeon Keeper" via their handhelds.
**** BEGIN LOGGING AT Thu Mar  7 05:39:14 2024

Mar 07 05:39:13 *	Now talking on #emacs
Mar 07 05:39:13 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 07 05:39:13 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 07 05:43:15 *	nij- is amazed.
**** BEGIN LOGGING AT Thu Mar  7 05:53:08 2024

Mar 07 05:53:08 *	Now talking on #emacs
Mar 07 05:53:08 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 07 05:53:08 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 07 05:55:28 <_rubik>	Hey folks. I'm debugging some tramp behavior, and I noticed that it run `test pwd+<whatever symbol I'm hovering over>`
Mar 07 05:57:02 <_rubik>	For example, if the file is foo/bar.go and my cursor is on buzz.Baz(), I'll notice tramp running `test foo/buzz.Baz` which is obviously not a file
Mar 07 05:57:16 <_rubik>	Is this tramp behavior? Or a side effect of other packages?
Mar 07 05:57:45 <twb>	nij-: surely "dup" is duplicating a file descriptor?
Mar 07 05:58:19 <nij->	What do you mean?
**** BEGIN LOGGING AT Thu Mar  7 06:46:02 2024

Mar 07 06:46:01 *	Now talking on #emacs
Mar 07 06:46:01 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 07 06:46:01 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 07 06:46:28 <nij->	But then you taught me about `DEFUN`. That means elisp functions (primary opts) defined that way have nothing to do with the bytecode VM, right?
Mar 07 06:47:47 <nij->	So.. if they don't get to transformed into bytecode.. what are they after compilation?
**** BEGIN LOGGING AT Thu Mar  7 11:45:30 2024

Mar 07 11:45:29 *	Now talking on #emacs
Mar 07 11:45:29 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 07 11:45:29 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Thu Mar  7 12:26:51 2024

Mar 07 12:26:50 *	Now talking on #emacs
Mar 07 12:26:50 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 07 12:26:50 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 07 12:29:18 <RickAstley>	,botsnack
Mar 07 12:29:18 <fsbot>	yum! ...I mean, apt!
Mar 07 12:29:20 <RickAstley>	nom
Mar 07 12:29:20 <RickAstley>	NOM
**** BEGIN LOGGING AT Thu Mar  7 12:39:51 2024

Mar 07 12:39:50 *	Now talking on #emacs
Mar 07 12:39:50 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 07 12:39:50 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 07 13:02:18 <jpoiret>	hey everyone, I'm working on a big merge using magit and ediff, and sometimes I want to see the blame of a change in eg. buffer B, but because it's not visiting a file `magit-blame` doesn't work. Does anyone have something working for this?
Mar 07 13:07:32 <weary-traveler>	jpoiret: to clarify, B here being one of the ediff parent buffers?
Mar 07 13:19:34 <RickAstley>	a bat... credit card?
Mar 07 13:24:58 <lockywolf>	Does anyone have a decent mu4e+gnupg setup that I could learn from?
Mar 07 13:38:09 <nij->	We can embed browsers in emacs, e.g. https://github.com/akirakyle/emacs-webkit
Mar 07 13:38:36 <nij->	But can I just embed a part of the webpage?
Mar 07 13:38:53 <nij->	For example, embed just the video frame in youtube (so that I don't see other stuff).
Mar 07 13:41:35 <younder>	You might want to check out Sacha Chua's blog. She has been doing some stuff like this https://sachachua.com/blog/
Mar 07 13:43:51 <nij->	Around when? I couldn't find relevant thing after a thin skim.
Mar 07 13:50:39 <younder>	https://sachachua.com/blog/2024/01/patching-elfeed-and-shr-to-handle-svg-images-with-viewbox-attributes/
Mar 07 13:51:04 <younder>	You are right it is a nightmare to find anything
Mar 07 13:53:28 <younder>	This is a whole series about this dom manipulation from emacs. from around jan feb this year.
Mar 07 13:58:59 <nij->	hmm svg are images
Mar 07 13:59:08 <nij->	not web widgets nor videos
Mar 07 14:03:53 <edgar-rft>	let's watch youtube videos as animated SVGs
Mar 07 14:04:55 <grym>	let's compress youtube videos by calculating their fourier series
Mar 07 14:05:18 <younder>	Sounds like a job for ffmpeg
Mar 07 14:05:29 <grym>	fast fourier mpeg
Mar 07 14:10:11 <notzmv>	:x I just noticed that circe makes C-l not work right :x
Mar 07 14:11:06 <notzmv>	hmm looks like the problem is when point gets to the LUI line.
**** BEGIN LOGGING AT Thu Mar  7 14:15:49 2024

Mar 07 14:15:48 *	Now talking on #emacs
Mar 07 14:15:48 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 07 14:15:48 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 07 14:17:44 <jpoiret>	weary-traveler: yes
Mar 07 14:27:54 <lockywolf>	How can I use string-match a second time?
Mar 07 14:28:17 <lockywolf>	like, I have (string-match "finger-print[[:space:]]*: \\([A-F0-9]+\\)" output), and it finds the second match, but I want to iterate over all matches
Mar 07 14:44:48 <APic>	notzmv: Very epically well
Mar 07 14:44:52 <APic>	notzmv: And Yours?
Mar 07 14:46:41 <notzmv>	doing alright
Mar 07 14:46:57 <notzmv>	having a pretty decent day
Mar 07 14:47:21 <notzmv>	found a little gift from past me in my bad
Mar 07 14:47:22 <notzmv>	bag
Mar 07 14:51:37 <nij->	gift from yourself?
Mar 07 14:51:42 <nij->	from your past self?
Mar 07 14:54:35 <jbe>	surely it's from your future self
Mar 07 14:59:25 <RickAstley>	a Bat
Mar 07 14:59:27 <RickAstley>	credit card
Mar 07 15:08:04 <lockywolf>	nvm found it
Mar 07 15:15:20 <weary-traveler>	jpoiret: not sure if you figured out how to get magit-blame working for your needs, but magit-blame doesn't necessarily require (buffer-file-name) to be non nil. e.g. when clicking on a hunk in a magit-revision buffer it opens up a view of the file as of that commit. in that buffer magit-blame works and buffer-file-name is nil
Mar 07 15:18:52 <jpoiret>	weary-traveler: right, but for it to work for ediff I expect there to be a lot more work, since it's not a migt-controlled buffer
Mar 07 15:37:03 <amirny2205>	hi! how do you navigate in code made with programming languages of difficult syntax, like elisp or javascript? I cannot identify where this or that logical block ends   thank you
Mar 07 15:37:51 <grym>	some structured editing tools or autoformatters, but also just experience
Mar 07 15:38:26 <rpav>	elisp or js have difficult syntax?
Mar 07 15:38:44 <rpav>	for list paredit is king, and it works to varying degrees for other things
Mar 07 15:38:53 <rpav>	as grym alluded to
Mar 07 15:39:45 <Guest62>	been obsessed about eshell lately, it's taken awhile but I'm using it more and more often.
Mar 07 15:42:42 <amirny2205>	thanks
Mar 07 15:46:09 <rpav>	"for list" for _lisp_ 🤣 .. it's one of those thursdays
Mar 07 15:46:27 <grym>	,thursday
Mar 07 15:46:28 <fsbot>	Try: bobracha favour
Mar 07 15:46:47 <quiliro>	amirny2205: you just need paren highlighting and it becomes very easy to read
Mar 07 15:47:25 <quiliro>	rather, expression highlighting is better
Mar 07 15:47:28 <grym>	,thursday is noecho “This must be Thursday," said Arthur to himself, sinking low over his beer. "I never could get the hang of Thursdays.”
Mar 07 15:47:29 <fsbot>	Created new note for "thursday"
Mar 07 15:47:32 <amirny2205>	quiliro: thanks, I thiks that's indentation which will work well
Mar 07 15:47:42 <quiliro>	but I could never make expresion highlighting work
Mar 07 15:47:56 <quiliro>	better than indentation, amirny2205
Mar 07 15:48:24 <quiliro>	it makes symbolic expressions in elisp colorful
Mar 07 15:48:32 <grym>	,combobulate
Mar 07 15:48:32 <fsbot>	combobulate is Structured Editing and Navigation in Emacs with Treesitter https://github.com/mickeynp/combobulate
Mar 07 15:48:50 <quiliro>	so you can notice its stucture as easily as navigating your home
Mar 07 15:58:24 <ndegruchy>	,ping
Mar 07 15:58:25 <fsbot>	␕
Mar 07 16:00:19 <grym>	,ding
Mar 07 16:00:20 <fsbot>	dong
Mar 07 16:00:24 <ndegruchy>	I really need to pick up Mastering Emacs
Mar 07 16:00:41 <grym>	lots of good stuff in there
Mar 07 16:00:58 <grym>	i noticed that combobulate grew a query editor some while ago, relatedly
Mar 07 16:06:50 <quiliro>	I am leaving the books and learning eLisp from macro editing
Mar 07 16:07:42 <ndegruchy>	I've only used a couple of self-made macros. They're cool, but I feel like they are fragile for most of the stuff I'd use them for
Mar 07 16:08:10 <grym>	i've never seen it spelled that way
Mar 07 16:08:28 <rpav>	ndegruchy: like keyboard macros?
Mar 07 16:11:30 <quiliro>	It does not matter if they are fragile.  It is just for learning.
Mar 07 16:12:09 <quiliro>	Not for making applications
Mar 07 16:12:32 <rpav>	you learn what you practice
Mar 07 16:12:34 <quiliro>	Once I learn.  I can make the applications correctly.  :-)
Mar 07 16:12:48 <quiliro>	yes, little by little
Mar 07 16:12:53 <rpav>	if you practice making fragile things, you will get proficient at making fragile things
Mar 07 16:13:17 <quiliro>	it is like learning to walk by making bad steps
Mar 07 16:13:27 <quiliro>	it does not matter if they are bad
Mar 07 16:13:35 <quiliro>	the important thing is to do
Mar 07 16:13:59 <quiliro>	there is no "try" .... there is do, or not do
Mar 07 16:14:18 <ndegruchy>	rpav: Yeah
Mar 07 16:14:22 <quiliro>	later I can try the big leages
Mar 07 16:15:27 <quiliro>	I tried elisp into, but it feels so artificial...it is better to learn with personal needs, such as the ones we can have when we use macros
Mar 07 16:15:28 <ndegruchy>	I guess I still haven't figured out the detailed difference between a 'macro' and a 'defun' in elisp
Mar 07 16:15:47 <pkal>	arch-angel: an or in Elisp's regexp syntax is \\|, and I don't know what the second part of the question means.  Also see `rx'.
Mar 07 16:15:50 <NotThatRPG>	I'm having trouble where I can't shutdown emacs gracefully because of a tramp connection that has been lost.  `tramp-cleanup-connection` claims not to find any connections. Anyone seen this? Know how to fix it?
Mar 07 16:16:00 <grym>	i have not once thought to myself "i want to add a feature to my editor; i know, i'll write a macro!"
Mar 07 16:16:24 <pkal>	ndegruchy: do you mean defmacro and defun?
Mar 07 16:16:42 <quiliro>	I have the same problem with eww, NotThatRPG ... I don't know how to fix it
Mar 07 16:16:45 <grym>	(to be clear: i'm not talking about keyboard macros)
Mar 07 16:16:52 <ndegruchy>	NotThatRPG: odd, you can see what is open still by running M-x list-processes
Mar 07 16:17:06 <rpav>	ndegruchy: keyboard macros are where i use multiple-cursors mostly instead
Mar 07 16:17:07 <ndegruchy>	pkal: Probably
Mar 07 16:17:15 <rpav>	or vr/query-replace
Mar 07 16:17:50 <grym>	,visual-regexp-steroids
Mar 07 16:17:51 <fsbot>	visual-regexp-steroids are an extension to visual-regexp which enables the use of modern regexp engines (no more escaped group parentheses, and other goodies!). In addition to that, you can optionally use the better regexp syntax to power isearch-forward-regexp and isearch-backward-regexp. https://github.com/benma/visual-regexp-steroids.el
Mar 07 16:17:52 <grym>	<3
Mar 07 16:18:18 <rpav>	ndegruchy: in elisp if you (defun foo () ..) and call (foo), it runs the body of foo and you get the result; if you (defmacro bar () ..) and call (bar), it sticks the result of (bar) into your code, possibly evaluating _that_ if you're at the top level
Mar 07 16:18:45 <ndegruchy>	Interesting
Mar 07 16:18:51 <JohnGalt>	yeah it evals after expansion unless you wrap it in macroexpand-all
Mar 07 16:19:03 <ndegruchy>	which is why use-package works the way it does
Mar 07 16:19:07 <JohnGalt>	basically you can make new syntax and DSL
Mar 07 16:19:39 <JohnGalt>	in scheme let is actually a macro that calls lambda under the hoold
Mar 07 16:19:43 <NotThatRPG>	thanks, ndegruchy -- I will try that next time. I've managed to get Emacs to lock up, so will have to kill the process from outside now.
Mar 07 16:21:14 <pkal>	ndegruchy: If this is of any use, in a Scheme-like language macro could be handled this way by a meta-interpreter: (apply func (map (if (macro? func) eval identity) args))
Mar 07 16:21:16 <ndegruchy>	NotThatRPG: You can kill the connection (or try, anyway) from that buffer, but it might be interesting to poke around and see why it's stuck 'open'. Maybe it's set to keep connections alive for long-lived editing processes. I know my default config requires TRAMP to reconnect constantly
Mar 07 16:21:19 <edrx>	people, what do you use to pretty-print stuctures?
Mar 07 16:21:29 <pkal>	edrx: pp, usually
Mar 07 16:21:35 <grym>	depends on the langauge
Mar 07 16:21:49 <ndegruchy>	A steady hand and the tab key :D
Mar 07 16:21:53 <grym>	fairly regularly, json and jq -r . :P
Mar 07 16:22:35 <edrx>	pkal: do you know other tools? something that would print the names of the fields?
Mar 07 16:23:12 <rpav>	i wish i had a 3d printer, so i could say that ;/
Mar 07 16:23:45 <edrx>	when I needed that a few years ago I wrote a very primitive tool - its output looks like this: https://i.ibb.co/JQwzCHs/sshot.png - but I would like to add pointers to better ways...
Mar 07 16:24:32 <rpav>	edrx: what's your goal? if you just want to see elisp data, there's a pretty good interactive inspector as i recall
Mar 07 16:25:15 <edrx>	rpav: this one? https://github.com/mmontone/emacs-inspector
Mar 07 16:25:18 <edrx>	I hated it
Mar 07 16:26:10 <rpav>	not very specific
Mar 07 16:27:15 <pkal>	edrx: fields of a struct?
Mar 07 16:28:12 <edrx>	rpav: I needed a way to automate taking an object o and navigating in the ways such and such in it to reach a certain subsubsubojects... i.e., saving a "path" to a certain subsubobject. I tried to implement that in inspector - see https://github.com/mmontone/emacs-inspector/issues/8#issue-1275655944 - but wasn't happy with the result
Mar 07 16:28:16 <edrx>	pkal: yes
Mar 07 16:29:13 <edrx>	(need to buy lunch in an internetless place! back in 30 mins, then will read everything)
Mar 07 16:29:31 <rpav>	ah yes one of the big pain points of "regular" lisps .. structural navigation ;/
Mar 07 16:29:51 <rpav>	(i think clojure or something has x.y.z and [])
Mar 07 16:31:45 <rpav>	edrx: i'm not sure either thing is what you want; it all depends on how you actually need to _automate_
Mar 07 16:33:04 <rpav>	e.g. something like (find-path 'b '(1 2 3 (a b c))) => ((elt 3) (elt 1))
Mar 07 16:33:08 <rpav>	might be nice
Mar 07 16:33:33 <rpav>	(you could produce strings of c[ad]r if you really want but the principle is the same)
Mar 07 16:33:35 <grym>	feels a bit like lenses
Mar 07 16:33:55 <grym>	https://hackage.haskell.org/package/lens  this thing
Mar 07 16:34:09 <grym>	which has inspired a few things in python at least
Mar 07 16:34:28 <edrx>	rpav: that's what I was trying to do
Mar 07 16:34:55 <edrx>	rpav: I explained that to the author of inspector and it didn't make such sense to him
Mar 07 16:35:06 <rpav>	edrx: shouldn't be hard then? recursively accumulate the "current path" and if you find the thing, you return the path
Mar 07 16:35:16 <grym>	it reads more like he didn't have time to pick up your world model
Mar 07 16:35:40 <rpav>	edrx: i'm not sure an inspector/printer are the right tools if you want automation
Mar 07 16:36:01 <edrx>	for example, suppose that we need an operation on package-alist that we don't know how to do with the standard tools. we run this, (inspector-inspect package-alist)
Mar 07 16:36:03 <rpav>	if you want to interactively pick a thing and get the path, maybe, but that seems different
Mar 07 16:36:09 <edrx>	and we find the data that we need to extract
Mar 07 16:36:53 <edrx>	but I need to way to go back to that sub-sub-subobject
Mar 07 16:37:06 <edrx>	to way -> a way
Mar 07 16:37:22 <rpav>	actually surely an interactive path would nto be that hard to hack on top of inspector either .. accumulate the "path" of the current thing everytime you click a link
Mar 07 16:37:38 <edrx>	like (find-inspector package-alist '(2 3 1 4))
Mar 07 16:37:50 <edrx>	rpav: yes, I tried to
Mar 07 16:38:07 <edrx>	apparently that makes sense to very few people
Mar 07 16:38:38 <edrx>	something that I "need" is something that people don't even understand why people would "want"
Mar 07 16:38:42 <rpav>	actually huh the inspector uses and rewrites a single buffer ;/
Mar 07 16:39:09 <edrx>	rpav: yes unless we change its name
Mar 07 16:39:12 <edrx>	back soon!
Mar 07 16:40:16 <ndegruchy>	Sigh. Time to go to the doctor's office.
Mar 07 16:46:55 <JohnGalt>	XX<Po>5{;\3_5_eKKEpP9pyBk|u'^/69Pon6t<
Mar 07 16:47:46 <grym>	gesundheit
Mar 07 16:48:14 <Tommos0>	Looks like a password :)
Mar 07 16:50:00 <grym>	no no those look like hunter2
Mar 07 16:50:19 <jbe>	hey that's my luggage password
Mar 07 16:51:02 <thuna`>	Is there an equivalent of with-temp-file that writes even with non-local exits like cl-return?
Mar 07 16:52:37 <JohnGalt>	stupid cat
Mar 07 16:54:12 <JohnGalt>	This Emacs 30 is pretty stable, I hope they release it soon
Mar 07 16:56:01 <rpav>	build your own? if it's stable close enough
Mar 07 17:00:03 <rpav>	magit seems to be storing the paths of repositories
Mar 07 17:01:24 <rpav>	i moved the repository and it's spitting out errors about missing paths; git however works fine from the command line
Mar 07 17:04:55 <edgar-rft>	rudybot: somebody must shovel all the poop out of the emacs stable
Mar 07 17:04:55 <rudybot>	edgar-rft: There is a shovel here.
Mar 07 17:05:27 <grym>	rpav: are you using project.el/projectile? maybe it's sniffing the cache
Mar 07 17:05:57 <rpav>	grym: nah so apparently it's looking at the worktree gitdir where git does not
Mar 07 17:06:03 <grym>	oh interesting
Mar 07 17:06:05 <rpav>	i edited all the files to the right thing and now it's fine
Mar 07 17:06:23 <rpav>	_sortof_ makes sense since with git you're just cwd and with magit it has no other idea
Mar 07 17:16:05 <JohnGalt>	rpav: I am using 30
Mar 07 17:29:17 <johnjaye>	,g is raku superior to perl?
Mar 07 17:29:19 <fsbot>	🤖[g] In the battle of Raku vs. Perl, let's just say they both have their own unique strengths and charm. It ultimately depends on your preferences and requirements!
Mar 07 17:32:01 <bremner>	,g is X superior to Y?
Mar 07 17:32:03 <fsbot>	🤖[g] Ah, the eternal question of X vs. Y! Let's just say they both have their own special qualities that make them unique in their own way. It's a matter of perspective!
Mar 07 17:32:16 <bremner>	spot the astrologist
Mar 07 17:32:24 <grym>	,g is X greater than Y
Mar 07 17:32:25 <fsbot>	🤖[g] Ah, the age-old question of X greater than Y. Well, with numbers, maybe, but in life, it's all relative!
Mar 07 17:32:36 <grym>	,g is X greater than Y, if X = Y**2
Mar 07 17:32:37 <fsbot>	🤖[g] Mathematically speaking, if X = Y^2, then X would indeed be greater than Y, thanks to the power of exponents!
Mar 07 17:32:38 <younder>	a politian bot!
Mar 07 17:33:05 <grym>	joke's on you, integer bot
Mar 07 17:35:48 <younder>	Y < 0 => X complex X = Y = 0, 1 => same X,Y>1 => X > Y
Mar 07 17:36:38 <younder>	The power of 'whetware' ;)
Mar 07 17:38:34 <quiliro`>	yeah...if Y<1 ... X<Y
Mar 07 17:39:23 <quiliro`>	oh andY>0
Mar 07 17:39:31 *	younder shudders at the gates of the hilbert hotel
Mar 07 18:04:52 <mfisher>	haha
Mar 07 18:11:23 <e1f>	"you can check-in but you'll never find your suite"?
Mar 07 18:24:22 <rpav>	only given unbounded time
Mar 07 18:25:04 <rpav>	it may be infinite, but any two points in an infinite space are finitely separated
Mar 07 18:29:33 <ndegruchy>	Infinite-Infinites
Mar 07 18:29:40 <ndegruchy>	Which is just infinite
Mar 07 18:31:17 <grym>	remember kids; just like animals, some infinities are more equal than others
Mar 07 18:34:36 <rpav>	"infinite infinities" sounds like a JRPG
Mar 07 18:35:59 <edgar-rft>	,(expt 1.0e+INF 1.0e+INF)
Mar 07 18:36:00 <fsbot>	1.0e+INF  ..(float)
Mar 07 18:38:45 <edgar-rft>	rudybot: 1.0+MINF is Moar INFinite
Mar 07 18:38:46 <rudybot>	edgar-rft: moar infinite i think
Mar 07 18:43:00 <e1f>	,g is infinity+1 greater than infinity?
Mar 07 18:43:02 <fsbot>	🤖[g] Ah, the mysteries of infinity! Technically, both are infinite, so mathematically speaking, they are equal. But let's not get into a philosophical debate here!
Mar 07 18:48:06 <e1f>	wow. the white house is recommending developers not use c and c++ to wite software because it's not memory safe
Mar 07 18:48:25 <e1f>	https://www.infoworld.com/article/3713203/white-house-urges-developers-to-dump-c-and-c.html
Mar 07 18:48:51 <alcor>	everyone should write software in elisp. it's memory-safe!
Mar 07 18:52:34 <e1f>	wh endorses rust
Mar 07 18:53:39 <gan_ainm>	the documentation of the vterm command states that "with a string prefix arg, create a new session with arg as buffer name.", but C-u does not accept strings, so how do I pass a string prefix arg without resorting to M-: (vterm "name")?
Mar 07 19:01:26 <e1f>	you can m-x set-variable prefix-arg and then invoke m-x vterm
Mar 07 19:02:05 <e1f>	c-u only accepts numeric (or -) prefixes
Mar 07 19:02:48 <e1f>	https://emacs.stackexchange.com/questions/63186/how-can-i-pass-an-expression-to-a-prefix-argument
Mar 07 19:05:37 <amirny2205>	what are the best learning resources for elisp? I want it to be kept small in size, because I can goohle everything else
Mar 07 19:06:32 <gan_ainm>	e1f: M-x set-variable does not allow prefix-arg "[Match required]", anyway, the sequence presented is longer than M-: (vterm "name").
Mar 07 19:07:46 <grym>	amirny2205: M-: (info "eintr"), M-: (info "elisp"), and lots of solving your own problems
Mar 07 19:08:41 <e1f>	perhaps that's why the response in the sx link suggested doing a setq
Mar 07 19:09:22 <amirny2205>	thanks grym
Mar 07 19:09:43 <grym>	amirny2205: and hacking around in *scratch* of course
Mar 07 19:10:06 <amirny2205>	thanks
Mar 07 19:10:09 <e1f>	but m-: seems to be the suggested solution
Mar 07 19:10:50 <dcb>	amirny2205: this might be useful, in case you don't use it already: https://zealdocs.org/
Mar 07 19:11:02 <dcb>	(for offline documentation, though)
Mar 07 19:12:44 <amirny2205>	dcb why is it useful? emacs has build-in docs which are great aren't they
Mar 07 19:14:00 <dcb>	I've been using zeal longer than emacs so I didn't bother setting up documentation for other languages
Mar 07 19:15:18 <amirny2205>	dcb why would anyone use offline docs if the internet is always available?
Mar 07 19:16:18 <grym>	they're a lot faster
Mar 07 19:16:22 <grym>	and no browser required
Mar 07 19:16:43 <grym>	zeal doesn't seem to have a docset available for emacs, but neither does it really need one...
Mar 07 19:16:57 <dcb>	my internet isn't always available
Mar 07 19:16:59 <gan_ainm>	e1f: yes, that approach does the trick, however, instead of typing M-: (setq prefix-arg "name")<RET>M-x vterm<RET> any sane person would rather type M-: (vterm "name") instead
Mar 07 19:20:37 <amirny2205>	thanks
Mar 07 19:25:04 <edrx>	amirny2205: you still around?
Mar 07 19:25:54 <edrx>	amirny2205: this is very minimal: http://anggtwu.net/eev-intros/find-elisp-intro.html
Mar 07 19:27:17 <edrx>	amirny2205: I sometimes teach Emacs to total newbies starting by this other tutorial - http://anggtwu.net/eev-intros/find-eev-quick-intro.html - and after 30 or 40 minutes we switch to the other one...
Mar 07 19:27:40 <grym>	well.  "emacs" or "elisp"
Mar 07 19:27:43 <grym>	that's how to "eev"
Mar 07 19:27:45 <grym>	not the same thing
Mar 07 19:28:22 <edrx>	for users they're very different
Mar 07 19:28:35 <grym>	that's what i said, yes
Mar 07 19:29:22 <edrx>	but the intent of emacs _used to be_ to blur the distinction between programmers and users
Mar 07 19:30:49 <grym>	sure
Mar 07 19:30:58 <grym>	it's still the case that emacs/elisp and eev are distinct
Mar 07 19:31:07 <grym>	even if the emacs/elisp line blurs
Mar 07 19:31:42 <edrx>	amirny2205 asked about reasources for learning elisp, so he/she/they may be a non-user
Mar 07 19:32:21 <grym>	i don't see the relevance
Mar 07 19:32:53 <edrx>	and non-users may find interesting to know of an approach in which elisp is taught to total beginners
Mar 07 19:33:06 <edrx>	grym: can you explain?
Mar 07 19:33:17 <grym>	"i want to learn elisp" "here's eev" "...wat"
Mar 07 19:35:00 <edrx>	grym: "The most important idea in Emacs is that Lisp code can appear anywhere, and you can evaluate a Lisp expression (a "sexp") by placing the cursor (the "point") just after it and typing..." - http://anggtwu.net/eev-intros/find-eev-quick-intro.html
Mar 07 19:35:11 <thuna`>	Why is custom resetting rcirc-ignore-list back to default on a theme change?  That doesn't seem right
Mar 07 19:35:14 <edrx>	oops, http://anggtwu.net/eev-intros/find-eev-quick-intro.html#2
Mar 07 19:35:57 <edrx>	grym: can you explain why you think that I shouldn't show that to people who are interested in learning elisp?
Mar 07 19:36:18 <grym>	edrx: it's an extra complication on top of a bunch of things that are unfamiliar
Mar 07 19:36:35 <edrx>	grym: I disagree completely
Mar 07 19:36:38 <grym>	(and that sentence comes quite late in the page, and without much surrounding context to key the reader)
Mar 07 19:36:47 <grym>	edrx: i know you do, yes
Mar 07 19:36:48 <grym>	but i do too
Mar 07 19:37:20 <edrx>	grym: for me learning "Emacs as an editor" is a huge complication on top of learning elisp
Mar 07 19:37:43 <grym>	ok, but haven't we long since established that you self-admittedly think differently than many other people you encounter?
Mar 07 19:37:47 <hodapp>	judybot: "Emacs is an editor" is like a modern-day version of "We live in a society"
Mar 07 19:37:48 <judybot>	hodapp: because it means that you are editing text, and people use computers to edit things all day long.
Mar 07 19:38:59 <edrx>	grym: do you think that I should have said earlier something like "I am the author of the package such and such that most people hate and think that I shouldn't mention to beginners"?
Mar 07 19:40:02 <edrx>	I think that each one of us should show our preferred packages and approaches.
Mar 07 19:40:13 <hodapp>	seems silly to me to begin learning elisp by just adding even more dependencies.
Mar 07 19:40:41 <edrx>	grym: why do you think that you are correct when you present your favorite approaches and some other people are not?
Mar 07 19:40:46 <grym>	edrx: or perhaps not mentioned it at all
Mar 07 19:41:05 <grym>	edrx: i don't think i'm correct per se; i know that you have said that you know that your patterns aren't usual ones
Mar 07 19:41:20 <grym>	(so i'm not sure why you'd expect they generalise broadly)
Mar 07 19:42:12 <grym>	so starting with recommending a package to use that has a usercount of, i think, 4 people, seems a bit niche to me
Mar 07 19:42:15 <grym>	and isn't where i'd start
Mar 07 19:42:37 <grym>	(i may be misremembering how many people you said are using it, maybe last week or so)
Mar 07 19:43:32 <grym>	once someone's got their feet under them, and you start to think they think like you do, that's another story ofc
Mar 07 19:43:39 <dcb>	let's just say I didn't learn much emacs after using doom emacs for about 1 year
Mar 07 19:44:29 <edrx>	ok, I could have said: the right starting point to learn Org first. most people love Org but I've started trying to learn it in 2010 and I've barely learned 20 commands from it.
Mar 07 19:45:47 <edrx>	most people hate eev but a few people like it very much and some people learn a lot of it in 10 or 30 minutes following the tutorials
Mar 07 19:46:16 <edrx>	so here's the link, but be warned that you'll probably be one of the people who will hate it
Mar 07 19:46:19 <dcb>	the part about evaluating code is nice, though
Mar 07 19:46:46 <edrx>	grym: is that a good introduction?
Mar 07 19:47:30 <grym>	edrx: i don't see what org's got to do with it
Mar 07 19:47:59 <hodapp>	I also don't
Mar 07 19:48:03 <edrx>	btw, eev has 4 active users who know and use lots of features and who I know by name. I don't have any idea of the number or other users.
Mar 07 19:48:07 <grym>	(but as an aside, it is fairly important to clarify there that 'org' is ambiguous; it's both a markup syntax and a bunch of commands in a major mode that operates on it)
Mar 07 19:48:42 <edrx>	well, everybody agrees that we _should_ recommend Org to beginners who are interested in Emacs
Mar 07 19:49:01 <thuna`>	Whether you'll like eev or not is essentially ,,sales-pitch,, and I think that's perfectly fine, there's nothing wrong with mentioning it at the very least
Mar 07 19:49:01 <fsbot>	We aren't gonna lie. Emacs sucks. Some of us tolerate it, but we can't tell you if YOU'LL be able to. Try it and make up your own mind.
Mar 07 19:49:04 <grym>	edrx: that's false
Mar 07 19:49:22 <edrx>	ok, everyone -> almost everyone
Mar 07 19:49:38 <grym>	edrx: what is commonly _observed_ is that emacs has been getting new users due to org (and magit, and doom, and eglot)
Mar 07 19:49:52 <hodapp>	org is indeed one of the killer features of Emacs
Mar 07 19:49:53 <grym>	that has nothing to do with recommending it
Mar 07 19:50:17 <grym>	that observation mostly means that new users are going to come in with org questions on their minds fairly often
Mar 07 19:50:27 <grym>	(which does seem more or less true)
Mar 07 19:50:47 <edrx>	anyway, Org is incredibly hard for _some_ people. for example, for non-users.
Mar 07 19:52:23 <grym>	depends on what you mean by "org"
Mar 07 19:52:32 <dcb>	I think the biggest "issue" with learning org is that most of the tutorials seems to focus on keybindings and commands. Learning org from a vim+markdown perspective doesn't seem that difficult
Mar 07 19:53:18 <edrx>	grym: anyway 2: I still don't know what disclaimers you think that I should make before mentioning eev to beginners. can you try to answer that?
Mar 07 19:53:58 <grym>	edrx: not particularly
Mar 07 19:55:07 <edrx>	dcb: my difficulty with Org is that I'm used to look at the source code - or at the keymaps, the buffer-local variables, etc - when I try to learn something and I stumble on something mysterious. and the innards of Org are very complex.
Mar 07 19:56:48 <quiliro`>	I still have not found the use of org for my needs.  Outline mode is what I use of org.
Mar 07 19:57:01 <quiliro`>	and tables
Mar 07 19:57:12 <quiliro`>	which was there before org
Mar 07 19:57:25 <edrx>	dcb: a few days ago I finally made a tool that was in my todo-list for ages - an edrx-friendly way of using using help--binding-locus - and I tried to use it to explore keymaps in Org...
Mar 07 19:57:26 <grym>	you can nibble away at org tiny bit by tiny bit
Mar 07 19:57:38 <grym>	for like, several years, what i used org for was "markdown that exports to PDF"
Mar 07 19:57:47 <quiliro`>	But evaluating code from org, does not seem useful to me
Mar 07 19:57:57 <grym>	me either, usualy
Mar 07 19:58:02 <grym>	so, i don't do it
Mar 07 19:58:06 <hodapp>	it's handy as a literate-programming sort of deal sometimes
Mar 07 19:58:07 <grym>	or, do so rarely
Mar 07 19:58:43 <quiliro`>	yeah...I do not really care for literate programming capabilities of org mode
Mar 07 19:59:27 <quiliro>	I think that Emacs has much more potential, if users would just start learning macros.
Mar 07 19:59:34 <grym>	with the exception of my config, me either, and s/capabilities of org mode// wlog
Mar 07 19:59:45 <grym>	i don't need language macros either
Mar 07 19:59:49 <grym>	kbd macros can be handy
Mar 07 19:59:53 <quiliro>	Then many modes of Emacs would be great entrance points
Mar 07 19:59:53 <edrx>	but if you open an Org file and type C-c C-e this opens a buffer named "*Org Export Dispatcher*", in which almost every key gives the error "Invalid key"... it uses a function called read-char-exclusive
Mar 07 19:59:57 <dsmith>	I like how I can use text->image tools with org, like plantuml, ditaa, dotty.
Mar 07 20:00:16 <grym>	edrx: the keys you're allowed to press in the dispatcher are visually highlighted
Mar 07 20:00:21 <grym>	just like a transient or hydra
Mar 07 20:00:22 <quiliro>	I mean macros as propedeutic
Mar 07 20:00:30 <grym>	quiliro: is .. is that a word.
Mar 07 20:00:37 <edrx>	grym: what is the keymap that it uses?
Mar 07 20:00:48 <grym>	a historical term for an introductory course into an art or science
Mar 07 20:00:53 <grym>	edrx: hell if i know
Mar 07 20:01:09 <edrx>	grym: I still don't know either
Mar 07 20:01:41 <grym>	why do i care, though: the things i get to type are highlighted for me and tell me what they do. https://0x0.st/H7hn.png
Mar 07 20:01:58 <dcb>	edrx et quiliro: I should point out that my usage for org is for a more standardized/stable markdown. I didn't bother learning its features it as a lot of org users would
Mar 07 20:02:03 <quiliro>	what I mean is that it can be a tool to learn how funtions work.
Mar 07 20:02:09 <grym>	dcb: yep, and this is very common
Mar 07 20:02:20 <quiliro>	macros are useful to repeat some common use
Mar 07 20:02:20 <grym>	quiliro: do you mean language macros or keyboard macros
Mar 07 20:02:35 <grym>	(they are very, very, very different.)
Mar 07 20:02:41 <quiliro>	yes
Mar 07 20:02:51 <grym>	so... which one do you mean
Mar 07 20:03:07 <quiliro>	the new user wants to repeat actions
Mar 07 20:03:12 <edrx>	grym: you don't care because you can use it as a "user" without problems. I'm VERY clumsly as a user, and I use lots of crutches to get around that.
Mar 07 20:03:34 <edrx>	my crutches fail in many parts of Org,
Mar 07 20:03:38 <quiliro>	so macros are a good way to learn the power of Emacs....I think they are keyboard macros
Mar 07 20:03:39 <edrx>	, -> .
Mar 07 20:03:41 <fsbot>	[->] help-redirect is [0] to redirect one entry to another, use ,<old> is redirect <new>
Mar 07 20:03:41 <fsbot>	[1] To see the actual literal entry for <old>, type: ,dl <old>
Mar 07 20:04:08 <quiliro>	then the macros can be edited to see which commands they have recorded
Mar 07 20:04:32 <thuna`>	quiliro: Yeah, those are k(eyboard) macros
Mar 07 20:04:38 <quiliro>	and teach the commands and how they work by making simple programs
Mar 07 20:04:49 <grym>	edrx: this self-observation reinforces my earlier critique
Mar 07 20:05:12 <grym>	quiliro: yes, kbd macros
Mar 07 20:05:38 <edrx>	grym: again, what is the right disclaimer? other people can say "I like blah but I'm autistic"
Mar 07 20:05:40 <quiliro>	for example, a user needs to remove the first word in each line...it is easy to press C-n M-d C-d
Mar 07 20:05:54 <edrx>	grym: what do you think that I should say?
Mar 07 20:06:20 <quiliro>	making a macro out of that is easy by prepending with F3 and ending with F4
Mar 07 20:06:58 <grym>	edrx: "i find it very hard to think 'like a user' and have to get down to the source code before i can think; if you're like me, maybe see ,eev"
Mar 07 20:07:20 <quiliro>	then running M-x `kmacro-edit-macro'
Mar 07 20:07:31 <grym>	edrx: (but this begs the question; someone new to emacs _doesn't know how or if to do that yet_, which is why i think it's premature)
Mar 07 20:07:32 <edrx>	or "I like blah2 but I my right hand is bad and I type only with my left hand"
Mar 07 20:07:35 <quiliro>	wE CAN SE THe evaluated commands
Mar 07 20:08:08 <thuna`>	quiliro: `C-x C-k RET' should also be bound to that
Mar 07 20:08:28 <quiliro>	yes!
Mar 07 20:08:37 <quiliro>	did not remember
Mar 07 20:08:41 <quiliro>	thank you
Mar 07 20:09:07 <quiliro>	but the point is that users could find the use of macros quickly in their daily routines
Mar 07 20:09:18 <quiliro>	and then learn the names of the commands
Mar 07 20:09:34 <rpav>	multiple-cursors are like even more intuitive
Mar 07 20:09:36 <quiliro>	most users already use the arrow keys...
Mar 07 20:09:43 <rpav>	"i want to do this edit, but like in all these places"
Mar 07 20:10:11 <edrx>	grym: I think that you are ignoring one important point... some people who were totally new to Emacs sort of "started by eev" because I convinced them to try it, and in 30 minutes they had followed the basic sections if my main tutorial and they started the tutorial on elisp...
Mar 07 20:10:12 <quiliro>	yes...but that is more advanced than just moving and editing single places
Mar 07 20:10:15 <rpav>	macros are more unpredicable and require more planning
Mar 07 20:10:21 <rpav>	quiliro: it really isn't
Mar 07 20:10:27 <rpav>	you click in some places
Mar 07 20:10:49 <rpav>	or if you're more advanced, you C-M-<arrow-keys> or whatever your binding
Mar 07 20:10:57 <edrx>	grym: so for some people that approach works
Mar 07 20:11:04 <rpav>	if you're really advanced, you select a thing, then arrow-keys and select all the similar things ;)
Mar 07 20:11:06 <grym>	edrx: but, 4 people you know well aren't representative of the new userbase, surely
Mar 07 20:11:17 <grym>	so don't extrapolate too far, right
Mar 07 20:11:20 <rpav>	in emacs it's only hard because it's not built in and preassigned to easy keys
Mar 07 20:12:23 <edrx>	grym: and now, thinking in terms of social engineering... one of my goals for the next years is to become friends with some people who know how to use code blocks in Org and who can teach me how to use them - including workflows
Mar 07 20:12:48 <quiliro`>	and learn by editing the macros
Mar 07 20:13:06 <grym>	"press C-c C-c and output comes out", i believe
Mar 07 20:13:19 <edrx>	grym: these 4 are the people who know and use lots of features and who interact with me
Mar 07 20:13:47 <edrx>	grym: I know 30-40 people who know at least the basics
Mar 07 20:14:01 <grym>	dcb: w/r/t comma prefixes, i'm amused that devil-mode came to ~basically the same conclusion
Mar 07 20:14:23 <quiliro`>	rpav: what does multiple cursors teach about elisp?
Mar 07 20:14:24 <edrx>	grym: what do you mean with that? do you mean that code blocks are simple?
Mar 07 20:14:32 <rpav>	quiliro`: who cares and how is that relevant?
Mar 07 20:14:53 <quiliro`>	edrx: isn't that just C-c C-e ?
Mar 07 20:15:01 <rpav>	elisp is a means, not an end
Mar 07 20:15:03 <quiliro`>	oh C-c C-c
Mar 07 20:15:34 <corwin>	,jlfs-law
Mar 07 20:15:34 <fsbot>	corwin: jlfs-law is sufficiently advanced ignorance is indistinguishable from trolling.
Mar 07 20:17:05 <quiliro`>	we are speaking of learning elisp, rpav
Mar 07 20:17:28 <quiliro`>	ignore button comming....the best tool against bullying
Mar 07 20:17:30 <rpav>	that's not how i read the backlog
Mar 07 20:17:55 <quiliro`>	let me check, rpav
Mar 07 20:18:16 <edrx>	rpav: not always... when I started learning Emacs I found elisp so fun to use that for me it became "means", "end", and "fun"
Mar 07 20:18:56 <rpav>	edrx: yeah it's fun, and it never hurts to familiarize with another language
Mar 07 20:19:11 <quiliro`>	 <amirny2205> what are the best learning resources for elisp? I want it to be kept small in size, because I can goohle everything else
Mar 07 20:19:29 <rpav>	but if you're talking "users just want to do" or "not think like a programmer" or "<quiliro> but the point is that users could find the use of macros quickly in their daily routines"
Mar 07 20:19:41 <quiliro`>	that is where edrx and grym started speaking about it
Mar 07 20:20:14 *	ChanServ gives channel operator status to fsbot
Mar 07 20:20:21 <corwin>	,rr
Mar 07 20:20:21 <fsbot>	corwin is one lucky punk... *CLICK*
Mar 07 20:20:36 <rpav>	if you want to learn elisp you can use macros, but it's also probably not particularly great since a lot if interactive commands are superseded by better non-command functions
Mar 07 20:21:04 <quiliro`>	but new users do not know about them
Mar 07 20:21:28 <rpav>	new users ought to be referred to the rather good elisp manual
Mar 07 20:21:33 <dcb>	grym: I think `devil` could have been pretty useful a couple of years ago, specially before I resorted to buying nicer keyboards
Mar 07 20:21:39 <grym>	and, of course, C-h t
Mar 07 20:21:42 <rpav>	also the ORA elisp book was pretty good at least once upon a time
Mar 07 20:21:46 <grym>	dcb: i use both!
Mar 07 20:21:58 <quiliro`>	they know what is common to other programs, such as the arrow keys, the backspace, the space and the del keys
Mar 07 20:22:00 <dcb>	ergodox if I recall correctly
Mar 07 20:22:08 <grym>	dcb: yep
Mar 07 20:22:26 <rpav>	quiliro`: actually multiple cursors are the new norm in most other programming editors
Mar 07 20:22:27 <quiliro`>	C-h t is so boring
Mar 07 20:22:28 <dcb>	I'm assuming mt3 profile keycaps
Mar 07 20:22:53 <quiliro`>	but doing something you need is very much fun
Mar 07 20:22:56 <rpav>	so are incredibly terrible extension mechanisms, so "hey you can just write a function and bind it to a key" is a good place to start
Mar 07 20:22:57 <grym>	dcb: i got some really dorky ones that look like space cadet
Mar 07 20:23:14 <dcb>	(I would like to try SA but blank ortho kits are fairly difficult to find)
Mar 07 20:23:29 <edrx>	rpav: yes, and many interesting things can be demonstrated in one-liners
Mar 07 20:23:36 <quiliro`>	that is very difficult to do for someone who does not know how to program, rpav
Mar 07 20:23:40 <edrx>	dcb: what is SA?
Mar 07 20:23:50 <dcb>	a tall keycap profile
Mar 07 20:23:54 <edrx>	ok
Mar 07 20:24:16 <grym>	rpav: in fact, you can't do anything _else_ to a key
Mar 07 20:24:31 <dcb>	they make really good sound when typing
Mar 07 20:25:18 <rpav>	grym: yeah it's kinda neat how it works
Mar 07 20:25:29 <rpav>	though the binding precedence mapping in insane
Mar 07 20:25:34 <edrx>	(insert "\n" (format-kbd-macro (read-key-sequence-vector "Key sequence: ")))
Mar 07 20:26:17 <edrx>	rpav: agree
Mar 07 20:26:26 <edrx>	(with the "insane")
Mar 07 20:26:32 <rpav>	quiliro`: sure but you have to pick who you're talking about here: a new users who just wants to edit and doesn't program, a new user who doesn't program but wants to learn elisp, a new users who does program but nto elisp, etc
Mar 07 20:26:44 <rpav>	edrx: it's hard to even find in the manual ;/
Mar 07 20:27:06 <edrx>	rpav: yes, I've struggled with that for years!!!
Mar 07 20:27:13 <rpav>	i wrote a function that's like "no really super unbind this from everything"
Mar 07 20:27:17 <quiliro`>	edrx: I think that you could tell new users at the very beginning (first sentence) that they might like the way your package teaches Emacs commands and makes its use more functional, combining several operations into one command
Mar 07 20:28:17 <edrx>	quiliro`: he said this: "<amirny2205> what are the best learning resources for elisp? I want it to be kept small in size, because I can goohle everything else"
Mar 07 20:28:31 <edrx>	so: resourceS, in the plural
Mar 07 20:28:44 <quiliro`>	edrx: yes...I have cited it.
Mar 07 20:29:03 <quiliro`>	I know...I thing recommending eev was useful
Mar 07 20:29:05 <edrx>	asking everyone in the channel, so interested in different opinions
Mar 07 20:29:14 <edrx>	and "small in size"
Mar 07 20:29:33 <rpav>	there is not really "small in size" if they don't know lisp
Mar 07 20:29:37 <quiliro`>	but you asked the way it could be approached in a question to grym
Mar 07 20:30:22 <quiliro`>	s/thing/think that/
Mar 07 20:30:23 <edrx>	quiliro`: because he said that mentioning eev was inadequate
Mar 07 20:30:31 <quiliro`>	I know
Mar 07 20:31:20 <grym>	i said it was premature
Mar 07 20:31:24 <grym>	different
Mar 07 20:31:26 <quiliro`>	It seems that I am a very bad communicator.  I do not seem to get anyone to understand what I mean.
Mar 07 20:31:37 <edrx>	quiliro`: I understood, I think
Mar 07 20:31:49 <quiliro`>	I don't think that it was premature
Mar 07 20:31:59 <quiliro`>	it was just another take
Mar 07 20:32:15 <quiliro`>	eev is designed for newbies...
Mar 07 20:32:21 <quiliro`>	maybe it was not for me
Mar 07 20:32:30 <edrx>	quiliro`: exactly, thanks ❤️😶
Mar 07 20:32:36 <quiliro`>	but edrx tries to get to newbies
Mar 07 20:32:55 <quiliro`>	and make it simple for them to get in contact with elisp quickly
Mar 07 20:33:28 <quiliro`>	it was not that way for me when I tryed it...but it might be good for some
Mar 07 20:33:52 <quiliro`>	and that is good enough because it will be useful!
Mar 07 20:34:28 <rpav>	there are different resources for different levels of "newbie" .. if you don't know any lisp or any code at all, "CL: Gentle Introduction" or whatever is online and probably a good place to start
Mar 07 20:34:49 <edrx>	sometimes it works, and in several occasions I mentioned eev here in the channel, the person tried its basic features, and then showed me his favorite personal projects
Mar 07 20:34:52 <rpav>	if you code but not lisp, that or one of the other lisp books
Mar 07 20:35:07 <quiliro`>	I have given up learning with books...experience with our own needs is better
Mar 07 20:35:12 <rpav>	if you already write lisp but purely scheme family or something, you might want to skim.. otherwise you don't really need much
Mar 07 20:35:36 <quiliro`>	ooh
Mar 07 20:35:50 <quiliro`>	that might be good when I know more
Mar 07 20:36:15 <quiliro`>	and the experience is much more fun
Mar 07 20:36:31 <quiliro`>	requires less effort and it is immediately useful
Mar 07 20:36:47 <edrx>	rpav: I wrote http://anggtwu.net/eev-intros/find-elisp-intro.html because I knew that I liked tutorials that came with with lots of things to try and I decided to write one in elisp - partially to use in a workshop and partially as an experiment in style...
Mar 07 20:37:32 <edrx>	(the workshop was on LaTeX but I asked if I could use emacs and eev in it and everyone agreed)
Mar 07 20:38:02 <rpav>	edrx: looks like a reasonable highly-compressed intro at a glance, but it's hard to judge from the perspective of not knowing lisp at all
Mar 07 20:38:04 <dcb>	grym: at first I didn't get why so many users liked the gray+blue keycaps theme
Mar 07 20:38:11 <dcb>	e.g.: https://imgur.com/a/L09oU00
Mar 07 20:38:16 <rpav>	like "how does english sound if you don't speak it"
Mar 07 20:38:46 <edrx>	rpav: I watched a few students trying it and it works
Mar 07 20:38:53 <quiliro`>	like monkey speak!
Mar 07 20:38:54 <rpav>	ah cool
Mar 07 20:38:59 <hodapp>	rpav: https://www.youtube.com/watch?v=-VsmF9m_Nt8 ?
Mar 07 20:38:59 <judybot>	[title] Adriano Celentano - Prisencolinensinainciusol - YouTube
Mar 07 20:39:31 <edrx>	hodapp: I love that!!!
Mar 07 20:40:10 <quiliro`>	I am still studying how to scrape the video url of youtube videos to download from invidious websites
Mar 07 20:40:18 <rpav>	hah nice
Mar 07 20:40:46 <rpav>	"the sims" simlish is another take though i think this is better
Mar 07 20:44:55 <technomancy>	my eglot processes have started crashing like every 5 minutes or so; all I get in the events buffer is  (:message "Connection state changed" :change "killed\n")
Mar 07 20:45:04 <hodapp>	blehhhh
Mar 07 20:45:23 <edrx>	quiliro: which packages did you try after eev - and liked them?
Mar 07 20:46:11 <ldb>	texnomancy: check PATH variable in emacs
Mar 07 20:46:32 <technomancy>	ldb: that's not it
Mar 07 20:46:49 <edrx>	quiliro: did you try yewtube?
Mar 07 20:46:57 <technomancy>	awesome; it's still reconnecting even after eglot-autoreconnect is set to nil =(
Mar 07 20:48:55 <edrx>	quiliro: sorry, it's yeetube
Mar 07 20:49:00 <grym>	,yee
Mar 07 20:49:00 <fsbot>	try:  YEEEmacs yeelong
Mar 07 20:50:30 <edrx>	quiliro: it's in ELPA, iirc - after installing, try (yeetube-search "bach suite bassoon")
Mar 07 20:55:19 <rpav>	ugh i actually wish i could get rid of the shell entirely for something more like a scratch buffer
Mar 07 20:55:34 <edrx>	rpav: explain?
Mar 07 20:55:39 <rpav>	and like maybe interactive objects
Mar 07 20:55:53 <rpav>	edrx: too many typos/mispastes
Mar 07 20:55:57 <edrx>	you mean a shell running in a scratch buffer? or something totally different?
Mar 07 20:56:22 <rpav>	e.g. i don't bother with repls for much the same reason; there's little reason to use a repl over an interactive evaluation buffer where you can edit/run
Mar 07 20:56:46 <edrx>	rpav: that was one of the first things that I did when I learned emacs...
Mar 07 20:56:49 <rpav>	edrx: sortof reimagine what it means to interact in a shell-like manner as something closer to interacting with a scratch buffer
Mar 07 20:57:41 <rpav>	what would be neat is if you could like, `ls` and that pops up an object in the buffer, and you could write/rewrite a command to use the object
Mar 07 20:57:54 <edrx>	rpav: a command - M-x eev - that would save the region to a certain temporary file... and I had a shell function, ee, that was this: function ee () { set -v; . $EE$*; set +v; }
Mar 07 20:58:00 <rpav>	or even interact with it to make a file selection
Mar 07 20:58:09 <edrx>	rpav: that would be great
Mar 07 20:58:44 <rpav>	edrx: i'm not even sure what that does heh
Mar 07 20:59:30 <rpav>	oh prints every command.. i was reading -v for bind x.x
Mar 07 20:59:33 <edrx>	"set -v; . $EE$*; set +v;" "sources" my temporary file in verbose mode
Mar 07 20:59:41 <edrx>	rpav: nah =)
Mar 07 21:00:53 <rpav>	what i really want is to have something between 8-bit-computer style "just cursor around the screen" and smalltalk / desktop gui
Mar 07 21:01:20 <rpav>	like i type "fs:/" and it makes a thing that represents that path and i can interact with it, or i can type another command on it
Mar 07 21:01:24 <ldb>	rpav: get plan9
Mar 07 21:01:58 <edrx>	rpav: before switching to GNU/Linux I used DOS and a Forth in which we could edit everything in the screen, and typing RET would make it execute the current line...
Mar 07 21:02:19 <edrx>	usually that would just print an " ok\n" at point
Mar 07 21:02:48 <ldb>	the good news is you can use plan9port on ms windows or unix like systems
Mar 07 21:03:08 <rpav>	ldb: mm not sure that's really similar, and also mousier than what i'd like
Mar 07 21:03:31 <grym>	rpav: so, a lisp machine
Mar 07 21:03:33 <rpav>	like it's all separate windows and apps and i want like a collection of objects in a blob
Mar 07 21:03:55 <rpav>	grym: those varied wildly
Mar 07 21:04:11 <edrx>	in plan9 we can always mark a region and then run a kind of "execute that", right?
Mar 07 21:04:24 <grym>	rpav: i mean https://www.youtube.com/watch?v=o4-YnLpLgtk
Mar 07 21:04:24 <judybot>	[title] Symbolics Lisp Machine demo Jan 2013 - YouTube
Mar 07 21:04:30 <edrx>	are there ports of ideas from plan9 to emacs?
Mar 07 21:04:39 <ldb>	edrx: right, and that's handled by a program called plumber
Mar 07 21:04:53 <ldb>	and GNU hyperbole does similar thing for Emacs
Mar 07 21:05:16 <ldb>	although less integrated to things outside emacs
Mar 07 21:05:34 <rpav>	grym: neat but that looks like repl with hypertext
Mar 07 21:05:44 <edrx>	ldb: what? can you explain?
Mar 07 21:06:08 <rpav>	and media i guess but "browser commandline"
Mar 07 21:06:17 <edrx>	like marking a region, executing it on the shell, and inserting the output after it?
Mar 07 21:07:46 <ldb>	edrx: what hyperbole does is (does not require marking because it uses thing-at-point api) depends on the syntax, do whatever things like open a file/execute lisp code
Mar 07 21:08:04 <ldb>	including call a shell command, if you want
Mar 07 21:08:34 <ldb>	but shell is not neccesary for hyperbole to work
Mar 07 21:08:56 <edrx>	ldb: I tried to use it a bit, and I tried to build bridges between eev and hyperbole - like a mini-tutorial of hyperbole for people who already knew eev...
Mar 07 21:09:28 <edrx>	ldb: can you describe some nice things that it can do with shell commands?
Mar 07 21:10:30 <grym>	rpav: it's like repl with objects, but objects can be, like, images
Mar 07 21:10:57 <rpav>	grym: yeah.. and imagine doing it without like a gig of ram ;)
Mar 07 21:11:12 <grym>	sounds nice
Mar 07 21:11:22 <ldb>	edrx: like, add a button to the source code to recompile the project
Mar 07 21:11:31 <rpav>	with so many nicks as common words, and erc highlighting nicks, i feel like i'm writing comic book dialogue half the time here (;
Mar 07 21:11:34 <ldb>	and you can write that button and execute it
Mar 07 21:11:57 <edrx>	ldb: did you use that feature? or you just knew that it could be done?
Mar 07 21:12:15 <ldb>	edrx: I use that feature to manage my mini projects
Mar 07 21:12:49 <edrx>	ldb: neat!!! do you need to go to where the button in and click it? is there a way to click it remotely?
Mar 07 21:12:56 <edrx>	in -> is
Mar 07 21:13:52 <ldb>	edrx: there are shortcuts to reveal all the buttons in a file, or call a button using its name (and use emacs' completion)
Mar 07 21:14:12 <edrx>	ldb: I use something incredibly primitive - commands with very short names, like
Mar 07 21:14:13 <edrx>	(defun c () (interactive) (find-sh "cd ~/LATEX/ && lualatex -record 2024-ventilador.tex"))
Mar 07 21:14:21 <edrx>	and then M-x c RET to compile
Mar 07 21:14:34 <edrx>	ldb: can you paste an example?
Mar 07 21:15:00 <pacane>	Hi, I'm trying to do something, I'm not sure if I'm approaching the problem the right way. I'm open to ideas.. I'm trying to filter a buffer from mu4e, a list of email messages. I want to filter it, say using consult-line, and exporting the consult results in an embark Collect/Export buffer. Is there a way I can have the same behaviour in the Collect buffer, as my original buffer? I tried switching the occur mode to mu4e-headers-mode in
Mar 07 21:15:00 <pacane>	this case, but I couldn't do normal actions on each item (e.g: press enter on the email to open it).
Mar 07 21:15:30 <ldb>	edrx: like write <(compile)> and press M-RET on it, if compile is a defined button
Mar 07 21:15:33 <pacane>	I know I can filter the thing using mu4e directly using a search query, but I was wondering if there's a general emacs way to do this
Mar 07 21:15:58 <edrx>	ldb: how would you define the compile button?
Mar 07 21:17:24 <ldb>	edrx: either using interactive menu, and that's save to a project local .HYPB file or global .HYPB at $HOME, or directly edit the saved lisp representation of the button in these files
Mar 07 21:17:31 <edrx>	here is an example of a header of a tex file with eev-isms - some commands with very short names, then some elisp hyperlinks: http://anggtwu.net/LATEX/2024panic-at-equalities.tex.html
Mar 07 21:17:57 <edrx>	ldb: ah, I remember the .HYPB file!
Mar 07 21:18:23 <edrx>	it was ugly, sort of "you are not expected to look at this"
Mar 07 21:18:53 <ldb>	pacane: have a look on https://github.com/seanfarley/counsel-mu/tree/master
Mar 07 21:19:45 <ldb>	edrx: right, so transfer this type of button is a problem
Mar 07 21:20:20 <ldb>	but the good side is writing the <(compile)> tag is also valid
Mar 07 21:20:53 <edrx>	ldb: I hated that =(
Mar 07 21:20:58 <ldb>	or you can explicitly call a lisp function by write <list 1 2 3>
Mar 07 21:21:10 <edrx>	and that too =(
Mar 07 21:21:10 <ldb>	which does not require .HYPB file at all
Mar 07 21:22:24 <ldb>	edrx: you mean explict call lisp?
Mar 07 21:22:50 <edrx>	ldb: no, the weird syntax
Mar 07 21:23:09 <edrx>	ldb: in eev the lisp appears with the original syntax
Mar 07 21:23:20 <quiliro>	edrx: yeetube is not in elpa
Mar 07 21:23:29 <edrx>	ldb: http://anggtwu.net/eev-intros/find-eev-quick-intro.html#3
Mar 07 21:23:40 <edrx>	quiliro: do you use melpa?
Mar 07 21:23:45 <quiliro>	no
Mar 07 21:24:00 <edrx>	quiliro: then it won't work for you
Mar 07 21:24:03 <grym>	or, like
Mar 07 21:24:09 <coat>	what do you do for packages that are only available in melpa? or do you not need them?
Mar 07 21:24:09 <grym>	just install it yourself
Mar 07 21:24:16 <grym>	coat: "suffer", i think
Mar 07 21:24:19 <quiliro>	but I can read the code and make something similar, maybe
Mar 07 21:24:28 <edrx>	quiliro: can you install packages from their git repositories?
Mar 07 21:25:02 <quiliro>	I don't install anything outside elpa or operating system package
Mar 07 21:25:08 <grym>	oh.  then, yes.  "suffer"
Mar 07 21:25:10 <quiliro>	s
Mar 07 21:25:18 <quiliro>	yeah...LOL
Mar 07 21:25:25 <grym>	but, perhaps: suffer in quiet
Mar 07 21:25:33 <quiliro>	freedom requires sacrifice
Mar 07 21:25:42 <edgar-rft>	suffer > /dev/null
Mar 07 21:25:44 <edrx>	ldb: I spent days trying to understand the code in Hyperbole that decides what is the kind of button at point, and asked some questions in the hyperbole mailing list...
Mar 07 21:25:51 <ldb>	edrx: well, at least in a C file I can click the #include "aw.hpp" and open the header, without writing extra lisp codee
Mar 07 21:25:58 <quiliro>	I cannot audit every package
Mar 07 21:25:59 <grym>	just doesn't require yapping
Mar 07 21:26:01 <edrx>	didn't get any good answers, and gave up
Mar 07 21:26:16 <edrx>	ldb: yes, that's very nice!!!
Mar 07 21:26:28 <ldb>	edrx: by regex, like how the plan9 plumber decides what things to do
Mar 07 21:26:43 <edrx>	ldb: neat
Mar 07 21:26:55 <quiliro>	I could not get the grip of hyperbole buttons
Mar 07 21:27:24 <quiliro>	they seem more difficult than html get buttons
Mar 07 21:27:30 <edrx>	ldb: org also has a way to define new link types
Mar 07 21:27:40 <coat>	what are html get buttons?
Mar 07 21:27:55 *	ldb does not use org at el
Mar 07 21:29:07 <edrx>	ldb: I tried to implement some kinds of regexpish buttons in eev, but then I saw that they would always to converted to sexps at some point... and for me the explicit sexps were fun to use and the extra syntax wasn't, so I gave up
Mar 07 21:30:13 <thoyej>	Error in post-command-hook (erc-scroll-to-bottom): (error "‘recenter’ing a window that does not display current-buffer.")
Mar 07 21:30:46 <edrx>	I saw that it would be best to make eev compatible with everything else, and use the regexpish buttons from other packages
Mar 07 21:30:50 <thoyej>	when i do erc-tls
Mar 07 21:32:12 <ldb>	edrx: it is just aesthetics in my opinion, and hyperbole was indeed broken/unusable for a while for does not having integration with other packages in mind
Mar 07 21:33:32 <edrx>	which while?
Mar 07 21:34:40 <ldb>	I think it was after Emacs 25 release, I tried hyperbole and it did not work very well
Mar 07 21:35:12 <ldb>	transition to lexical-binding was a tough time
Mar 07 21:35:22 <quiliro>	coat: I am not sure of the correct term
Mar 07 21:35:33 <edrx>	ldb: aha
Mar 07 21:35:34 <quiliro>	when you send a form
Mar 07 21:35:43 <quiliro>	submit
Mar 07 21:37:12 <edrx>	ldb: I tried it for the first time in 2000, then abandoned it and only tried it again in 2019
Mar 07 21:38:18 <edrx>	https://github.com/edrx/eev/issues/1
Mar 07 21:39:29 <edrx>	to be honest I'm not even sure if rsw really writes his code or if he hires someone else to do it
Mar 07 21:39:48 <edrx>	he never answered any of my technical questions
Mar 07 21:40:18 <edrx>	he sounds like the marketing guy =/
Mar 07 21:40:42 <ldb>	edrx: I guess they were looking for some one to taken over hyperbole
Mar 07 21:40:55 <ldb>	although they don't use hyperbole themselves
Mar 07 21:41:17 <coat>	who is rsw?
Mar 07 21:41:35 <edrx>	the author of hyperbole
Mar 07 21:42:43 <coat>	thx
Mar 07 21:42:47 <rpav>	i really f'n hate gitlab has a key combo for "submit MR"
Mar 07 21:42:56 <edrx>	also, after this point - https://github.com/edrx/eev/issues/1#issuecomment-485282341 - rsw sent a reply with his phone number
Mar 07 21:42:57 <rpav>	although i really had me at "gitlab"
Mar 07 21:43:13 <edrx>	he didn't know how to delete it, and neither did I
Mar 07 21:43:52 <edrx>	I was in an intercity bus, exhausted, and would only get home 3 hours later
Mar 07 21:44:50 <edrx>	then a friend of his joined the conversation on github and told me that I HAD TO delete the message with the phone number IMMEDIATELY or else he would denounce me to the github people
Mar 07 21:45:02 <ldb>	wtf
Mar 07 21:45:21 <edrx>	at that point I should have realized that interacting with those people would be bad karma
Mar 07 21:45:34 <spikemaster>	i remember when people listed their phone # in the phone book.
Mar 07 21:45:49 <edrx>	spikemaster: me too
Mar 07 21:47:22 <edrx>	what is the term in english for the thing that most buildings have in their entrances and that lets us press the button corresponding to a certain apartment to talk to the people in that apartement?
Mar 07 21:47:31 <edrx>	it's "interfone" in portuguese
Mar 07 21:47:40 <grym>	intercom, often
Mar 07 21:47:43 <edrx>	thanks
Mar 07 21:48:19 <edrx>	I remember when it was common to go to friends' houses and ring the intercom to see if we could visit
Mar 07 21:48:54 <thoyej>	anyone using erc?
Mar 07 21:49:00 <quiliro>	I remember ringing all the buttons when I was little!
Mar 07 21:49:02 <grym>	i just walked into their kitchens, myself
Mar 07 21:49:08 <quiliro>	I use erc
Mar 07 21:49:13 <edrx>	quiliro: I did that a few times too =/
Mar 07 21:49:29 <ldb>	thoyej: guess u should try reproduce the problem with a clean emacs setup
Mar 07 21:49:37 <edrx>	"I really, really recommend that you try to use Hyperbole without initially mixing it with eev, as I think you will find that Hyperbole already contains much of what you need to simplify eev and tie it to a broader Emacs ecosystem."
Mar 07 21:49:49 <grym>	(that's how you know you're friends, if you use the kitchen door)
Mar 07 21:50:00 <edrx>	grym: =)
Mar 07 21:50:03 <bremner>	not the bedroom door? that explains so much.
Mar 07 21:50:22 <ldb>	edrx: sorry for that guy bothers you so much
Mar 07 21:50:23 <weary-traveler>	edrx: so (require 'eev-load) adds a number of functions to the namespace. if someone is only interested in using eev facilities for interactive execution (within org files) would it be sufficient to only load 'eepitch and 'eev-wrap. or would you recommend some others as well?
Mar 07 21:50:30 <thoyej>	quiliro, what channel is dedicated for erc?
Mar 07 21:50:43 <bremner>	isn't there #erc?
Mar 07 21:50:47 <thoyej>	ldb, ok
Mar 07 21:50:53 <ldb>	the clean emacs lisp namespace is a paradox
Mar 07 21:51:00 <edrx>	weary-traveler: I've been changing that lately and the new way is not 100% documented yet
Mar 07 21:51:03 <quiliro>	#erc
Mar 07 21:51:04 <thoyej>	bremner, i seel only one person in it
Mar 07 21:51:05 <quiliro>	or here
Mar 07 21:51:13 <edrx>	weary-traveler: are you using eev from ELPA? or from the git repo?
Mar 07 21:51:25 <rpav>	ldb: the secret is it's not clean
Mar 07 21:51:46 <rpav>	most packages learn to behave or suffer, but it's still a mess
Mar 07 21:51:55 <edrx>	weary-traveler: the new way is _partially_ documented here: http://anggtwu.net/eev-intros/find-eev-levels-intro.html
Mar 07 21:51:56 <weary-traveler>	edrx: currently from gnu ELPA, but could easily switch to vc-install if there are considerable benefits
Mar 07 21:52:07 <edrx>	weary-traveler: there are!
Mar 07 21:53:34 <edrx>	thanks in advance! =P so, my suggestion is: after switching to (package-vc-install "https://github.com/edrx/eev")
Mar 07 21:54:45 <edrx>	weary-traveler: ...put these four lines here in your init file - I use ~/.emacs - https://0x0.st/H7Fw.txt
Mar 07 21:55:23 <weary-traveler>	edrx: um that seems to load things in addition to eev-load. i want fewer things
Mar 07 21:55:25 <edrx>	and comment out all of them. in that way it will be easy to experiment with minimal configurations
Mar 07 21:56:05 <edrx>	when you're too lazy to choose just run M-x eev-beginner and this will load everything including eev-aliases.el
Mar 07 21:56:50 <edrx>	if you want to make eepitch.el and eev-wrap.el always available, put these two lines in your init file:
Mar 07 21:57:09 <edrx>	(require 'eepitch)             ; (find-eev "eepitch.el")
Mar 07 21:57:09 <edrx>	(require 'eev-wrap)	       ; (find-eev "eev-wrap.el")
Mar 07 21:58:01 <edrx>	weary-traveler: where do you want to put the bindings for f8 and M-T? in the global map? where?
Mar 07 21:58:26 <edrx>	you'll need to adapt this:
Mar 07 21:58:28 <edrx>	  (define-key eev-mode-map [f8]   'eepitch-this-line)
Mar 07 21:58:28 <edrx>	  (define-key eev-mode-map "\M-T" 'eewrap-eepitch)
Mar 07 21:59:06 <edrx>	[back in 10 minutes]
Mar 07 21:59:58 <weary-traveler>	okay so if i'm reading between the lines it seems eepitch and eev-wrap form a connected component. if i'm interested in "only that kind of usage" then it seems there's nothing else i should need from eev-load (other than the 2 keybindings you mentioned)
Mar 07 22:00:53 <edrx>	weary-traveler: sort of... the docs all use elisp hyperlinks
Mar 07 22:01:13 <edrx>	in that very minimal setting very few elisp hyperlinks will be defined
Mar 07 22:01:27 <edrx>	for example, the hyperlink in this comment
Mar 07 22:01:28 <edrx>	; (find-eev "eepitch.el")
Mar 07 22:01:49 <edrx>	won't work... hmm, but you also won't have M-e! so that's ok, I think...
Mar 07 22:01:57 <weary-traveler>	yeah, i'm not a fan of the find extensions. especially the numerous video links
Mar 07 22:02:29 <edrx>	and every time that you want to play with other features just run M-x eev-beginner
Mar 07 22:02:36 <edrx>	weary-traveler: ok!
Mar 07 22:04:33 <edrx>	weary-traveler: btw, you don't even need eev-wrap...
Mar 07 22:04:48 <edrx>	the binding for M-T is in eepitch.el
Mar 07 22:05:32 <edrx>	weary-traveler: how did you fix these lines?
Mar 07 22:05:33 <edrx>	(define-key eev-mode-map [f8] 'eepitch-this-line)
Mar 07 22:05:33 <edrx>	(define-key eev-mode-map "\M-T" 'eewrap-eepitch)
Mar 07 22:08:20 <edrx>	weary-traveler: untested: https://0x0.st/H7Fl.txt
Mar 07 22:10:35 <mekeor>	thoyej: you can find channels by sending messages like "list erc" to user "alis"
Mar 07 22:11:03 <weary-traveler>	okay so loading eev-mode and eepitch seems to be enough.
Mar 07 22:11:19 <edrx>	weary-traveler: I'm testing it - something needed ee-intern
Mar 07 22:11:29 <edrx>	one min
Mar 07 22:11:46 <weary-traveler>	i have a keybinding in org-mode to toggle eev-mode. i use that to invoke eev-mode
Mar 07 22:12:09 <lechner>	Hi, is it possible to unload a feature that was byte-compiled?
Mar 07 22:12:27 <mekeor>	lechner: hmm, so unload-feature does not work?
Mar 07 22:12:37 <corwin>	Sort of.  Byte comp doesn't really have anything to do with it, hwvr
Mar 07 22:12:55 <lechner>	maybe the subsequent loading does not work
Mar 07 22:13:16 <corwin>	I think `unload-feature' sort of works.  I will remove things from the OB array but not really "clean-up" more than that.
Mar 07 22:13:41 <mekeor>	afaik it only works if all defined things in the feature have the feature's name as prefix
Mar 07 22:13:54 <corwin>	That'd be a good bet.
Mar 07 22:14:07 <edrx>	weary-traveler: if you don't load eev-aliases.el then the other modules of eev will only define functions that start with the prefixes "ee", "find-", and "br", and a function called "to"...
Mar 07 22:14:11 <mekeor>	more precisely, it'll clean up only those defined things in the feature that have the feature's name as prefix
Mar 07 22:14:25 <lechner>	maybe it's a XY situation. what i would like to do is modify the debbugs.wsdl file that comes with debbugs.el
Mar 07 22:14:35 <lechner>	editing it in .config does not work
Mar 07 22:14:56 <edrx>	weary-traveler: I tried to make eev-load.el as non-invasive as possible, but you're the first person to ask for a minimal install in ages... can you tell me more about what you want to avoid?
Mar 07 22:14:56 <lechner>	.config/emacs/elpa/debbugs-0.40 that is
Mar 07 22:15:12 <ldb>	restart emacs is always easier than try to undo loaded files
Mar 07 22:15:18 <mekeor>	lechner: where is it parsed?
Mar 07 22:15:30 <mekeor>	which func does parse this weird file?
Mar 07 22:15:42 <lechner>	ldb / as an EXWM user who has tons of open buffers that comes with a cost
Mar 07 22:15:50 <lechner>	mekeor / i have to look
Mar 07 22:16:16 <ldb>	lechner: learn to use dictated process for your WM
Mar 07 22:16:19 <weary-traveler>	edrx: digital clutter in auto-completion (based on my auto-completion settings)
Mar 07 22:16:46 <edrx>	sorry, loading eev-load.el also does three other things: if defines colored glyphs for three characters, defines the environment variables S and EEVDIR - but I just saw that I should move EEVDIR to an optional module
Mar 07 22:16:51 <lechner>	mekeor / it's here but i can't find it   https://git.savannah.gnu.org/gitweb/?p=emacs/elpa.git;a=tree;h=refs/heads/externals/debbugs;hb=refs/heads/externals/debbugs
Mar 07 22:16:52 <rudybot>	https://teensy.info/bSfSXbCbSO
Mar 07 22:17:00 <lechner>	ldb / please tell me more
Mar 07 22:17:34 <edrx>	weary-traveler: aaah! makes all sense! I only use very old autocompleters, so that never bothered me...
Mar 07 22:18:02 <mekeor>	lechner: i want a pointer to a line of code
Mar 07 22:18:03 <edrx>	let me find the other modules that you'll need and test them, one min...
Mar 07 22:18:06 <mekeor>	i have the code locally myself
Mar 07 22:18:31 <ldb>	lechner: well if you ever used an emacs email reader that has a 10% chance to stuck when open an IMAP folder, you would learn
Mar 07 22:18:46 <mekeor>	lechner: i was typoing wsdl all the time, so i got it now
Mar 07 22:18:54 <ldb>	especially when C-g would not get out of it
Mar 07 22:19:14 <mekeor>	lechner: can you just re-define debbugs-wsdl?
Mar 07 22:19:31 <mekeor>	in debbugs.el file
Mar 07 22:19:49 <mekeor>	the sexp looks like: (defconst debbugs-wsdl (soap-load-wsdl (expand-file-name "Debbugs.wsdl"
Mar 07 22:19:49 <lechner>	mekeor / yes, thank you. i grepped and found it. well, i changed the file
Mar 07 22:19:54 <lechner>	but it's not loading
Mar 07 22:20:02 <Necktwi>	oh
Mar 07 22:20:19 <weary-traveler>	edrx: okay so for basic use (interactive shell buffers) it seems eev-mode eev-blinks eev-elinks eepitch are necessary (and also seem to be sufficient in limited testing)
Mar 07 22:20:34 <mekeor>	lechner: so you changed the path to another valid path, then you did C-M-x?
Mar 07 22:20:52 <lechner>	mekeor / no, i just edited the file. what's defconst?
Mar 07 22:21:16 <mekeor>	lechner: look at debbugs.el file. there is a "(defconst debbugs-wsdl" line
Mar 07 22:21:41 <mekeor>	lechner: in that defconst, the "Debbugs.wsdl" file is mentioned.
Mar 07 22:21:41 <lechner>	mekeor / sorry, i meant does the value ever change after the initial use?
Mar 07 22:22:26 <mekeor>	lechner: defconst suggests that the value of the object shall be not be changed. but elisp does not have the feature to enforce this.
Mar 07 22:22:42 <mekeor>	lechner: if i were you, i'd assume that it does never change.
Mar 07 22:23:08 <ldb>	a defconst variable could be inlined by byte-compile
Mar 07 22:23:09 <mekeor>	lechner: i'd just put point somewhere onto that defconst sexp, then C-M-x
Mar 07 22:23:11 <lechner>	mekeor / does the object refer to the path or to the content?
Mar 07 22:23:18 <ldb>	which I guess is the cause of the problem
Mar 07 22:24:02 <lechner>	mekeor / yay!
Mar 07 22:24:15 <mekeor>	lechner: you can see the value by evaluating it. i don't know.
Mar 07 22:24:22 <APic>	,BotSnack
Mar 07 22:24:22 *	fsbot beams
Mar 07 22:24:36 <edrx>	weary-traveler: I just added two requires to eepitch.el...
Mar 07 22:24:42 <mekeor>	fsbot: give APic a snack
Mar 07 22:24:42 *	fsbot gives APic a snack
Mar 07 22:24:45 <CAT_S>	HOW ARE YOU GENTLEMEN !!
Mar 07 22:24:50 <APic>	ktnx
Mar 07 22:24:54 <edrx>	weary-traveler: what do you use to update packages installed with package-vc-install?
Mar 07 22:25:08 <edrx>	(one min, let me update the git repo...)
Mar 07 22:25:16 <ldb>	how are you gluten
Mar 07 22:25:21 <lechner>	mekeor / corwin / ldb / thanks!
Mar 07 22:25:22 <mekeor>	8th march is world queer-feministic day. perhaps not the best timing to call everyone "gentleman"
Mar 07 22:25:33 <weary-traveler>	edrx: i do them manually at my choosing. i only have a few with vc-install
Mar 07 22:25:34 <grym>	it's also international women's day >.>
Mar 07 22:25:51 <mekeor>	lechner: so it works? please tell us, not just "yay"
Mar 07 22:25:55 <grym>	... which reminds me, i really should go buy flowers
Mar 07 22:26:16 <ldb>	grym: metal flowers?
Mar 07 22:26:21 <sham1>	CAT_S: all our base are belong to you?
Mar 07 22:26:27 <lechner>	mekeor / i did exactly what you wrote, and tada my own Debbugs server is SOAPING with Debbugs.el
Mar 07 22:26:38 <grym>	ldb: no, real ones this time
Mar 07 22:27:48 <mekeor>	lechner: nice! please note the special behavior of eval-defun (C-M-x): "If the current defun is actually a call to ‘defvar’ or ‘defcustom’, evaluating it this way resets the variable using its initial value expression (using the defcustom’s :set function if there is one), even if the variable already has some other value.  (Normally ‘defvar’ and ‘defcustom’ do not alter the value if there already is one.)"
Mar 07 22:27:56 <mekeor>	in particular, C-x C-e would not have worked
Mar 07 22:28:34 <sham1>	This is of course why C-M-x is incredible while developing
Mar 07 22:28:35 <lechner>	wow, that was my next question
Mar 07 22:28:48 <ldb>	mekeor: in emacs 29 I think C-x C-e can overwrite defvar
Mar 07 22:28:53 <edrx>	weary-traveler: can you update eev?
Mar 07 22:28:54 <lechner>	now, how do i remember that?
Mar 07 22:28:58 <mekeor>	ldb: source please :)
Mar 07 22:29:07 <ldb>	mekeor: Just tried in my emacs
Mar 07 22:29:28 <edrx>	I just tested using these lines in a ~/.emacs and it worked:
Mar 07 22:29:51 <ldb>	in older emacs it might was a difference
Mar 07 22:29:58 <lechner>	i'm in 29 and can test, too
Mar 07 22:30:14 <edrx>	weary-traveler: https://0x0.st/H7FF.txt
Mar 07 22:30:43 <thuna`>	Is there a `condition-case'-equivalent for throws?
Mar 07 22:30:49 <lechner>	mekeor / i believe ldb is right
Mar 07 22:31:09 <ldb>	this could be changes long ago, like it was after 29 I realized describe-function can cause files to be loaded
Mar 07 22:31:46 <ldb>	but the change was made in 26
Mar 07 22:32:32 <ldb>	see `help-enable-completion-autoload'
Mar 07 22:33:54 <ldb>	from C-x C-e eval-last-sexp "This commands handles ‘defvar’, ‘defcustom’ and ‘defface’ the
Mar 07 22:33:54 <ldb>	same way that ‘eval-defun’ does.  See the doc string of that
Mar 07 22:33:54 <ldb>	function for details."
Mar 07 22:39:58 <weary-traveler>	edrx: not at the moment (in the middle of $work). looking at the diff, seems you have the same two require's that i do so should be fine
Mar 07 22:40:07 <weary-traveler>	gotta go
Mar 07 22:42:52 <Necktwi>	test
Mar 07 22:43:07 <edrx>	Necktwi: pong
Mar 07 22:43:14 <Necktwi>	thanks
Mar 07 22:43:23 <grym>	,pong
Mar 07 22:43:24 <fsbot>	🏓
Mar 07 22:43:29 <ldb>	Necktwi: this is #emacs in offline operation mode
Mar 07 22:43:45 <ldb>	we are all simulated using LLM
Mar 07 22:44:28 <mekeor>	! on which LLM are you based?
Mar 07 22:44:29 <fsbot>	🤖[g] I'm based on GPT-3 technology, but let's just say I have a flair for humor and helpfulness that's all my own!
Mar 07 22:44:33 <corwin>	I'm sorry, as a human chat agent I'm not able to simulate an LLM at this time but if you have other on-topic questions I'd be happy to shitpost.
Mar 07 22:45:07 <rpav>	heh
Mar 07 22:45:46 <sham1>	That really captures the ChatGiPiTy experience
Mar 07 22:45:59 <grym>	i am a good human.  you are a bad user
Mar 07 22:46:25 <ldb>	! what is current emacs version number
Mar 07 22:46:26 <fsbot>	🤖[g] The current version of Emacs is 27.2.
Mar 07 22:46:36 *	ldb exposed!
Mar 07 22:46:42 <sham1>	I am a good Bing 🥰
Mar 07 22:47:03 <technomancy>	judybot: the latest version of emacs during the reign of queen victoria was
Mar 07 22:47:03 <judybot>	technomancy: ...
Mar 07 22:47:13 <technomancy>	damn
Mar 07 22:47:19 <rpav>	a pretty good response actually
Mar 07 22:48:11 <ldb>	,bing
Mar 07 22:48:12 <fsbot>	bing is [0/4] a person who dislikes the unnecessary use of his name in irc conversations
Mar 07 22:48:12 <fsbot>	[1] a person who reads documentation
Mar 07 22:48:12 <fsbot>	[2] at least as awesome as google search
Mar 07 22:48:12 <fsbot>	[3] https://www.youtube.com/watch?v=FHTkIwdL8Uk
Mar 07 22:48:12 <fsbot>	[4] bong
Mar 07 22:48:20 <rpav>	! as a chat bot running on a server in a data center in a building likely made of various minerals, would you say you've been living under a rock
Mar 07 22:48:22 <fsbot>	🤖[g] Well, I may be in a data center, but I'm far from living under a rock! I'm here to help and entertain, no matter where I reside!
Mar 07 22:48:41 <rpav>	not pedantic enough for me
Mar 07 22:49:08 <technomancy>	judybot: during the Qing dynasty, a typical ubuntu user would have used apt-get to install packages such as
Mar 07 22:49:09 <judybot>	technomancy: ___________ . A. B. C. D. E. F. G. H. I. J. K. L. M. N. O. P. Q. R. S. T. U. V. W.
Mar 07 22:49:24 <grym>	peak bot
Mar 07 22:49:38 <rpav>	much more entertaining
Mar 07 22:50:05 <Necktwi>	'(erc-autojoin-channels-alist '(("irc.libera.chat" "#erc" "#emacs" "#gentoo")) didn't work
Mar 07 22:50:12 <e3d3>	ignore judybot
Mar 07 22:50:30 <Necktwi>	'(erc-autojoin-delay 0) didn't work aswell
Mar 07 22:50:57 <rpav>	Necktwi: is the autojoin module loaded
Mar 07 22:51:00 <ldb>	Necktwi: change irc.libera.chat to libera.chat
Mar 07 22:51:30 <grym>	! on which LLM are you not based
Mar 07 22:51:31 <fsbot>	🤖[g] Sorry, I can't answer that.
Mar 07 22:51:31 <technomancy>	grym: ironically it's missing X, which *is* a package most ubuntu users install
Mar 07 22:51:33 <Necktwi>	how to load autojoin?
Mar 07 22:51:53 <ldb>	Necktwi: and use (erc-tls :server "irc.libera.chat" :port "6697") instead of call erc interactively
Mar 07 22:51:56 <grym>	technomancy: surely it's xorg-server-dev-headers-compat or something horrid now right
Mar 07 22:52:05 <thuna`>	Does anyone know what variable/function/anything emacs is using to decide which address to send an email from?  Using notmuch, assuming that helps.  user-mail-address isn't reflected.  Changing user.primary_email or user.other_email in notmuch config doesn't reflect either.  Changing the From text in the mail buffer doesn't make a difference either.
Mar 07 22:52:11 <rpav>	Necktwi: M-x customize-group erc and look for "modules"
Mar 07 22:52:19 <ldb>	and (setq erc-autojoin-timing 'connect)
Mar 07 22:52:31 <rpav>	be sure to save etc of course; there's probably another way to load modules but what a hassle
Mar 07 22:52:31 <mekeor>	M-x customize-variable RET erc-modules RET
Mar 07 22:52:38 <rpav>	^ or that
Mar 07 22:52:49 <technomancy>	thuna`: user-mail-address is what mu4e uses
Mar 07 22:52:51 <ldb>	I forget, but I had the similar issue before, and one of these I mentioned should do the work
Mar 07 22:53:24 <ldb>	the auto join model should be enabled by default these days
Mar 07 22:54:31 <rpav>	it might; last i used it it was not very good and i think i explicitly needed to disable it, but it's worth checking the basics
Mar 07 22:54:36 <mekeor>	thuna`: you might be interested in the X-Message-SMTP-Method header as described in (info "(message) Mail Variables")
Mar 07 22:54:52 <ldb>	I think the problem is erc-autojoin-channels-alist use a symbol 'Libera.Chat for the server name
Mar 07 22:55:04 <ldb>	not the string "irc.libera.chat"
Mar 07 22:55:09 <wfpwylqyo>	hay :)
Mar 07 22:55:20 <lechner>	mekeor / that's automatic nowadays.
Mar 07 22:55:23 <mekeor>	did you read the docstring of erc-autojoin-channels-alist? i think it's pretty flexible
Mar 07 22:56:05 <mekeor>	lechner: i have one mail account with several mail aliases (that share the same inbox/maildirs). i use this header to get this working.
Mar 07 22:56:29 <lechner>	thuna` / i also use notmuch. use message-server-alist     https://codeberg.org/lechner/init.el/src/commit/18e6009a30cc552fd4fecd3652e0c5b9e50a151c/init.el#L590
Mar 07 22:56:47 <Necktwi>	yes autojoin is enabled
Mar 07 22:57:50 <thuna`>	lechner: Thank you, I'll try that
Mar 07 22:58:07 <mekeor>	lechner: wow, thanks for message-server-alist, i think this makes my gnus-posting-styles (almost?) redundant :O
Mar 07 22:58:42 <ldb>	thuna`: actually, if you use sendmail.el, like msmtp, check `mail-envelope-from'
Mar 07 22:58:47 <lechner>	mekeor / glad i could help as wel
Mar 07 22:59:08 <ldb>	I mean, assume you are not using sendmail, right?
Mar 07 22:59:20 <Necktwi>	'(erc-autojoin-timing 'connect) didn't work
Mar 07 23:00:28 <ldb>	Necktwi: I figured that's default value already. Have you changed erc-autojoin-channels-alist and tried call erc-tls with server name provided?
Mar 07 23:01:01 <thuna`>	ldb: I should be using sendmail.  mail-envelope-from did not seem to effect it
Mar 07 23:02:20 <ldbeth>	hello, I think (setq erc-autojoin-channels-alist '(("libera.chat" "#emacs" ))) works
Mar 07 23:07:31 <ldb>	thuna`: are you sure? because nobody uses the real sendmail command line program today, they all using some kind of command compatible to it though. msmtp is a popular one, postfix or exim provides sendmail command but that requires a admin that knows how to set things up.
Mar 07 23:08:16 <ldb>	if you have not setup non of these, then likely you are using smtpmail, which uses `smtpmail-mail-address'
Mar 07 23:10:09 <ldb>	but it still acknowledges `mail-envelope-from'
Mar 07 23:10:41 <Necktwi>	autojoin still not working
Mar 07 23:11:14 <ldb>	Necktwi: have you actually checked the buffer before join #emacs?
Mar 07 23:11:39 <corwin>	What do you expect it to do?  The autojoin module provides features to connect you to channels, not servers.  You need to configure the channels you want to connect to.   Can you show the configuration you have for autojoin, please?
Mar 07 23:11:41 <ldb>	because by default autojoin silently opens the channel buffer in background
Mar 07 23:13:14 <ldb>	it does not pop up buffers by default
Mar 07 23:13:29 <locksmithy>	Hello!
Mar 07 23:13:31 <Necktwi>	yes i checked
Mar 07 23:13:49 <e1f>	if you have erc tracking enabled, the buffers appear in the mode line as they are joined
Mar 07 23:14:03 <thuna`>	ldb: I am not fully sure, no, that is just what I am assuming is being used based on sendmail-program being "/usr/sbin/sendmail".  For the record, neither mail-envelope-from nor smtpmail-mail-address seem to effect the result, though setting the X-Message-SMTP-Method header to "smtp smtp.gmail.com ADDRESS" does work so I will set message-server-alist to do that.
Mar 07 23:14:50 <corwin>	Necktwi: Please don't test client connection/autojoin/etc settings in a channel with hundreds of people.  The network has ##test ##test2 .. ##testn for this.  Maybe run another client to chat with us here while you bounce with the other in and out of ##test?
Mar 07 23:17:27 <ldb>	thuna`: if X-Message-SMTP-Method then it is smtpmail.el, you need also set `mail-specify-envelope-from' to t to have it acknowledge mail-envelope-from
Mar 07 23:18:52 <Necktwi>	ignoring autojoin for now
Mar 07 23:19:32 <thuna`>	ldb: Nope, that doesn't fix it either
Mar 07 23:20:11 <Necktwi>	command-execute: Wrong type argument: commandp, erc-next-command
Mar 07 23:20:23 <Necktwi>	when i'm pressing arrows
Mar 07 23:20:43 <Necktwi>	(define-key erc-mode-map (kbd "<up>") 'erc-previous-command)
Mar 07 23:21:25 <Necktwi>	should i turn on some history module?
Mar 07 23:22:32 <ldb>	Necktwi: (require 'erc-ring)
Mar 07 23:22:43 <e1f>	m-p and m-n are typically used for scrolling through command history
Mar 07 23:22:44 <Necktwi>	testing wrapping of some loooooooooooooooooooooooooooooooooooooooooooooooooooooooong line
Mar 07 23:23:07 <Necktwi>	cool it wraps good
Mar 07 23:23:20 <e1f>	that's an emacs default in the mini buffer, in the shell, ...
Mar 07 23:25:53 <Necktwi>	yeah i've set to M-n and M-p now
Mar 07 23:27:02 <edgar-rft>	,(concat "Necktw: that's l" (make-string 300 ?o) "ng!")
Mar 07 23:27:03 <Necktwi>	added (require 'erc-ring) now
Mar 07 23:27:09 <fsbot>	Necktw: that's loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong!
Mar 07 23:27:55 <Necktwi>	but (define-key erc-mode-map (kbd "M-n") 'erc-previous-command) is not giving my previous message up on M-p
Mar 07 23:29:53 <Necktwi>	testing again
Mar 07 23:30:05 <Necktwi>	didn't work
Mar 07 23:31:31 <Necktwi>	now enabled module ring
Mar 07 23:31:40 <Necktwi>	its working!!!
Mar 07 23:32:56 <Necktwi>	should i add (require 'erc-autojoin)?
Mar 07 23:35:44 <Necktwi>	judybot
Mar 07 23:35:46 <thuna`>	ldb lechner mekeor: Alright, this did the job https://0x0.st/H7C2.txt, thanks for all the leads
Mar 07 23:36:02 <Necktwi>	rudybot hi
Mar 07 23:36:30 <Necktwi>	, hi
Mar 07 23:36:31 <fsbot>	Terve, Necktwi
Mar 07 23:36:39 <Necktwi>	:)
Mar 07 23:39:25 <JohnGalt>	wow, all my OS's are updating today
Mar 07 23:41:38 <grym>	but you updated emacs yesterday
Mar 07 23:41:40 <grym>	,rimshot
Mar 07 23:41:40 <fsbot>	badum, *ting*
Mar 07 23:42:17 <JohnGalt>	nice!
Mar 07 23:43:00 <JohnGalt>	Actually that was a  couple of days ago, Emacs 27 on Linux mint is not an option, so here we go with 30
Mar 07 23:45:52 <^chewie>	Eesh, yeah. 27 would be a non-starter.
Mar 07 23:47:00 <grym>	my ~/.local/bin is often quite full
Mar 07 23:47:36 <JohnGalt>	Ive been forced to go back on compiling everything
Mar 07 23:47:50 <JohnGalt>	pyenv compiles python , which is actually a good thing
Mar 07 23:48:43 <grym>	yes
Mar 07 23:48:53 <grym>	it's the only way to get a reasonable python, for a start
Mar 07 23:50:54 <grym>	also, one that your distro can't bollocks up
Mar 07 23:51:00 <JohnGalt>	pyenv has to be installed from source, different packages, different avail on different systems
Mar 07 23:51:03 <JohnGalt>	its a total mess
Mar 07 23:51:21 <grym>	pyenv installs things from source; it itself is like... 400 lines of shell script
Mar 07 23:51:37 <grym>	i guess that counts as "from source" if you squint really hard
Mar 07 23:51:45 <JohnGalt>	git checkout at least
Mar 07 23:51:50 <grym>	sure
Mar 07 23:51:59 <grym>	well, some package managers have it, but... why
Mar 07 23:52:22 <JohnGalt>	I prefer one code base that works across all systems
Mar 07 23:52:42 <grym>	ok. well, i like unicorn farts too
Mar 07 23:52:43 <JohnGalt>	source is easier than "case" ing it out
Mar 07 23:52:46 <grym>	but i don't expect them
Mar 07 23:53:28 <mwnaylor>	North Face offers 20% discount for customers taking a DEI course. North Face can go fuck off.
Mar 07 23:53:40 <JohnGalt>	whats DEI?
Mar 07 23:53:52 <JohnGalt>	North Face is old news
Mar 07 23:54:05 <JohnGalt>	now its patogonia, or columbia as a fallback
Mar 07 23:54:23 <mwnaylor>	Diversity, equity, and inclusion
Mar 07 23:54:39 <grym>	yeah of the things i want to talk about today in emacs, that's not on the list
Mar 07 23:55:35 <JohnGalt>	its an erection year, it goes with the territory unfortunately
Mar 07 23:55:42 *	ChanServ gives channel operator status to grym
Mar 07 23:55:47 <grym>	good thing i can shape the map
Mar 07 23:55:50 *	ChanServ removes channel operator status from grym
Mar 07 23:56:02 <edgar-rft>	DEI is the latin singular genitive of GOD
Mar 07 23:56:09 <grym>	very good
Mar 07 23:56:15 <grym>	and opus is a penguin!
Mar 07 23:56:21 <grym>	so... what's with all the flogging
Mar 07 23:56:26 <mwnaylor>	Not in this context.
Mar 07 23:59:07 <JohnGalt>	I did create a nifty little script to tangle org files from emacsclient
Mar 08 00:01:44 <JohnGalt>	http://dpaste.com/AVKK8ST4T
Mar 08 00:03:22 <grym>	hmm.  and now i have about 20 pounds of wrought iron in my office
Mar 08 00:03:22 <grym>	neat
Mar 08 00:03:28 <grym>	ebay is good for something after all
Mar 08 00:04:44 <JohnGalt>	Everybody needs cheap stolen goods
Mar 08 00:06:02 <mwnaylor>	I was able to score some old HP rpn calculators from eBay.
Mar 08 00:06:11 <grym>	if this was stolen it was stolen a century ago
Mar 08 00:06:18 <grym>	now it's just salvage
Mar 08 00:06:41 <grym>	and soon it will be, quite literally, reforged
Mar 08 00:06:57 <JohnGalt>	I sold headphones once, never really used it after
Mar 08 00:07:48 <grym>	i should sell some of mine, come to think of it
Mar 08 00:17:15 <JohnGalt>	You never get much out of selling stuff, I just try and give it away
Mar 08 00:17:33 <grym>	i mean, i get money
Mar 08 00:30:37 <JohnGalt>	mwnaylor: I have a hp48 rom somewhere....
Mar 08 00:32:01 <twb>	why does North Face even need to *offer* diversity courses?  Don't they sell clothing?
Mar 08 00:33:07 <JohnGalt>	At one time they were a premium brand
Mar 08 00:33:40 <twb>	branded education?
Mar 08 00:33:43 <JohnGalt>	like 15 years ago
Mar 08 00:39:09 <grym>	they still make extremely good duffel bags; nearly everything else is fashion wear rather than sporting goods.  that transition happened far longer than 15 years ago
Mar 08 00:39:27 <JohnGalt>	I prefer pelican everything
Mar 08 00:39:47 <bremner>	pelican outer wear?
Mar 08 00:40:01 <JohnGalt>	Pelican cases, bags, laptop cases, etc..
Mar 08 00:40:31 <grym>	they don't make soft luggage
Mar 08 00:40:46 <grym>	their OG cases are bomber; everything else somewhat less so
Mar 08 00:40:55 <JohnGalt>	for outer wear Im going leather, it's warm, and offends people
Mar 08 00:41:03 <grym>	ehh.  tryhard
Mar 08 00:41:27 <grym>	i have race leathers that are cool and don't offend
Mar 08 00:41:30 <grym>	so there!
Mar 08 00:41:55 <JohnGalt>	Im offended
Mar 08 00:42:20 <mwnaylor>	JohnGalt: ever notice that the PETA types only throw paint on starving models and never on biker gangs?
Mar 08 00:42:38 <grym>	it's a strategic error; harley bros can't run for shit
Mar 08 00:42:43 <grym>	they should reconsider
Mar 08 00:42:49 <JohnGalt>	In seattle they painted chicken lives matter on buildings
Mar 08 00:43:15 <JohnGalt>	Imagine what they would throw for a whole cow!
Mar 08 00:44:07 <mwnaylor>	Buildings don't stab or shoot people who attack them. Biker gangs do.
Mar 08 00:44:27 <grym>	three-patchers are quite rare, really
Mar 08 00:44:33 <grym>	and far more interested in selling you meth
Mar 08 00:44:47 <JohnGalt>	wow I just bumped up to wifi6
Mar 08 00:46:06 <JohnGalt>	Im good on bikers
Mar 08 00:46:14 <JohnGalt>	not really into lane splitting
Mar 08 00:46:29 <JohnGalt>	I always want to kick open the door
Mar 08 00:46:50 <grym>	i am not surprised
Mar 08 00:46:57 <grym>	but; reconsider and don't be an ass, thanks
Mar 08 00:47:05 <grym>	(i lanesplit, it's great)
Mar 08 00:47:43 <JohnGalt>	free country
Mar 08 00:48:06 <grym>	does that mean "it's a free country so i am free to try to maim you"
Mar 08 00:48:15 <JohnGalt>	yes
Mar 08 00:48:17 <grym>	(because you're not)
Mar 08 00:48:44 <JohnGalt>	"For a wounded man shall say to his opponent, if I live I will kill you, if you die I am forgiven" - Lamb of God
Mar 08 00:48:57 <grym>	wat
Mar 08 00:49:09 <JohnGalt>	Its a song lyric
Mar 08 00:49:15 <JohnGalt>	Omerta - Ashes of the Wake
Mar 08 00:49:59 <grym>	and non sequiturs say furious purple
Mar 08 00:50:00 <grym>	so what
Mar 08 00:50:40 <notzmv>	well, you've seen the nick, you know what they're about :)
Mar 08 00:50:47 <grym>	notzmv: yes
Mar 08 00:50:52 <grym>	well aware
Mar 08 00:52:43 <JohnGalt>	You make it sound like my nick is satanic
Mar 08 00:53:03 <notzmv>	you're projecting
Mar 08 00:53:04 <JohnGalt>	if Im feeling attention needy I can just bounce around and gather up the reactinos
Mar 08 00:54:15 <grym>	the accuser is more interesting
Mar 08 00:57:20 <dcb>	is grym the t-shirt + cargo shorts bro, lane-splitting while doing a wheelie?
Mar 08 00:57:27 <edgar-rft>	rudybot: Exorcizamus te, omnis immundus spiritus, omnis satanica potestas, omnis incursio infernalis adversarii, omnis legio, omnis congregatio et secta diabolica!
Mar 08 00:57:28 <rudybot>	edgar-rft: 'The pater familias had the power to sell his children into slavery; Roman law provided, however, that if a child had been sold as a slave three times, he was no longer subject to patria potestas.'
Mar 08 00:57:57 <grym>	dcb: i am not a squid, no
Mar 08 00:58:32 <grym>	dcb: i have perhaps the dorkiest possible street armor: https://www.aerostich.com/men-s-r-3-one-piece-suit.html
Mar 08 01:00:02 <dcb>	extra fancy if paired with the watermelon helmet
Mar 08 01:00:15 <grym>	plain white
Mar 08 01:00:25 <grym>	keeps cooler in the summer, plus looks official and people leave me alone
Mar 08 01:00:31 <JohnGalt>	You could hide out in Tron
Mar 08 01:03:11 <grym>	and slightly cheaper! companies like to upsell graphics
Mar 08 01:04:38 <grym>	my race leathers are a bit snappier, but no pockets and they don't like getting wet very much
Mar 08 01:04:42 <technomancy>	saves GPU memory not having to store the texture
Mar 08 01:05:06 <grym>	the stich is more or less waterproof
Mar 08 01:06:20 <grym>	airbag vest on top and it's damn near snow crash
Mar 08 01:07:59 *	lechner searches airbag vests online
Mar 08 01:08:23 <grym>	lechner: https://hitairmoto.com/
Mar 08 01:08:31 <grym>	them, helite, and astars
Mar 08 01:08:37 <grym>	but astars is too much tech for me
Mar 08 01:09:45 <e1f>	i had read about those, wasn't aware they were actually made
Mar 08 01:09:50 <grym>	they're great
Mar 08 01:10:00 <grym>	i've had one for two seasons now
Mar 08 01:10:01 <e1f>	i should hope so
Mar 08 01:10:18 <grym>	"a full cervical collar in 90 ms" is very reassuring
Mar 08 01:10:23 <e1f>	remids me of the mars rover landing on mars
Mar 08 01:11:03 <grym>	plus also a pad over your coccyx
Mar 08 01:11:18 <grym>	bruised tailbone is a painful annoyance for *months*
Mar 08 01:11:53 <e1f>	i was expecting that video to show a deployment; was disappointed
Mar 08 01:12:00 <lechner>	me too
Mar 08 01:12:57 <mwnaylor>	I had a bruised tailbone that plagued me for 18 months to 2 years.
Mar 08 01:13:00 <grym>	https://www.youtube.com/watch?v=N2jZryt607U  has a good few examples
Mar 08 01:13:01 <judybot>	[title] Motorcycle Airbags Exist – But No One Uses Them? - YouTube
Mar 08 01:13:13 <grym>	since the filming: lots more people use 'em
Mar 08 01:14:09 <e1f>	i was thinking more of 'crash-test dummy' videos
Mar 08 01:16:53 <grym>	oh, like https://www.youtube.com/watch?v=ajjoiV1sTJc
Mar 08 01:16:53 <judybot>	[title] Helite Airbag Product Test - YouTube
Mar 08 01:28:06 <k-man>	does the spook command get regular updates of it's interesting words?
Mar 08 01:29:31 <e1f>	oh i thought it had a crash sensor. so if you forget to disconnect before dismounting, it goes off?
Mar 08 01:29:53 <e1f>	isn't that going to result in accidental deployments?
Mar 08 01:30:10 <e3d3>	k-man: I think you can see that here https://github.com/emacs-mirror/emacs/commits/master/lisp/play/spook.el
Mar 08 02:04:53 <lockywolf>	Can I display image previews in dired?
Mar 08 02:05:01 <lockywolf>	not a separate buffer like image-dired, but the original buffer
Mar 08 02:13:05 <Guest21>	I don't know, nor if displaying icons in dired is the same ? Too bad the real expert are already locked up for the night :)
Mar 08 02:14:16 <lockywolf>	Guest21: it's early morning
Mar 08 02:17:51 <Guest21>	lockywolf do you use one of the all-the-icons package, or a similar one. I do and see in the code some magic with using an image in `add-text-properties'
Mar 08 02:18:20 <lockywolf>	I don't use all-the-icons
Mar 08 02:19:50 <Guest21>	maybe helpful is the defun `all-the-icons-dired--put-icon' in https://github.com/wyuenho/all-the-icons-dired/blob/master/all-the-icons-dired.el
Mar 08 02:29:04 <lockywolf>	C-t C-t
Mar 08 02:29:14 <lockywolf>	Or rather C-x h C-t C-t
**** BEGIN LOGGING AT Fri Mar  8 22:52:06 2024

Mar 08 22:52:06 *	Now talking on #emacs
Mar 08 22:52:06 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 08 22:52:06 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Fri Mar  8 23:04:25 2024

Mar 08 23:04:23 *	Now talking on #emacs
Mar 08 23:04:23 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 08 23:04:23 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Fri Mar  8 23:07:14 2024

Mar 08 23:07:14 *	Now talking on #emacs
Mar 08 23:07:14 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 08 23:07:14 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Fri Mar  8 23:14:16 2024

Mar 08 23:14:14 *	Now talking on #emacs
Mar 08 23:14:14 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 08 23:14:14 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Sat Mar  9 07:43:51 2024

Mar 09 07:43:50 *	Now talking on #emacs
Mar 09 07:43:50 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 09 07:43:50 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Sat Mar  9 08:24:01 2024

Mar 09 08:24:00 *	Now talking on #emacs
Mar 09 08:24:00 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 09 08:24:00 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Sat Mar  9 10:08:21 2024

Mar 09 10:08:21 *	Now talking on #emacs
Mar 09 10:08:21 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 09 10:08:21 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** ENDING LOGGING AT Sat Mar  9 10:09:15 2024

**** BEGIN LOGGING AT Sat Mar  9 10:12:42 2024

Mar 09 10:12:41 *	Now talking on #emacs
Mar 09 10:12:41 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 09 10:12:41 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 09 10:14:15 <Viking667>	'llo again, all.
Mar 09 11:05:15 <RickAstley>	hello emacs
Mar 09 11:05:45 <RickAstley>	no tech jobs D:
Mar 09 11:05:50 <RickAstley>	time to goldfarm :D
**** BEGIN LOGGING AT Sat Mar  9 11:09:18 2024

Mar 09 11:09:16 *	Now talking on #emacs
Mar 09 11:09:16 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 09 11:09:16 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Sat Mar  9 11:33:16 2024

Mar 09 11:33:15 *	Now talking on #emacs
Mar 09 11:33:15 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 09 11:33:15 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 09 11:33:44 <RickAstley>	dpetters`: I know that there is one, but I don't know which one it is
Mar 09 11:37:47 <e1f>	you want actual page numbers?
Mar 09 11:39:24 <dpetters`>	I am working on the memory viewer for the package dape. Where you query memory with address and number of bytes.  Which i pipe into hexl but I want an emacsy ergonomic way to read x bytes forward back.
Mar 09 11:40:05 <dpetters`>	So I am looking for some inspiration, currently I have two buttons in the header line with forward and backward.
Mar 09 11:40:17 <RickAstley>	that's awesome dude I would love to use that for reverse engineering from ram
Mar 09 11:41:25 <dpetters`>	Would be cool if you could do some kind of web like endless scroll thing.
Mar 09 11:42:35 <dpetters`>	RickAstley: What could it be called other then "pagination", grep in emacs/lisp does not give me any real results.
Mar 09 11:43:15 <e1f>	you can navigate hexl in 1k segments and 512b segments already
Mar 09 11:43:41 <e1f>	you want an arbritary number of bytes?
Mar 09 11:46:18 <dpetters`>	e1f: ah totaly missed hexl-{end,beginning}-of-1k-page
Mar 09 11:47:12 <dpetters`>	It's a bit painful as there is no way of setting an offset in hexl.
Mar 09 11:47:30 <dpetters`>	Maybe if I advice hexl-curent-address in some way
Mar 09 11:49:19 <e1f>	maybe modify it so it can accept a numeric prefix which becomes the new page boundary
Mar 09 11:50:24 <e1f>	or bind c-} and c-{ to that
Mar 09 11:55:21 <dpetters`>	e1f: sounds feasable, the main consern is how much a need to hack hexl to support address offset.
Mar 09 12:00:00 <dpetters`>	currenty I am doing this nonsese https://bpa.st/GRLA to display the "correct" address
Mar 09 12:02:39 <dpetters`>	unfortunately hexl it seams that hexl does all of the (point) -> address things by assuming that (point-min) == 0x0
Mar 09 12:04:54 <dpetters`>	and I can't fill the buffer with dummy chars either (insert (make-string offset 0)) as ram could be at 0x20000000 or something
Mar 09 12:05:07 <RickAstley>	dpetters`: there's a config for what you're looking for but I forgot the package name
Mar 09 12:05:35 <RickAstley>	If you'd like I can bookmark this topic and search around my notes. I need to re-organize my org-roamer. But this is a rabbit hole that will take a few days
Mar 09 12:06:49 <dpetters`>	RickAstley: it would be great, but I am not comfortable with asking for so much of your time
Mar 09 12:07:38 <e1f>	it wouldn't take so much of his time if he used some sort of organizer program to organize his data to be able to find things quickly
Mar 09 12:08:00 <RickAstley>	that is the rabbithole e1f
Mar 09 12:08:21 <RickAstley>	I have org-roam directory on a previous file server that isn't online. I think
Mar 09 12:08:27 <RickAstley>	I actually have 3 on various servers, maybe
Mar 09 12:08:39 <RickAstley>	as for time, it is okay. I accept top ramen and dogecoin
Mar 09 12:09:54 <e1f>	the only thing that comes to mind is to use a buffer overlay on top of hexl's display with your own offset
Mar 09 12:10:09 <e1f>	if i'm understanding the problem correctly
Mar 09 12:10:29 <e1f>	and it would have the dummy bytes inserted
Mar 09 12:11:46 <e1f>	i'm not quite sure what the need is for arbritary byte offset navigation
Mar 09 12:28:59 <dpetters`>	e1f: there is no need for it to be arbritary, but it needs to be paged
Mar 09 12:32:17 <Viking667>	EOT
Mar 09 12:46:17 <RickAstley>	anyone know how to fix libc.so.6 /usr/lib64/libnettle illegal instruction error when using eww (emacs web wowser)
Mar 09 13:00:16 <danza>	,g did john of the beetles die in a car crash and was replaced?
Mar 09 13:00:19 <fsbot>	🤖[g] Oh, that's a famous urban legend! John Lennon of The Beatles tragically died in a shooting, not a car crash. The replacement theory is just a conspiracy theory!
Mar 09 13:17:26 <edgar-rft>	rudybot: just call cdr when the car is crashed
Mar 09 13:17:27 <rudybot>	edgar-rft: My brother has crashed my bed with some girl.
Mar 09 13:18:23 <edgar-rft>	rudybot: I didn't know that you have a brother
Mar 09 13:18:24 <rudybot>	edgar-rft: My father uses my old netbook on which I have Parabola GNU/Linux, and I didn't want to change that (even though switching to Arch is a matter of configuring a file) so I installed Ekiga on it and instructed my proprietary-software-using brother to do the same so that they can talk with my father. After spending 5+ hours, we didn't get a working SIP client on my brother's Windows 7 laptop.
**** ENDING LOGGING AT Sat Mar  9 13:31:10 2024

**** BEGIN LOGGING AT Sat Mar  9 13:40:24 2024

Mar 09 13:40:23 *	Now talking on #emacs
Mar 09 13:40:23 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 09 13:40:23 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 09 13:49:44 <paul424>	what's up with open with .... emacs client OR emacs under Linux OpenSuseTumbleweed ?
Mar 09 13:57:59 <paul424>	https://pastebin.com/jxVQef82 I get such error when trying color-theme-select
Mar 09 14:00:51 <paul424>	naah solved , never mind
Mar 09 14:01:41 <alcor>	paul424: Your distro likely installs 2 .desktop files in /usr/share/applications for emacs and emacsclient, likely handling the same set of MIME Types, which is why your desktop environment offers both options in Open With…
Mar 09 14:01:59 <wgreenhouse>	x8
Mar 09 14:02:02 <wgreenhouse>	oops
Mar 09 14:03:36 <alcor>	^ that happens to me too. I mess up the C-x 8 RET keystroke for `read-char-by-name' :)
Mar 09 14:03:39 <paul424>	alcor, another big problem is : it tries to load all 584 files from another project I am working with , when I want do work just on tiny file
Mar 09 14:04:28 <paul424>	Exec=emacs %F
Mar 09 14:04:37 <paul424>	yeah I would like to start without the Desktop thingie
Mar 09 14:04:54 <wasamasa>	been a while since I built emacs from source
Mar 09 14:05:06 <wasamasa>	it keeps spamming a C warning, that's a new one
Mar 09 14:05:10 <wasamasa>	cc1: warning: /usr/include/sysprof-4: No such file or directory [-Wmissing-include-dirs]
Mar 09 14:06:47 <paul424>	How to suspend emacs from loading desktop extension ?
Mar 09 14:06:53 <wgreenhouse>	paul424: then don't use it
Mar 09 14:07:05 <paul424>	I need it when I work on my game
Mar 09 14:07:12 <paul424>	but not always I sit down on my c
Mar 09 14:07:25 <wgreenhouse>	I mean the .desktop fild
Mar 09 14:07:27 <paul424>	c++ project , instead I would like to edit a few html files
Mar 09 14:07:28 <wgreenhouse>	file
Mar 09 14:08:23 <paul424>	hmmm seems I want to init files ... one for the project , other for the regular editing
Mar 09 14:08:27 <paul424>	two
Mar 09 14:08:48 <wasamasa>	what does .desktop have to do with desktop.el?
Mar 09 14:08:59 <wgreenhouse>	nothing at all
Mar 09 14:09:03 <paul424>	hhehe
Mar 09 14:09:09 <wasamasa>	I suspected as much
Mar 09 14:09:15 <paul424>	name :D
Mar 09 14:09:26 <wasamasa>	granted, I do not like .desktop files either, but at least you can inspect them and see what they do
Mar 09 14:09:27 <wgreenhouse>	paul424 made two unrelated complaints
Mar 09 14:09:41 <paul424>	yeap
Mar 09 14:10:59 <paul424>	You can use the command line switch ' -q ' to prevent loading your init file, and ' -u ' (or ' --user ') to specify a different user's init file (see Initial Options). There can also be a default init file, which is the library named default. el , found via the standard search path for libraries.
Mar 09 14:11:15 <wasamasa>	I've been using a proper linux desktop at work and something deceptively simple as "Start this GUI application so that its tray icon shows up on desktop launch" seems infeasible
Mar 09 14:11:26 <wasamasa>	so I gave up on that
Mar 09 14:11:47 <wasamasa>	with something like i3wm, it's trivial, just add one extra config line for i3
Mar 09 14:13:45 <wgreenhouse>	paul424: -q disables your entire init, not just session restoring
Mar 09 14:14:42 <wgreenhouse>	(info "(emacs) Saving Emacs Sessions") mentions --no-desktop to disable session restoring for one run
Mar 09 14:15:30 <paul424>	aha
Mar 09 14:18:46 <wasamasa>	any of you seen this announcement of 8x faster native JSON parsing for LSP?
Mar 09 14:19:32 <wasamasa>	the madman got there by simply doing... less work
Mar 09 14:19:53 <wasamasa>	I'm sure that's not the end of it and a streaming parser would help even more
Mar 09 14:20:02 <wasamasa>	https://old.reddit.com/r/emacs/comments/1b8qmv5/8x_faster_json_parsing_can_be_useful_for_language/
Mar 09 14:29:19 <pkal>	wasamasa: I've applied his patch but don't know how to benchmark it ^^
Mar 09 14:29:38 <pkal>	JSON has never really been my LSP bottleneck
Mar 09 14:30:20 <wasamasa>	I've never used LSP in emacs, so I cannot comment on it either
Mar 09 14:30:37 <wasamasa>	posting about it since it confirms my hunch there's a couple of low-hanging fruit when it comes to not so good performance in emacs
**** BEGIN LOGGING AT Sat Mar  9 14:33:36 2024

Mar 09 14:33:35 *	Now talking on #emacs
Mar 09 14:33:35 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 09 14:33:35 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 09 14:40:47 <wasamasa>	anyway, I've replied to the UDP bug
Mar 09 14:42:57 <quiliro>	saluton
Mar 09 14:48:56 <wasamasa>	sham1: tested the patch, everything works fine now: https://debbugs.gnu.org/cgi/bugreport.cgi?bug=62990#50
Mar 09 14:49:41 <sham1>	 Woo
Mar 09 14:50:11 <wasamasa>	thanks for pointing it out for me
Mar 09 14:50:26 <sham1>	quiliro: saluton!
Mar 09 15:05:52 <grym>	 just turned on lsp for json yesterday, actually
Mar 09 15:06:07 <grym>	pretty much so i could use combobulate with it
Mar 09 15:08:17 <mwnaylor>	,ace-jump
Mar 09 15:08:18 <fsbot>	mwnaylor: [->] ace-jump-mode is [0] a minor mode that lets you "move your cursor to any exact position (across window and frame) in emacs by using only 3  key presses." https://github.com/winterTTr/ace-jump-mode/wiki
Mar 09 15:08:18 <fsbot>	[1] see also: avy
Mar 09 15:19:35 <quiliro>	what's news?
Mar 09 15:19:36 <fsbot>	NeWS: [0] a dead, PostScript-based web app technology from the mid-80s <http://wikipedia.org/wiki/NeWS> ;;[ ,more / ,dump]
Mar 09 15:19:45 <quiliro>	LOL
Mar 09 15:19:51 <quiliro>	did not know about that one
Mar 09 16:40:07 <mwnaylor>	I lost the link to the JohnGalt random sayings paste. Does anyone still have it?
Mar 09 16:45:43 <commieProd>	mornin y'all
Mar 09 16:46:32 <commieProd>	i'm running a debian install inside of userland for android and i'm runnin into some tough errors. i asked in #debian but all i got was "wow. that error chain is a work of art" so i was hoping someone here is more literate than me and can hold my hand
Mar 09 16:46:37 <commieProd>	https://paste.debian.net/1310042/
Mar 09 16:49:17 <bremner>	did you try #termux (assuming that's what it is)
Mar 09 16:49:51 <edrx>	commieProd: usually when these things happen to me I 1) panic, and 2) try using aptitude
Mar 09 16:49:58 <corwin>	I wonder if whatever process you are following expects your device to be rooted or smth; seems like you are having permissions sorts of issues.
Mar 09 16:50:07 <edrx>	(to solve the problem without understanding the details)
Mar 09 16:50:19 <wgreenhouse>	bremner: this isn't even termux but a weird thing that runs on top of termux
Mar 09 16:50:30 <wgreenhouse>	so #termux would nope it
Mar 09 16:50:36 <wgreenhouse>	(speaking as an op over thete)
Mar 09 16:50:38 <bremner>	lol
Mar 09 16:50:39 <wgreenhouse>	*therd
Mar 09 16:50:44 <wgreenhouse>	*there
Mar 09 16:50:46 <wgreenhouse>	jfc
Mar 09 16:50:52 <corwin>	morning!
Mar 09 16:50:57 <bremner>	/kick wgreenhouse
Mar 09 16:51:02 *	corwin chants "one of us"
Mar 09 16:51:08 <wgreenhouse>	commieProd: why UserLand? what's the end goal?
Mar 09 16:51:10 <edrx>	gmorning corwin!
Mar 09 16:51:19 <corwin>	heyah edrx :)
Mar 09 16:51:27 <edrx>	gabba gabba hey =)
Mar 09 16:51:36 <^chewie>	mornin' all
Mar 09 16:51:38 <wgreenhouse>	commieProd: also why are you truing to put an MTA on a phone?
Mar 09 16:52:24 <commieProd>	idk what a MTA is, but i have this old phone laying around and i'd like to have it do something useful
Mar 09 16:52:59 <wgreenhouse>	commieProd: mail server
Mar 09 16:53:07 <commieProd>	bremner i don't think it's termux but i don't actually understand what youare asking.
Mar 09 16:53:16 <wgreenhouse>	one of the things UserLand was trying to do was install one
Mar 09 16:53:23 <wgreenhouse>	which is terrifying
Mar 09 16:53:37 <commieProd>	wgreenhouse: ah. it's a dependency for mobilizon
Mar 09 16:53:44 <wgreenhouse>	what's that
Mar 09 16:54:42 <commieProd>	 alternative to Facebook events, groups and pages
Mar 09 16:54:59 <wgreenhouse>	commieProd: so you're trying to have the phone serve this?
Mar 09 16:55:37 <quiliro>	mwnaylor: which of them?
Mar 09 16:55:40 <commieProd>	yes
Mar 09 16:55:45 <quiliro>	I have them on my log
Mar 09 16:56:04 <commieProd>	wgreenhouse userland because... it runs on the hardware i have
Mar 09 16:56:13 <commieProd>	which is a samsung s21fe
Mar 09 16:56:15 <wgreenhouse>	commieProd: I would abandon the whole plan, tbh. but at least UserLand
Mar 09 16:56:31 <wgreenhouse>	which is a barely maintained hack on top of termux
Mar 09 16:56:40 <wgreenhouse>	itself a terrifying pile of hacks
Mar 09 16:58:49 <quiliro>	mwnaylor: is the custom keys http://dpaste.com/4L3576CF9
Mar 09 16:59:50 <quiliro>	mwnaylor: modeline http://dpaste.com/CDDZCBK75
Mar 09 17:02:19 <mwnaylor>	Those were close to the time. Guess I'll have to wait for him to join the channel again.
Mar 09 17:02:38 <wgreenhouse>	commieProd: to elaborate: uou're talking about putting a large public facing service (with associated databases, password recovery by email etc.) on what is basivally a single-user system without real privilege separation.
Mar 09 17:03:35 <wgreenhouse>	because UserLand (and termux) don't have real system users to work with; a hack called proot is used to fake them
Mar 09 17:04:01 <wgreenhouse>	compared to running this service natively, it will be both insecure and very slow
Mar 09 17:05:07 <commieProd>	i guess i can find another project for the hw
Mar 09 17:06:12 <quiliro>	mwnaylor: which one else was there?
Mar 09 17:06:26 <wgreenhouse>	commieProd: I do use termux for a number of things (namely the emacs where my always-running xmpp client lives, etc.) but I avoid the complexity and overhead of proot
Mar 09 17:06:44 <wgreenhouse>	I just use termux packages in termux, not the emulated 3rd party distros
Mar 09 17:07:13 <wgreenhouse>	commieProd: if the android bits of this phone aren't relevant anymore, postmarketos might also be an option
Mar 09 17:08:29 <quiliro>	mwnaylor: this one way before http://dpaste.com/B2D5FU58V
Mar 09 17:10:30 <quiliro>	tangling org files from emacsclient http://dpaste.com/AVKK8ST4T
Mar 09 17:13:16 <RickAstley>	time to learn aws-mode
Mar 09 17:13:45 <RickAstley>	i mean axe
Mar 09 17:15:39 <quiliro`>	was my tangling link received?
Mar 09 17:17:53 <yaslam>	Hi
Mar 09 17:18:10 <yaslam>	Has anyone here got experience bisecting the Emacs source to look for a bug?
Mar 09 17:18:59 <corwin>	If it's a regression you might try git bisect
Mar 09 17:19:02 <yaslam>	I am currently trying to bisect a bug that did not occur in Emacs 28.2, but does occur in 29.2, but most of the commits that git bisect is choosing don't compile, so I have to run git bisect skip a lot.
Mar 09 17:19:17 <yaslam>	Am I running it wrong or something ?
Mar 09 17:19:52 <corwin>	There's a bad-commits file in the repo somewhere's that's used by the pre-commit hook; you might be able to look in the hooks folder to trace it back.  (Sorry, can't remember in more detail.)
Mar 09 17:20:29 <yaslam>	Ah ok, how would I make git bisect skip the bad commits ?
Mar 09 17:20:38 <yaslam>	assuming i find that file
Mar 09 17:21:37 <corwin>	There's a skip option for git-bisect, I believe.  Maybe those scripts show how to use the file of commits; not sure.
Mar 09 17:22:19 <corwin>	The main docs seem reasonable: https://git-scm.com/docs/git-bisect
Mar 09 17:22:39 <yaslam>	Ok thank you
Mar 09 17:23:17 <corwin>	Sure; gl!  Probably hang around channel; someone likely can give better/more detailed help than I have.
Mar 09 17:23:27 <yaslam>	Alright
Mar 09 17:40:39 <quiliro`>	I wonder why `message-box' does nothing except freezing until I press C-g on EXWM
Mar 09 17:41:34 <quiliro`>	how can I know what is happening?
Mar 09 17:49:26 <yaslam>	quiliro: same thing happens with me on EXWM just tested it right now
Mar 09 17:54:31 <quiliro>	regarding your bisect, probably the first commit which breaks compiling is the contains the error code
Mar 09 17:55:40 <quiliro>	regarding your bisect, probably the first commit which breaks compiling contains the error-causing code
Mar 09 17:56:18 <quiliro>	do you have another window manager, yaslam ?
Mar 09 17:56:58 <RickAstley>	anyone recommend a lightweight ticketing server that's foss like jira
Mar 09 17:57:03 <yaslam>	quiliro: the issue that i'm trying to find the cause of is related to mini-frame-mode in EXWM having garbled display on 29.2
Mar 09 17:57:15 <yaslam>	it does not occur in 28.2
Mar 09 17:57:26 <quiliro>	does `message-box' from Emacs 29.1 work on other window managers
Mar 09 17:57:50 <corwin>	RickAstley: osticket is easy to setup and use but tends to be roundly hated as antiquated feeling
Mar 09 17:58:12 <yaslam>	quiliro: yes i do have another window manager
Mar 09 17:58:14 <RickAstley>	corwin: Is there anything that integrates well with org mode / org-agenda
Mar 09 17:58:59 <corwin>	There used to be a good org wrapper for trello, I believe.  That's not really free software I don't think, but if you are okay using a SaaS just to get org as your UI maybe it's fine.
Mar 09 17:59:31 <corwin>	https://org-trello.github.io/
Mar 09 17:59:52 <quiliro>	would you please test `message-box' on your other window manager, yaslam ?
Mar 09 18:00:29 <yaslam>	quiliro: i am using emacs 29.2 should i still test it
Mar 09 18:00:47 <RickAstley>	corwin: cool dude thanks. For rn prefer something I can just run on my local server in docker but still want that org agenda integration
Mar 09 18:01:25 <corwin>	RickAstley: perfectly understandable; tag me if you get a solution or hot tip that I don't seem to notice float by?
Mar 09 18:01:34 <yaslam>	quiliro: `message-box' brings up a dialog with a button saying "Ok" on the other window manager
Mar 09 18:02:01 <yaslam>	and it has the message aswell
Mar 09 18:02:37 <RickAstley>	corwin: sure, what about mantisBT?
Mar 09 18:02:53 <corwin>	I don't know the first thing about it, RickAstley.
Mar 09 18:04:11 <mwnaylor>	I don't remember the full paste. Do remember as `setq' form that had an explicit list of quotes that could be randomly selected.
Mar 09 18:05:27 <RickAstley>	corwin: gonna try out osticket and i'll let you know if I find a way to get org to work with it
Mar 09 18:05:46 <corwin>	Cool, GL!
Mar 09 18:06:26 <yaslam>	quiliro: which version of Emacs do you use? if you use anything over 28.2 can you test a bug for me as it is related to EXWM and you also use EXWM
Mar 09 18:08:05 <yaslam>	please
Mar 09 18:10:03 <quiliro>	29.1
Mar 09 18:10:15 <quiliro>	sure
Mar 09 18:10:24 <quiliro>	shoot
Mar 09 18:10:40 <yaslam>	can you install mini-frame from MELPA and run `mini-frame-mode' inside EXWM without any sort of compositor running
Mar 09 18:10:59 <yaslam>	then do `C-x C-f' or something and hit tab once
Mar 09 18:11:00 <quiliro>	I do not install melpa packages
Mar 09 18:11:11 <yaslam>	oh alright that is fine
Mar 09 18:11:23 <quiliro>	they are not in my security schema
Mar 09 18:11:46 <quiliro>	I don't have virtual machines to test on
Mar 09 18:11:46 <yaslam>	alright thanks tho
Mar 09 18:11:55 <RickAstley>	corwin: Request Tracker?
Mar 09 18:11:59 <quiliro>	sorry, yaslam
Mar 09 18:12:08 <corwin>	RickAstley: what about?
Mar 09 18:12:46 <RickAstley>	corwin: Have you tried RT such as https://github.com/FireFart/rt-docker
Mar 09 18:13:04 <corwin>	Yes. RT seems like a hell of a lot to setup just to manage issues via org, if that's the question (and I don't know that there's an emacs org-mode package for it either, although there might be).
Mar 09 18:13:31 <RickAstley>	yeah I'm seeing a lot in the config
Mar 09 18:14:15 <corwin>	It's similar to debbugs, I think, in that it is designed for the console user, first, email-now-the-ui-is-your-problem second.
Mar 09 18:14:48 <corwin>	But I don't know how to use debbugs from the console yet, so maybe that's more true of RT than debbugs.
Mar 09 18:21:28 <RickAstley>	osticket docker image pulled 2.4 million times, a bit surprised how many
Mar 09 18:23:07 <corwin>	It's sort of ugly, sort of monolithic, sort of the best thing going by a mile.
Mar 09 18:23:59 <corwin>	Like, for getting work done (meaning tickets closed), for attracting eyeballs or making them stick to a project, not so much.
Mar 09 18:29:28 <mwnaylor>	Quad box is ok, but even on a smallish big-screen, the action is sometimes hard to see.
Mar 09 19:31:35 <e1f>	ai discovered a faster way to multiply matrices and then humans found an even faster way.
Mar 09 19:35:02 <alcor>	e1f: source?
Mar 09 19:38:54 <grym>	,yow
Mar 09 19:38:55 <fsbot>	I have seen these EGG EXTENDERS in my Supermarket..  ..  I have read the INSTRUCTIONS...
Mar 09 19:40:10 <e1f>	https://arstechnica.com/information-technology/2024/03/matrix-multiplication-breakthrough-could-lead-to-faster-more-efficient-ai-models/#p3
Mar 09 19:40:11 <rudybot>	https://teensy.info/Sc8sR3fsKs
Mar 09 19:41:26 <SincereFox>	I didnt knew aobut osticket, looks great
Mar 09 19:54:49 <paul424>	http://pastie.org/p/2a3Oy2WJ3swXWIW17lk0mf what's wrong with  ‘user-emacs-directory’: ~/.emacs.d ???
Mar 09 19:54:49 <fsbot>	Cannot predict now
Mar 09 19:58:41 <paul424>	and all frame is white .... IS that a new behaviour in emacs 29, to inform about warnings that way ?
Mar 09 19:59:38 <grym>	paul424: i have ~/.emacs.d/ as the value of that variable
Mar 09 20:02:25 <grym>	but it's not on my load-path
Mar 09 20:02:35 <paul424>	;; here most modes go :
Mar 09 20:02:35 <paul424>	(add-to-list 'load-path "~/.emacs.d")
Mar 09 20:03:06 <fourfy>	"This is a problem because, e.g. if emacs.d/gnus.el exists, trying to load gnus could load the wrong file. OK, it would not matter if .emacs.d were at the end of load-path. but for the sake of simplicity, we discourage it full-stop. Ref eg https://lists.gnu.org/r/emacs-devel/2012-03/msg00056.html"
Mar 09 20:03:14 <fourfy>	from startup.el:1606
Mar 09 20:07:31 <paul424>	also I have a few dozen files satrting with session.* in my ./.emacs.d
Mar 09 20:07:43 <paul424>	what to do with them , remove ? are tehy necessery ?
Mar 09 20:07:49 <corwin>	I think it's typical to have a site-lisp folder, which could be in .emacs.d/, and put that into load-path for self-installed single-file packages and scripts.
Mar 09 20:07:54 <japanoise>	You can delete those paul424
Mar 09 20:08:41 <japanoise>	no-littering is a useful package for getting rid of emacs turds
Mar 09 20:08:58 <corwin>	Everyone once in awhile I run though M-x recover-session RET and look at the entries there in case there's actually anything I want to recover.  It's unusual I find anything much that I care about, so I'd have to agree they are safe to delete.
Mar 09 20:18:48 <paul424>	emacs works almost as I wish, but what for is that window at the bottom of the current frame: Welcome to GNU Emacs, one component of the GNU/Linux operating system.; when I run --no-desktop ?
Mar 09 20:19:22 <paul424>	gnu emacs fundamental
Mar 09 20:19:47 <corwin>	I think you might be looking at the splash-screen.
Mar 09 20:20:20 <alcor>	,inhibit-startup-screen
Mar 09 20:20:21 <fsbot>	My life is a patio of fun!
Mar 09 20:20:33 <corwin>	You will get that unless you pass emacs something to open instead, or unless you setup configuration or (no splash option) to inhibit it.
Mar 09 20:20:57 <corwin>	(That option exists, right?  Am I making that up?  /me looks)
Mar 09 20:21:08 <paul424>	well I do ... I right clicked index.html open with .... emacs
Mar 09 20:21:42 <alcor>	corwin: The option is `inhibit-startup-screen'
Mar 09 20:21:59 <paul424>	(setq inhibit-startup-screen t)
Mar 09 20:22:28 <alcor>	Exactly, putting that in your init.el inhibits the startup screen
Mar 09 20:22:57 <corwin>	alcor: right. if there's a command line option also I can't find it.  IDK why but I really thought that existed.
Mar 09 20:23:12 <alcor>	When the startup screen is inhibited, Emacs just starts with the *scratch* buffer
Mar 09 20:25:46 <grym>	or something you prefer, there are a few packages that let you set a custom one
Mar 09 20:25:50 <grym>	i forget what they're called
Mar 09 20:26:13 <e3d3>	I use (customize-set-value 'initial-buffer-choice "some-file")
Mar 09 20:26:16 <corwin>	there's also `initial-buffer-choice' if you don't want to start with *scratch*
Mar 09 20:26:22 <corwin>	nice
Mar 09 20:26:26 <e3d3>	:)
Mar 09 20:27:29 <libfud>	was there some behavior change where invoking c-set-style undoes the effect of `(setq-default indent-tabs-mode nil)`?
Mar 09 20:27:42 <alcor>	I just set `initial-major-mode' to 'org-mode since that what I probably want for a *scratch' buffer 99.9999% of the time
Mar 09 20:28:58 <libfud>	I was really  scratching my head why I kept getting tabs and seeing 'indent-tabs-mode' was set to t in my C and C++ buffers til I debugged a bit, but I don't remember this being the case before 29
Mar 09 20:31:39 <grym>	ah this sort of thing https://github.com/emacs-dashboard/emacs-dashboard
Mar 09 20:31:50 <libfud>	I like dashboard
Mar 09 20:34:29 <nij->	Any fan of texinfo? I've long been using latex, but I saw texinfo promises to be "before" tex, and it can be compiled to other formats too. I am reading its manual, but appreciate any insights along the way.
Mar 09 20:36:23 <wgreenhouse>	nij-: it is perhaps a bit overspecialized in writing software documentation, so using it for other things may be like blogging by writing manpages. but there are people who do that, too.
Mar 09 20:38:58 <nij->	I see.. it may not be suitable for blogging, manpages, or math papers..?
Mar 09 20:39:35 <wgreenhouse>	try it and see. but you'll see as you read its own manual that it is largely for manuals.
Mar 09 20:39:52 <nij->	Got it! Keep reading on -
Mar 09 20:45:48 <e3d3>	nij-: I don't use it but .. recently discovered that emacs can convert texinfo to info files, without any TeX program installed on my system. Nice
Mar 09 20:46:09 <nij->	I skimmed through its doc, and picked the parts I am interested in. Yes, it seems general, but I wonder why people don't just use their favorite prog lang.
Mar 09 20:46:18 <nij->	e3d3 <3
Mar 09 20:47:29 <nij->	Say I write my doc in lisp (with the CLASS `node` that resembles xml's element), I can achieve very similar results too. And I have more controls in that - I have a repl, and I can write functinos easily without learning texinfo or latex.
Mar 09 20:47:58 <nij->	I can compile my "doc.lisp" into all those formats easily too, with fine control.
Mar 09 20:48:11 <nij->	It may take a bit longer in the beginning, but I think it will worth it.
Mar 09 20:48:38 <nij->	I have been needing to rewrite my documents (Cv, resume, articles etc) and I'm finally reaching to point to really do that in lisp.
Mar 09 20:49:03 <nij->	texinfo popped out to me, but now I'm not very convinced that it's general enough.
Mar 09 20:49:17 <nij->	texinfo is still nice, as there are tools that compile it to manual-like documents.
Mar 09 20:49:33 <nij->	Same, latex is nice, as it generates pdf with fine control.
Mar 09 20:49:42 <nij->	But I can always generate latex or texinfo from my doc.lisp.
Mar 09 20:50:08 <bremner>	nij-: you might like scribble, since it is already lisp and can generate latex
Mar 09 20:50:12 *	nij- starts doing it in lisp now. But he hopes if there's any oversights someone would knock him awake.
Mar 09 20:50:22 *	bremner will punch anyone who says scheme is not lisp
Mar 09 20:50:37 <nij->	bremner - But I need to learn another lang, ecosystem, and repl..
Mar 09 20:50:48 <nij->	I'm actually thinking of common lisp.. I can inspect the object in the repl by clicking.
Mar 09 20:50:58 *	nij- is checking scribble anyway.
Mar 09 20:51:12 <bremner>	I'm sure there is a half-finished common lisp typesetting system (or two)
Mar 09 20:51:56 <nij->	haha
Mar 09 20:52:54 <nij->	bremner - scribble is quite nice, it seems
Mar 09 20:53:06 <nij->	but to someone who has been used to sexprs..
Mar 09 20:53:25 <nij->	I don't get why @foo{foo@bar.} is better than 	(foo "foo" bar.)
Mar 09 20:53:46 <nij->	I could have just written (foo "foo" bar.).. no?
Mar 09 20:54:06 <bremner>	because (screw this) is valid english text
Mar 09 20:54:22 <nij->	screw this?
Mar 09 20:54:38 <bremner>	parens are very common in english prose
Mar 09 20:54:42 <grym>	(oh no!)
Mar 09 20:54:46 <bremner>	escaping them all the time would be tedious
Mar 09 20:55:10 <bremner>	also, there are some special handling of strings in at-exp
Mar 09 20:55:21 <nij->	at-exp?
Mar 09 20:55:29 <nij->	oh @-expression
Mar 09 20:55:37 <bremner>	the syntax used by scribble, right
Mar 09 20:55:42 <nij->	@(lambda (x) x){blah} reads as ((lambda (x) x) "blah")
Mar 09 20:55:45 <nij->	hmmm =_=
Mar 09 20:55:50 <nij->	I prefer the later still.
Mar 09 20:56:38 <e1f>	let's advertise for lisp programmers and require them to send in their cv's as lisp programs
Mar 09 20:56:57 <nij->	bremner I don't have to escape parens.. "()" is a string of length 2.
Mar 09 20:57:29 <nij->	e1f Yep, ideally my CV should be a lisp program that is easily readable even in lisp forms.
Mar 09 20:57:36 <bremner>	ok, you do you.
Mar 09 20:57:52 <bremner>	scribble (like latex) is a _markup_ language
Mar 09 20:57:55 <nij->	Nah.. I don't mean to knock down your shared ideas :( Sorry if I sounded that way.
Mar 09 20:58:14 <bremner>	that means it is easier to write prose in it, than in raw s-expressions
Mar 09 20:59:18 <nij->	Ah see what you mean. Yeah, if I have long sentences and paragraphs..
Mar 09 20:59:28 <technomancy>	but raw prose doesn't support paredit!
Mar 09 20:59:31 *	technomancy files a bug with the english language
Mar 09 20:59:36 <nij->	it would be cumbersome to have ("a string" some-escaped-symbl "another string")..
Mar 09 20:59:46 <nij->	technomancy heh ;D
Mar 09 21:00:09 <nij->	.. and this is bad too "a string `someescaped-symbol` another string"
Mar 09 21:00:16 <technomancy>	rudybot: ever tried to resolve operator precedence rules in english? nightmare!
Mar 09 21:00:17 <rudybot>	technomancy: And teach it precedence instead of explicit fences.
Mar 09 21:00:27 <nij->	As long as the sentences get longer, s-expressions aren't too easy to deal with.
Mar 09 21:06:22 <quiliro`>	how would you write a CN in lisp?  (message "...") or org-format or how?
Mar 09 21:06:29 <quiliro`>	CV
Mar 09 21:07:25 <quiliro`>	e1f: ^
Mar 09 21:07:48 <grym>	 ,lets
Mar 09 21:07:48 <fsbot>	grym: lets are [0] a meme or running joke in #emacs of the form "Let's [do something absurd]."
Mar 09 21:07:49 <fsbot>	[1] sometimes ended with an exclamation point instead of a period
Mar 09 21:07:49 <fsbot>	[2] started by jordanb (disputed)
Mar 09 21:07:49 <fsbot>	[3] vaguely zippyish
Mar 09 21:07:50 <grym>	,whoosh
Mar 09 21:07:50 <fsbot>	We regret to inform you a joke has been told in your vicinity. Our sincere apologies for any cognitive dissonance this may have caused.
Mar 09 21:08:18 <grym>	the perfect CV already exists, though, and it's covered in ponies and rainbows
Mar 09 21:08:37 <grym>	(https://i.redd.it/ff269qq04mza1.jpg)
Mar 09 21:09:38 <nij->	rololl
Mar 09 21:09:58 <grym>	it's a pretty famous one
Mar 09 21:12:54 <dcb>	I'm not sure which I prefer, compared to the good old handwriting on ruled paper
Mar 09 21:14:38 <Spawns_Carpeting>	when running hooks, can i assume that the hooks will be evaluated with current-buffer set to the current buffer of the callsite, or do i need to pass the buffer as a parameter to each hook function and let them enter it with "with-current-buffer"?
Mar 09 21:15:01 <Spawns_Carpeting>	i am trying to have a hook operate on a temporary buffer, to ansifilter it with ansi-color
Mar 09 21:16:17 <Spawns_Carpeting>	here is what i mean https://github.com/Jturnerusa/wgetpaste.el/blob/feature/ansifilter/wgetpaste.el#L57
Mar 09 21:17:22 <Spawns_Carpeting>	this wgetpaste-buffer function gets called, and whatever the current buffer is, is intended to be pasted with the wgetpaste command, and i have hooks that operate before and after the upload, and i want to run ansi-color-filter-region on the buffer before pasting it via a hook
Mar 09 21:19:37 <corwin>	From the code you showed, it looks like whatever buffer is current when this function is called is current when the hooks are run and also when process-send-region is invoked.  So.. yes?
Mar 09 21:19:44 <nij->	CV-ish https://bpa.st/7BEQ
Mar 09 21:19:57 <nij->	It's much better than python data.. I've been trying that.
Mar 09 21:20:03 <nij->	My god sexprs are so beautiful.
Mar 09 21:20:07 <Spawns_Carpeting>	i thought so, for some reason its not applying the filter to the contents before uploading
Mar 09 21:20:12 <APic>	😸
Mar 09 21:20:14 <APic>	,BotSnack
Mar 09 21:20:15 <fsbot>	my favourite snack!
Mar 09 21:20:19 <quiliro`>	I know that writting a CV in Lisp was an irony....but for the irony to be funny, it has to seem possible
Mar 09 21:20:44 <Spawns_Carpeting>	the ansi filter definitely works in this context https://paste.gentoo.zip/oNL8DXHP
Mar 09 21:20:56 <alcor>	The Lisp CV is unironically a good idea. I would've seriously considered it.
Mar 09 21:20:58 <Spawns_Carpeting>	so im not sure why its not filtering here
Mar 09 21:21:14 <nij->	alcor Not only CV.. I think most documents too.
Mar 09 21:21:23 <nij->	Why not..
Mar 09 21:22:18 <nij->	alcor I spent a morning writing that in python, and it's ugly and frustrating.
Mar 09 21:22:30 <nij->	I just rewrote the "Education" part and it's so nice looking now.
Mar 09 21:23:15 <quiliro`>	nij-: that is very nice
Mar 09 21:23:20 <nij->	Note that the data structure is very similar to xml, which is quite general already, but has an ugly syntax.
Mar 09 21:24:52 <quiliro`>	doesn't every first element after an openning parenthesis get evaluated unless it is single quoted?
Mar 09 21:25:19 <nij->	There's a global single quote out there, quiliro.
Mar 09 21:25:24 <nij->	That applies recursively.
Mar 09 21:25:29 <quiliro`>	ok
Mar 09 21:25:31 <xristos>	Spawns_Carpeting: did you try (add-hook 'wgetpaste-before-upload-hook
Mar 09 21:25:32 <xristos>	                 '(lambda () (ansi-color-filter-region (point-min) (point-max))))
Mar 09 21:25:32 <nij->	You can try it out in elisp too. It's the same.
Mar 09 21:26:10 <Spawns_Carpeting>	i have a function at the bottom that is equal to that lambda and i add that to the hooks
Mar 09 21:26:20 <Spawns_Carpeting>	or is the lambda special here
Mar 09 21:26:22 <nij->	("Education" (:fmt #'edu-formatter) (("PhD" () "lol") ("BS" () "lol") ("HS" () "LOL")))
Mar 09 21:26:31 <xristos>	it's not special
Mar 09 21:26:41 <nij->	This is an extended XML, where you can write your own formatter!
Mar 09 21:28:21 <quiliro>	mwhat is :fmt ?
Mar 09 21:28:47 <quiliro>	why are some parens closing with nothing like this: ()
Mar 09 21:28:50 <quiliro>	?
Mar 09 21:28:54 <Spawns_Carpeting>	i put an error into the function to make sure its running, and it definitely is
Mar 09 21:28:57 <nij->	quiliro so `(:fmt ,#'ha) is just a list, where the 0th element is the keyword :FMT, and teh first element is the function #'ha.
Mar 09 21:29:08 <xristos>	Spawns_Carpeting: (add-hook 'wgetpaste-before-upload-hook 'wgetpaste-ansifilter) will do the same thing
Mar 09 21:29:18 <Spawns_Carpeting>	yeah i have done that
Mar 09 21:29:21 <xristos>	that function is already there, no need to write your own
Mar 09 21:29:25 <nij->	quiliro : Later I can write a grand formatter that runs recursively through this data and generate a latex file.
Mar 09 21:29:54 <nij->	For nodes that lack :fmt, I can ask the grand formatter to provide default subformatters for the node depends on conditions I like.
Mar 09 21:29:55 <xristos>	Spawns_Carpeting: and what is the problem?
Mar 09 21:30:07 <Spawns_Carpeting>	its not actually filtering the color codes
Mar 09 21:30:25 <Spawns_Carpeting>	https://paste.gentoo.zip/2xn4nx71 this is the upload it produces
Mar 09 21:30:40 <Spawns_Carpeting>	it shouldnt have any of those control codes in there
Mar 09 21:32:31 <quiliro>	nij-: I do not  understand your last two statements
Mar 09 21:32:56 <quiliro>	what do you mean by a grand formater...is that a lisp term?
Mar 09 21:32:57 <grym>	expressions*
Mar 09 21:33:39 <xristos>	Spawns_Carpeting: can you upload the input text somewhere, exactly as it is (including color codes)
Mar 09 21:34:04 <Spawns_Carpeting>	here it is https://paste.gentoo.zip/RzIivzMX
Mar 09 21:34:17 <Spawns_Carpeting>	(this is uploaded without my elisp script)
Mar 09 21:34:26 <quiliro>	nij-: do you mean that :fmt is invented by you...but that you can use that to feed to functions to do specific tasks?
Mar 09 21:35:05 <Spawns_Carpeting>	actually now that i look at it, it is doing something, the version my elisp thing uploads is different than the raw upload
Mar 09 21:36:21 <nij->	quiliro yes
Mar 09 21:36:39 <nij->	This is just list of symbols and strings. It's very easy to write that grand formatter.
Mar 09 21:37:08 <nij->	Awesome. Python indentation is 2~4 spaces. That's probably easy to read until the depth of nests get too deep.
Mar 09 21:37:43 <quiliro>	thanks for the explanation, nij-
Mar 09 21:37:46 <quiliro>	:-)
Mar 09 21:37:48 <xristos>	Spawns_Carpeting: it works for me
Mar 09 21:38:26 <quiliro>	why is latex so big?
Mar 09 21:38:27 <nij->	quiliro https://bpa.st/7ENQ
Mar 09 21:38:42 <nij->	Template is done. Going to gym now. Will fill them in and write the grand formatter function.
Mar 09 21:38:54 <nij->	latex has to fine control pdf presentations
Mar 09 21:39:21 <nij->	It's a nice representation of a pdf file. But not really a nice representation of the content I want to write.
Mar 09 21:39:51 <Spawns_Carpeting>	xristos: does the paste.gentoo.zip upload show weird characters in it for you? it should have 10 lines of "* hi" without the quotes
Mar 09 21:39:58 <Spawns_Carpeting>	just a plain ascii star
Mar 09 21:40:00 <nij->	So I figure using lisp is maybe the best way to present what I mean. After presenting that as data in sexpr, I can compile that to any file I like by writing a formatter function.
Mar 09 21:40:20 <Spawns_Carpeting>	anyways thank you
Mar 09 21:40:26 <nij->	Sounds stupid and over-working.. but I don't think so. The time I wasted on other languages or specs have been too much. I need to stop doing that once and for all.
Mar 09 21:40:58 <Spawns_Carpeting>	its definitely applying some filtering, something is getting left behind or pgz is having issues with something that isnt a control code
Mar 09 21:43:09 <RickAstley>	irc test
Mar 09 21:47:01 <grym>	,test
Mar 09 21:47:02 <fsbot>	test failed
Mar 09 21:47:16 <grym>	quiliro: because it does a lot of stuff
Mar 09 21:48:19 <grym>	(texlive-minimal is ~70MB, but i don't think that's fair)
Mar 09 21:49:06 <grym>	(also because it ships docs as pdf, and also ships source, so there's a lot of non-executed stuff that comes along by default)
Mar 09 22:11:55 <quiliro>	grym: isn't there a simpler replacement which does the basics
Mar 09 22:12:47 <quiliro>	lately, I have lost my faith in the need for pdf, unless it would be for printing
Mar 09 22:13:06 <quiliro>	I think for printing there is the ps format
Mar 09 22:13:18 <quiliro>	but I do not know much about it
Mar 09 22:13:42 <Minall>	Hello Emacs Community!, is anyone using forge?, I'm trying to pull issues from not a project, but a board of gitlab which doesn't end in .git. Forge just pulls forever.
Mar 09 22:13:46 <Minall>	quiliro: Saluton :)
Mar 09 22:13:52 <wgreenhouse>	quiliro: yes, write html and print it from your browser
Mar 09 22:14:10 <quiliro>	in truth, I think that org format is more than enough for anything, given that it can also embed images
Mar 09 22:14:24 <wgreenhouse>	quiliro: you do realize org uses latex
Mar 09 22:14:32 <quiliro>	Minall: saluton, amiko
Mar 09 22:14:33 <Minall>	You can use org to export to PDF or HTML and then print
Mar 09 22:14:52 <wgreenhouse>	Minall: yes. and the PDF way...is latex.
Mar 09 22:15:32 <Minall>	I never understood their difference, latex is the format and pdf is the document?
Mar 09 22:15:35 <quiliro>	what I mean is that org does not need to be exported to anything
Mar 09 22:15:55 <wgreenhouse>	well, if only you consume it, sure
Mar 09 22:16:07 <quiliro>	minall, latex produces the pdf
Mar 09 22:16:16 <quiliro>	from the file you feed it
Mar 09 22:16:33 <quiliro>	it is a whole language
Mar 09 22:16:42 <quiliro>	for typesetting
Mar 09 22:16:58 <quiliro>	yes, walter
Mar 09 22:17:04 <quiliro>	sorry wgreenhouse
Mar 09 22:17:23 <wgreenhouse>	export is for publishing to others
Mar 09 22:17:40 <quiliro>	yes, i know
Mar 09 22:17:56 <quiliro>	org has all the information
Mar 09 22:18:12 <quiliro>	exporting might lose some of the data
Mar 09 22:19:31 <quiliro>	do pdfs use images for the text or is the text in some markup form inside the pdf file?
Mar 09 22:19:34 <Minall>	I see, thank you quiliro, wgreenhouse.
Mar 09 22:20:08 <quiliro>	bone, Minall
Mar 09 22:20:59 <quiliro>	which forge link are you using, Minall
Mar 09 22:20:59 <grym>	quiliro: not really, no
Mar 09 22:21:00 <quiliro>	?
Mar 09 22:21:04 <grym>	tex is very much itself
Mar 09 22:21:08 <grym>	(la)tex
Mar 09 22:22:08 <grym>	the pdf file format is *very complicated*
Mar 09 22:22:50 <wgreenhouse>	it can embed ttf fonts if it wants
Mar 09 22:23:00 <grym>	the spec runs for 700+ pages
Mar 09 22:23:13 <wgreenhouse>	someone made a pdf that hosts itself as a git repo
Mar 09 22:23:42 <corwin>	someone distributed their resume via bgp
Mar 09 22:23:50 <Minall>	A gitlab link, that ends in a .git since it is a project, however, my team seems to have a separate board with all the issues that is not a project, I wonder if I can see this with forge, it is actually the most important one that I want to see (I can already see per-project issues)
Mar 09 22:25:17 <corwin>	https://natesales.net/blog/bgp-resume/
Mar 09 22:25:43 <grym>	corwin: sounds like harder drive
Mar 09 22:33:26 <pkal>	quiliro: postscript is acutally fun to programm in.  i recently wrote a "cv" (or resume, I don't know the difference) in plain ps and it wasn't even that painful.
Mar 09 22:33:56 <Minall>	pkal cv Curriculum Vitae = Resume, same thing regardless
Mar 09 22:34:05 <Minall>	Now that's interesting
Mar 09 22:34:45 <pkal>	Minall: I remember someone explaining that there is some difference, but I don't remember if the two were supposed to be disjunct, subsets or intersect...
Mar 09 22:35:04 <pkal>	Something like you wouldn't mention projects you worked on in a CV
Mar 09 22:36:17 <grym>	in academia, a CV is "everything i've ever done, ever, since i was a freshman"
Mar 09 22:36:35 <grym>	and a resume is a one-pager targeting a specific role or purpose, that omits a lot of information
Mar 09 22:37:06 <grym>	my resume is one page, my CV is ~4, i had a PI once whose CV was 78 pages
Mar 09 22:37:20 <pkal>	PI?
Mar 09 22:37:41 <grym>	"principal investigator"; the professor named on a research grant who runs a lab
Mar 09 22:37:58 <pkal>	Ah, so I guess a lot of papers and such stuff were listed?
Mar 09 22:38:08 <grym>	yeah, and she got her PhD in 1967
Mar 09 22:38:11 <grym>	so...
Mar 09 22:38:15 <quiliro>	my CV is half a page and my resume is a page!
Mar 09 22:38:17 <quiliro>	LOL
Mar 09 22:38:30 <grym>	every conference, every poster, every paper, every invited talk ... for 40+ years
Mar 09 22:38:36 <pkal>	Either way, whatever I wrote doesn't really qualify as either of the two  ^^
Mar 09 22:38:40 <grym>	it adds up :)
Mar 09 22:38:48 <grym>	"CV is append-only" is not a terrible metric
Mar 09 22:38:53 <grym>	metric? heuristic
Mar 09 22:39:31 <quiliro>	I think that zettelkasten could make everyone have a 78 page resume
Mar 09 22:39:40 <quiliro>	or rather CV
Mar 09 22:39:57 <quiliro>	everyone does things every day
Mar 09 22:40:15 <quiliro>	and they can be gathered to make papers
Mar 09 22:40:35 <grym>	not in the context i'm used to, no
Mar 09 22:40:37 <quiliro>	a lot of articles, papers and books
Mar 09 22:40:58 <grym>	but i don't particularly expect you to understand, either
Mar 09 22:41:02 <quiliro>	have you tried zettelkasten?
Mar 09 22:41:09 <grym>	no
Mar 09 22:41:16 <grym>	smells like faff
Mar 09 22:41:22 <quiliro>	how do you know then?
Mar 09 22:41:23 <grym>	it's also a non sequitur here afaict
Mar 09 22:42:06 <grym>	since it's a personal note-taking system, not a document of your published work
Mar 09 22:42:27 <quiliro>	many people use it to publish
Mar 09 22:42:32 <quiliro>	I have not
Mar 09 22:42:56 <quiliro>	I have not formated it correctly
Mar 09 22:43:06 <quiliro>	I just have notes without connections
Mar 09 22:43:29 <quiliro>	and connections are the basis of making papers
Mar 09 22:43:32 <grym>	we're using "publish" differntly
Mar 09 22:43:35 <quiliro>	references
Mar 09 22:43:42 <grym>	and this is a boring conversation
Mar 09 22:43:47 <Minall>	Interesting, I didn't knew they were so different
Mar 09 22:44:37 <quiliro>	what is different, Minall ?
Mar 09 22:45:01 <Minall>	The CVs and Resumes
Mar 09 22:45:31 <grym>	Minall: different work environments probably have other definitions than i do
Mar 09 22:45:40 <grym>	but that's how it works in my world
Mar 09 22:46:22 <Minall>	Every world requires different rules yeah
Mar 09 22:48:01 <quiliro>	oh, Minall ... I loved the CV in lisp!  Did you see it?
Mar 09 22:48:21 <Minall>	Nope, but writing it in Lisp has to be interesting.
Mar 09 22:48:31 <quiliro>	Minall: https://bpa.st/7ENQ
Mar 09 22:48:39 <Minall>	btw still trying my forge issue
Mar 09 22:48:58 <grym>	Minall: i _think_ forge can only see repo issues
Mar 09 22:49:05 <quiliro>	I don't really understand your issue with forge, Minall
Mar 09 22:49:17 <Minall>	haha, then you can add al those details and then make any styles that change between them, and thus you have any cv you want
Mar 09 22:49:23 <grym>	i've gotten forge thoroughly confused by having two remotes, lately
Mar 09 22:49:38 <grym>	one github, one gitlab
Mar 09 22:49:38 <Minall>	grym: Seems so, my team appears to be using everything but repo issues. All are gathered on a board which is not a project sadly...
Mar 09 22:49:47 <grym>	"open a PR" fails every time :P
Mar 09 22:49:57 <grym>	Minall: we use jira.
Mar 09 22:49:58 <grym>	:/
Mar 09 22:50:13 <Minall>	Happily I only have one remote. So I don't have that issue.
Mar 09 22:50:28 <Minall>	Does open a PR fail because it is trying to go to the wrong remote?
Mar 09 22:53:44 <grym>	yep
Mar 09 22:53:57 <grym>	or, i think, it's trying to use github's spec for the gitlab remote
Mar 09 22:53:58 <grym>	i'm not sure
Mar 09 22:57:05 <grym>	browse remote works, though, so that's still useful
Mar 09 23:06:11 <Minall>	Taking a look...
Mar 09 23:31:50 <johnjaye>	is there a way to get the opening paragraph of a wikipedia article? what language would you code such a thing in? i guess you use http queries in python?
Mar 09 23:32:18 <johnjaye>	inspired from this: https://dgl.cx/wikipedia-dns
Mar 09 23:33:11 <ndegruchy>	johnjaye: yeah, I would probably use python requests and beautiful soup. I don't know anything about wikipedia and their apis, but it seems like a simple project for a basic scraper
Mar 09 23:35:58 <e3d3>	johnjaye: or maybe via the https://github.com/edrx/eev package ?
Mar 09 23:36:07 <johnjaye>	i'm a bit shocked you knew beautiful soup off the top of your head.
Mar 09 23:36:19 <johnjaye>	but i guess this sort of thing has to happen all the time
Mar 09 23:36:32 <johnjaye>	e3d3: i wasn't thinking of doing it in emacs but that might work too
Mar 09 23:36:46 <grym>	johnjaye: i'd also probably use https://www.mediawiki.org/wiki/API:Main_page
Mar 09 23:36:50 <xristos>	You can use mediawiki API and retrieve json
Mar 09 23:36:54 <grym>	^
Mar 09 23:36:55 <xristos>	No need to parse HTML
Mar 09 23:37:01 <johnjaye>	oh nice
Mar 09 23:37:01 <xristos>	This is also trivial to do in Emacs
Mar 09 23:37:02 <grym>	well.  it's still html in the body
Mar 09 23:37:05 <grym>	but, yes
Mar 09 23:39:04 <xristos>	grym: I mean something like https://en.wikipedia.org/w/api.php?action=query&prop=revisions&rvprop=content&format=json&&titles=Dune_(novel)
Mar 09 23:39:27 <xristos>	which returns:             "contentformat": "text/x-wiki", "contentmodel": "wikitext",
Mar 09 23:39:49 <grym>	just not the content itself
Mar 09 23:40:06 <grym>	https://en.wikipedia.org/wiki/Special:ApiSandbox#action=parse&format=json&page=Pet_door&formatversion=2  does, but as html
Mar 09 23:40:16 <xristos>	the content is there
Mar 09 23:40:32 <grym>	oh, indeed
Mar 09 23:48:26 <wasamasa>	I recently realized that the emacs timeline I made had the wrong date for the latest emacs release for a whopping 11 days
Mar 09 23:48:35 <wasamasa>	but nobody told me, thankfully
Mar 09 23:48:41 <wasamasa>	so I may very well be the only user of that
Mar 09 23:48:51 <grym>	shaaaaaame
Mar 09 23:48:57 <wasamasa>	nah, it's ok
Mar 09 23:49:24 <wasamasa>	but if any of you found yourselves thinking they need a timeline of recent emacs releases, https://emacs.brause.cc/timeline.html
Mar 09 23:54:51 <corwin>	That's pretty neat!
Mar 09 23:55:11 <xristos>	had forgotten about sxemacs ;p
Mar 10 00:05:04 <wasamasa>	sexymacs
**** BEGIN LOGGING AT Sun Mar 10 00:21:17 2024

Mar 10 00:21:16 *	Now talking on #emacs
Mar 10 00:21:16 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 10 00:21:16 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Sun Mar 10 00:22:46 2024

Mar 10 00:22:45 *	Now talking on #emacs
Mar 10 00:22:45 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 10 00:22:45 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Sun Mar 10 00:27:38 2024

Mar 10 00:27:37 *	Now talking on #emacs
Mar 10 00:27:38 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 10 00:27:38 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 10 00:29:52 <mns>	FSF were dragging their feet on X11 support and Lucid couldn't delay their Emacs based IDE at the time.  Lucid had commercial customers that were waiting on them.  That was another reason for the split between Lucid and FSF.  I got new second hand because the company I worked at the time, many of the engineers were from the same circle as Richard Gabriel, Lucid founder, and also friends with FSF members.
Mar 10 00:30:37 <xristos>	lucid emacs was a core component of their c++ ide (energize?)
**** BEGIN LOGGING AT Sun Mar 10 00:31:41 2024

Mar 10 00:31:40 *	Now talking on #emacs
Mar 10 00:31:40 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 10 00:31:40 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 10 00:31:58 <xristos>	it definitely had better X support, widgets etc for quite a number of years, eventually GNU Emacs caught up
Mar 10 00:32:30 <wasamasa>	many years later, a new challenger with better graphics support appeared, VS Code
Mar 10 00:32:37 <willyg_cos>	I seem to remember Cadence shipping xemacs with their verilog sim environment nack in 1998
Mar 10 00:32:40 <technomancy>	wasamasa: cant wait for that company to go bust
Mar 10 00:32:41 <wasamasa>	but will the grumpy emacs maintainers learn their lesson??
Mar 10 00:32:42 <fsbot>	It is decidedly so!
Mar 10 00:33:15 <wasamasa>	will they begrudgingly rework emacs in a 21st century way??
Mar 10 00:33:15 <fsbot>	No!
Mar 10 00:33:18 <xristos>	wasamasa: lesson being impostors fade out, and Emacs keeps on rocking? ;p
Mar 10 00:33:21 <wasamasa>	dangit, fsbot
Mar 10 00:34:35 <wasamasa>	you know, recently I started getting deeper into this DIY business and I found this power tools brand that has a ridiculous amount of devices compatible with their battery packs, including a water cooker and a coffee maker
Mar 10 00:34:58 <wasamasa>	there is definitely a target group for emacs, but some young blood wouldn't hurt
Mar 10 00:35:23 <wasamasa>	who on earth needs a battery-powered coffee maker, other than diehard fans
Mar 10 00:36:17 <willyg_cos>	<wasamasa> Amen to the young blood!
Mar 10 00:36:18 <e3d3>	Thanks. I just thought about moving my coffee maker on my desk
Mar 10 00:36:34 <e3d3>	on = to
Mar 10 00:36:50 <wasamasa>	it's a pretty funny device, the salespitch is that there's no concrete dust getting into that coffee during preparation
Mar 10 00:49:24 <xristos>	not sure what their target audience is, but concrete dust is not what i'm concerned about when making coffee
Mar 10 00:49:40 <e3d3>	you are if your are working in construction
Mar 10 00:50:07 <e3d3>	a real DIY just puts the 2 wires of a cheap 12V peltier element in a battery pack
Mar 10 00:51:00 <wasamasa>	xristos: you've ever been on a construction site and ran out of coffee
Mar 10 00:51:41 <e1f>	i'm surprised there is a battery powered coffee maker as it takes a lot of current to heat water quickly
Mar 10 00:51:46 <wasamasa>	anyway, I've tried to come up with the emacs equivalent of a battery powered coffee maker, but couldn't come up with anything
Mar 10 00:51:56 <wasamasa>	maybe someone else
Mar 10 00:52:20 <bremner>	,deldo
Mar 10 00:52:21 <fsbot>	deldo is [0/10] a sex toy and teledildonics mode for emacs
Mar 10 00:52:21 <fsbot>	[1] http://www.youtube.com/watch?v=D1sXuHnf_lo
Mar 10 00:52:21 <fsbot>	[2] http://github.com/qdot/deldo
Mar 10 00:52:21 <fsbot>	[3] proof that one can go too far with emacs/elisp ;;[ ,more / ,dump]
**** BEGIN LOGGING AT Sun Mar 10 01:38:21 2024

Mar 10 01:38:20 *	Now talking on #emacs
Mar 10 01:38:20 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 10 01:38:20 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Sun Mar 10 01:52:09 2024

Mar 10 01:52:08 *	Now talking on #emacs
Mar 10 01:52:08 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 10 01:52:08 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 10 03:55:50 <lechner>	Hi, where's a good place to send patches to debbugs.el from ELPA, please? Thanks!
Mar 10 03:56:25 <mns>	lechner: probably to the author or the repo listed as its home ?
Mar 10 04:08:06 <e1f>	on the subject of ranking ai by iq, bostrom says that measuring a superintelligence's iq is not useful because we don't even know what an iq of 6,455 is capable of in humans just because we know the relative performace of a person with an iq of 90 and one with 130
Mar 10 04:10:06 <bremner>	o.O
Mar 10 04:10:15 <bremner>	people talk seriously about IQ in 2024?
Mar 10 04:10:34 <bremner>	I mean "seriously" is obviously relative
Mar 10 04:10:58 <e1f>	the book wasn't written in 2024
Mar 10 04:11:41 <e1f>	i'm just bring it up because someone decided to rank the gpts by iq using whatever idotic tests they invented
Mar 10 04:12:14 <e1f>	i am continuing to read bostrom's 'superintelligence' and the subject of iq happened to come up
Mar 10 04:16:36 <causative>	IQ is supposed to measure how many standard deviations out from the human mean, so it has to be statistically calibrated to the distribution of the human population
Mar 10 04:18:24 <causative>	so there's no meaning to an IQ of 6000, it's not sensible to say that you're 400 standard deviations out from the human mean, there's no way to measure that
Mar 10 04:19:09 <causative>	IQs correspond to percentiles in the human population, and you can't statistically measure that someone's in the top 0.00001% percentile, there just isn't enough data to say that
Mar 10 04:20:02 <causative>	IQ tests are generally not calibrated beyond a couple standard deviations
Mar 10 04:22:21 <edgar-rft>	I bought an IQ of 10000 at ebay for only 2 bucks
**** ENDING LOGGING AT Sun Mar 10 04:26:38 2024

**** BEGIN LOGGING AT Sun Mar 10 06:42:23 2024

Mar 10 06:42:22 *	Now talking on #emacs
Mar 10 06:42:22 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 10 06:42:22 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 10 06:42:51 <quiliro>	have you experimented setting different values?
Mar 10 06:43:28 <amirny2205>	why would that matter? what information can it give to me? thanks
Mar 10 06:46:18 <mns>	amirny2205: /34
Mar 10 06:47:02 <amirny2205>	mns ?
Mar 10 06:47:18 <mns>	sorry lol ... multi-tasking
Mar 10 06:48:59 <quiliro>	I don't know...but it might show what is happening
Mar 10 06:49:30 <quiliro>	something is making exwm frame not be maximized
Mar 10 06:49:36 <mns>	set-face-attribute docstring says that "It is mostly intended for internal use"
Mar 10 06:50:39 <amirny2205>	oh is tehre anything I can put in my .emacs?
Mar 10 06:50:40 <quiliro>	perhaps 90 is not acceptable
Mar 10 06:51:06 <quiliro>	can you test with the default value?
Mar 10 06:51:39 <amirny2205>	quiliro: I just tried 70 it open as expexted: even in a lesser window
Mar 10 06:51:45 <quiliro>	then you will know it is not an error because of the value of 90
Mar 10 06:51:46 <amirny2205>	what would be a default value?
Mar 10 06:52:52 <quiliro>	test it without that argument
Mar 10 06:53:11 <quiliro>	it will be set to the default then
Mar 10 06:53:16 <amirny2205>	quiliro: it gives aerror without the argument, it is mandatory
Mar 10 06:53:48 <mns>	just comment out your set-face-attribute
Mar 10 06:53:59 <quiliro>	no
Mar 10 06:54:08 <amirny2205>	mns: that's how it is in my config, I manually execute the commented line
Mar 10 06:54:09 <quiliro>	he will not test it then
Mar 10 06:54:23 <mns>	ahh ok
Mar 10 06:54:47 <bdunahu>	is the default 113?
Mar 10 06:54:55 <quiliro>	true...the argument is mandatory
Mar 10 06:55:26 <quiliro>	how do you know, bdunahu ?
Mar 10 06:55:39 <bdunahu>	describe-face default
Mar 10 06:56:19 <bdunahu>	I don't know if mine was customized or what that face is for
Mar 10 06:56:22 <quiliro>	I have 98
Mar 10 06:57:07 <quiliro>	perhaps depends on the types used
Mar 10 07:00:43 <bdunahu>	I see what it does now
Mar 10 07:05:26 <bdunahu>	the function text-scale-decrease seems to accomplish something very similar
Mar 10 07:11:40 <amirny2205>	bdunahu: it works buffer-wise and not in .emacs
Mar 10 07:13:20 <bdunahu>	when it is called in global-text-scale-adjust it is wrapped in frame-inhibit-implied-resize
Mar 10 07:15:03 <bdunahu>	does this do anything? (setq frame-inhibit-implied-resize t)
Mar 10 07:17:18 <bdunahu>	the global-text-scale-adjust function might also just do what you wanted
Mar 10 07:19:33 <amirny2205>	thanks a lot bdunahu it's M-x customize-face default
Mar 10 07:19:42 <amirny2205>	thank you very much everyone
Mar 10 07:35:25 <younder>	I cant get a bibliography exported from org mode. I have: #+bibliography: ~/Dokumenter/biblio/SICL-compiler.bib #+cite_export: basic #+#+print_bibliography: :type book
Mar 10 07:47:18 <bpalmer>	Let's put satire on trial.
Mar 10 08:47:39 <Viking667>	"Good morning, The Worm, your Honour..."
Mar 10 11:54:43 <APic>	Morning!
Mar 10 11:54:45 <APic>	,BotSnack
Mar 10 11:54:45 *	fsbot beams
Mar 10 12:21:02 <roadie>	why does copilot not make suggestion inside "" which are inside <> ?
Mar 10 12:22:00 <roadie>	so behind the < it suggests but then opening " for a path or whatever gives nothing - is it one level of inception too deep?
Mar 10 12:26:04 <roadie>	actually - it won't do it inside <tag> </tag> either in webmode
Mar 10 13:11:55 <pkal>	{,Non}GNU ELPA now publishes a popularity ranking. Here is the sorted list for GNU ELPA https://0x0.st/Hhae.txt and for NonGNU ELPA https://0x0.st/Hhaj.txt.
Mar 10 13:13:00 <pkal>	* NonGNU ELPA https://0x0.st/Hha2.txt
Mar 10 13:15:39 <bremner>	this word "popular". I do not think it means what you think it means
Mar 10 13:15:48 <bremner>	 /mode -princess-bride
Mar 10 13:41:08 <pkal>	why not?
Mar 10 14:29:12 <twb>	bremner: they probably mean "endemic"
Mar 10 14:31:35 <bremner>	pkal: it was a joking reference to the huge relativity of terms like "famous" and "popular" applied in small communities
Mar 10 14:32:02 <bremner>	VSCode is popular. Fascism is popular. Nothing on non-gnu ELPA is popular on the same level.
Mar 10 14:32:14 <bremner>	to fully ruin the joke
Mar 10 14:34:20 <twb>	"My favourite dictator is lukashenko.  He's pretty obscure.  You've probably never heard of him."
Mar 10 14:35:05 <twb>	Relatedly, I learnt the word for "eggs" this week
Mar 10 14:35:38 <e1f>	was it "eggs">
Mar 10 14:37:49 <twb>	no it's yaitsa
Mar 10 14:38:11 <twb>	But it's pronounced super weird which is what confused me
Mar 10 14:39:30 <twb>	[(j)ɪjˈt͡sa] but it's also transliterated as "jajco"
Mar 10 14:39:54 <e1f>	waaaat?
Mar 10 14:40:58 <e1f>	i assume the 'c' is a hard k ?
Mar 10 14:43:06 <e1f>	so hungarian is not indo european, it's uralic; the ural mountains are the great divider for language development and migration
Mar 10 14:43:54 <twb>	magyar is weird in a few ways but not as weird as Finnish
Mar 10 14:44:26 <bkhl>	It's not uralic, it's ugrian.
Mar 10 14:44:27 <wgreenhouse>	twb: that's also the informal word for male gonads
Mar 10 14:44:39 <twb>	EXACTLY
Mar 10 14:45:00 <twb>	"Не успел я узяцца за яйца как масла ишчэзла"
Mar 10 14:45:35 <e1f>	the root is uralic
Mar 10 14:48:12 <twb>	https://upload.wikimedia.org/wikipedia/commons/f/f8/UralicTree.svg
Mar 10 14:50:41 <e1f>	what is that phrase? something abot laying eggs behind a bed?
Mar 10 15:00:43 <quiliro`>	Please tell me what you think about these statements: If there is something you do repetively, it should be converted into a macro when the work to make the macro is less than the work to repeat manually.
Mar 10 15:01:17 <quiliro`>	If this is true, then when would you transform a macro into a function?
Mar 10 15:02:56 <quiliro`>	Am I wrong about the basic ideas of creating macros and functions?
Mar 10 15:04:15 <e1f>	a macro is converted into a function so it can be called from a lisp program
Mar 10 15:04:44 <jmd>	Actually I've never properly understood the difference between macros and functions.
Mar 10 15:05:25 <e1f>	converting it into a function is the only way to save a macro for future use
Mar 10 15:05:28 <quiliro`>	I understand that macros are not evaluated and functions are.
Mar 10 15:06:11 <e1f>	you define a macro, name it and then it can be inserted into your .emacs as a named function
Mar 10 15:06:11 <bremner>	it would be useful to distinguish between keyboard macros and lisp macros, which have very little in common
Mar 10 15:06:12 <quiliro`>	macros are like forms used to fill with some parameter
Mar 10 15:06:18 <e1f>	you can then bind it to a key
Mar 10 15:06:53 <quiliro`>	bremner: yes...the use of the same name is confusing
Mar 10 15:06:58 <e1f>	yeah, that's a good point, bremner . i understood macro to mean keyboard macro
Mar 10 15:07:04 <quiliro`>	what i mean here is keyboard macros
Mar 10 15:08:04 <e1f>	you can also later edit a saved kb macro
Mar 10 15:08:23 *	quiliro goes back to the good book: (info "(emacs) Top")
Mar 10 15:08:43 <e1f>	but saving it for future use is the primary reason for converting it into a function
Mar 10 15:09:00 <quiliro>	that is a great summary of kmacros, e1f
Mar 10 15:09:13 <jmd>	The doc says: "A macro  translates a Lisp expression into another expression which is to be evaluated instead of the original expression."
Mar 10 15:09:13 <jmd>	 
Mar 10 15:09:22 <quiliro>	I now understand why the command is kmacro
Mar 10 15:12:50 <bremner>	jmd: right, that's the non-keyboard macro
Mar 10 15:14:26 <jmd>	I'll have to buy myself a non-keyboard and then I can start using them!
Mar 10 15:20:05 <sham1>	I wish I could find use for kmacros
Mar 10 15:22:01 <jmd>	Unless its a really simple one, I think it's easier to write a function.
Mar 10 15:24:17 <bremner>	I think it depends if you are already a programmer
Mar 10 15:25:04 <e1f>	lisp programmer specifically
Mar 10 15:27:40 <e1f>	when i was blogging, i had a keyboard macro to insert a new entry (h3 header, etc.) into the html file with space for an epigraph and the current date and time
Mar 10 15:29:42 <e1f>	now i just write a private and unpublishable diary
Mar 10 15:31:35 <quiliro>	why?
Mar 10 15:31:36 <fsbot>	why not?
Mar 10 15:31:57 <quiliro>	you do not want to endow us with your wisdom?
Mar 10 15:32:49 <quiliro>	are the old posts still available?  I would like to read them
Mar 10 15:36:30 <quiliro>	kmacro is a type (of kind ‘oclosure--class’). Inherits from ‘oclosure’.
Mar 10 15:36:45 <quiliro>	oclosure--class is a type (of kind ‘cl-structure-class’) in ‘oclosure.el’. Inherits from ‘cl--class’.
Mar 10 15:37:07 <quiliro>	I am more confused now.
Mar 10 15:37:27 <quiliro>	e1f's summary was a much better introduction
Mar 10 15:37:55 <quiliro>	but no one told me if my statement sounded correct or not
Mar 10 15:41:13 <wasamasa>	dare to think for yourself
Mar 10 15:41:33 <quiliro>	I do...
Mar 10 15:41:48 <quiliro>	that is why I posted that statement
Mar 10 15:42:06 <quiliro>	but I want to know your opinion too
Mar 10 15:42:15 <wasamasa>	you asked for guidance, rather than, you know, not caring about my opinion on this
Mar 10 15:42:40 <wasamasa>	doesn't exactly strike me as thinking for yourself if you ask what others think
Mar 10 15:43:26 <quiliro>	everything is the product of environment
Mar 10 15:43:51 <wasamasa>	highly debatable
Mar 10 15:46:12 <sham1>	Thinking for oneself doesn't preclude asking others for vibes and such
Mar 10 15:46:24 <sham1>	You can come to your own conclusion while also asking others
Mar 10 15:47:06 <quiliro>	If you do not want to respond, it is ok:  Please tell me what you think about these statements:  "If there is something you do repetively, it should be converted into a macro when the work to make the macro is less than the work to repeat the task manually.  If this is true then, when would you transform a macro into a function?   Am I wrong about the basic ideas of creating macros and functions?
Mar 10 15:47:16 <quiliro>	"
Mar 10 15:47:23 <wasamasa>	you're still confusing keyboard macros with lisp macros
Mar 10 15:47:46 <quiliro>	I forgot to mention I refer to keyboard macros
Mar 10 15:48:07 <wasamasa>	then you need to reword it
Mar 10 15:48:18 <quiliro>	ok
Mar 10 15:48:42 <wasamasa>	the first sentence of this has nothing to do with functions whatsoever
Mar 10 15:49:29 <sham1>	You can turn keyboard macros into functions though
Mar 10 15:49:58 <bremner>	that's not very helpful in this context
Mar 10 15:49:59 <sham1>	Just use the functions bound into the keys that you used when you recorded the keyboard macro
Mar 10 15:50:07 <quiliro>	"If there is something you do repetively, it should be converted into a keybard macro when the work to construct the keyboard macro is less than the work to repeat the task manually.  If this is true then, when would you transform a keyboard macro into a function?   Am I wrong about the basic ideas of creating keyboard macros and functions?
Mar 10 15:51:02 <quiliro>	"
Mar 10 15:51:17 <wasamasa>	creating keyboard macros has nothing to do with functions
Mar 10 15:51:31 <wasamasa>	it's as simple as pressing a key to start recording them and pressing another key to stop recording them
Mar 10 15:51:32 <quiliro>	I did not say that
Mar 10 15:51:40 <quiliro>	yes
Mar 10 15:51:49 <sham1>	What happens when you press a key to start recording? That's right, emacs calls an interactive function
Mar 10 15:51:54 <sham1>	Checkmate
Mar 10 15:52:02 <wasamasa>	so if you think that it may be worth it recording a keyboard macro, why not just do that?
Mar 10 15:52:11 <wasamasa>	if you think it's not worth it, then do the repetitive task normally
Mar 10 15:52:19 <wasamasa>	that's all the first sentence of your quote says
Mar 10 15:52:26 <dcb>	what is the problem we're trying to solve here, by the way?
Mar 10 15:52:48 <wasamasa>	once you grok that, you can think about doing better than keyboard macros by writing equivalent lisp code
Mar 10 15:53:29 <bremner>	dcb: having too much time on our hands
Mar 10 15:54:50 <dcb>	this feels like some homework asking you to select the correct answer
Mar 10 15:55:10 <bremner>	,clint-eastwood-fix
Mar 10 15:55:11 <fsbot>	clint-eastwood-fix is most problems can be solved by failing to communicate
Mar 10 15:55:40 <wasamasa>	there is no law such as "record a keyboard macro for an extremely repetitive activity if you do it more than 3 times"
Mar 10 15:56:00 <e1f>	what?! that was a paul newman movie, not clint eastwood
Mar 10 15:56:04 <wasamasa>	or "write a lisp function instead of a keyboard macro if you cannot get the keyboard macro right"
Mar 10 15:56:27 <wasamasa>	in the end, the text editing we do is so varied, there can only be individual judgement on what's appropriate
Mar 10 15:56:28 <dcb>	bremner: or Sam Elliot
Mar 10 15:58:28 <tomnor>	I have figured out I can do (setq project-vc-extra-root-markers (list ".eproj"))
Mar 10 15:58:59 <tomnor>	and now directories with such a directory can be considered projects by project.el
Mar 10 15:59:25 <tomnor>	Now I need to figure out have to have it respect some special .eprojignore file
Mar 10 15:59:47 <tomnor>	(how to have it...)
Mar 10 16:00:41 <sham1>	I'd honestly make a new project.el backend instead of relying on project-vc
Mar 10 16:01:06 <tomnor>	what is the drawback otherwise?
Mar 10 16:01:32 <sham1>	Well the drawback is exactly what you're seeing: how to make the thing ignore files in, say, .eprojignore
Mar 10 16:01:46 <sham1>	If you have your own backend, you can do whatever you want
Mar 10 16:02:41 <tomnor>	I feel then I need to learn and understand cl-defgeneric, which I dont
Mar 10 16:02:55 <tomnor>	and cl-defmethod
Mar 10 16:04:22 <tomnor>	And also, about the drawback, all I see ritght now is that ignore part, its just so close.
Mar 10 16:17:30 <sham1>	tomnor: anyway, I'd look at `project-ignores`, especially the (head vc) one
Mar 10 16:17:53 <tomnor>	yes, thanks, trying...
Mar 10 16:19:33 <lechner>	Hi, is it possible, via funcall, to pass keyword arguments intended for cl-defun?
Mar 10 16:52:19 <quiliro>	I am more confused about macros and functions now than before the explanation.
Mar 10 16:52:55 <quiliro>	I guess I should stay with e1f's summary
Mar 10 16:53:20 <dcb>	did you mean "macros, keyboard macros, and functions"?
Mar 10 16:58:40 <quiliro>	just keyboar macros and functions
Mar 10 16:58:53 <quiliro>	keyboard*
Mar 10 17:16:13 <lechner>	Hi, what's a good comparison operator for function pointers, please?
Mar 10 17:16:26 <lechner>	equals, that is
Mar 10 17:19:03 <alcor>	In elisp? Functions can be only compared by identity, so eq
Mar 10 17:19:15 <lechner>	thanks!
Mar 10 17:19:24 <lechner>	alcor / thanks!
Mar 10 17:19:41 <wasamasa>	the funcall question doesn't make much sense to me
Mar 10 17:20:02 <wasamasa>	(cl-whatever :keyword-arg ...) and (funcall #'cl-whatever :keyword-arg ...) are the same
Mar 10 17:20:31 <wasamasa>	keyword arguments are just a special convention of how to interpret them
Mar 10 17:21:29 <alcor>	I think it's more like, whether it's possible to pass keyword args to `cl-defun' itself, if I understood correctly
Mar 10 17:22:13 <alcor>	… which should not be possible, since - afaik - `cl-defun' is a macro
Mar 10 17:22:26 <lechner>	wasamasa / maybe i'm not aware of the potential values for the pointer (or whatever that #' thing is called) but I cannot add it here     https://git.savannah.gnu.org/gitweb/?p=emacs/elpa.git;a=blob;f=debbugs-gnu.el;h=f952cdae14bbbeed8aa6ca5f13173fcccd143b73;hb=refs/heads/externals/debbugs#l841
Mar 10 17:22:27 <rudybot>	https://teensy.info/LvXbixgrdr
Mar 10 17:23:22 <wasamasa>	lechner: but you're calling the function with zero arguments, lol
Mar 10 17:23:36 <lechner>	wasamasa / not in my branch
Mar 10 17:23:43 <wasamasa>	then show the actual code
Mar 10 17:24:01 <wasamasa>	also, it's not helpful to think about lisp code in terms of pointers
Mar 10 17:24:38 <wasamasa>	at best, you'd end up with the insight that lisp is a pointers-only language, without any of the pointer footguns
Mar 10 17:25:13 <technomancy>	buuuuut call by reference!!!11
Mar 10 17:25:26 <technomancy>	(call by reference is a very stupid term)
Mar 10 17:25:39 <wasamasa>	it really is
Mar 10 17:26:02 <ndegruchy>	Call by inference
Mar 10 17:26:05 <ndegruchy>	call by mother
Mar 10 17:26:29 <ndegruchy>	call by referee
Mar 10 17:26:32 <zyd>	how about email instead?
Mar 10 17:26:33 <lechner>	wasamasa / this call fails with a lengthy error, which i will copy in a moment       https://paste.mozilla.org/cniRtiRB#L842
Mar 10 17:26:59 <lechner>	here is what's in the reference    https://paste.mozilla.org/cniRtiRB#L842,918
Mar 10 17:27:02 <wasamasa>	(funcall #'cl-find "foo" '("foo" "bar" "baz") :test #'equal)
Mar 10 17:27:03 <wasamasa>	(cl-find "foo" '("foo" "bar" "baz") :test #'equal)
Mar 10 17:27:14 <wasamasa>	remove the keyword args and you'll find it behaves differently
Mar 10 17:30:04 <lechner>	Here is the error https://bpa.st/WVUA
Mar 10 17:32:59 <lechner>	or is it because it's in (interactive) ?
Mar 10 17:33:25 <lechner>	actually, it isn't
Mar 10 17:34:19 <wasamasa>	chances are you're using the function wrong
Mar 10 17:34:45 <wasamasa>	the error tells you that it expected a keyword argument, but got something that's not a keyword
Mar 10 17:35:18 <lechner>	soap-wsdl is not initialized properly?
Mar 10 17:35:21 <wasamasa>	no
Mar 10 17:35:26 <wasamasa>	look at the function signature
Mar 10 17:36:18 <wasamasa>	the combination of &optional and &key is unfortunate to say the least
Mar 10 17:36:40 <lechner>	it's not allowed?
Mar 10 17:36:51 <wasamasa>	it does not do what people think it does
Mar 10 17:37:00 <wasamasa>	have you tried my example?
Mar 10 17:37:28 <wasamasa>	you'll see that a function taking keyword arguments behaves as expected with funcall
Mar 10 17:37:51 <lechner>	yes, i see that. but where is my error?
Mar 10 17:38:23 <wasamasa>	(info "(cl) Argument Lists")
Mar 10 17:39:04 <wasamasa>	your error is assuming that for a function taking keyword arguments, an optional argument is optional
Mar 10 17:39:56 <wasamasa>	you must specify the optional argument in that case
Mar 10 17:40:32 <lechner>	i can make two keyword arguments
Mar 10 17:41:58 <lechner>	wasamasa / the example in the (cl) manual also uses &optional together with &key    (cl-defun foo (a &optional b &key c d (e 17)))
Mar 10 17:42:12 <wasamasa>	yes and it shows what happens if you forget passing the optional argument
Mar 10 17:43:12 <lechner>	"Note that it is not possible to specify keyword
Mar 10 17:43:12 <lechner>	arguments without specifying the optional argument ‘b’ as well, since
Mar 10 17:43:13 <lechner>	‘(foo 1 :c 2)’ would bind ‘b’ to the keyword ‘:c’, then signal an error
Mar 10 17:43:13 <lechner>	because ‘2’ is not a valid keyword."
Mar 10 17:43:58 <sham1>	Remember that the way the cl-lib.el implements the CL lambda lists is via compiler macros
Mar 10 17:44:06 <sham1>	So it can fill in the optional args and keywords properly
Mar 10 17:44:15 <lechner>	may i reverse &key and &optional ?
Mar 10 17:44:46 <sham1>	Probably not
Mar 10 17:45:21 <lechner>	wasamasa / sham1 / either way, it's fixed easily by converting the &optional argument to another &key. thanks!
Mar 10 17:47:09 <sham1>	Well you could have just passed a nil
Mar 10 17:48:21 <lechner>	i suppose i could remove the &optional. maybe a warning would be appropriate.
Mar 10 17:50:27 <lechner>	actually, i can't pass nil because not all the procedures referenced in funcall have that argument (they do have the keyword argument)
Mar 10 17:52:12 <lechner>	that function pointer should be a simple boolean anyway. i'll make explicit calls for the branches. i'll use eq as alcor said
Mar 10 17:56:31 <lechner>	is there a bug reference about &optional with &key that I can mention in the Git log?
Mar 10 17:57:36 <corwin>	Lotas treesitter grammer projects updates this AM; Windows DLLs, anyone? > [tree-sitter] Msys built 5 projects; OK: typescript,rust,ruby,javascript,java, https://corwin.bru.st/emacs-tree-sitter
Mar 10 17:59:40 <corwin>	lechner: are you saying you want to submit a feature request?  Or what is the bug here?
Mar 10 18:00:29 <corwin>	(Is it really not working as documented, or are we talking about making it work better although it does work as documented?)
Mar 10 18:13:22 <lechner>	corwin / it is working as documented, but may contradict expectations---at least for beginners like myself
Mar 10 18:15:21 <lechner>	Hi, is possible to share variable definitions from let inside the (interactive) block and later?      https://paste.mozilla.org/3HE7Pj84#L2501
Mar 10 18:15:43 <corwin>	In elisp we call violating the expectations of users (especially begineers) "Tuesday".  But fair enough: probably a feature request but check if someone already did and it was marked "wontfix" or something, maybe.
Mar 10 18:16:29 <corwin>	This is 25 hundred lines.  Is there something specific in here you want us to look at?
Mar 10 18:16:59 <lechner>	yes, the position in that line is inside (interactive)
Mar 10 18:17:56 <corwin>	Lexically bound variables that are let bound in a given scope, should generally (notwitstanding they do some fancy footwork) retain that value within functions involved from that scope.  Does that help?
Mar 10 18:18:14 <corwin>	s/involved/invoked
Mar 10 18:19:01 <corwin>	I found 98 hits for the word interactive in that paste.  Could you give a line number or something?
Mar 10 18:19:32 <lechner>	2501
Mar 10 18:19:38 <corwin>	ty
Mar 10 18:19:58 <lechner>	i guess my question was more about whether (interactive) would continue to work inside a let
Mar 10 18:20:34 <lechner>	the paste should have hightlighted it, except webpaste sent me to mozilla which is super dark
Mar 10 18:21:20 <corwin>	I think bpa.st (from /topic) honors browser light/dark settings, fwiw
Mar 10 18:22:10 <corwin>	We've talked a little about setting up a pastebin under savannah but nobody has actually looked into yet afaik.
Mar 10 18:23:49 <lechner>	i'd be happy to take a stab on my system. what's the favorite pastebin software?
Mar 10 18:27:27 <corwin>	That might be the hard part :P   There's not one currently afaik.  And, as you know, we have to maintain some degree of backword compat for older VMs.
Mar 10 18:27:52 <lechner>	it's 1999 again!
Mar 10 18:28:12 <lechner>	any good music lately?
Mar 10 18:28:57 <hodapp>	idk I just listen to miles davis
Mar 10 18:30:13 <corwin>	That sound about escaped dogs was pretty fun.
Mar 10 18:30:50 <corwin>	Basically like a super simple mystery.
Mar 10 18:36:24 <wasamasa>	the mozilla paste somehow doesn't jump to the highlighted line
Mar 10 18:36:27 <wasamasa>	it's annoying
Mar 10 18:37:17 <wasamasa>	lechner: cl-defun has &aux to introduce temporary bindings, but no idea how that interacts with interactive
Mar 10 18:37:45 <corwin>	Huh.  There *really* should be tests around tbh.
Mar 10 18:38:14 <wasamasa>	I don't see any let around line 2501 though
Mar 10 18:38:20 <corwin>	(I have no idea either, short of experimenting. That seems like something that should be documented and tested.)
Mar 10 18:38:38 <wasamasa>	remember that the purpose of `interactive' is to fill in the bindings of the function
Mar 10 18:38:52 <corwin>	wasamasa: I thought he meant the function would be called from within a `let'
Mar 10 18:39:02 <lechner>	wasamasa / ye.
Mar 10 18:39:04 <lechner>	yes
Mar 10 18:39:10 <corwin>	(I
Mar 10 18:39:14 <lechner>	the let is not yet there
Mar 10 18:39:17 <lechner>	that's funny
Mar 10 18:39:25 <corwin>	'll stop and let wasamasa help here)
Mar 10 18:40:05 <lechner>	corwin / for a pastebin, i think you want something like the bad boy from #perl-help. it runs snippets against all known Perl versions     http://paste.scsys.co.uk/perl-help
Mar 10 18:40:53 <lechner>	wasamasa / it's not a big deal. i was trying to avoid downloading a WSDL xml file twice
Mar 10 18:40:56 <corwin>	lechner: oddly, that's the only option I've personally run in the past.  It's a good suggestion, thanks.  I'll pass it along.
Mar 10 18:41:42 <lechner>	wasamasa / but it really would only be icing on the case
Mar 10 18:42:02 <lechner>	corwin / you used what, please?
Mar 10 18:42:17 <lechner>	run
Mar 10 18:42:36 <wasamasa>	I don't know how exactly your design looks like
Mar 10 18:42:46 <wasamasa>	but the solution to not doing work twice is "caching"
Mar 10 18:44:09 <wasamasa>	for a simple example of this, look at url-domsuf.el which preprocesses the public suffix list once per emacs invocation
Mar 10 18:44:21 <lechner>	yeah, i'm not sure yet how to work that with my allergies against global variables
Mar 10 18:44:23 <corwin>	lechner: scpaste
Mar 10 18:44:34 <wasamasa>	it could be fine in that case
Mar 10 18:44:44 <wasamasa>	again, I don't know your design
Mar 10 18:44:57 <wasamasa>	my experience with WSDL is limited to trying to break terrible java software :D
Mar 10 18:47:40 <corwin>	Emacs lisp is the cave of fear from Empire: be careful what you bring in with you.  Bringing strong stylistic preferences with you into elisp may mean many long arguments with more established devs and long time users. IMO, People who go this way tend to have lots of their own packages that few others understand and contribute to
Mar 10 18:48:47 <wasamasa>	I do believe the beef with global variables is that using them too much makes it a lot more difficult to understand the code, especially after doing refactoring
Mar 10 18:49:30 <jmd>	You should always make variables global; you never know when you might need to use one.
Mar 10 18:49:48 <corwin>	Variable Freedom Now
Mar 10 18:50:14 <dcb>	might as well define all possible variable names as global so you won't have to worry later, right?
Mar 10 18:50:20 <wasamasa>	funnily enough, this is a thing in game development
Mar 10 18:50:22 <jmd>	Anti-globalisation.
Mar 10 18:52:03 <lechner>	corwin / scpaste.el or this?  https://p.sc3.io/
Mar 10 18:53:12 <corwin>	https://metacpan.org/dist/App-Nopaste/view/script/nopaste
Mar 10 18:53:43 <alcor>	Well at least Elisp globals have dynamic extent. You can safely override them for a call chain.
Mar 10 18:54:59 <wasamasa>	there was a story on gamasutra of the senior dev on a game development team preallocating an unused block of memory for no apparent reason and when the end of game development neared and they ran out of memory to use in the game, that preallocated block came in handy
Mar 10 18:56:29 <corwin>	"I always keep an extra page under the mattress for a rainy day."
Mar 10 18:58:01 <wasamasa>	it's a shame working with preallocated memory in lisp and alike is a major pain in the ass
Mar 10 18:58:44 <wasamasa>	it would make it a more viable option for systems programming and such
Mar 10 18:58:44 <alcor>	The traditional "object pool pattern" should work just fine in lisp though, no?
Mar 10 18:58:55 <wasamasa>	I mean, it's too easy to inadvertedly leak memory
Mar 10 18:59:06 <wasamasa>	and end up allocating something by accident
Mar 10 18:59:31 <wasamasa>	the tooling to detect this is somewhere between bad and non-existent
Mar 10 18:59:41 <corwin>	use the module interface to make something backed by memmap?
Mar 10 19:00:43 <wasamasa>	there are a few designs that allow you to do better via runtime limitations
Mar 10 19:01:19 <tomnor>	In using cl-defgeneric and cl-defmethod, what is the meaing of the word 'head'?
Mar 10 19:02:14 <tomnor>	LIke (cl-defmethod funky ((arg (head two)))
Mar 10 19:02:14 <tomnor>	  (format "got %S arg"))
Mar 10 19:03:01 <corwin>	Is that descructuring, to create head and two from arg (which must be a list of two items)?
Mar 10 19:03:22 <corwin>	destructuring, I probably mean.
Mar 10 19:03:41 <tomnor>	I certainly has a special meaning
Mar 10 19:03:50 <tomnor>	I cannot say (one two)
Mar 10 19:04:19 <tomnor>	s/I/it/
Mar 10 19:04:56 <corwin>	I believe destructuring syntax is documented under cl-defun
Mar 10 19:05:02 <wasamasa>	(info "(elisp) Generic Functions")
Mar 10 19:05:23 <corwin>	or (info "(cl)Argument Lists")
Mar 10 19:05:30 <wasamasa>	> The argument must be a cons cell whose ‘car’ is ‘eql’ to OBJECT.
Mar 10 19:07:50 <corwin>	and from my info link > Argument lists support “destructuring”.  In Common Lisp, destructuring is only allowed with ‘defmacro’; this package allows it with ‘cl-defun’ and other argument lists as well.  In destructuring, any argument variable (VAR in the above example) can be replaced by a list of variables, or more generally, a recursive argument list.
Mar 10 19:07:53 <harwiltz>	Hello all. Is there a way to specify that I want particular blocks to be hidden on startup in org-mode? For example, I have a file with a bunch of #+{BEGIN,END}_COMMENT blocks that I don't want expanded at startup, but I only want those ones to be hidden.
Mar 10 19:08:18 <secolinsky>	\par
Mar 10 19:08:28 <secolinsky>	\par
Mar 10 19:08:42 <earthToAdam>	Is there an elisp function to test whether an org-mode link is external?
Mar 10 19:08:42 <bremner>	you know this isn't the TeX prompt, right?
Mar 10 19:09:38 <earthToAdam>	something like (org-in-regexp org-link-bracket-re) but specifically only for links that point to other files or URLS...
Mar 10 19:11:05 <earthToAdam>	okay, nevermind. I think this might be what I need https://orgmode.org/manual/External-Links.html
Mar 10 19:11:16 <earthToAdam>	"They start with a short identifying string followed by a colon. "
Mar 10 19:12:29 <earthToAdam>	So... I just need a regex, something like \[\[[A-Za-z]+:.+\]\] maybe?
Mar 10 19:13:26 <earthToAdam>	actually, no. Like this \[\[[A-Za-z]+:.+\]\[.+\]\]
Mar 10 19:14:05 <corwin>	I don't think it is correct that any link without a protocol is a link to somewhere within the document.  I can put an inline image with [[file.type]] which is the syntax as for a link to said image.
Mar 10 19:15:51 <earthToAdam>	Hmm...
Mar 10 19:16:25 <earthToAdam>	There has to be a built-in function to do this.
Mar 10 19:17:21 <corwin>	I didn't find one and making one looks pretty hard.  I glanced at `org-link-parameters' after finding `org-link-get-parameter'
Mar 10 19:18:28 <earthToAdam>	corwin maybe going the other way... All I really want is a way of identifying links that are (not) pointing to the current document...
Mar 10 19:18:40 <corwin>	IOW, I suspect, unless this does already exist, parsing the document text may be needed: what I find in the parsed props that that tells me something is a link within the document is actually a function/lambda expression, which looks nasty to work with.
Mar 10 19:19:14 <corwin>	Maybe that does make it easier but I'm afraid I haven't been able to think of how, if so. :/
Mar 10 19:19:40 <corwin>	I suggest seeing if someone in #org-mode has ideas (maybe yantar is around ;)
Mar 10 19:20:27 <earthToAdam>	Ah, that's a good idea. I actually forgot that there was an #org-mode! :D
Mar 10 19:20:33 <corwin>	:D gl
Mar 10 19:20:52 <earthToAdam>	thx
Mar 10 19:23:54 <boud>	In Debian/bookworm, how do I changed the gnumakefile-mode colours?
Mar 10 19:24:06 <boud>	s/changed/change/
Mar 10 19:26:30 <boud>	- in emacs 28.2.
Mar 10 19:33:25 <Necktwi>	testing sauron, anyone mention me :)
Mar 10 19:33:48 <ndegruchy>	Necktwi:  https://irc.degruchy.org/uploads/ee897e2b0dffbfa2/aghast.jpg
Mar 10 19:34:36 <Spawns_Carpeting>	how do we pass &rest args to a function when we have them in a list?
Mar 10 19:34:37 <e1f>	boud: put your cursor on the text you want to change the color and m-x customize-face
Mar 10 19:34:52 <Spawns_Carpeting>	i cant remember whether funcall can do it, apply definitely can though right
Mar 10 19:35:44 <Necktwi>	hmm i'm just getting message in sauron window, clicking it just strikes it; doesn't take me to the origin buffer
Mar 10 19:56:51 <boud>	e1f: Thanks! It works. :)
Mar 10 19:58:36 <e1f>	np
Mar 10 20:05:12 <tusko>	Anyone using PDE to write emacs in perl? I have a strange error I can't really debug
Mar 10 20:08:23 <tusko>	In a nutshell it looks to be running require(complete) but not finding it. What package provides complete?
Mar 10 20:09:25 <e1f>	what do you mean "write emacs in perl"?
Mar 10 20:11:27 <corwin>	Crossposted to #perl as > Does anyone use emacs PDE when writing perl?
Mar 10 20:11:58 <e1f>	ah
Mar 10 20:12:10 <tusko>	e1f: yeah, sorry, I meant to use emacs as a perl editor
Mar 10 20:12:35 <tusko>	Mostly I just wanted to create a REPL, but then I found PDE and so I wrote a config for it but it just keeps breaking.
Mar 10 20:13:01 <tusko>	This leads me to believe that maybe I need to be loading some things before other things and don't really understand how a config should be structured.
Mar 10 20:13:40 <corwin>	tusko: I think a "just a Perl REPL" would be nice to have; if you were closish with that, I'd love to try it.
Mar 10 20:20:51 <tusko>	I wonder if I could just get it with use-package
Mar 10 20:21:51 <younder>	When declaring a defpackage always include a (:use #:cl) before doing in-package, or the compiler won't see CL and thus defsystem. OUCH. Wasted 10 minutes figuring that out..
Mar 10 20:24:52 <younder>	Also always check that the group selected is in fact #commonlisp, sorry guy's. I am really dumb today..
Mar 10 20:26:32 <corwin>	no worries m8
Mar 10 20:26:58 <arent>	Hello. Quick question. Does anyone know of an emacs package that allows you to reformat C++ code by sorting/rearranging methods alphabetically? M-x sort-paragraphs does not do what I want... :-)
Mar 10 20:27:33 <arent>	eg. if you have void foo { } void bar {}, it'd be smart enough to rearrange it so that the entire definition of bar appears before foo
Mar 10 20:28:09 <arent>	I believe JetBrains proprietary Resharper can do this, but everyone knows Emacs can do anything...
Mar 10 20:32:34 <sham1>	Well, Emacs can do anything if you make it do it
Mar 10 20:33:50 <texnomancy_>	you just have to believe in yourself
Mar 10 20:33:59 <texnomancy_>	and also sometimes in rudybot
Mar 10 20:34:01 <arent>	Lol, yes. I guess I meant "has somebody else *already* made it do this", versus me having to implement it myself in Elisp ;-)
Mar 10 20:34:08 <arent>	:-D
Mar 10 20:34:45 <corwin>	,lets-youj
Mar 10 20:34:46 <fsbot>	I Know A Joke
Mar 10 20:34:48 <corwin>	,lets-you
Mar 10 20:34:49 <fsbot>	corwin, lets-you-remimplement-emacs is <noecho>enough, already
Mar 10 20:35:04 <corwin>	hmm, never mind.
Mar 10 20:35:12 <arent>	It seems like a somewhat common use-case, so was a bit surprised nothing immediately came up in my searching.
Mar 10 20:35:48 <arent>	Guess I'll have to add it as an "interesting coding project", good for practicing elisp as a change from c++ I guess ;-)
Mar 10 20:36:34 <corwin>	I think people who want the editor to sort the content file might be using elgot/LSP more than writing language specific stuff but, to be quite clear, I'm talking out of my ass: I don't automate that and I don't use those.
Mar 10 20:38:10 <corwin>	It may be just the sort of "refactoring feature" that, IIUC, there has be discussion on the emacs-devel mailinglist about needing more of: https://lists.gnu.org/archive/html/emacs-devel/2023-08/msg00680.html
Mar 10 20:38:53 <mwnaylor>	JohnGalt: Do you still have the paste for your code the displays random sayings?
Mar 10 20:39:00 <sham1>	Out of curiosity, what would sorting the functions actually give you? Like what is the use
Mar 10 20:39:26 <corwin>	One I can think of is coding standards (for project or $job)
Mar 10 20:39:40 <technomancy>	why would you want your functions in alphabetical order?
Mar 10 20:39:46 <technomancy>	wouldn't you want them arranged in logical order?
Mar 10 20:39:59 <bremner>	obfuscation against an illiterate boss
Mar 10 20:40:17 <sham1>	corwin: that kind of a coding standard seems silly, but then again, so do a lot of coding standards
Mar 10 20:40:34 <sham1>	technomancy: that's what I'm also thinking
Mar 10 20:40:43 <technomancy>	oops yes I typed before I read the backscroll lol
Mar 10 20:40:51 <bremner>	depends on the language I guess. In some languages re-ordering the functions could actually break things
Mar 10 20:41:16 <bremner>	unless you also add forward declarations for every function or something...
Mar 10 20:41:20 <arent>	well, the functions are already pretty nicely compartmentalised in lots of separate files
Mar 10 20:41:40 <arent>	meanwhile there is no technical issue with forward declarations etc
Mar 10 20:42:04 <arent>	and yes, I'm not necessary talking about 100% alphabeticised, but rather alphabeticising say, selected regions of functions
Mar 10 20:42:07 <corwin>	My Dad once had me sort, and count-words, and alphabatize a MSS; which he then forwarded to his editor with "book finished, all the words are there"
Mar 10 20:42:36 <arent>	that way, functions are somewhat grouped logically, and then within their areas, ordered alphabetically
Mar 10 20:43:06 <technomancy>	you might also like: https://www.youtube.com/watch?v=5GFW-eEWXlc
Mar 10 20:43:07 <judybot>	[title] ARST ARSW: Star Wars sorted alphabetically - YouTube
Mar 10 20:43:08 <technomancy>	corwin: ^
Mar 10 20:43:12 <arent>	in any case, I actually prefer things in alphabetical order, because I just use the various code jumping/incremental search functionality to immediately jump to a particular line anyway
Mar 10 20:43:19 <sham1>	imenu
Mar 10 20:43:20 <corwin>	technomancy: nice, thanks.
Mar 10 20:43:31 <arent>	imenu is good, yes
Mar 10 20:43:42 <arent>	I use citre-mode for C++ in emacs
Mar 10 20:44:06 <sham1>	I like to go with a logical entry point first, and then the auxiliary methods
Mar 10 20:44:28 <sham1>	Of course, since I work in Java, I don't need to worry about forward decls, but even then, those should just work
Mar 10 20:45:00 <arent>	as long as you have your header files properly setup, no issue with forward declarations in C++ either
Mar 10 20:45:51 <arent>	i.e. methods in your cpp file can be in whatever order you like ns::FooClass::myfunct() { } etc
Mar 10 20:46:05 <sham1>	Yeah, but that requires you to write it in the header file
Mar 10 20:46:17 <sham1>	Sorta obviously
Mar 10 20:46:23 <tazjin>	I've published the tree-sitter based breadcrumbs package I talked about the other day; so far with support for json/yaml/toml/c++, if anyone is curious to try it you can get it here: https://code.tvl.fyi/tree/tools/emacs-pkgs/treecrumbs/treecrumbs.el
Mar 10 20:46:32 <tazjin>	don't remember who I talked to this about
Mar 10 20:46:44 <sham1>	Screenshot?
Mar 10 20:46:44 <fsbot>	screenshot: http://www.emacswiki.org/emacs/ScreenShot
Mar 10 20:46:50 <bremner>	what are breadcrumbs?
Mar 10 20:46:50 <sham1>	>.>
Mar 10 20:47:00 <bremner>	I mean, I get the food kind
Mar 10 20:47:35 <tazjin>	bremner: little hints that show you where you are in a large structure
Mar 10 20:47:39 <sham1>	Breadcrums could be something like how graphical file browsers represent directories
Mar 10 20:47:43 <tazjin>	let me make a screenshot
Mar 10 20:48:07 <bremner>	sham1: I haven't used a graphical file browser much
Mar 10 20:48:35 <sham1>	Well, even dired does it
Mar 10 20:48:38 <arent>	mc is the greatest file manager (apart from emacs) :-)
Mar 10 20:49:09 <sham1>	The path at the top of the dired buffer, each of the path components are an interactible button that you can use to get to the given location
Mar 10 20:49:30 <tazjin>	sham1: https://tazj.in/blobs/breadcrumbs.png
Mar 10 20:49:35 <sham1>	Well, aside from the `/`, which seems like an oversight
Mar 10 20:49:45 <sham1>	Oh yeah, that looks interesting
Mar 10 20:49:51 <tazjin>	sham1: I don't know if that explains anything, but TL;DR is that the point is somewhere in the big structure
Mar 10 20:50:01 <sham1>	Yeah, I can see how that'd work
Mar 10 20:50:11 <tazjin>	and the header line (or wherever you want) shows you where
Mar 10 20:50:21 <sham1>	Headerline is probably useful for that
Mar 10 20:50:30 <tazjin>	I wanted this specifically for YAML & C++ where I frequently am unsure where exactly I am in a huge file
Mar 10 20:50:39 <arent>	tazjin, I can see how that'd be useful for JSON/YAML files etc
Mar 10 20:50:52 <arent>	one of my favour JSON tools is gron
Mar 10 20:51:00 <tazjin>	also with tree-sitter it's really fast, you can fluently scroll through files etc. with it updating live
Mar 10 20:51:09 <arent>	turns it into a flat/"greppable" line-by-line
Mar 10 20:51:16 <tazjin>	arent: yeah I know that thing, it's great
Mar 10 20:51:21 <sham1>	Some other editors like VSCode use information from the language servers and then use similar breadcrums to show you what function you're in or whatever. So it's a better locator than which-func-mode IMO, since it gives you more context
Mar 10 20:51:37 <tazjin>	sham1: yeah and you can get 90% of the way there with just tree-sitter
Mar 10 20:51:43 <sham1>	IIRC LSP-mode also gives you that, but I don't think anyone has made a package that can do that with eglot
Mar 10 20:51:50 <tazjin>	there's a few minor oddities between different languages with tree-sitter
Mar 10 20:52:01 <tazjin>	for example in the c++ one, if you're on whitespace then the node at point is the *next* node
Mar 10 20:52:14 <tazjin>	that can be mildly confusing in some cases, but overall I think it's still very useful
Mar 10 20:52:34 <sham1>	Being able to point at the very specific locus you're at in the ~~AST~~ parse tree is quite useful
Mar 10 20:52:35 <arent>	having used both LSP mode with Java and Perl, and citre-mode with C++ (using GNU Global), I think I almost prefer the non-LSP "old-school" global/gtags approach...
Mar 10 20:52:47 <tazjin>	LSPs are a huge mess
Mar 10 20:52:59 <tazjin>	and for a single YAML file or whatever you don't really want to spin up a "server", imo
Mar 10 20:53:17 <arent>	yep, that's why I like global/tags old-school
Mar 10 20:53:30 <sham1>	IMO YAML is a mistake anyway, but yeah, a server like that for a single thing is probably not useful
Mar 10 20:53:51 <arent>	also, the underlying LSP's are usually written in NodeJS (yuck)
Mar 10 20:53:54 <sham1>	The project I work on at $JOB is huge enough that not using LSP would be basically self-sabotage
Mar 10 20:54:23 <sham1>	Because cross-file referencing is nice, as is being able to get contextual completions
Mar 10 20:54:27 <tazjin>	sham1: the project I work on at $JOB is huge enough that LSPs don't work anymore :p
Mar 10 20:54:43 <arent>	sham1, yes, you need those things
Mar 10 20:54:54 <sham1>	tazjin: ah
Mar 10 20:54:54 <arent>	but is possible to get those without LSP too
Mar 10 20:55:38 <arent>	tazjin does it work with a tags database (e.g. GNU Global or similar). Curious to know how well that works on something that is enormous
Mar 10 20:55:39 <sham1>	It's possible, but a lot of the "current" tech around that tends to focus on LSP
Mar 10 20:56:26 <tazjin>	arent: it probably could, but we'd need something like a cron job that generates the tag DB
Mar 10 20:56:27 <arent>	Global creates a binary index file for searching, so in principle, should be rapid
Mar 10 20:56:34 <arent>	right
Mar 10 20:56:47 <tazjin>	arent: and also there are ways to scale LSPs, but it's complex and nobody has bothered to invest in it except for Google afaik (who don't publish this stuff, because it's tied to their internal tooling)
Mar 10 20:57:13 <tazjin>	arent: clangd (the C++ LSP) has support for remote indexes, but they're also kind of not ideal
Mar 10 20:57:46 <sham1>	One of the problems with Global or similar TAGS based things for this stuff is that a) you may or may not get type-specific completions and b) almost impossible to have it also tag your dependencies
Mar 10 20:58:14 <arent>	hmm, well citre-mode definitely does a)
Mar 10 20:58:36 <arent>	https://github.com/universal-ctags/citre
Mar 10 20:58:56 <sham1>	Yeah, and that requires a lot of the same smarts as a language server
Mar 10 20:59:09 <sham1>	Being able to parse the source, even at incomplete state when you're typing
Mar 10 21:00:15 <arent>	of course it'd be nice to have all of this as a nice "commercial" problem to have, been a nightmare trying to find commercial development work again. Job market is a nightmare
Mar 10 21:02:06 <tazjin>	depends on where you are :)
Mar 10 21:03:10 <arent>	UK... You're correct, probably good market in somewhere like Philippines
Mar 10 21:08:59 <bremner>	this time of year, the Philippines sounds pretty good.
Mar 10 21:19:31 <sneezle>	Good evening, ladies and gentleman. I use tab-bar-mode, but when I start emacs, I don't have C-TAB or C-S-TAB to jump between tabs. I have (setq tab-bar-mode t) and (setq tab-bar-show t) in my init.el. The tabs are shown at startup, but I need to do "M-x tab-bar-mode" twice, to turn it off and on again, then the keys work. Do you have any advice for me to have the keys right from the start? Emacs 28.2 on Debian 12
Mar 10 21:21:01 <corwin>	I think you might want to start it with a function call, rather than by setting the variable.  E.g. something in your init scripts like (tab-bar-mode 1)
Mar 10 21:22:32 <corwin>	Looks like if you set it via customize it should take effect, actually > Setting this variable directly does not take effect; either customize it (see the info node ‘Easy Customization’) or call the function ‘tab-bar-mode’.
Mar 10 21:22:47 <corwin>	So, you can probably just do (setopt tab-bar-mode t)
Mar 10 21:24:38 <sham1>	Yeah, customize plays special tricks with stuff
Mar 10 21:24:43 <sham1>	See also `custom-set-minor-mode'
Mar 10 21:25:25 <dcb>	maybe something is interfering with the keybindings, no?
Mar 10 21:25:38 <sham1>	Probably not
Mar 10 21:25:51 <sham1>	I run a fairly stock Emacs and I have nothing bound to C-<tab>
Mar 10 21:25:55 <sham1>	Etc
Mar 10 21:26:04 <corwin>	If the mode has to be toggled twice we should deal with that first. Then we can see what to do if the expected bindings aren't in play.
Mar 10 21:26:06 <sneezle>	Oh, so there is a difference between customize and setting directly. I don't like these comment lines like "you should have this only once in your init file", so I do it all directly. :-) Thank you, I will try those solutions.
Mar 10 21:26:10 <sham1>	But yeah, this is the body of custom-set-minor-mode `(if custom-local-buffer (with-current-buffer custom-local-buffer (funcall variable (if value 1 0))) (funcall variable (if value 1 0)))`
Mar 10 21:26:19 <sham1>	It's set as the setter for the defcustom form generated by define-minor-mode
Mar 10 21:26:31 <sneezle>	Tcb: those keys are not defined until I use tab-bar-mode twice then.
Mar 10 21:27:27 <sham1>	But yeah, customize is magic and now that ,,setopt is a thing, I wish more people would start using customize's power and setters and such
Mar 10 21:27:28 <fsbot>	Created new note for "setopt"
Mar 10 21:27:34 <sham1>	oh no
Mar 10 21:27:37 <dcb>	but does the command shows when checking with `C-h k`?
Mar 10 21:27:38 <sham1>	,help
Mar 10 21:27:39 <fsbot>	help: PM me and type help-erbot
Mar 10 21:28:22 <sham1>	,df setopt
Mar 10 21:28:22 <fsbot>	nooo!  [df] No funcTion or variabLe FouNd matChinG SetOpt or fs-sEtopt. DId YoU aLreaDy aSk me tO , (rEqUirE ’reLevanT-Library) ? My EmAcs version is 28.2
Mar 10 21:28:49 <sham1>	Okay, who set it to SpongeBob-case
Mar 10 21:28:50 <pkal>	Looking at the code, it seems that setting only the tab-bar-mode variable will enable the UI, but not necessarily activate the minor mode, which among other things will call tab-bar--define-keys
Mar 10 21:29:45 <sham1>	Setting tab-bar-mode should enable the minor mode, iff done properly (i.e. customize/customize-set-variable/setopt/use-package's :custom)
Mar 10 21:29:59 <sham1>	That's how it works in all minor modes
Mar 10 21:30:13 <sneezle>	Yay, (tab-bar-mode 1) did do the trick already, thank you very much!
Mar 10 21:32:01 <sneezle>	It's two weeks now since I'm using emacs, so I'm constantly learning atm. #noob
Mar 10 21:33:19 <dcb>	in my `custom.el` I have `(tab-bar-mode t)` and `(tab-bar-show 1)` but nothing in `init.el`
Mar 10 21:33:23 <vuori>	citre is nice, tags just doesn't do great with Python and similar languages where you're usually deep in a bushy namespace tree
Mar 10 21:34:13 <vuori>	so I can't use it as much as I'd like
Mar 10 21:36:50 <sneezle>	dcb: I don't have a `custom.el`. Emacs did write once or twice user customizations in the `init.el` - is `custom.el` the place where those customizations belong? Like setting a theme?
Mar 10 21:37:24 <corwin>	if you use custom then you are implicitly using setopt.  or smth. anyway, you engage the "magic" of customize for changing variables according to the needs of the packages that create said customizations.  If you have something it init.el (ignoring use-package, for the moment), you should likely be calling the global-minor-mode's function, or else using setopt on the minor-mode var.
Mar 10 21:38:13 <corwin>	custom.el is, I assume, the value of `custom-file', which just let's us extract the ugly "don't mess with me" stuff that customize saves to another file.
Mar 10 21:39:41 <sham1>	Yeah, that's exactly it
Mar 10 21:39:47 <dcb>	sneezle: yes, it's the file where I keep the customization done through `customize` and friends: https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Customizations.html
Mar 10 21:39:49 <sham1>	IIRC you also have to load it manually
Mar 10 21:40:03 <sham1>	So just (load custom-file) at the bottom of the init.el
Mar 10 21:40:28 <sham1>	I also use my custom-file for site-local functionality, since I have it on .gitignore
Mar 10 21:40:33 <corwin>	Yeah, that's an important gotcha with `custom-file', (as far as I know) it does not automatically require our "custom.el" or whatever. We need to ensure that happens by adding something like (setq custom-file "custom.el") and then (require "custom.el")
Mar 10 21:40:40 <sham1>	Anything that needs to be synced is in init.el or early-init.el
Mar 10 21:41:08 <corwin>	Or maybe I mean load-library.  I'm pretty sure that's what I use, but I suspect it probably doesn't matter very much.
Mar 10 21:41:20 <sham1>	Just (load) works
Mar 10 21:41:33 <corwin>	nice, thanks.
Mar 10 21:44:18 <sneezle>	Great, thank you very much, dbc, corwin, sham1. That helped a lot.
Mar 10 21:46:11 <corwin>	Glad we were able to help some :) Emacs can be amazing and quite daunting.  It's always nice when the little one feels like one understands has been useful to someone new.  Welcome :)
Mar 10 21:52:21 <sham1>	Yeah. Emacs is a beast of an environment. Some people have been able to somewhat take control, but only very, very few people have actually tamed the beast
Mar 10 21:56:02 <mwnaylor>	Taming emacs is like riding the sandworms on Arrakis.
Mar 10 21:56:22 <ndegruchy>	https://irc.degruchy.org/uploads/a787a3c68d2b7e9b/the-spice-must-flow.jpg
Mar 10 21:56:27 <tazjin>	mwnaylor: thanks for the reminder, I need to buy tickets to dune 2
Mar 10 21:56:43 <tazjin>	all the IMAXes in the city were completely booked out for dune last week
Mar 10 21:56:49 <tazjin>	even like, during the day on a workday
Mar 10 21:56:53 <tazjin>	maybe it's better this week
Mar 10 21:57:09 <sham1>	ndegruchy: now that's a cute sandworm
Mar 10 21:57:24 <mwnaylor>	Didn't see part 1. Always disappointed by the design of the ornithopters.
Mar 10 21:57:33 <ndegruchy>	sham1: it is. The cutest.
Mar 10 21:57:45 <ndegruchy>	I haven't seen part one. I only saw bits of the previous series
Mar 10 21:58:55 <sneezle>	I can imagine. The possibilities are endless. I try to switch to dired and gnus from spacefm and thunderbird, but the temptations of graphical UI and the familiarity with them are hard to ignore. I already replaced google calender with emacs calendar, diary and appts, which I love already. Hoping for enough spice to ride the sandworm one day.
Mar 10 21:59:30 <ndegruchy>	sneezle: dired is bonkers good. GNUs has a very high ceiling for proficiency
Mar 10 21:59:42 <ndegruchy>	sneezle: I ended up with notmuch instead of GNUS
Mar 10 22:00:09 <mwnaylor>	No gnus is good gnus. 😜
Mar 10 22:00:19 <ndegruchy>	,rimshot
Mar 10 22:00:20 <fsbot>	badum, *ting*
Mar 10 22:00:44 <mwnaylor>	I'll be here all week. Try the veal.
Mar 10 22:04:02 <sham1>	gnus vs notmuch vs mu4e, go
Mar 10 22:04:06 <mwnaylor>	B1G championships!!!
Mar 10 22:04:09 <sneezle>	ndegruchy: I will look into notmuch, thank you. I managed to get gnus running and grouping my mail accounts, which is more than i expected to achieve already, when i started 2 weeks ago.
Mar 10 22:04:10 <sham1>	Oh, also rmail
Mar 10 22:04:43 <ndegruchy>	rmail is boring because it requires you to use a simple mbox file and get your mail from the local system
Mar 10 22:04:51 <ndegruchy>	gnus is a news reader first
Mar 10 22:05:17 <ndegruchy>	mu4e is basically notmuch but actually moves mail instead of just tagging them
Mar 10 22:05:34 <sham1>	I've heard that in some ways notmuch is more advanced than mu4e
Mar 10 22:06:09 <ndegruchy>	I dunno, they both use xapian for indexing and tagging. mu4e actually moves the messages on disk whereas notmuch just tags them
Mar 10 22:06:10 <sham1>	Although I'm more biassed towards mu4e since I make sure that mu works in Fedora
Mar 10 22:06:28 <sham1>	Oh, I also forgot about wanderlust
Mar 10 22:06:42 <ndegruchy>	so did everyone else
Mar 10 22:06:44 <ndegruchy>	,rimshot
Mar 10 22:06:45 <fsbot>	badum, *ting*
Mar 10 22:07:08 <sham1>	At least according to the top post of this Reddit person: https://www.reddit.com/r/emacs/comments/ebite6/mu4e_vs_gnus_vs_notmuch_for_emacs_email/
Mar 10 22:07:25 <sham1>	notmuch has better performance, better UI, superior searching
Mar 10 22:07:40 <sham1>	Of course mu does mail moving and such without requiring custom scripts
Mar 10 22:07:47 <ndegruchy>	and https://www.mew.org/en/
Mar 10 22:09:03 <sham1>	Hm, apparently wanderlust is still alive. Neat
Mar 10 22:09:10 <sham1>	Last change was last week
Mar 10 22:09:28 <sham1>	Honestly? I'm glad
Mar 10 22:09:54 <ndegruchy>	Oh yeah, more stuff in the general is good
Mar 10 22:10:04 <ndegruchy>	general ecosystem
Mar 10 22:10:10 <sham1>	Hm. Mew is at version 6.9
Mar 10 22:10:12 <sham1>	Nice
Mar 10 22:10:52 <ndegruchy>	Mew, at one point, had support for Google Desktop Search o.0
Mar 10 22:12:53 <sham1>	I've hopped between mu4e and gnus, I need to find what I'd want to use
Mar 10 22:14:59 <corwin>	does this mean elisp is the spice?
Mar 10 22:15:13 <sham1>	yes
Mar 10 22:15:24 <sham1>	The lisp must flow
Mar 10 22:15:25 <corwin>	Now I get the "it might kill you" part.
Mar 10 22:16:44 <corwin>	System Melange def does sound like it could be a thing.
Mar 10 22:21:53 <corwin>	No. No, wait.  Free Software is Arrakis, Emacs is the sandworms.  Clearly, the spice is the documentation.  We know it's deadly because we send people off to read it and they never come back.
Mar 10 22:22:08 <e1f>	,forget setopt
Mar 10 22:22:10 <fsbot>	Forgot "setopt" which had one note:  ["a thing, I wis[...]tters and such"]
Mar 10 22:24:14 <sham1>	Oh, that's the commands
Mar 10 22:24:15 <sham1>	Thanks
Mar 10 22:27:14 <tazjin>	corwin: ok but who are the guild navigators in this
Mar 10 22:28:43 <corwin>	tazjin: I guess the maintainers?  or maybe the translators and the maintainers are more like the great houses.
Mar 10 22:32:04 <e3d3>	what is that slimy thing called that I try to ride when searching for spice outside emacs ?
Mar 10 22:33:07 <sham1>	What would the package ecosystem be then
Mar 10 22:35:10 <sham1>	Anyway, speaking of the package ecosystem, since we were talking about email earlier, now I wonder just what people here in this august chat use
Mar 10 22:35:21 <sham1>	Maybe I could get back to reading my mail in Emacs again
Mar 10 22:36:46 <edrx>	ppl, I'm playing with some javascript code that I run in a nodejs repl and generates an image... the image is always put in /tmp/myimage.png and displayed in the lower right window.
Mar 10 22:37:11 <edrx>	sham1: I use gmail and I just copy and paste things from emacs to the browser and back =/
Mar 10 22:37:53 <edrx>	what can I use to make emacs reload the image when it is rewritten on the disk?
Mar 10 22:38:02 <sham1>	auto-revert-mode
Mar 10 22:38:08 <edrx>	sham1: thanks!
Mar 10 22:38:15 <sham1>	Assuming the new image is written on the same file as the old one
Mar 10 22:38:32 <edrx>	sham1: it is
Mar 10 22:39:18 <sham1>	Yeah, then that should just work
Mar 10 22:41:04 <RickAstley>	what's the face variable used by emacs web wowser? Need to change the face
Mar 10 22:41:16 <sham1>	For what text
Mar 10 22:41:24 <RickAstley>	sham1: body text of html page
Mar 10 22:41:46 <sham1>	shr-text
Mar 10 22:41:51 <sham1>	That's one of them anyway
Mar 10 22:42:12 <sham1>	C-u C-x = gives you the text properties, including the face
Mar 10 22:42:45 <sham1>	IIRC you can also have your point on a piece of text and then call describe-face and it should give you the face of the text under the point
Mar 10 22:43:55 <RickAstley>	sham1: ty for that and the reminder, will log and bookmark with org-remark :^)
Mar 10 22:44:09 <e3d3>	edrx: hi edrx. I'm still investigating eev, but won't ask questions before I've read all that eev included, except: how is the MELPA version doing ?
Mar 10 22:44:25 <edrx>	e3d3: hi!
Mar 10 22:44:56 <edrx>	e3d3: please ask questions before reading everything, before everything is too much... eev is a kitchen sink
Mar 10 22:45:11 <edrx>	e3d3: I updated the version on ELPA yesterday
Mar 10 22:46:28 <edrx>	e3d3: you're running eev from the git repository, right? if yes then you can access the changelog with (find-eevfile "ChangeLog")
Mar 10 22:47:20 <edrx>	e3d3: in the last days most of the changes were in the docs
Mar 10 22:47:42 <sham1>	TIL that describe-package exists, and is bound to C-h P
Mar 10 22:47:45 <e3d3>	edrx: I'm running/trying eev via `try' (only loads elisp), and just discover that I have the ELPA repo not enabled
Mar 10 22:48:04 <e3d3>	edrx: I only looked at the git commits
Mar 10 22:48:12 <edrx>	e3d3: what is try?
Mar 10 22:48:58 <e3d3>	Try out Emacs packages: https://github.com/larstvei/try  (describe-package 'try)
Mar 10 22:49:22 <edrx>	e3d3: and what package manager do you use? I have recipes for some packages managers...
Mar 10 22:49:43 <edrx>	thanks! let me try that in an emacs running in a fake home directory...
Mar 10 22:50:06 <e3d3>	edrx: I still use `package'
Mar 10 22:50:47 <edrx>	e3d3: the standard package.el that comes with emacs?
Mar 10 22:50:53 <e3d3>	edrx: yes
Mar 10 22:51:01 <edrx>	me too
**** BEGIN LOGGING AT Sun Mar 10 23:24:28 2024

Mar 10 23:24:27 *	Now talking on #emacs
Mar 10 23:24:27 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 10 23:24:27 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 10 23:26:42 <e3d3>	edrx: the link I got via "M-x kl" for a buffer like (describe-package 'eev) didn't jump back but opened a *Elisp Hyperlinks* buffer. I guess that here my additions for emacs help interfere: `helpful', `elisp-demo' and
Mar 10 23:26:55 <e3d3>	maybe more
Mar 10 23:27:53 <corwin>	reiayanami: wow, you'd think but I can't recall running across such a thing.
Mar 10 23:29:23 <e3d3>	edrx: trying it on a buffer from something like (describe-function 'eev-mode) gave an error that the buffer was not supported. Maybe this is also due to 'try'ing it.
Mar 10 23:29:49 <edrx>	here if I run (describe-package 'eev)
Mar 10 23:29:49 <edrx>	and then type M-x kl on the resulting buffer I get this message in the echo area: "Copied to the kill ring: (find-epackage-links 'eev)"
Mar 10 23:30:21 <edrx>	and M-x kl after (describe-function 'eev-mode)
Mar 10 23:30:41 <edrx>	gives the message "Copied to the kill ring: (find-efunction-links 'eev-mode)"
Mar 10 23:31:44 <edrx>	e3d3: is it easy to you to take screenshots and send links to them?
Mar 10 23:32:10 <e3d3>	edrx: not really
Mar 10 23:32:15 <edrx>	e3d3: aaah, let me show you something that I find very neat...
Mar 10 23:32:24 <edrx>	ok, let's forget the screenshots then
Mar 10 23:33:00 <e3d3>	edrx: I'm testing if it is due to trying to use it in org-mode, org src-blocks, org comment lines etc. Org is my main mode
Mar 10 23:34:25 <edrx>	if you run this (find-eev "eev-htests.el" "tests")
Mar 10 23:34:45 <e3d3>	edrx: opens the elisp file
Mar 10 23:35:02 <edrx>	you'll go to the file shown in the left window of this screenshot: https://i.ibb.co/C70BCn8/sshot.png
Mar 10 23:35:10 <e3d3>	edrx (find-epackage-links 'eev)
Mar 10 23:35:18 <e3d3>	opens the elisp-hyperlinks buffer
Mar 10 23:35:31 <edrx>	the region - in blue - shows my usual way of testing M-x kl
Mar 10 23:36:05 <edrx>	e3d3: yes - its line 9 contains this:
Mar 10 23:36:06 <edrx>	# (find-epackage 'eev)
Mar 10 23:36:36 <edrx>	that link goes to the (describe-package 'eev)
Mar 10 23:36:37 <edrx>	buffer
Mar 10 23:37:30 <edrx>	I thought that in that case making M-x kl generate (find-epackage-links 'eev)
Mar 10 23:37:45 <edrx>	was more useful than making it generate (find-epackage 'eev)
Mar 10 23:38:54 <edrx>	same for (find-efunctiondescr 'eev-mode)
Mar 10 23:39:16 <edrx>	M-x kl there generates (find-efunction-links 'eev-mode)
Mar 10 23:39:25 <edrx>	instead of (find-efunctiondescr 'eev-mode)
Mar 10 23:40:28 <edrx>	btw, compare
Mar 10 23:40:29 <edrx>	(find-efunctiondescr 'eev-mode)
Mar 10 23:40:45 <edrx>	with (describe-function 'eev-mode)
Mar 10 23:41:15 <edrx>	the `describe-function' has a return value that takes many lines in the echo area
Mar 10 23:42:03 <e3d3>	edrx: eev requires some effort to start. The amount of links with still unknown commands is overwhelming for me, makes it very hard to focus and recognise what I need, or where I am. So I be even slower than normal to answer, try etc.
Mar 10 23:42:20 <edrx>	the rationale is here: (find-eval-intro "4. Elisp hyperlinks")
Mar 10 23:42:48 <edrx>	e3d3: oops, sorry - I'm not expecting you to answer in real time =/
Mar 10 23:43:42 <edrx>	(and I'm also not expecting that you will try everything that I say)
Mar 10 23:46:02 <e3d3>	edrx: the eev intro is nice, and maybe even great with a those smart links, but as soon as I see buffers that contain only eev code than I quickly become disoriented and need to rewind again. Same for some of the video's I downloaded. So I really need to take my time to experience the eev method.
Mar 10 23:46:20 <edrx>	...an htmlized version of the rationale is here: http://anggtwu.net/eev-intros/find-eval-intro.html#4
Mar 10 23:46:41 <edrx>	e3d3: sure!
Mar 10 23:48:21 <edrx>	e3d3: when I ask questions on IRC channels usually at least 90% of the answers are infos that I don't understand but that I save to reread later - some day, hopefully, etc... same for manuals, other docs, source code, etc
Mar 10 23:48:47 <e3d3>	edrx: is that the same version as included with eev install ? And do you mind if I replace 'try' with a normal install of eev via `package-install' ? With `company-mode' disabled the input issue in the rcirc buffer didn't repeat so far.
Mar 10 23:48:51 <edrx>	I'm doing the same
Mar 10 23:49:20 <wasamasa>	I do wonder
Mar 10 23:49:32 <wasamasa>	isn't it about time for eev to promote itself all over emacswiki
Mar 10 23:49:40 <wasamasa>	or for hyperbole or anything else with a big scope
Mar 10 23:50:39 <corwin>	I can't say much as there's much more of the Windows build junk I should add/fix there, still.  But yea, that'd be swell.
Mar 10 23:50:51 <edrx>	e3d3: if eev is interfering with other packages then the best way is to just "install" it, in this sense:
Mar 10 23:50:53 <edrx>	(find-eev-levels-intro "1. Installing")
Mar 10 23:50:53 <edrx>	http://anggtwu.net/eev-intros/find-eev-levels-intro.html#1
Mar 10 23:51:16 <edrx>	wasamasa: I think that I need more self-esteem before doing that =/
Mar 10 23:51:36 <wasamasa>	I'm mostly joking since that's what icicles did on emacswiki
Mar 10 23:52:10 <edrx>	wasamasa: I remember vaguely seeing mentions to icicles everywhere there...
Mar 10 23:52:12 <corwin>	Let other's ability to summarily revert your changes lead you to boldness!
Mar 10 23:52:54 <wasamasa>	yeah, it was wild how one could basically not run into it
Mar 10 23:53:20 <edrx>	e3d3: in more details: the best way is to install it with (package-vc-install "https://github.com/edrx/eev")
Mar 10 23:53:43 <edrx>	e3d3: and run M-x eev-beginner when you want to use it
Mar 10 23:54:41 <edrx>	e3d3: I don't know that are the standard ways to run git-pull on packages installed with package-vc-install, but I'm using this with a friend:
Mar 10 23:55:07 <e3d3>	edrx: just installed it via package-install, got no warnings
Mar 10 23:55:12 <pkal>	edrx: Do you mean "package-vc-upgrade"?
Mar 10 23:55:35 <pkal>	That updates the checkout and rebuilds it
Mar 10 23:55:39 <edrx>	pkal: possibly!
Mar 10 23:56:03 <edrx>	e3d3: (find-eev-reload-links)
Mar 10 23:56:54 <e3d3>	edrx: done; I see the elisp hyperlinks buffer again, but in a much more human readable format
Mar 10 23:57:21 <edrx>	e3d3: with?
Mar 10 23:58:40 <e3d3>	some starred lines, shell commands and common lisp code
Mar 10 23:59:19 <e3d3>	I mean elisp, not common lisp
Mar 11 00:00:32 <e3d3>	edrx: btw I don't use/have git
Mar 11 00:02:07 <e3d3>	besides for nagging developers when my yaks are grazing :)
Mar 11 00:04:40 <edrx>	e3d3: don't use AND don't have?
Mar 11 00:04:48 <edrx>	e3d3: what OS/distro?
Mar 11 00:04:54 <e3d3>	antiX
Mar 11 00:05:46 <e3d3>	edrx: what about the "don't use/have" ?
Mar 11 00:06:53 <edrx>	e3d3: I know relatively little git, but I thought that nowadays it would be very rare to not have it installed...
Mar 11 00:07:25 <e3d3>	edrx: I'm not so main stream. I also don't have a video player installed
Mar 11 00:08:19 <edrx>	pkal: I'm using something much more low-level than package-vc-upgrade with a friend... (screenshot soon)
Mar 11 00:08:33 <edrx>	e3d3: you have wget, right?
Mar 11 00:09:02 <e3d3>	edrx: yes I use wget instead
Mar 11 00:10:12 <e3d3>	or I download files in a GUI browser
Mar 11 00:11:02 <edrx>	e3d3: in my machine `find-angg' and `find-es' point to certain local directories, but if you run M-x find-angg you will get a message explaining how you can redefine find-angg and find-es to make them use find-wget to access the public copies of my files in my webpage
Mar 11 00:12:42 <edrx>	e3d3: run the three defuns here: https://0x0.st/Hh1_.txt
Mar 11 00:12:46 <e3d3>	edrx: does eev need that access ?
Mar 11 00:12:57 <edrx>	e3d3: access to what?
Mar 11 00:13:18 <e3d3>	the public copies of my files in my webpage, like you said above
Mar 11 00:13:31 <e3d3>	my = your
Mar 11 00:13:41 <edrx>	"need" no
Mar 11 00:13:54 <edrx>	but it's a fun feature
Mar 11 00:14:45 <edrx>	e3d3: it is explained here: http://anggtwu.net/eev-maxima.html#find-angg-es-links
Mar 11 00:15:12 <reiayanami>	corwin: What do you think would be needed for my hypothetical eww previewer? Not much I imagine, just interpret the html/css code block with eww
Mar 11 00:15:28 <e3d3>	okay. I'm normally most of the time offline and prefer to see most of what I download before I download it, but still make a lot of exceptions.
Mar 11 00:16:08 <edrx>	e3d3: you're going to be online for the next 5 minutes, I guess
Mar 11 00:16:31 <edrx>	e3d3: find-wget, find-angg and find-es don't save anything that they download
Mar 11 00:16:59 <e3d3>	edrx: ?
Mar 11 00:17:09 <e3d3>	not to /tmp
Mar 11 00:17:10 <edrx>	e3d3: I hate when programs download files without telling me all the steps of what they are doing, so eev never does that
Mar 11 00:17:19 <edrx>	e3d3: no, not even to /tmp
Mar 11 00:18:12 <edrx>	e3d3: try this: (find-wgeta-elisp "http://anggtwu.net/eev-current/eev-plinks.el" "find-wget")
Mar 11 00:18:23 <e3d3>	edrx: doesn't matter much. My real point is that I try to trust & use nothing unless proven okay
Mar 11 00:19:05 <e3d3>	edrx: including no stuff that only resides in temporary memory
Mar 11 00:19:08 <reiayanami>	corwin: M-x browse-url-of-buffer can render C-c ' code block, but it doesn't open it in eww
**** BEGIN LOGGING AT Mon Mar 11 00:20:37 2024

Mar 11 00:20:36 *	Now talking on #emacs
Mar 11 00:20:36 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 11 00:20:36 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 11 00:21:19 <e3d3>	edrx: Its huge :)
Mar 11 00:21:54 <edrx>	e3d3: what are your limits? is this ok for you?
Mar 11 00:22:01 <edrx>	lynx http://anggtwu.net/
Mar 11 00:22:03 <e3d3>	edrx: Maybe I invoke wget once or twice a year by myself, but allow it many times in scripts etc.
Mar 11 00:22:15 <edrx>	that will use some temporary memory
Mar 11 00:23:03 <edrx>	e3d3: is this ok for you? (find-eevsh "ls -lAF")
**** BEGIN LOGGING AT Mon Mar 11 00:24:22 2024

Mar 11 00:24:21 *	Now talking on #emacs
Mar 11 00:24:21 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 11 00:24:21 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 11 00:24:29 <edrx>	e3d3: and you avoid functions whose source code is, say, more than 30 lines?
Mar 11 00:24:30 <e3d3>	Recently I started using more links with elisp or shell commands, for example (info "(elisp) Top") instead of [[info:elisp#Top]] but I don't want to add things that are not meaningful outside emacs.
Mar 11 00:24:50 <edrx>	"add" to what?
Mar 11 00:25:57 <corwin>	reiayanami: neat, thank.  maybe I'll try creating a function that let binds that around the call and to add a "Show in eww" option (in addition to O for open in browser) for exporting HTML.
Mar 11 00:26:12 <edrx>	e3d3: are you ok with putting elisp hyperlinks in your notes? then your notes will have parts that don't work outside of emacs...
Mar 11 00:26:14 <e3d3>	edrx: I'm a bad hobby-programmer and prefer short but still understandable. How much I invest in understanding depends on the need for it.
Mar 11 00:26:35 <reiayanami>	corwin: Yeah I'm thinking something similar. I'm programming in NextJS, and I'd like to offer a front-end that is dead simple for those of us using eww / gemini protocol.
Mar 11 00:26:41 <wasamasa>	lulz: https://github.com/douo/magit-gptcommit
Mar 11 00:26:58 <wasamasa>	"I see you're writing a commit, would you like some help with that?"
Mar 11 00:27:15 <e3d3>	edrx: adding elisp to my notes is okay as long as I think I will understand without too much effort, if I abandon emacs etc.
Mar 11 00:27:34 <reiayanami>	wasamasa: give to to the jrs... or me after 12 hours. better than "add"
Mar 11 00:27:53 <edrx>	e3d3: please tell me if this makes sense to you:
Mar 11 00:28:01 <edrx>	(defun find-wget00 (url) (find-callprocess00 `(,ee-wget-program "-q" "-O" "-" ,url)))
Mar 11 00:28:12 <wasamasa>	I still find it hilarious how readily people abandon any illusion of engineering
Mar 11 00:28:16 <reiayanami>	I wrote a hook to automatically pull up git commit after my emacs config was changed. This had all manner of bugs and did not work as intended
Mar 11 00:28:52 <wasamasa>	it's even funnier when people write papers about this trying to justify how it's still engineering if you use an auto-generated commit message
Mar 11 00:28:54 <e3d3>	edrx: yes a command to invoke wget, via an eev process function
Mar 11 00:29:40 <edrx>	e3d3: yes - it calls wget asking it to output to stdout the contents of a page and retuns that contents as a string
Mar 11 00:29:51 <corwin>	Recent behavioral analysis concludes most mad science lacks proper controls and analytical rigor and is, at best, mad engineering.
Mar 11 00:30:05 <edrx>	e3d3: find-wget uses that and shows the result in a temporary buffer
Mar 11 00:30:12 <reiayanami>	Is there a keyboard shortcut to go to the next HTML element in eww? I have eww-next-link but I'm trying to jump from the headline to the text input to the text submit button
Mar 11 00:30:39 <e3d3>	edrx: but I'm afraid that understanding it requires searching maybe gone eev documention instead of only still available elisp documentation
Mar 11 00:31:03 <e3d3>	edrx: in the future, in the afterlive without emacs
Mar 11 00:34:00 <corwin>	New python and c treesitter DLLs on my site, just now.  That makes seven packages that updated today; I wonder if there's a breaking change to tree-sitter, itself.
Mar 11 00:35:22 <e3d3>	edrx: but for the same and more reasons am I interested in eev. To decrease my org dependency, trying different ways of literal programming.
Mar 11 00:36:21 *	e3d3 \o/ coffee
Mar 11 00:37:04 <edrx>	e3d3: I got disconnected =(
Mar 11 00:37:10 <edrx>	e3d3: my last messages are here: https://0x0.st/Hh1v.txt
Mar 11 00:37:47 <e3d3>	edrx: my last line was: but for the same and more reasons am I interested in eev. To decrease my org dependency, trying different ways of literal programming. Then I saw that you're gone and yelled \o/ coffee.
Mar 11 00:38:19 <edrx>	e3d3: thanks! I didn't receive it...
Mar 11 00:38:50 <e3d3>	edrx: It seems I got all your messages
Mar 11 00:40:21 <edrx>	you can get a local copy of (most of) my notes with: (find-wgetrecursive-links "http://anggtwu.net/e/")
Mar 11 00:40:42 <edrx>	it doesn't download anything by itself, it just shows a temporary buffer
Mar 11 00:40:46 <e3d3>	wasamasa: I really need to buy a battery powerd coffee machine. Do you get provision from .. parkside ?
Mar 11 00:43:34 <reiayanami>	i need provisions of caffeine. Does anyone here still drink bawls, considering trying it
Mar 11 00:44:43 <edrx>	reiayanami: drinks with guarana are quite common here (brazil)
Mar 11 00:44:46 <wasamasa>	e3d3: lol, no idea who that is
Mar 11 00:48:35 <reiayanami>	corwin: I'm liking this hyper minimal workflow. It keeps the html / css crap minimal and simplistic, gets rid of the bikeshedding and shiny object effect. It orients focus towards the middleware and backend which is where it matters
Mar 11 00:48:55 <e3d3>	wasamasa: np, if you don't have a nice deal I'll buy it online. I can't get it out of my head. Thanks :)
Mar 11 00:49:40 <corwin>	reiayanami: this speaks to me.
Mar 11 00:49:45 <reiayanami>	JohnGalt / grym: you online?
Mar 11 00:49:56 <codermattie>	reiayanami: yeah
Mar 11 00:50:36 <reiayanami>	codermattie: I'm working on trying something similar to what you did. When you said you have examples in org-mode as the tests, could you share a snippet with wgetpaste or something
Mar 11 00:51:49 <wasamasa>	e3d3: I merely have been forced to learn how to drill holes and such because I've moved places and my girlfriend insisted on having nicer lights
Mar 11 00:52:32 <e3d3>	wasamasa: so you can insist on her bringing coffee
Mar 11 00:53:22 <wasamasa>	you won't believe this one, but she also convinced me to get an electric coffee grinder rather than the manual one
Mar 11 00:53:38 <wasamasa>	because screw making coffee the hard way
Mar 11 00:54:58 <codermattie>	reiayanami: I have a script for starts to run tangle from the command line
Mar 11 00:55:21 <codermattie>	reiayanami: just a sec, my erc is down on this machine, have to use pastepipe
Mar 11 00:55:26 <e3d3>	wasamasa: I have the same battery packs, and taste for coffee as my DIY neighbors, and this seems one of the last things we miss in our tool box, beside a belt for coffee/pads, a grinder, milk & sugger, cookies
Mar 11 00:55:30 <wasamasa>	slowly, but surely, it's looking less and less like a bachelor's place
Mar 11 00:55:37 <reiayanami>	codermattie: Thanks
Mar 11 00:57:04 <technomancy>	high-quality burr grinders dropped in price by almost an order of magnitude over the past decade somehow
Mar 11 00:57:29 <e3d3>	wasamasa: I once said to a new girlfriend that moved in okay when she asked to redecorate the house, came back and laughed for at least 1 hour how I could have been so stupid, start liking it, and kept changing it for ever for her crazy ideas.
Mar 11 00:59:04 <Viking667>	'llo all.
Mar 11 00:59:15 <corwin>	hi Viking667
Mar 11 00:59:38 <Viking667>	Just a quick question for you matrix users, does ement work under 29.1? It's been a wee while since I fired that up.
Mar 11 00:59:39 <e3d3>	wasamasa: climbing up the roof with a mobile coffee machine could have saved my relation
Mar 11 01:00:19 <Viking667>	"Woe is us, I'm goi... huh? You've got coffee??"
Mar 11 01:00:20 <codermattie>	reiayanami: https://pastebin.com/MBCmiug1
Mar 11 01:00:40 <corwin>	Viking667: I'm not sure how much ement/#emacs cross-over there.  It might be worth using some other matrix client just to ask AP that in Matrix's #emacs.
Mar 11 01:01:09 <codermattie>	reiayanami: the idea is that you can run the test suite from the command line, with that script you can do so, so you edit the .org , and then from the command line update the test suite file, and run the tests
Mar 11 01:01:49 <codermattie>	reiayanami: it should be pretty efficient, and since it's CLI you can script it
Mar 11 01:02:04 <codermattie>	reiayanami: a simple Makefile would make it painless
Mar 11 01:02:09 <Viking667>	You could even run that from within emacs itself
Mar 11 01:02:38 <codermattie>	Viking667: I have massive workflow automation so I need both
Mar 11 01:02:42 <reiayanami>	codermattie: Thanks for the share, I was actually wondering more if you could just explain what you meant by having examples as the test code. I'm guessing what you meant is that the begin_example and end_example blocks contain the integration tests for the #+begin_src #+end_src codeblocks?
Mar 11 01:02:52 <codermattie>	yeah
Mar 11 01:03:01 <codermattie>	reiayanami: I might have an example
Mar 11 01:03:12 <reiayanami>	lol
Mar 11 01:03:20 <codermattie>	at least I got pastepipe installed though...
Mar 11 01:04:45 <codermattie>	I dont have any examples yet, I will create some
Mar 11 01:05:54 <codermattie>	reiayanami: Ill get back at you later, I have a good project to start with
Mar 11 01:06:12 <reiayanami>	codermattie: It's cool, IRC moves slow so no worries
Mar 11 01:07:07 <codermattie>	reiayanami: Im trying to get a workflow to build docker images out of python stuff
Mar 11 01:08:00 <reiayanami>	codermattie: I have some experience with docker, let me know more specifics when you're ready
Mar 11 01:08:43 <RickAstley>	fixed username
Mar 11 01:09:19 <codermattie>	RickAstley: Thanks for the kind offer!
Mar 11 01:10:18 <RickAstley>	codermattie: np :^)
Mar 11 01:12:54 <Viking667>	corwin: and I wasn't strictly asking about whether #emacs was mirrored on matrix (it's not). I was just asking if ement worked well (enough) under 29.x to use regularly.
Mar 11 01:13:14 <Viking667>	And yes, there are probably better clients to use, such as non-Emacs clients.
Mar 11 01:13:55 <codermattie>	man, eyedrops are a coder's best friend :)
Mar 11 01:14:19 <corwin>	Viking667: I got your point; sorry if my comment was unclear.  I mean only to say that I seem to see more matrix related questions go unanswered in her than otherwise.
Mar 11 01:21:30 <e3d3>	edrx: only to inform: "M-x kl" doesn't work with https://github.com/lewang/le_emacs_libs/blob/master/keep-buffers.el That is: `kl' kills its protected buffers.
Mar 11 01:21:42 <e3d3>	edrx: I'm going to part IRC but have 2 little questions: 1) Does eev shell terminal has some elisp features in it, like emacs eshell, shell etc. ? 2) can M-e replace C-x C-e completely ?
Mar 11 01:25:31 <RickAstley>	anyone have tips on managing tangle locations in org-mode source code blocks. Ideally I'd like the :tangle stuff to have some kind of company-mode autocomplete maybe integrated with projectile so I can tab through common codebases
Mar 11 01:25:53 <RickAstley>	Or maybe I'm thinking of :export ...
Mar 11 01:28:45 <bremner>	RickAstley: I suspect tangle. export is about documents (pdf, html)
Mar 11 01:30:19 <RickAstley>	bremner: yeah I'm pretty sure that's right, wonder if there's company mode for babel especially tangle directories for the project directories
Mar 11 01:30:51 <bremner>	melpa is large, my knowledge is small
Mar 11 01:31:10 <RickAstley>	:)
Mar 11 01:49:46 <Viking667>	corwin: cool, thank you for that clarification. Settling in okay here, some paintings up on wall, some tables put where we need them. Computer room's a PITA for zoombuggy to get into/out-of.
Mar 11 01:50:50 <Viking667>	Old fence is out, new fence is going in. Waiting on quotes for driveway to replace the one we've got, as it's also a PITA for a wheelchair to deal with.
Mar 11 01:51:27 <Viking667>	aaaaanyhow, gotta go do stuff.
Mar 11 01:53:35 <quiliro`>	I have asked here before.  But wonder if any newcommers have been able to automatically add visited channels to the autojoin list in erc
Mar 11 01:54:22 <Viking667>	"automatically"? Or "manual, with autojoin after you set each channel"?
Mar 11 01:55:40 <Viking667>	If it's the latter, erc-autojoin-channels-alist seems to be altered by joining a channel.
**** BEGIN LOGGING AT Mon Mar 11 01:59:29 2024

Mar 11 01:59:28 *	Now talking on #emacs
Mar 11 01:59:28 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 11 01:59:28 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 11 02:00:05 <Viking667>	I found it with M-x customize-group RET erc RET
Mar 11 02:00:23 <Viking667>	then wandered down to erc-autojoin
Mar 11 02:01:01 <quiliro>	 it is not a variable; it is a group
Mar 11 02:01:14 <Viking667>	yes.
Mar 11 02:01:38 <Viking667>	but the erc-autojoin-mode is a var, as far as I can tell.
Mar 11 02:01:43 <quiliro>	the variable `erc-autojoin-mode' is true
Mar 11 02:03:20 <Viking667>	Okay, so that means that on your first join, erc should check the erc-autojoin-channels-alist and join those channels. After you join, you joining channels is tracked by that var somehow, I don't know how. C-h v erc-autojoin-channels-alist seems to have some details in that last paragraph.
Mar 11 02:15:40 <earthToAdam>	I am trying to use (widen) within (save-excursion (save-restriction ...)) so that helm can search the entire buffer (behind the scenes). But the save- commands are just being ignored. Here is a pastebin https://pastebin.com/GgWmzcaZ
Mar 11 02:15:49 <earthToAdam>	Any idea what I might be doing wrong?
Mar 11 02:17:38 <earthToAdam>	So the idea is, I have an org-mode buffer, which is narrowed to a subtree. I then run my helm command, to pull up a list of all headers in the buffer. helm needs (widen) so it can see everything to build the list. But, I would like this widening to be invisible. And for some reason, the save- commands are not working.
Mar 11 02:19:10 <Viking667>	Can't help with helm, I don't use it.
Mar 11 02:25:29 <earthToAdam>	No worries. Someone in here must.
Mar 11 02:37:12 <bdunahu>	quiliro`: do you mean you don't want to have to update erc-autojoin-channels-alist manually?
Mar 11 02:39:09 <bdunahu>	there is the erc-join-hook and erc-part-hook, I would if you could run a function to append to that list somehow?
Mar 11 02:46:37 <quiliro`>	I remember it used to do it automatically
Mar 11 02:46:51 <quiliro`>	I erased the variable
Mar 11 02:47:03 <quiliro`>	to nil
Mar 11 02:47:13 <quiliro`>	the autojoin list
**** BEGIN LOGGING AT Mon Mar 11 05:24:02 2024

Mar 11 05:24:01 *	Now talking on #emacs
Mar 11 05:24:01 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 11 05:24:01 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
**** BEGIN LOGGING AT Mon Mar 11 06:07:45 2024

Mar 11 06:07:44 *	Now talking on #emacs
Mar 11 06:07:44 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 11 06:07:44 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 11 06:18:12 <twb>	Let's replace first-level tech support with an LLM and see if anyone EVEN NOTICES
Mar 11 06:27:12 <bpalmer>	rudybot: Don't say a word. I'd like to talk to your manager.
Mar 11 06:27:13 <rudybot>	bpalmer: "Emacs is a word processor, a mail client, a todo-list, a chat client, an integrated development environment, a desktop window manager, a web browser … " <- I gave an equivalent of this talk where I added "sociopolitical statement" to this list =)
Mar 11 06:27:28 <bpalmer>	never mind, I don't want to talk to that manager.
Mar 11 06:28:36 <sham1>	I wonder if one was to add that ramble onto one's CV or whatever, whether it'd give you better or worse odds of getting a job
Mar 11 06:31:36 <bpalmer>	I suppose it depends on the rest of the cover letter.
Mar 11 06:34:33 <bpalmer>	huh. Florida banned "woke meat" last year (that is, apparently, food products cultivated in a laboratory from animal cells)
Mar 11 06:40:16 <bpalmer>	Tron: Ares will be the sequel to Tron: Legacy, which might be the most exciting film in the 2000s to feature emacs on screen.
Mar 11 07:00:18 <dcb>	and yet, no sequel to Tron 2.0
Mar 11 07:15:05 <bpalmer>	Let's vote in a lenient MCP who won't clamp down as strictly as some.
Mar 11 07:15:45 <bpalmer>	wow, Tron 2.0 had the real film voice actors.
Mar 11 07:16:13 *	bpalmer hadn't known this game existed.
Mar 11 07:23:58 <texnomancy_>	I thought woke meat meant it was sentient
Mar 11 07:27:28 <dcb>	I started to like its gameplay only after finishing it for the third time
Mar 11 07:31:07 <twb>	bpalmer: but it's still legal to hunt slaves and irishmen for *sport*, right?
Mar 11 07:31:17 <twb>	bpalmer: you just can't eat them after
Mar 11 07:59:39 <bpalmer>	the most dangerous game crossover
Mar 11 08:10:33 <twb>	What's the most "valuable" copyright / IP that's still owned by an individual human?
Mar 11 08:10:59 <twb>	I'm guessing harry potter
Mar 11 08:12:47 <bpalmer>	Do you consider the Tolkien estate "owned by an individual human" or not?
Mar 11 08:12:59 <twb>	That's an estate, innit?
Mar 11 08:13:01 <bpalmer>	The Tolkien world is not a work-for-hire, but the human is no longer living.
Mar 11 08:13:22 <twb>	"owned" in the sense of who you have to buy copyrights from
Mar 11 08:13:29 <twb>	not "owned" in the sense of moral rights
Mar 11 08:14:06 <bpalmer>	Well ,now it's owned by a trust or company; except that 'Exclusive worldwide rights to motion picture, merchandising, stage and other rights in certain literary works of J. R. R. Tolkien including The Hobbit and The Lord of the Rings were sold by Tolkien himself to United Artists in 1969'
Mar 11 08:15:01 <bpalmer>	at any rate, probably books and literary productions are the most common intellectual product not produced as work-for-hire , so certainly Tolkien's and Rowling's works are up there.
Mar 11 08:15:17 <twb>	You seem to be saying that in some way, some of Tolkien's works are copyrighted by a specific human -- which one?
Mar 11 08:15:35 <twb>	Who *created* the work is irrelevant, it's just a question of who has the rights now
Mar 11 08:15:38 <bpalmer>	Stephen King has more intellectual property available , so it's a matter of whether many lesser valued works can collectively overweigh a larger work
Mar 11 08:16:25 <bpalmer>	JRR Tolkien owned the copyright to all of his works.
Mar 11 08:17:23 <twb>	*owned*, not *owns*
Mar 11 08:22:08 <johnjaye>	I've been looking into the D language a bit and it fixes a lot of oddities in C
Mar 11 08:22:17 <johnjaye>	so why don't we just dump C and use D
Mar 11 08:22:39 <johnjaye>	like you can do signed overflow and it's not marked as "undefined behavior"
Mar 11 08:22:43 <johnjaye>	and you can detect it as well
Mar 11 08:24:35 <bkhl>	The creators of D thinks we should "just" do that: https://dlang.org/spec/betterc.html
Mar 11 08:28:00 <twb>	inertia
Mar 11 08:28:34 <bpalmer>	if you're doing betterC , you're still not getting all the advantages of D
Mar 11 08:29:15 <twb>	If your problem is "C is bad" then either fix C or use something entirely better, not just a hard fork
Mar 11 08:29:16 <bkhl>	No, but you can use it for some low level programming that's otherwise not possible.
Mar 11 08:29:43 <twb>	I mean... surely C2x fixes a lot of shit that was in C89
Mar 11 08:29:50 <bkhl>	So a lot more achievable to use for stuff like firmware/kernel programming right now, as opposed to other popular memory safe languages.
Mar 11 08:29:54 <bpalmer>	that's going to be a tough sell: "we're moving to a newer, bigger house with a flowering backyard, and a chain link fence letting you see a big swimming pool and every playground equipment available, but don't you go climbing that fence!"
Mar 11 08:31:25 <johnjaye>	Just from a day of looking over it and writing hello world I am confident it's better than C.
Mar 11 08:31:26 <bkhl>	OTOH you do get some big advantages still like macros instead of C preprocessor.
Mar 11 08:32:22 <bkhl>	johnjaye: I also played around with it at some point and really like it, but like bpalmer thinks it's not obvious how they would convince the world that it's worth the switch.
Mar 11 08:32:49 <bkhl>	Maybe more realistic to keep pushing for features inspired by D (and other languages with more memory safety) into C.
Mar 11 08:33:15 <twb>	I feel like if D was a good choice it would've been adopted 20 years ago
Mar 11 08:33:28 <twb>	It'd have been as popular then as rust is now
Mar 11 08:33:46 <twb>	or C++ and ObjC for the people with that particular kind of brain damage
Mar 11 08:34:52 <johnjaye>	well not necessarily. C has so much infrastructure that it's got the intertia factor
Mar 11 08:35:02 <bkhl>	I don't think that's necessarily so, various languages and features have gained popularity after being niche for long periods of time.
Mar 11 08:35:14 <johnjaye>	The only reason i think Rust is making inroads is Mozilla has corporate backing it.
Mar 11 08:35:25 <bkhl>	I say that as someone that was into Python 1-2 decades before it exploded.
Mar 11 08:35:43 <tazjin>	nobody seems to actually use D
Mar 11 08:35:51 <johnjaye>	 why did it explode
Mar 11 08:35:54 <tazjin>	I know more people using Common Lisp to earn money than D
Mar 11 08:36:15 <tazjin>	met a guy at a party who used D in a startup and he said it looked nice on paper, but in practice lots of things didn't work and the standard library was wonky
Mar 11 08:36:48 <bkhl>	johnjaye: it had a few different boosts, first with e.g. Django, and then later (much bigger) with Numpy/Pytorch/etc.
Mar 11 08:36:59 <vuori>	That was my impression of D too when I considered it for something
Mar 11 08:37:24 <bkhl>	Basically it became a popular language for using certain libraries that had a lot of hype, a few times in different domains.
Mar 11 08:37:27 <johnjaye>	oh that would suck. i was looking for something like "C but without the preprocessor but with generics and lambdas and optional memory safety and also not a list of Undefined Behavior 200 entries long"
Mar 11 08:37:31 <johnjaye>	D seems to be very close to this
Mar 11 08:38:18 <johnjaye>	bkhl: that fits my completely rudimentary pleb view of python so nice to know it is actually true
Mar 11 08:38:26 <johnjaye>	people just like it because muh pytorch.
Mar 11 08:38:39 <tazjin>	johnjaye: why not just, and hear me out here
Mar 11 08:38:40 <tazjin>	java
Mar 11 08:38:41 <bkhl>	The really big boom was when the various numeric/statistical tools became popular to use in it.
Mar 11 08:38:48 <tazjin>	java is pretty good actually :p
Mar 11 08:38:57 <bkhl>	Probably a relatively easy path is to make it big in academia for something like that.
Mar 11 08:39:26 <johnjaye>	i just want C but without stupid undefined behavior basically
Mar 11 08:39:26 <bkhl>	Like D I could imagine getting a boost like that if it could replace the stuff where usually people use C++ or Fortran in academia now.
Mar 11 08:40:03 <bkhl>	So basically what people do with with Python+Numpy but without the slow "frontend" but ideally equal convenience.
Mar 11 08:40:12 <johnjaye>	yeah the problem with C++ is that objects are overrated. but java is too rigid about forcing you to use objects all the time for no reason
Mar 11 08:40:40 <johnjaye>	er i mean java objects are overrated.
Mar 11 08:40:47 <bkhl>	D has an advantage I think there because if you use it for "trivial" things it can feel a lot like 'fast Python'
Mar 11 08:40:57 <johnjaye>	c++ has super complicated layers of template metaprogramming. which to be fair D has operator overloading so it's not perfect
Mar 11 08:41:17 <johnjaye>	is it like that static python where you type everything.
Mar 11 08:44:06 <bkhl>	johnjaye: that's the type of stuff I've seen a bunch of in "mathy" academic C++ programs. D has templates too but they are much nicer to use.
Mar 11 08:44:35 <vuori>	Apropos of the current crop of C alternatives, this just scrolled by: https://tech.lgbt/@fay59/112073961841740378 . I haven't had a lot of need to do things at the "systems programming" level recently, but trying out Rust and such at a hobby level has been pretty effectively de-emphasized for me by this style of holier-than-thou advocacy
Mar 11 08:45:05 <bkhl>	johnjaye: not really, D has implicity typing in a lot of places.
Mar 11 08:45:55 <bkhl>	or type inferrence I should say.
Mar 11 08:48:50 <APic>	Good Morning!
Mar 11 08:48:53 <APic>	,BotSnack
Mar 11 08:48:54 *	fsbot beams
Mar 11 08:57:58 <bpalmer>	kotlin may have gotten big enough that it's worth looking at that instead of java.
Mar 11 08:58:18 <jdek>	I like C :(
Mar 11 08:58:43 <bpalmer>	as it's java-esque but doesn't make you put everything into a class. (See, e.g., the "Simple" tab at https://kotlinlang.org/ )
Mar 11 08:59:45 <bpalmer>	If I were going to be writing programs for android, that's probably a language I would try to pick up as that seems to have become semi-official
Mar 11 09:00:01 <bpalmer>	(in the same way that swift became viable to compete with objective C)
Mar 11 09:01:22 <bkhl>	Java 21 has this stuff: https://openjdk.org/jeps/445
Mar 11 09:02:20 <bpalmer>	interesting, I hadn't been following the changes.
Mar 11 09:06:46 <zenny>	Hi, asking again, I am trying to create a list like in https://termbin.com/yel6. How can one sort the ordered list alphabetically in such a way that only the subitems and sub-sub-items are only assigned an ordered list numbers? Appreciate any input. Thanks
Mar 11 09:08:59 <corwin>	If you don't end up getting suggestions here you might email help-gnu-emacs@gnu.org (which is the users' list, for general questions). You don't need to be subscribed (although you might need to watch the archive if you aren't; sometimes people like to reply without CCing, sending back to the list only).
Mar 11 09:50:38 <Viking667>	hm, that's interesting. Autojoin works.
Mar 11 09:59:45 <Viking667>	time I went and played a game, I guess.
Mar 11 10:59:21 <angry_vincent>	i want to use this: https://www.emacswiki.org/emacs/EbuildMode, https://gitweb.gentoo.org/proj/ebuild-mode.git/tree/. But for some reasons, i do not use gentoo distribution. where my emacs is but i do deal with ebuilds on remote machine which is gentoo derivative. how do i use ebuild mode on my emacs, then? i know that i can grab *.el files into .elisp dir but that's the only thing i know. nothing about how to configure and load them
Mar 11 11:09:02 <alcor>	angry_vincent: You might want to look into `package-install-file', passing it the tar.xz Archive for ebuild-mode
Mar 11 11:10:46 <alcor>	angry_vincent: That aside, I would expect the mode to work even on remote files via TRAMP. TRAMP is a powerful remote access facility that allows for comfortable editing of files on remote systems, and any locally-installed modes usually work on remote files just as well as they do on local files.
Mar 11 11:11:15 <angry_vincent>	i use tramp, yes
Mar 11 11:13:03 <alcor>	Try M-x package-install-file <RET> <path to the tarball for ebuild-mode>; That should install the elisp for the mode into your elisp load path.
Mar 11 11:16:16 <alcor>	If that does not work, you will have to add the *.el files to your elisp load path and load them manually. Xah Lee has a short guide on that on http://xahlee.info/emacs/emacs/emacs_installing_packages.html
**** BEGIN LOGGING AT Mon Mar 11 11:18:06 2024

Mar 11 11:18:05 *	Now talking on #emacs
Mar 11 11:18:05 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 11 11:18:05 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 11 11:31:35 <twb>	bpalmer: if you're writing for android don't you just make a web app because having to make native apps with different langauges and different toolkits is Too Hard
Mar 11 11:35:29 <amirny2205>	hi! what's the state of art between project.el and projectile? which one should I use? thanks
Mar 11 11:39:15 <zenny>	corwin: Thanks I write to the mailing list as you suggested. Cheers
Mar 11 11:42:06 <pkal>	amirny2205: project.el is built-in and does most of what you want.
Mar 11 11:43:33 <amirny2205>	pkal: thanks ; how does it compare to projectile? the info on the website might be outdated
Mar 11 11:44:38 <pkal>	what website?
Mar 11 11:44:57 <amirny2205>	https://docs.projectile.mx/projectile/projectile_vs_project.html
Mar 11 11:48:42 <pkal>	Highly biased, I'd say.  I haven't used projectile (horrible name btw) for a few years now, so I cannot really comment on the differences.  I've contributed to project.el and like the API.  Being built-in also means that more packages tend to make use of it, than with some third-party packages.
Mar 11 11:49:15 <amirny2205>	thanks pkal
Mar 11 11:49:55 <alcor>	project.el automatically detects git projects, which is what I usually want in 99% of all cases
Mar 11 11:53:01 <pkal>	In general, I'd recommend trying out built-in packages first.  If something is missing, it might be worth trying to implement it yourself (e.g. project didn't have project-compile, so I wrote a patch) or create a feature request.  It is usually not that difficult to extend the code, it's just that the maintainers didn't know about that use-case.
Mar 11 11:56:46 <jbe>	rudybot: what is the deal with airplane food? why would airplanes even need to eat?
Mar 11 11:56:47 <rudybot>	jbe: in the 70s, there were disaster movies about skyscrapers, airplanes and ships. but no one thought of making one with two or more of those elements– airplane crashing into a skyscraper, ship crashing into a skyscraper or airplane crashing into a skyscraper built on a ship
Mar 11 12:00:54 <jbe>	I suppose oil rigs are basically ship skyscrapers
Mar 11 12:45:04 <RickAstley>	my org-mode has been kind of borked for like a year and a half, the rendering for headlines and TODO entries just ... stops. I have to manually refresh the buffer. I've recompiled my entire OS, recompiled org-mode, deleted .emacs.d ... let me see if it's only in exwm or also effects -nw
Mar 11 12:46:35 <alcor>	Recompiling the whole OS to solve a rendering issue in org-mode seems a bit, well, drastic.
Mar 11 12:46:58 <RickAstley>	alcor: I use gentoo so it's a regular thing
Mar 11 12:47:12 <landgraf>	alcor: unless the whole OS is kernel+emacs :D
Mar 11 12:48:29 <alcor>	Isn't exwm just a window manager? It shouldn't affect buffer rendering in any way. A compositor *might* have some effect on that, but that is unlikely.
Mar 11 12:54:17 <RickAstley>	alcor: Yes, I just remember the problems began to start around that time. What I recall is it isn't exwm itself, but perspective-exwm, a package that allows using perspective.el across multiple monitors on exwm. Perhaps I no longer need this, as I've swapped the multi-monitors for a single 680x480 CRT
Mar 11 12:57:41 <alcor>	Ah, the real retro-computing experience.
Mar 11 13:07:35 <RickAstley>	I liked persp-exwm but it was kind of unstable, could never get perspectives to save either which kinda sucked. Nice being able to go back to vanilla persp, I'll see if the org mode is fixed for the next few hours
Mar 11 13:18:43 <RickAstley>	how do i go to the file at cursor in eamcs
Mar 11 13:18:46 <RickAstley>	magit*
Mar 11 13:19:33 <tazjin>	RickAstley: RET ?
Mar 11 13:19:59 <RickAstley>	tazjin: derp
Mar 11 13:20:06 <tazjin>	RickAstley: you're welcome
Mar 11 13:20:13 <RickAstley>	how to do it in another frame
Mar 11 13:21:45 <bpalmer>	twb: that's probably my preference, but there is something to be said for native UIs
Mar 11 13:22:08 <bpalmer>	or, at the very least, a toolkit like flutter that papers over things
Mar 11 13:22:17 <RickAstley>	Is there a way to get like a running list of all the called emacs commands
Mar 11 13:23:32 <bpalmer>	RickAstley: command-history isn't a complete list but a list of the commands that "read arguments from terminal" --  perhaps that's enough for you?
Mar 11 13:24:19 <RickAstley>	bpalmer: yes ty, would like to have this like a running tape somewhere. Anyway to add corresponding keybindings on the right side of the buffer?
Mar 11 13:27:23 <bpalmer>	RickAstley: you'd probably have to write something to automatically refresh a buffer displaying the variable
Mar 11 13:27:45 <bpalmer>	it wouldn't be hard (you could use an idle timer for this), but I don't know of anything that does it already
Mar 11 13:29:03 <RickAstley>	bpalmer: ty I'll bookmark this
Mar 11 13:30:27 <ndegruchy>	Gotta love when security tells you that your Windows-deployed copy of curl.exe is malware. 👏
Mar 11 13:31:30 <bremner>	maybe they mean Window
Mar 11 13:31:34 <e1f>	it is, from their point of view. they don't know where you dot it from
Mar 11 13:31:35 <bremner>	s
Mar 11 13:31:44 <e1f>	got*
Mar 11 13:32:03 <ndegruchy>	e1f: it comes with windows, since like 4 years ago
Mar 11 13:34:05 <e1f>	ah ok, i wasn't aware. you should mention it to them, then
Mar 11 13:34:41 <e1f>	their whitelist must be 5+ years old
Mar 11 13:35:15 <bremner>	keeping up with windows seems like IT's job?
Mar 11 13:35:30 <rpav>	heh is zap-to-char really so commonly used it deserves a toplevel binding
Mar 11 13:35:31 <ndegruchy>	I did. It's just comical that this big, "eNtErPrIsE" malware scanning tool doesn't have hashes for all the tools that are included in Windows
Mar 11 13:35:38 <bpalmer>	curl comes with windows? Is that actual curl, or a powershell alias like wget?
Mar 11 13:35:49 <ndegruchy>	actual, real deal curl
Mar 11 13:35:52 <spikemaster>	RickAstley: M-x view-lossage might be waht you want.
Mar 11 13:36:26 <ndegruchy>	bpalmer: https://curl.se/windows/microsoft.html
Mar 11 13:37:07 <e1f>	at this stage i suggest talking to your supervisor who can then talk to their supervisor
Mar 11 13:37:48 <ndegruchy>	I pointed out that the tool was built into windows for many years and that shut them up, but it came up again late last week
Mar 11 13:38:30 <e1f>	new guy hired
Mar 11 13:38:42 <rpav>	there's always the "it says my computer is infected with curl.exe! quick, check your computer!"
Mar 11 13:38:43 <ndegruchy>	Their nastygram also included a malware link trying to exploit an old issue in an old version of Notepad++ so their database has shit filtering for junk
Mar 11 13:38:43 <bpalmer>	RickAstley: something like (require 'cl-lib) (defun rickastley/refresh-command-history-buffer () (with-current-buffer (get-buffer-create "*Command history*") (erase-buffer) (cl-prettyprint command-history)))
Mar 11 13:39:14 <bpalmer>	RickAstley: and then (run-with-idle-timer 2 t 'rickastley/refresh-command-history-buffer)
Mar 11 13:39:22 <e1f>	i suggest asking him to check his computer too and he will find it's also infected
Mar 11 13:39:32 <bpalmer>	that will cause the buffer to be updated every 2 seconds. Then you just have to deal with putting it in a side window
Mar 11 13:39:59 <ndegruchy>	e1f: I would sincerely doubt that your average security team goon even /knows/ what curl is, let alone what it's used for
Mar 11 13:40:03 <bpalmer>	first came curved monitors, now come curly computers
Mar 11 13:40:26 <e1f>	ndegruchy: agreed, hence my suggestion
Mar 11 13:40:41 <ndegruchy>	I would be shocked that they even know how to use the command line, only seeing it as some scary black box thing
Mar 11 13:41:11 <bpalmer>	good thing command.exe is a blue box
Mar 11 13:41:34 <e1f>	they are essentially droids
Mar 11 13:41:49 <ndegruchy>	Most of the security goons I've had interaction with personally couldn't figure out the difference between an HDMI cord and a DisplayPort cord
Mar 11 13:41:49 <bpalmer>	you see purple unicorns?
Mar 11 13:43:27 *	ndegruchy wonders if he starts using Emacs on his work machine, what kind of flags would be going off
Mar 11 13:49:02 <RickAstley>	ci/cd for emacs config... If emacs -nw doesn't return error then merge to master?
Mar 11 13:51:19 <rpav>	RickAstley: there is --script .. does that not load your config
Mar 11 13:51:24 <rpav>	or --eval 'expr'
Mar 11 13:51:43 <rpav>	probably --script FILE running a bunch of checks would be decent though
Mar 11 13:52:14 <rpav>	...it doesn't load configs D:
Mar 11 13:53:37 <alcor>	Configs are elisp code. They can be loaded via `load' or `load-file'.
Mar 11 13:53:56 <rpav>	actually manually (load "~/.emacs.d/init.el") doesn't seem far off tough
Mar 11 13:54:25 <rpav>	alcor: yeah but emacs does a _lot_ of init and magical bs
Mar 11 13:59:36 <alcor>	iirc, most of that magic was related to finding the init file, and ensuring that early-init.el was loaded before the init.el
Mar 11 14:00:41 <alcor>	Emacs manual section 42.1.2 The Init File does not seem to suggest that loading the initfile is anything other than a `load' though.
Mar 11 14:02:53 <tazjin>	ndegruchy: your security goons don't seem to be very good at their job :p
Mar 11 14:03:07 <ndegruchy>	tazjin: understatement of the century
Mar 11 14:03:56 <alcor>	have you considered that their job might be gooning rather than security? :)
Mar 11 14:05:31 <ndegruchy>	ew
Mar 11 14:10:11 <e1f>	you can't argue with a security droid, hence my suggestion of the supervisor route
Mar 11 14:10:34 <e1f>	they are trained to ignore user-arguments
Mar 11 14:22:29 <bpalmer>	consider whether you want to talk to a supervisor, hypervisor, metavisor, controlvisor, or altvisor
Mar 11 14:25:33 <jbe>	what about the sousvisor?
Mar 11 14:29:35 <bpalmer>	no sous for you
Mar 11 14:34:34 <hodapp>	why's it lieutenant and not soustenant
Mar 11 14:35:30 <hodapp>	also the German word for janitor/custodian, 'Hausmeister', is like 9000% more dignified and badass
Mar 11 14:36:33 <jbe>	lieutenant is just a placeholder name
Mar 11 14:37:10 <bpalmer>	hey, New York has supers
Mar 11 14:37:23 <bpalmer>	Blame the rest of the US for not copying those yankees
Mar 11 14:40:59 <jbe>	who custodes the custodians
Mar 11 14:41:44 <rpav>	who barbs the barbers
Mar 11 14:42:02 <jbe>	though I guess etymologically janitor is related to Janus, the good of doors
Mar 11 14:42:07 <jbe>	god even
Mar 11 14:45:25 <hodapp>	whoa
Mar 11 14:45:30 <hodapp>	I knew about Janus but never considered that
Mar 11 14:45:35 <grym>	jan itor
Mar 11 14:45:40 <grym>	famed hospital staffer
Mar 11 14:45:54 <quiliro>	so germans have masters and USAans have a god for doors?
Mar 11 14:46:03 <grym>	"1580s, "an usher in a school," later "doorkeeper" (1620s), from Latin ianitor "doorkeeper, porter," from ianua "door, entrance, gate," from ianus "arched passageway, arcade" (see Janus) + agent suffix -tor. "
Mar 11 14:46:11 <hodapp>	I have some devices that handle RFID badge stuff at the makerspace and the ones that handle doors have hostnames janus & juno
Mar 11 14:46:44 <hodapp>	I decided that the one I'm doing now which handles a gate on a death-trap freight elevator from the 1900s should be called charon, as in the boatman to the underworld
Mar 11 14:46:54 <hodapp>	seemed appropriate given the elevator's status
Mar 11 14:47:12 <grym>	do you know any lienz cossacks
Mar 11 14:48:01 <rpav>	hodapp: haha, i can only imagine that in context of the inevitable liability suit
Mar 11 14:49:09 <hodapp>	>_>\
Mar 11 14:49:23 <rpav>	"'no one knew' the elevator was bad? the badge reader is literally called 'charon'!"
Mar 11 14:53:41 <bpalmer>	best character in the john wick universe
Mar 11 14:54:38 *	ndegruchy observes, with horror, that gnuplot litters his $HOME with a .gnuplot_history folder
Mar 11 15:07:59 <a51>	my C-x r d is highjacked how to know which setting is responsible ? I have to M-x delete-rectable to delete
Mar 11 15:09:56 <grym>	a51: C-h k C-x r d
Mar 11 15:13:15 <a51>	I wanted to know why C-x r d does not work, maybe in my settings C-h k C-x r d shows the doc, is it possible to know where in my settings it is used ?
Mar 11 15:14:14 <alcor>	a51: C-h k should show the function that key is bound to.
Mar 11 15:16:28 <grym>	(and therefore, what mode)
Mar 11 15:16:37 <a51>	it is worse becase C-x r deletes the whole line instead of rectangle
Mar 11 15:16:59 <grym>	C-h m and possibly ,,which-key are also going to be helpful
Mar 11 15:17:01 <fsbot>	Added note [2] for  term "which-key"
Mar 11 15:17:17 <grym>	,forget which-key 3
Mar 11 15:17:18 <fsbot>	err..[fsi-forget] Number should be "all" or lie between 0 and 2
Mar 11 15:17:24 <grym>	,forget which-key 2
Mar 11 15:17:27 <fsbot>	Forgot note 2 for term which-key: ["going to be helpful"]
Mar 11 15:18:02 <a51>	rect.el
Mar 11 15:19:40 <a51>	alcor: emacs -Q C-x r d works perfect
Mar 11 15:23:47 <Necktwi>	yep autojoin worked once i removed irc.
Mar 11 15:23:55 *	hodapp blinks
Mar 11 15:24:07 <hodapp>	an email just floated into my inbox telling me I was granted access to... an HPE Cray EX
Mar 11 15:24:18 <hodapp>	which is kinda weird since I... didn't ask for this
Mar 11 15:24:51 <alcor>	It might be a scam 🤷
Mar 11 15:25:39 <hodapp>	it came through the normal channels for the cluster I'm already on
Mar 11 15:26:21 <edrx>	rpav: I use zap-to-char several times a day
Mar 11 15:26:59 <rpav>	edrx: got any context? i can't imagine how i'd use it at all
Mar 11 15:29:30 <alcor>	I use M-z for removing until closing pairs delimiting characters - e.g. delete until the ")" or "}".
Mar 11 15:29:49 <alcor>	*or delimiting characters
Mar 11 15:29:55 <edrx>	rpav: usually to mark all characters until a specific delimiter... for example M-z : C-y
Mar 11 15:30:11 <grym>	recently i learned you can combine zap and avy
Mar 11 15:30:15 <edrx>	then the region will be everything until the next :
Mar 11 15:30:57 <rpav>	edrx: ah huh
Mar 11 15:31:23 <rpav>	alcor: that's what i usually use C-k and paredit for
Mar 11 15:33:29 <alcor>	rpav: You must mean C-M-k aka `kill-sexp' but `zap-to-char' is still useful for modes that aren't sexp/tree-aware
Mar 11 15:36:38 <rpav>	paredit-delete-line; i have it bound to C-k
Mar 11 15:38:27 <rpav>	although i think there's something that actually-actually kills to the end of the block, for multiline blocks, but i rarely do that or i'd bind it
Mar 11 15:39:18 <alcor>	`kill-paragraph' maybe? I'm aware it exists, but never used it.
Mar 11 15:40:06 <rpav>	dunno, if i really want i'd probably hold C-k until it got to the delimiter; usually i kill the entire block instead, or the end delimiter is a line or two away
Mar 11 15:44:11 <ndegruchy>	kill-sexp ?
Mar 11 15:45:36 <rpav>	i have that (actuall delete-sexp, which doesn't kill-ring it) on M-d
Mar 11 15:45:47 <alcor>	Yes, that (kill-sexp) kills the sexp at point. Starting from Emacs 28+, it also works for tree-sitter modes. In that case it kills the tree node at point.
Mar 11 15:47:54 *	ndegruchy didn't compile in tree-sitter
Mar 11 15:48:09 <quiliro>	why is the command called `zap-to-char' instead of `kill-to-char' ?
Mar 11 15:48:32 <bremner>	,hysterical
Mar 11 15:48:33 <fsbot>	Critical flame failure, flamethrower explodes, dousing bremner with napalm. bremner runs around screaming. bremner looks on and laughs.
Mar 11 15:48:38 <bremner>	ow
Mar 11 15:49:07 <bremner>	quiliro: in emacs kill usually implies it can be yanked
Mar 11 15:49:18 <quiliro>	oh!
Mar 11 15:49:26 <quiliro>	nice to know
Mar 11 15:50:01 <quiliro>	but the docstring says: Kill up to and including ARGth occurrence of CHAR.
Mar 11 15:50:15 <quiliro>	so it _is_ a kill
Mar 11 15:51:06 <ndegruchy>	Make a wrapper function or alias
Mar 11 15:51:14 <tazjin>	quiliro: zap sounds cool
Mar 11 15:51:14 <rpav>	it's emacs; consistency is a passing fancy
Mar 11 15:51:26 <ndegruchy>	there are so many weirdly named functions in emacs.
Mar 11 15:51:36 <quiliro>	and in fact, you can yank it!
Mar 11 15:52:02 <quiliro>	OK...sound like good explanations...
Mar 11 15:52:36 <quiliro>	zap...poom...bang!
Mar 11 15:52:39 <rpav>	i mean `kill` and `yank` alone are just like ??
Mar 11 15:52:39 <fsbot>	Highly likely!
Mar 11 15:52:55 <quiliro>	I remember the original batman tv series
Mar 11 15:53:02 <rpav>	obviously properly necromantic functions should be `kill` and `raise`
Mar 11 15:53:59 <ndegruchy>	and the kill ring would be a crypt
Mar 11 15:54:22 <quiliro>	very symbolic, yes
Mar 11 15:54:54 <quiliro>	symbols are very important to humans...they would be useful in emacs
Mar 11 15:55:25 <quiliro>	and easier for newbies
Mar 11 15:55:34 <rpav>	,(symbolp 'foo)
Mar 11 15:55:35 <fsbot>	t  ..(symbol)
Mar 11 15:55:59 <quiliro>	I have spent many years in emacs...and just now I understand more or less what zap really means
Mar 11 15:56:16 <quiliro>	I remember zapping in TV
Mar 11 15:56:24 <quiliro>	so I related it to that
Mar 11 15:56:55 <quiliro>	but now I see, it could mean that...but more specifically is just a plain old kill
Mar 11 15:57:29 <quiliro>	or cut/copy (for a more symbolic name)
Mar 11 16:00:30 <quiliro>	there is only `zap-to-char' and `zap-up-to-char' with the word char in the available functions for my emacs
Mar 11 16:02:09 <quiliro>	wouldn't the former be better renamed to `kill-to-char' and created an alias named `zap-to-char' ?
Mar 11 16:02:36 <quiliro>	(and the later, similarly)
Mar 11 16:06:16 *	ndegruchy forgot how good Restclient.el is
Mar 11 16:15:37 <lechner>	Hi, how may I activate ini-generic-mode, please?     https://www.emacswiki.org/emacs/IniMode
Mar 11 16:15:44 <rpav>	ugh, spending an hour trying to track down a problem fixed by rebooting
Mar 11 16:19:09 <rpav>	(that is, an issue apparently caused by extended uptime.. vram fragmentation seems likely)
Mar 11 16:19:43 <rpav>	lechner: huh, the page claims it's bundled, but i don't have it
Mar 11 16:20:43 <rpav>	opening test.ini opens it in conf-mode; i'm not sure if this is suitable or not
Mar 11 16:25:11 <lechner>	rpav / Yeah, thanks for checking! I also could not find it.
Mar 11 16:42:30 <grym>	,zap
Mar 11 16:42:31 <fsbot>	try:  zap-to-char zap-to-regexp zap-up-to-char zapata zaphod zappa-emacs-fix zappa-fix ZapToChar ZapToCharUsage ZapToISearch zaptoregexp ZapUpToChar
Mar 11 16:42:36 <grym>	,zappa-fix
Mar 11 16:42:37 <fsbot>	Shut up and play yer guitar some more!
Mar 11 16:43:34 <grym>	good advice
Mar 11 16:43:56 <grym>	man knew what he was about, so, not too surprising
Mar 11 16:45:15 <quiliro>	why does eww hang emacs on certain web pages?
Mar 11 16:45:32 <quiliro>	how can I get more information from emacs?
Mar 11 16:46:14 <ndegruchy>	,zaphod
Mar 11 16:46:15 <fsbot>	emacs is just this program, you know
Mar 11 16:46:37 <danse-nr3>	,zaphod
Mar 11 16:46:38 <fsbot>	emacs is just this program, you know
Mar 11 16:47:05 <corwin>	that one probably *should* be a list it picks from, but it isn't.
Mar 11 16:47:26 <ndegruchy>	,frood
Mar 11 16:47:27 <fsbot>	The entire CHINESE WOMEN'S VOLLEYBALL TEAM all share ONE personality -- and have since BIRTH!!
Mar 11 16:47:34 <quiliro>	I don't have those commands...only zap-["up-"]to-char
Mar 11 16:47:36 <grym>	,hoopy
Mar 11 16:47:37 <fsbot>	You will remember something that you should not have forgotten.
Mar 11 16:47:47 <ndegruchy>	,towel
Mar 11 16:47:48 <fsbot>	ndegruchy: You GUI-using quiche-eater!
Mar 11 16:48:03 <grym>	quiliro: none of these are emacs commands
Mar 11 16:48:17 <corwin>	,shit-#emacs-says
Mar 11 16:48:18 <fsbot>	the plural of regex is regrets
Mar 11 16:48:30 <corwin>	hahahaha
Mar 11 16:48:36 <quiliro>	,zaptoregexp
Mar 11 16:48:37 <fsbot>	quiliro: [->] zap-to-regexp is [0] at http://tsdh.wordpress.com/2007/06/22/zapping-to-strings-and-regexps/
Mar 11 16:48:37 <fsbot>	[1] http://paste.lisp.org/display/59010
Mar 11 16:48:37 <fsbot>	[2] http://paste.lisp.org/display/70641
Mar 11 16:48:37 <rpav>	that's a good one
Mar 11 16:49:02 <corwin>	"It's funny because it's true"
Mar 11 16:49:35 <rpav>	quite
Mar 11 16:50:10 <quiliro>	I get Service Unavailable from both paste.lisp.org urls
Mar 11 16:52:06 <grym>	me too
Mar 11 16:52:09 <quiliro>	nice way to learn elisp https://tsdh.wordpress.com/2007/06/22/zapping-to-strings-and-regexps/
Mar 11 16:52:23 <quiliro>	simple useful examples
Mar 11 16:53:32 <grym>	!g what used to live at http://paste.lisp.org/display/59010
Mar 11 16:53:34 <fsbot>	🤖[g] Sorry, I can't access external links. I'm here to provide information and assistance within the chat. If you have any specific questions or need help with something else, feel free to ask!
Mar 11 16:53:47 <grym>	nice dodge
Mar 11 16:54:11 <quiliro>	gpt can't do the basics?  better use a search engine then
Mar 11 16:54:22 <grym>	the hell you say!
Mar 11 16:54:33 <grym>	(i expected that to fail)
Mar 11 16:54:44 <quiliro>	is there a free software search engine made in lisp?
Mar 11 16:54:46 <grym>	i just wanted to see in which way it would fail
Mar 11 16:54:58 <grym>	i suspect that there is not
Mar 11 16:55:09 <rpav>	grym: i feel like that summarizes life as a software developer
Mar 11 16:55:21 <grym>	rudybot: as everyone knows, (g)awk is the language of AI
Mar 11 16:55:22 <rudybot>	grym: AI in awk: http://www.wra1th.plus.com/awk/awkfri.txt (and also, http://www.gnu.org/software/gawk/manual/gawkinet/ )
Mar 11 16:55:28 <grym>	just so
Mar 11 16:55:28 <rpav>	"i expected it to fail; i wanted to see how"
Mar 11 16:55:30 <grym>	rpav: yep
Mar 11 16:55:38 <grym>	rpav: saruman-mode
Mar 11 16:55:40 <quiliro>	i am in love with lisp...I hope make a trio with my fiancee!
Mar 11 16:55:52 <e1f>	is the german "schindulder" slang for something?
Mar 11 16:56:00 <technomancy>	keep it in yr pants please
Mar 11 16:56:10 <e1f>	google's translation doesn't make sense
Mar 11 16:56:30 <grym>	i'm still sad that the monty python easter egg went away
Mar 11 17:01:29 <kompowiec2>	https://i.imgur.com/vrGIjrm.jpeg
Mar 11 17:01:29 <kompowiec2>	schrodinger termux... and I supposedly did everything according to the instructions. https://old.reddit.com/r/emacs/comments/16hwjby/how_to_get_graphical_not_termuxbased_emacs_on/
Mar 11 17:02:01 <bpalmer>	lechner: add ini-generic-mode to generic-extras-enable-list  and then (re)load generic-x , and you'll get ini-generic-mode defined.
Mar 11 17:05:39 <Necktwi>	i'm trying to setup erc over tor, i've configure sasl external with certificates and added libera onion torrc and started erc-tls with pelladium.libera.chat
Mar 11 17:05:41 <rpav>	i feel like a hand-crank + train whistle pull ("h-<TrainWhistle>") would make kicking off a compile feel more significant
Mar 11 17:06:12 <Necktwi>	but when i do erc-tls `Debugger entered--Lisp error: (error "pelladium.libera.chat/6697 Non-recoverable error")`
Mar 11 17:07:21 <Necktwi>	https://dpaste.com/45XZG5AZC
Mar 11 17:11:34 <corwin>	rpav: I will update you when my USB train-whistle project launches on indiegogo
Mar 11 17:11:42 <rpav>	corwin: sold
Mar 11 17:12:12 <corwin>	Maybe semi-truck whistles too, for cargo cultists.
Mar 11 17:12:20 <e1f>	there's no host called pelladium.libera.chat
Mar 11 17:12:33 <corwin>	Hmm, fairly sure there ustawas
Mar 11 17:13:25 <e1f>	maybe it's palladium as the hosts are named after elements
Mar 11 17:14:48 <Necktwi>	i've added mapping in torrc as per https://libera.chat/guides/connect#accessing-liberachat-via-tor
Mar 11 17:15:40 <Necktwi>	oops
Mar 11 17:15:40 <e1f>	pretty sure the error is the hostname typo
Mar 11 17:18:39 <Necktwi>	elf, i've renamed to palladium but still it says same
Mar 11 17:19:02 <rpav>	you're accessing it via tor?
Mar 11 17:19:30 <Necktwi>	yes
Mar 11 17:19:37 <Necktwi>	with torsocks
Mar 11 17:20:14 <rpav>	sounds like an extra layer of potential problems
Mar 11 17:21:20 <rpav>	i.e. making sure you can connect at all normally is probably a good place to start
Mar 11 17:27:23 <corwin>	,,erc-sasl
Mar 11 17:27:24 <fsbot>	erc-sasl is [0] https://elpa.gnu.org/packages/doc/erc.html#SASL
Mar 11 17:27:24 <fsbot>	[1] EmacsWiki: Erc SASL https://www.emacswiki.org/emacs/ErcSASL
Mar 11 17:27:24 <fsbot>	[2] included since ERC 5.5; for upgrading, see https://elpa.gnu.org/devel/doc/erc.html#Upgrading (make sure to delete all traces of any existing erc-sasl.el{,c,n}, etc. before restarting Emacs)
Mar 11 17:32:06 <a51>	C-x r d did not work earlier ... sorry to have wasted time by asking why ... in my config I had cua-mode enabeled
Mar 11 17:55:25 <RickAstley>	Necktwi: use proxychains not torsocks
Mar 11 17:55:49 <RickAstley>	And yes it's palladium not pellidium
Mar 11 17:57:01 <Necktwi>	yeah i changed pelladium to palladium but still its the same
Mar 11 17:57:12 <RickAstley>	Use proxychains not torsocks
Mar 11 17:57:19 <Necktwi>	ok will try proxychains
Mar 11 17:58:14 <RickAstley>	unless you REALLY need to avoid all potential data leaks eg you're going to be leaking some kind of sensitive data on irc
Mar 11 17:58:33 <RickAstley>	but since you have to verify identity with libera probably not your use case anyways
Mar 11 17:58:46 <Necktwi>	ok
Mar 11 17:59:22 <RickAstley>	proxychains has less security profile but not important here in the majority of use cases. I'm assuming you're using tor only because you don't want to have your location or IP broadcast to everyone on the network. Proxychains will do that
Mar 11 18:01:08 <quiliro>	with tor, the libera admins still know who connects to whom ... so it is useless
Mar 11 18:01:17 <Necktwi>	RickAstley: can i use Transparent Tor proxy?
Mar 11 18:01:34 <quiliro>	for there to be privacy, no one but the parties should know
Mar 11 18:01:53 <RickAstley>	quiliro: it's not useless. Not having your IP exposed for any random person to come knock on your modem/router is a legitimate benefit
Mar 11 18:02:11 <quiliro>	ok
Mar 11 18:02:21 <Necktwi>	i don't generally pm in irc
Mar 11 18:02:47 <Necktwi>	RickAstley: yeah
Mar 11 18:03:13 <quiliro>	but an IP address is simple...just a number...anyone can just try all IPs
Mar 11 18:03:38 <RickAstley>	Necktwi: Yes, the problem you're experiencing is likely due to problems with torsocks and liberachat tls, iirc there's a bug with it on github
Mar 11 18:03:41 <Necktwi>	i followed https://wiki.gentoo.org/wiki/Tor, what is the section in it related to proxychains?
Mar 11 18:04:00 <Necktwi>	RickAstley: oh!!
Mar 11 18:04:18 <RickAstley>	quiliro: They can and do lol, but security is filtering out that crap and listening to the stuff that is someone targeting you in particular (not the automated noise)
Mar 11 18:05:01 <RickAstley>	no broadcast ip, no weirdo from a flamewar harassing me :D
Mar 11 18:06:58 <kompowiec2>	ok i got it, code from page no include setenv for SHELL
Mar 11 18:17:56 <RickAstley>	ugh, C-c ' returns `wrong type arg stringp in all org code blocks`
Mar 11 18:18:19 <RickAstley>	`wrong type arg stringp` in all code blocks *
Mar 11 18:30:56 <bartk>	I declare .emacs bankruptcy!
Mar 11 18:31:53 <sham1>	Time to start over
Mar 11 18:32:20 *	corwin chants "one of us"
Mar 11 18:32:54 <sham1>	Also, I just wanted you to know that you can't just say the word "bankruptcy" and expect anything to happen.
Mar 11 18:33:28 <corwin>	Quite correct. You have to stare at the mirror in a dark room until a red dot appears, first.
Mar 11 18:38:41 <RickAstley>	based and dark room in front of a mirror pilled
Mar 11 18:39:46 <RickAstley>	the issue was trying to call that weird function from CMU that puts line numbers in source code blocks. Did anyone ever package something that does that in a polished way
Mar 11 18:48:42 <RickAstley>	is anyone here using tabs? I feel like I'm going to just start using spaces but it feels so wrong. But it's hard to get tabs to work nicely with emacs
Mar 11 18:48:49 <RickAstley>	iirc there was a study that people who use spaces earn more money
Mar 11 18:49:30 <RickAstley>	Maybe the true sigma male move is to just remap space to the tab key
Mar 11 18:49:33 <corwin>	I offered to switch for a modest raise.  Nothing, so far.
Mar 11 18:51:18 <ju`>	I tried tabs but decided to go space again when realized  there is very few support even in dev ambients, like when tried to edit files in github/gitlab
Mar 11 18:53:13 <rpav>	i don't remember the year or decade i last used tabs, though i think i have a copy of https://store.steampowered.com/app/508440/Totally_Accurate_Battle_Simulator/ somewhere
Mar 11 18:53:17 <rpav>	also never used
Mar 11 18:54:23 <technomancy>	rudybot: tabs are for makefiles
Mar 11 18:54:23 <rudybot>	technomancy: tabs are for makefiles
Mar 11 18:54:39 <technomancy>	great minds think alike
Mar 11 18:56:58 <ju`>	heh
Mar 11 18:58:04 <stooven>	Remap space to tab key? That is evil
Mar 11 19:00:05 <rpav>	you still generally need spaces later in the line for tokenization, after indentation and initial tokens
Mar 11 19:00:20 <rpav>	i mean you could use tabs there too but
Mar 11 19:00:46 <rpav>	clearly the way towards broad agreement is set tabstop size to 1 and use whichever you prefer ;D
Mar 11 19:10:26 <catern>	hmm I have a bunch of let-bindings and I want to save-excursion over all the let-bindings, but *not* over the body of the let...
Mar 11 19:11:40 <ju`>	there is another problem with tabs, there is no consensus in how you use it.
Mar 11 19:11:41 <ju`>	Use just tabs , tabs but space to indent comments, there is too much "I prefer to do on my way"
Mar 11 19:11:41 <ju`>	In the I just go with whatever the project I'm working on asks and the headaches go away
Mar 11 19:12:53 <sham1>	Tabs for indentation, spaces for alignment
Mar 11 19:13:50 <corwin>	Tabs for industry, spaces for integrity
Mar 11 19:14:27 <corwin>	(Not really.  The whole thing is just silly.)
Mar 11 19:14:49 <hodapp>	tabs in the streets, spaces in the sheets
Mar 11 19:14:50 <sham1>	Just provide a formatter config file and/or .editorconfig and it's all fine
Mar 11 19:15:00 <technomancy>	the whole concept is just absurd to begin with. why should it be so important that people could customize how deeply things are indented?
Mar 11 19:15:10 <sham1>	It might not be a style you *like*, but it's consistent
Mar 11 19:15:12 <technomancy>	you can't change the bracket placement on a per-user basis
Mar 11 19:15:24 <sham1>	Oh you can
Mar 11 19:15:32 <technomancy>	I mean you can but it's obviously stupid
Mar 11 19:16:06 <sham1>	The point in arguing about indentation style is that you of course want for a project to look consistent and coherent with itself
Mar 11 19:16:24 <spikemaster>	i love tab indentation, space alignment. But... most editors don't support that out of the box, not even Emacs.
Mar 11 19:16:50 <rpav>	the deeper issue is using dumb textual bytes that have to be parsed to represent things, and essentially ascii art to make it readable
Mar 11 19:16:54 <waerloga>	still goes wonky if your spaces for alignment exceed the users desired tab indentation
Mar 11 19:17:19 <technomancy>	it's just so much complexity for zero benefit
Mar 11 19:17:28 <rpav>	then the ascii art and the bytes have to get along
Mar 11 19:17:39 <waerloga>	which is the main reason why I ended up with spaces (vs tabs)
Mar 11 19:17:45 <sham1>	rpav: problem: text is a *really* useful medium of information interchange, even outside of computers. I mean, that's sort of why it was invented all over the world over and over again
Mar 11 19:17:55 <spikemaster>	i'm on team tab 100%. except for lisp where i'm on team spaces only 100%
Mar 11 19:18:32 <rpav>	sham1: kind of; it's mostly that it's the incredibly dumb lowest common denominator and there's a distinct lack of imagination around how we could do better
Mar 11 19:19:04 <rpav>	also there's not a lot of agreement even around text; unicode tries, but most things ignore it
Mar 11 19:19:29 <rpav>	text itself is incredibly complicated in all dimensions; so it's not actually as simple as it seems _to begin with_
Mar 11 19:19:38 <sham1>	Do they? Most people nowadays interact with systems that almost invariably accept unicode text encoded in one of the unicode ways
Mar 11 19:19:48 <sham1>	Usually UTF-8
Mar 11 19:19:59 <rpav>	yeah and most things in the middle ignore it as much as possible
Mar 11 19:20:02 <technomancy>	if you actually want to decouple the bytes from the way it looks, you need to switch to proper structural editing and bring back interlisp vibes
Mar 11 19:20:09 <rpav>	a few frontends deal with it
Mar 11 19:20:43 <rpav>	technomancy: yeah, of course i'm very interested in this and implying such directions
Mar 11 19:21:01 <sham1>	Structural editing is nice as long as everyone has the same setup. When someone decides that the One True Setup isn't for them, you immediately get problems. There's a reason why LabVIEW hasn't taken over the world despite being quite nice
Mar 11 19:21:09 <sham1>	And of course network effect also works against LabVIEW
Mar 11 19:21:10 <sham1>	And so on
Mar 11 19:21:24 <corwin>	When the data is intended for direct load that's one thing.  When the data is intended to be fed to an editor used by a developer to update instructions for the compiler/interperter... the whole thing remains silly seeming.
Mar 11 19:21:36 <rpav>	eh nah the problem i've seen is all the structural things are too rigid
Mar 11 19:21:41 <sham1>	That too
Mar 11 19:22:24 <sham1>	It works as long as your stuff is well-formed
Mar 11 19:22:30 <rpav>	i think the real secret is showing that actually writing structural editing is a lot simpler than it seems, though _slightly_ more work up front than plain text, but _way_ less complexity after that
Mar 11 19:22:32 <technomancy>	the main problem with investigating new structural editing approaches is that paredit is too good of a local maximum
Mar 11 19:22:45 <sham1>	Also, even with structural editors, you end up defining the structure by using text, for example via keyboards
Mar 11 19:22:53 <rpav>	sham1: nah that's part of the "too rigid" part; a good structural editor should feel like editing text, and allow errors
Mar 11 19:23:23 <rpav>	well right, you _input_ characters, but the computer figures out how to interpret them, or you interactively assist it at point of entry
Mar 11 19:23:31 <sham1>	Okay, but if that's the case then what's the difference between what we have and the counterfactual? That what we have on the disk is an AST as opposed to source code?
Mar 11 19:23:37 <rpav>	rather than point of parsing
Mar 11 19:24:18 <rpav>	sham1: right; the difference is when you enter junk, the editor immediately knows and shows you, but it doesn't _prevent_ it, because occasionally having an intermediate junk state is useful
Mar 11 19:24:19 <Necktwi>	RickAstley: i'm able to connnect with proxy chains
Mar 11 19:25:00 <rpav>	sham1: and also you don't need escaping and other textual disambiguation, and you can alter the presentation on demand
Mar 11 19:25:19 <Necktwi>	but if i'm emacserver and emacsclient then connecting to irc waits indefinitely
Mar 11 19:25:28 <Necktwi>	i'm using*
Mar 11 19:25:28 <rpav>	like you like () or {} or whatever for delimiters; theme your data
Mar 11 19:26:04 <technomancy>	you don't even need bracket delimiters
Mar 11 19:26:07 <technomancy>	https://p.hagelb.org/anarres.png
Mar 11 19:26:12 <Necktwi>	how to test i'm using tor now?
Mar 11 19:26:46 <rpav>	technomancy: you don't, but you might or might not like it for visual distinction if you're colorblind or don't want rainbows
Mar 11 19:27:14 <technomancy>	sure; the point is you have more flexibility
Mar 11 19:27:22 <rpav>	you definitely do
Mar 11 19:27:33 <technomancy>	if you want colors, great; if you want a tmux-friendly version, you can have [] and {} etc
Mar 11 19:27:44 <technomancy>	s/colors/colorful boxes/
Mar 11 19:27:47 <rpav>	yeah
Mar 11 19:27:53 <technomancy>	I've implemented this
Mar 11 19:28:17 <sham1>	What do you do when someone wants to use a different editor?:
Mar 11 19:28:28 <corwin>	Pity them.
Mar 11 19:28:40 <JohnGalt>	corwin: good answer!
Mar 11 19:28:50 <rpav>	sham1: the idea is not to force someone to use a specific editor, too
Mar 11 19:28:51 <technomancy>	sham1: my version stores the code as text; you just don't interact with it as such
Mar 11 19:29:28 <rpav>	this is why i think the first step is demonstrating how it's actually really easy to _implement_, and even have emacs/vim frontend it
Mar 11 19:29:35 <johnw>	lol
Mar 11 19:29:36 <sham1>	So you still get into indentation battles since other people will still see the text, except now in the worst case you get machine-generated goop that requires a formatter just to *read*
Mar 11 19:30:14 <rpav>	ah but it already requires a formatter just to read
Mar 11 19:30:15 <sham1>	You have to make sure that your tool outputs something readable
Mar 11 19:30:20 <corwin>	I think we are talking about a display properties based solution, so no goop in the files.
Mar 11 19:30:22 <rpav>	you're just really used to the formatter and assume it's magically a given
Mar 11 19:30:25 <technomancy>	sham1: well, I only implemented it for fennel, which doesn't have multiple indentation styles
Mar 11 19:30:39 <corwin>	(Or was I misunderstanding?)
Mar 11 19:30:53 <technomancy>	generalizing it across languages is nearly impossible
Mar 11 19:30:54 <rpav>	except e.g. unicode is not only not a given, it's incredibly complex outside the simple case, and very few do it fully right
Mar 11 19:31:06 <sham1>	technomancy: how do you make sure that the s-expressions are written nicely? Pretty-printer?
Mar 11 19:31:25 <sham1>	Most unicode is the simple case
Mar 11 19:31:26 <technomancy>	sham1: I have to make extensions to the standard pretty-printer, but yes
Mar 11 19:32:20 <Necktwi>	hey
Mar 11 19:32:22 <technomancy>	the main problem is it's not actually better than paredit
Mar 11 19:32:47 <sham1>	Another problem is that, as said, it's pretty much impossible to generalise across languages
Mar 11 19:32:53 <sham1>	I wish I could work in a Lisp, but I can't
Mar 11 19:32:54 <technomancy>	or rather the improvement over paredit is marginal while the loss of magit/eshell/etc is a huge loss
Mar 11 19:33:20 <sham1>	If I started to commit like clojure or whatever into our repo, I'd get crucified
Mar 11 19:33:53 <technomancy>	well, martyrs can often be very highly regarded
Mar 11 19:33:55 <rpav>	there's not really "conversion" though i suppose one could augment existing compilers
Mar 11 19:34:10 <rpav>	like you're not _going_ to edit existing code this way
Mar 11 19:34:37 <rpav>	the first step is to provide the tool for general data
Mar 11 19:36:08 <corwin>	let's separate presentation and content completely and put "formatting hints" into a sep file while reducing code down to minimal (hinted?) formats according to the given language specifications
Mar 11 19:36:38 <spikemaster>	css for code
Mar 11 19:36:59 <rpav>	corwin: huh that might be a possibility too though that _would_ require a very understanding editor
Mar 11 19:37:31 *	sham1 grumbles in source maps
Mar 11 19:38:12 <corwin>	seems to me raising the bar for editors being responsible to their users for obeying our various expectations (vs making code authors responsible for finding reasonable choices that are okay with everyone) is the problem space.
Mar 11 19:38:56 <corwin>	(So, maybe high expectations for the editors that would try to implement this is just fine?)
Mar 11 19:39:40 <corwin>	Could apply to how programs are broken up into files, too.
Mar 11 19:40:11 <sham1>	Being able to codify and automate these sorts of things is what usually ends the debate on these things. If you can enforce a code style in a project then you're just golden
Mar 11 19:40:51 <sham1>	I agree with the idea of structural editing, it's just that unless you are in a Lisp then it gets infinitely more difficult to even use that stuff nicely
Mar 11 19:41:16 <corwin>	It does seem like there's a semantic standard missing.
Mar 11 19:41:49 <rpav>	imo the idea would be more to make a new structure-based _language_, rather than trying to structurally-edit existing things
Mar 11 19:42:34 <corwin>	ok, I see.  a meta-programming language created by an Emacs user (or several) is something I'd look at, fwiw.
Mar 11 19:42:47 *	technomancy ahems
Mar 11 19:43:41 <rpav>	technomancy: urls
Mar 11 19:44:25 <technomancy>	rpav: https://fennel-lang.org
Mar 11 19:44:33 <rpav>	err
Mar 11 19:45:04 <rpav>	technomancy: fennel isn't really structural in nature though
Mar 11 19:45:15 <rpav>	like it still reads from text right?
Mar 11 19:45:28 <rpav>	yeah
Mar 11 19:45:44 <technomancy>	I was replying to "a meta-programming language created by an Emacs user"
Mar 11 19:45:56 <spikemaster>	does fennel use luajit or "official" lua?
Mar 11 19:46:01 <technomancy>	but yeah, fennel is typically written as text but doesn't have to be
Mar 11 19:46:07 <technomancy>	rpav: https://git.sr.ht/~technomancy/anarres
Mar 11 19:46:09 <rpav>	looks neat at a glance though .. like the kind of things i'd immediately want from a new lisp
Mar 11 19:46:16 <technomancy>	spikemaster: works with both
Mar 11 19:46:25 <sham1>	Would be weird if fennel couldn't be used both with PUC-Rio lua and luajit
Mar 11 19:46:45 <corwin>	technomancy: OK, so: I do clearly need to investigate fennel.
Mar 11 19:46:47 <rpav>	sham1: one could always _compile_ to lua
Mar 11 19:46:57 <rpav>	lua and C are both pretty good targets imo
Mar 11 19:47:30 <rpav>	mostly because you can write some weirdass new language no one has a compiler for, and distribute lua or C and no one needs your toolchain
Mar 11 19:47:39 <technomancy>	sham1: if we compiled to bytecode we would get some neat benefits; fewer bugs around line numbering. in that case it would be either/or rather than both. but the compiler outputs source for maximum compatibility.
Mar 11 19:48:10 <sham1>	And having only one backend is nice since it lessens the effort
Mar 11 19:52:18 <sham1>	Anyway, if anyone here uses mu4e on fedora, I'm currently pushing 1.12.1 of mu to the repos. I really need to be more vigilant about that
Mar 11 19:52:30 <corwin>	technomancy: not sure I'm up for learning lua to use this; I have in mind something more akin to parrot (from the early Perl6 conceptual phase, anyway; I'm not conversant on how raku works), where we can "compile down" to mostly anything.
Mar 11 19:52:32 <sham1>	Missing multiple versions at a time
Mar 11 19:52:52 <technomancy>	corwin: fair enough. but lua is *really* easy to learn.
Mar 11 19:52:57 <rpav>	sham1: the curse of making something people use
Mar 11 19:52:58 <technomancy>	like ... an afternoon and you should be good
Mar 11 19:53:14 <corwin>	technomancy: I did say I wasn't sure; I'm not ruling it out either.
Mar 11 19:53:38 <rpav>	lua is probably worth learning a little and yea it is pretty easy
Mar 11 19:53:43 <sham1>	rpav: this is mostly just me being lazy. I'd have to probably set up an RSS thing or whatever to remind me whenever a package I maintain gets updates upstream
Mar 11 19:53:59 <technomancy>	corwin: yeah. I think the JVM sucked a lot of the oxygen out of the room from people pursuing a parrot-like approach but there's a lot of things it's just not good at.
Mar 11 19:54:34 <rpav>	3 major gotchas: 1-based array indexing, global-by-default (assumes global unless declared local), and no default-return (e.g. `function(x) x+1; end` returns nothing)
Mar 11 19:54:48 <technomancy>	rpav: fennel fixes the 2nd and 3rd of those
Mar 11 19:55:02 <rpav>	technomancy: yeah i was about to say hah
Mar 11 19:55:19 <rpav>	it may sortof-fix the first since it looks like you provide some richer iteration
Mar 11 19:55:22 <sham1>	Probably doesn't fix the nil silliness
Mar 11 19:55:35 <RickAstley>	anyone here using sdl2 with org-mode, when I compile my code using org-babel it freezes my screen when rendering the SDL_WINDOW
Mar 11 19:55:36 <technomancy>	the first one is very rarely a problem since you pull things out of data structures using destructuring and iterators
Mar 11 19:55:40 <spikemaster>	as a WoW player i appreciate lua
Mar 11 19:55:57 <technomancy>	sham1: it does have nils unfortunately but it at least doesn't have the nil silliness where "I put nothing in the list and now it's longer than it was before"
Mar 11 19:56:05 <technomancy>	the way most lisps do
Mar 11 19:56:54 <technomancy>	plus fennel's pattern matching includes a lot of implicit nil checks that results in safer code than you'd get in lua
Mar 11 19:57:31 <corwin>	In my mind rendering interpreter/compiler dependant code is like rendering architecture dependent code: optimization could be involved but it isn't implicitly about optimization.  It's about portability.
Mar 11 19:57:50 <technomancy>	aaaaanyway come join #fennel so I don't have to keep peddling my wares in the wrong channel
Mar 11 19:58:07 <corwin>	Yeah, I'll rejoin over there I think.  Thanks for the shout.
Mar 11 19:58:16 <weary-traveler>	i'm struggling with trying to directly use citeproc-render-item . anyone here familiar with the citeproc library and/or have some reference code regd citeproc-render-item i can study?
Mar 11 20:17:38 <johnjaye>	spikemaster: lua... is used in WoW/
Mar 11 20:25:54 <rpav>	all the ui stuff
Mar 11 20:25:58 <rpav>	also ESO!
Mar 11 20:28:11 <rpav>	i think i had more fun modding ESO than playing it 🤣
Mar 11 20:31:12 <bremner>	OK, fennel is cool and all, but does it run org-mode?
Mar 11 20:33:06 <ndegruchy>	Yeah, WoW had lots of Lua mods for the UI.
Mar 11 20:34:30 <technomancy>	bremner: we had a talk on that at the last fennelconf!
Mar 11 20:34:51 <technomancy>	second-to-last rather
Mar 11 20:35:17 <technomancy>	https://git.sr.ht/~technomancy/fennel-mode/tree/main/item/ob-fennel.el
Mar 11 20:36:02 <technomancy>	(video at https://conf.fennel-lang.org/2022)
Mar 11 20:36:08 <weary-traveler>	the name seems to suggests an org-babel extension. i.e., running /in/ org-mode. i interpreted "run org-mode" as being something else
Mar 11 20:36:21 <technomancy>	oh, I'm not an org-mode user, so maybe
Mar 11 20:36:46 <weary-traveler>	huh. interesting.
Mar 11 20:37:04 <weary-traveler>	technomancy: markdown for all ze notes?
Mar 11 20:37:30 <ndegruchy>	I was going to claim to be the only emacs user who doesn't really care about org-mode, but technomancy probably has me beat
Mar 11 20:37:48 <bremner>	Let's compete for who is the most apathetic
Mar 11 20:38:02 <technomancy>	weary-traveler: yes, plus just being generally very disorganized
Mar 11 20:38:04 <weary-traveler>	the winner is one who doesn't bother to compete
Mar 11 20:42:04 <sham1>	I'm also quite apathetic about org-mode. I can see why it'd be useful but I never got into it for whatever reason and frankly I feel like it's overhyped
Mar 11 20:43:16 <technomancy>	markdown isn't good, but at least everyone knows it's not good
Mar 11 20:43:32 <ndegruchy>	I just write text files
Mar 11 20:43:37 <sham1>	Yeah, and at least there's some sort of a spec unlike with asciidoc
Mar 11 20:43:52 <sham1>	Where asciidoc is just "do whatever the python tool and asciidoctor do"
Mar 11 20:43:57 <JohnGalt>	markdown isn't pretty but it's fast
Mar 11 20:44:25 <sham1>	At least nowadays AsciiDoc is getting an actual spec finally, which would be nice
Mar 11 20:44:37 <alcor>	Markdown is as pretty/ugly as you want it to be, it can be okay with a good stylesheet
Mar 11 20:45:04 <sham1>	ReStructuredText does have a spec, so that's good
Mar 11 20:45:12 <bremner>	markdown has style sheets?
Mar 11 20:45:20 <sham1>	Well when you compile to HTML
Mar 11 20:46:45 <cvandusen>	bremner: language, please
Mar 11 20:47:35 <bremner>	Le markdown a les documents supplementaire de chiqueté??
Mar 11 20:47:36 <fsbot>	Improbable!
Mar 11 20:47:41 <bremner>	domage.
Mar 11 20:47:59 <technomancy>	lol
Mar 11 20:48:34 <ndegruchy>	dressage
Mar 11 20:48:46 <bremner>	not that there is anything wrong with that
Mar 11 20:51:02 <weary-traveler>	i think, per org-mode spec, any text file is a valid Org file. i.e., the parser ought not to error
Mar 11 20:51:38 <weary-traveler>	rudybot: does an org file by any other name smell just as sweet?
Mar 11 20:51:39 <rudybot>	weary-traveler: a rose by any other name would smell as sweet; and a turd is still unwelcome in the punchbowl.
Mar 11 20:51:40 <ram_man>	Can you make it so a window closes when you close its last tab?
Mar 11 20:52:22 <weary-traveler>	by window do you mean "frame"?
Mar 11 20:52:38 <ram_man>	No, I mean an emacs window.
Mar 11 20:53:13 <rpav>	presumably tabs are window and not frame-based
Mar 11 20:53:31 <sham1>	Many other editors do that as well
Mar 11 20:53:34 <rpav>	assuming we're not talking about whitespace (;
Mar 11 20:53:45 <JohnGalt>	ram_man: I didn't know emacs had tabs
Mar 11 20:53:45 <sham1>	Anyway, I presumably you could have the window close when the tab bar empties
Mar 11 20:54:06 <rpav>	tabs are apparently not window-based
Mar 11 20:54:38 <JohnGalt>	ram_man: do you use blackbox or fluxbox?
Mar 11 20:54:52 <sham1>	(info "(emacs) Tab Bars")
Mar 11 20:55:13 <weary-traveler>	ram_man: i'm lost. tabs as in tab-bar-mode are per-frame. within one frame one can multiple tabs. within one tab, one can have multiple windows
Mar 11 20:55:24 <rpav>	^^
Mar 11 20:55:31 <sham1>	Also
Mar 11 20:55:33 <rpav>	and that is really weird actually
Mar 11 20:55:36 <sham1>	(info "(emacs) Tab Line")
Mar 11 20:55:48 <sham1>	global-tab-line-mode is per-window for all windows
Mar 11 20:55:50 <weary-traveler>	the last tab in a frame can't be closed, but you could create your own binding that detects that and closes the frame instead
Mar 11 20:56:22 <rpav>	yeah that .. not sure if there is a hook that gets called when you attempt to close the last tab, but you could always advise/hijack the function that does
Mar 11 20:57:19 <JohnGalt>	wow never knew about tabs
Mar 11 20:57:43 <rpav>	tabs are a highly dubious ui mechanic
Mar 11 20:57:50 <ram_man>	I am not talking about frames. I am talking about windows.
Mar 11 20:57:59 <rpav>	i actually disable the tab bar in firefox in favor of something more like buffer-menu ;P
Mar 11 20:58:11 <rpav>	ram_man: do you understand the difference between frame and window in emacs
Mar 11 20:58:46 <ram_man>	Yes. I understand the difference. I am talking about Windows. Not frames.
Mar 11 20:58:49 <rpav>	if you're using some tab mechanism _other_ than tab-bar-mode, it would be useful to specify
Mar 11 20:58:59 <rpav>	ram_man: you're not indicating any understanding thereof
Mar 11 20:59:03 <sham1>	tab-line it is then
Mar 11 20:59:24 <weary-traveler>	probably
Mar 11 20:59:41 <rpav>	ah tab-line is built in
Mar 11 20:59:58 <rpav>	and the sane behavior
Mar 11 21:01:10 <bpalmer>	what is sanity?
Mar 11 21:01:15 <rpav>	ram_man: it appears you can customize tab-line-close-function, but you'll probably have to make your own or find a prewritten one to close the window, if that's what you're using
Mar 11 21:01:53 <ram_man>	Yes, I am using tab-line. Thank you.
Mar 11 21:01:57 <rpav>	bpalmer: (tab-line-mode 0)
Mar 11 21:05:44 <bpalmer>	rudybot: I wanted to open a tab at the bar, but they don't allow laptops
Mar 11 21:05:45 <rudybot>	bpalmer: Does anyone have any experience with internation flights and laptops? I want to bring my friend in Mexico a laptop but I want to bring my own also... I am afraid they won't allow this.
Mar 11 21:10:05 <cvandusen>	rudybot: bots crossing international borders is larger issue
Mar 11 21:10:06 <rudybot>	cvandusen: Crossing borders are horrible.
Mar 11 21:10:40 <sham1>	Borders crossing borders
Mar 11 21:11:23 <cvandusen>	Welcome to Venn Diagram!
Mar 11 21:11:56 <ndegruchy>	*Euler
Mar 11 21:12:06 <e1f>	don't cross the beams!
Mar 11 21:19:24 <weary-traveler>	citeproc is hard to make sense of. the item-getters, fun-creators. sigh
Mar 11 21:25:27 <johnw>	citeproc will create fun for me?
Mar 11 21:25:30 <johnw>	this is nice
Mar 11 21:32:07 <weary-traveler>	heh
Mar 11 21:32:34 <weary-traveler>	johnw: you'll have to come with your own popcorn, but as an observer there may be amusement to be had, yes
Mar 11 21:36:03 <quiliro>	When I discovered that Emacs makes it possible and easier for the user to understand its code to the core and even modify it, that startled me.  But at first, it was a steep learning curve.  Now I think that Emacs structure is very simple to understand in its interface and in its commands.  Nevertheless, I feel there are better ways to explain it such that it is easy to start, instead of it being cryptic for nonprogrammers.
Mar 11 21:36:40 <quiliro>	I am motivated to write such a document.
Mar 11 21:37:00 <dcb>	for something even simpler you could try `ed`
Mar 11 21:37:10 <quiliro>	But I do not know where to start....probably in the beginning!
Mar 11 21:37:21 <quiliro>	at the beginning
Mar 11 21:37:57 <JohnGalt>	In the beginning was the command line, and UNIX saw that it was good
Mar 11 21:38:01 <quiliro>	I do not want something simpler.
Mar 11 21:38:25 <dcb>	in the beginning, there was clay and a piece of stone
Mar 11 21:38:26 <quiliro>	I want the simplicity in Emacs to be perceivable to newbies.
Mar 11 21:38:50 <JohnGalt>	dangle features in front of them and they will learn
Mar 11 21:39:03 <cvandusen>	One cannot perceive what is not there.
Mar 11 21:39:19 <dcb>	"simplicity" and "emacs" is an interesting combo
Mar 11 21:39:48 <quiliro>	I think that the simplicity of Emacs is because of the lisp
Mar 11 21:39:58 <quiliro>	at least that is what I mean
Mar 11 21:40:03 <bpalmer>	hmm, stephenson allowed cryptonomicon.com to expire, it seems -- that's where he used to host the "In the Beginning was the Command Line" essay
Mar 11 21:40:19 <JohnGalt>	I used to have the book
Mar 11 21:40:20 <cvandusen>	This word "simplicity", it does not mean what you think it means.
Mar 11 21:40:25 <JohnGalt>	I think Ill go buy it
Mar 11 21:40:47 <quiliro>	that a command can be run without necesarily using its keybinding is beautiful
Mar 11 21:40:52 <dcb>	we could let the domain for crypto-bros
Mar 11 21:41:22 <quiliro>	simplicity=not complicated
Mar 11 21:41:38 <bpalmer>	well, maybe it's somethign else; the domain works, but as a website, it redirects to a site complaining about the ldap database
Mar 11 21:42:23 <alcor>	I got sold on Emacs when I figured out it's like Smalltalk, but for Lisp. It's platform for running Lisp programs masquerading as a text editor. A portable Lisp machine, if you want.
Mar 11 21:42:58 <quiliro>	not complicated means that it uses an arrangement of basic concepts and complex structures to make more complex things
Mar 11 21:43:28 <quiliro>	alcor: yes, exactly
Mar 11 21:44:22 <quiliro>	but new users have never used software like that...they just use appliances which do not allow the user to change them...they are disposable softwares
Mar 11 21:44:24 <JohnGalt>	I got the command line book! going on my fundamentals shelf
Mar 11 21:45:54 <quiliro>	with disposable software, you either use it because it gives you what you need or not use it....either way, some day that software is going to the trash because you cannot make it do what you want
Mar 11 21:46:35 <quiliro>	Emacs lends itself to change, not only because it is free (libre) software...but because of the beauty of lisp.
Mar 11 21:46:40 <alcor>	Maybe it would be interesting to have a guide approaching Emacs from this angle – i.e. as an extensible, introspectible, lisp-based programming platform with a fairly decent text editor.
Mar 11 21:47:48 <quiliro>	yes...technically...but with words that connect better with the newbie with Emacs via their current needs
Mar 11 21:48:21 <quiliro>	not their future ones
Mar 11 21:49:43 <quiliro>	for example: I need to learn to scrape the video url of youtube (invidious) urls.  Since Emacs is programable, I can make it do that with eLisp!
Mar 11 21:50:09 <bpalmer>	there's something to be said for disposable software. Tailored to exactly the needs and discarded; after all, software biodegrades quite rapidly.
Mar 11 21:50:14 <quiliro>	once I know the requiered
Mar 11 21:51:10 <quiliro>	it degrades if nobody needs it
Mar 11 21:51:21 <JohnGalt>	bitrot
Mar 11 21:51:30 <quiliro>	but if it is needed, it gets polished
Mar 11 21:51:55 <JohnGalt>	obsolete
Mar 11 21:51:58 <quiliro>	as long as it is libre software...it not possible with nonlibre
Mar 11 21:52:34 <quiliro>	yes, JohnGalt
Mar 11 21:53:12 <quiliro>	I do not have experience with programming...but it would be interesting to know which is the opinion of programmers.
Mar 11 21:53:24 <technomancy>	especially if you use compostable functions
Mar 11 21:53:48 <quiliro>	LOL
Mar 11 21:54:45 <alcor>	Programmer here, we totally like image-based, introspectable systems. Jacking into a running system and fixing/extending it live in production is pretty great actually.
Mar 11 21:54:56 <JohnGalt>	I include a self-destruct, standard practice for alien presences
Mar 11 21:56:15 <bremner>	alcor: I think "we" is maybe not including all programmers. Or even all lisp programmers.
Mar 11 21:56:47 <bremner>	there's a great rant by a scheme guy about how images are a trap
Mar 11 21:56:53 <technomancy>	"we" is "programmers with correct opinions"
Mar 11 21:56:56 <technomancy>	by definition
Mar 11 21:57:00 <alcor>	^
Mar 11 21:57:00 <bremner>	oh well, fair enough
Mar 11 21:58:37 <JohnGalt>	let me get some more tin-foil for that rant, I need to tune in pluto
Mar 11 21:59:43 <alcor>	Writing "serious software" in elisp should be encouraged. Imagine running your webapp on Emacs Elisp. If there's a problem, you simply jack into that Emacs, open an Elisp buffer, hack in a few forms with the fix and C-x e it, while TRAMPing into a remote server where save these forms for a patch you'll commit soon via magit.
Mar 11 22:00:31 <bpalmer>	,elnode
Mar 11 22:00:32 <fsbot>	bpalmer: elnode is [0] an asynchronous web server written in Emacs Lisp.
Mar 11 22:00:32 <fsbot>	[1] http://www.emacswiki.org/emacs/Elnode
Mar 11 22:00:32 <fsbot>	[2] updated fork available on https://github.com/jcaw/elnode
Mar 11 22:00:54 <alcor>	I know, unfortunately it abandoned :(
Mar 11 22:01:09 <alcor>	Last commit is from 5 years ago
Mar 11 22:01:39 <edgar-rft>	what means no new bugs in the last 5 years :-)
Mar 11 22:02:22 <tazjin>	alcor: that's what common lisp is for
Mar 11 22:02:23 <tazjin>	or erlang
Mar 11 22:02:31 <tazjin>	both of which are, of course, very comfortable to write in emacs
Mar 11 22:03:18 <JohnGalt>	slime is the answer you seek
Mar 11 22:03:19 <bpalmer>	rudybot: what are the best languages for BEAM and emacs?
Mar 11 22:03:20 <rudybot>	bpalmer: I'm not interested in Elixir itself, but I like the idea of more languages on the BEAM VM
Mar 11 22:03:33 <technomancy>	RIP joxa.org
Mar 11 22:03:50 <technomancy>	I never got to use it but it looks a lot better than LFE
Mar 11 22:03:55 <tazjin>	what's wrong with LFE
Mar 11 22:04:07 <technomancy>	it's a lisp-2
Mar 11 22:04:48 <technomancy>	I mean you can argue lisp-2 is good but it's a very strange choice for a language you're going to be doing strictly FP coding in
Mar 11 22:05:25 <bpalmer>	Conjecture: lisp-N > lisp-(- N 1) for all N.
Mar 11 22:05:28 <tazjin>	the argument makes sense, though it hasn't really gotten in my way
Mar 11 22:05:34 <tazjin>	but I actually rather like actual Erlang itself
Mar 11 22:05:55 <bpalmer>	Every time I start messing with erlang, I accidentally prolog myself.
Mar 11 22:06:42 <technomancy>	erlang is fine but it's by far the most awkward FP language I've ever used for higher-order functions
Mar 11 22:07:48 <edgar-rft>	rudybot: I only give low orders to my functions
Mar 11 22:07:48 <rudybot>	edgar-rft: i was only following orders....
Mar 11 22:08:10 <technomancy>	rudybot: don't hassle my HOFs
Mar 11 22:08:11 <rudybot>	technomancy: HOFs exist in elisp, they're just not as convenient.
Mar 11 22:08:38 <sham1>	Erlang is quite fun
Mar 11 22:08:41 <bpalmer>	,lfe is lisp-flavored erlang; see https://lfe.io
Mar 11 22:08:42 <fsbot>	ERROR: [set term] lfe is already something else.. Use ’is also’..
Mar 11 22:08:42 <fsbot>	 Currently: lisp-flavored erlang .. + other notes
Mar 11 22:08:46 <bpalmer>	,lfe
Mar 11 22:08:46 <fsbot>	lfe is [0] lisp-flavored erlang
Mar 11 22:08:46 <fsbot>	[1] http://github.com/rvirding/lfe
Mar 11 22:09:28 <technomancy>	I do appreciate that LFE has "utterly terrifying" as part of its sales pitch
Mar 11 22:10:00 <alcor>	Having to type "funcall" isn't super-inconvenient though. CLers and Elispers seem to be able to live with that.
Mar 11 22:10:16 <technomancy>	alcor: yeah but elisp is unabashedly imperative
Mar 11 22:10:55 <sham1>	So is CL in many ways
Mar 11 22:11:04 <mwnaylor>	Here's my JohnGalt inspired function that returns a fortune. https://pastebin.com/f0BjPNfF
Mar 11 22:11:48 <sham1>	cl-case would make that a lot nicer IMO
Mar 11 22:12:30 <tazjin>	or pcase, but rms doesn't like pcase)
Mar 11 22:12:49 <wasamasa>	what was that about a cond* on the mailing list
Mar 11 22:12:50 <edgar-rft>	or nested IFs :-)
Mar 11 22:12:50 <bpalmer>	mwnaylor: as a minor refactoring, you repeat the call-process a lot, but with a different argument at the end
Mar 11 22:12:55 <wasamasa>	I recall RMS participating in the discussions
Mar 11 22:12:59 <bpalmer>	refactoring suggestion, at least.
Mar 11 22:13:01 <wasamasa>	motivated by having a pcase alternative
Mar 11 22:13:08 <tazjin>	wasamasa: he wrote the thing
Mar 11 22:13:22 <wasamasa>	seriously?
Mar 11 22:13:22 <fsbot>	I know, right?
Mar 11 22:13:32 <wasamasa>	maybe I should stop making fun of his magit questions then
Mar 11 22:14:02 <bpalmer>	mwnaylor: also, you may want with-temp-buffer
Mar 11 22:14:08 <sham1>	Wait, why doesn't RMS like pcase
Mar 11 22:14:45 <tazjin>	wasamasa: yes, https://mail.gnu.org/archive/html/emacs-devel/2024-01/msg00653.html
Mar 11 22:14:56 <tazjin>	sham1: because he thinks that some of the clause syntax is too strange
Mar 11 22:15:22 <wasamasa>	I mean, he's right
Mar 11 22:15:31 <wasamasa>	the pcase syntax uses a lot of seemingly needless backquotes
Mar 11 22:15:50 <wasamasa>	which is kinda weird, especially when compared to other pattern matchers
Mar 11 22:15:51 <tazjin>	the thing is that pcase has been around .. for a while
Mar 11 22:15:54 <tazjin>	so it's not going away
Mar 11 22:16:09 <tazjin>	so it's a cost/benefit analysis for having yet another thing
Mar 11 22:16:22 <tazjin>	what the right answer is, well, I don't know :p
Mar 11 22:17:45 <bpalmer>	cl.el had been around ... for a while and then some. So by precedent pcase can be shoved into the deprecated corner
Mar 11 22:17:51 <technomancy>	elisp has so many rough edges that there's no way to make a really satisfying pattern match implementation
Mar 11 22:18:04 <sham1>	But cl.el is deprecated, so cl-lib.el it is instead
Mar 11 22:18:14 <corwin>	counterpoint: fuck that.
Mar 11 22:18:18 <mekeor>	rms should rtfm about pcase and move on
Mar 11 22:19:09 <corwin>	(I'm completely on my own about being salty about the cl vs cl-lib thing afaik. That's entirely fine with me.  Don't encourage me.)
Mar 11 22:20:04 <mwnaylor>	😠 killed my #emacs buffer....
Mar 11 22:20:56 <bpalmer>	sham1: for once, cl-lib is something separate. (I'm not a pcase fan, but I'm not even all that set. I just think if cl.el gets deprecated, then everything is up for deprecation)
Mar 11 22:21:27 <mwnaylor>	bpalmer: good suggestions. I guess within the with-temp-buffer, I'd supply (current-buffer) for the output of call-process?
Mar 11 22:21:37 <bpalmer>	mwnaylor: yep
Mar 11 22:22:23 <mwnaylor>	I threw it together to get it working. Didn't take it to the next step to make it clean.
Mar 11 22:23:19 <mwnaylor>	I
Mar 11 22:24:44 <mwnaylor>	had thought about the temporary buffer thing, but didn't make the connection when searching for the function.
Mar 11 22:44:45 <mwnaylor>	Thanks to bpalmer, here's a cleaner version. Thanks for the constructive criticism. https://pastebin.com/aTWahp9t
Mar 11 22:49:53 <JordiGH>	I wonder, does Zuck still use Emacs?
Mar 11 22:50:28 *	cvandusen opens the door to hell and asks
Mar 11 22:50:31 <hodapp>	M-x lizard-mode
Mar 11 22:50:54 <hodapp>	supports keys that are easier for a quickly-flicking tongue to hit in quick succession
Mar 11 23:01:16 <bpalmer>	mwnaylor: excellent.
Mar 11 23:01:44 <technomancy>	JordiGH: he probably switched to vscode for better metaverse support
Mar 11 23:01:48 <bpalmer>	I think others had also suggested case/cl-case, to save on having to type (eq category X) each time
Mar 11 23:03:43 <bpalmer>	or, since pcase is in the air, (pcase X ('safe "all") ('maybe-offensive "-a") ...)
Mar 11 23:37:11 <mwnaylor>	My formatting of the `cond' clause may not match style of old time lispers, but it does match Clojure suggested style.
Mar 11 23:50:50 <mwnaylor>	Is there an elisp equivalent of the Clojure `condp'?
Mar 11 23:51:21 <sham1>	What does that do
Mar 11 23:53:31 <mwnaylor>	Best I understand, it's a combination a cond and a map/filter. (Maybe)
Mar 11 23:54:54 <mwnaylor>	condp followed by an expression. The cases in the condp are values (aka constants).
Mar 11 23:55:36 <mwnaylor>	https://clojuredocs.org/clojure.core/condp
Mar 12 00:07:08 <bpalmer>	that's basically case/cl-case , looks like
Mar 12 00:07:14 <technomancy>	condp is extraordinarily weird
Mar 12 00:07:31 <technomancy>	but a lot of really weird shit made it in to clojure very early on
Mar 12 00:09:43 <mwnaylor>	I'll have to look into case/cl-case. Many concepts seem to transcend all the lisp dialects. The tough part is get the mental mappings for the functions/macros that get the job done.
Mar 12 00:11:17 <bpalmer>	rudybot: put away that map. Do you want to look like a tourist? Just take a shortcut through Crime Alley
Mar 12 00:11:17 <rudybot>	bpalmer: hear, hear, local knowledge makes traveling worthwhile, the tourist traps are for farangi, small towns and back alley eateries are where its at
Mar 12 00:12:29 <mwnaylor>	Ferengi??
Mar 12 00:12:30 <fsbot>	Ask yourself, do you really want to know?
Mar 12 00:13:53 <edgar-rft>	fsbot: I asked myself and I really want to know
Mar 12 00:13:53 <fsbot>	am awesome
Mar 12 00:14:38 <edgar-rft>	fsbot: thank you for nothing
Mar 12 00:14:39 <fsbot>	no problem, edgar-rft
Mar 12 00:15:30 <mwnaylor>	How we ask questions w/o triggering a 'bot  ? The punctuation seems to be the trigger.
Mar 12 00:16:14 <edgar-rft>	just use single instead of double questions marks :-)
Mar 12 00:16:14 <mwnaylor>	OK, maybe extra spaces break the parser.
Mar 12 00:17:14 <mwnaylor>	edgar-rft: thx. Been on irc for several years now, still learning how to navigate.
Mar 12 00:17:46 <mwnaylor>	Assuming that bots are channel specific.
Mar 12 00:18:51 <edgar-rft>	yes, bots *are* channel specific and #emacs bots are way more stupid than bots in other channels :-)
Mar 12 00:19:48 <mwnaylor>	I'm often tempted to /ignore bots.
Mar 12 00:20:11 <mwnaylor>	BTW, is there a timeout on /ignore?
Mar 12 00:20:38 <edgar-rft>	fsbot *can* give useful info, it can print help texts for buitin emacs functions and variables for example
Mar 12 00:20:38 <fsbot>	PM me and type ,help
Mar 12 00:20:49 <technomancy>	ERC supports timeout on /ignore as of very recently
Mar 12 00:22:28 <mwnaylor>	I'm using erc. Current version is ERC 5.5.0.29.1 (IRC client for GNU Emacs 29.2).
Mar 12 00:24:00 <mwnaylor>	How do I find out about the /ignore options?
Mar 12 00:25:14 <technomancy>	well, if you run `/ignore RickAstly' and it asks you how long you want to ignore for, then you've got a new enough erc
Mar 12 00:26:29 <mwnaylor>	That works. I get the query for the duration.
Mar 12 00:32:22 <bpalmer>	what's the default timeout?
Mar 12 00:33:44 <technomancy>	indefinite I think
Mar 12 00:34:29 <bpalmer>	interesting. I'd in some ways prefer a default like '1 hour'
Mar 12 00:34:32 <mwnaylor>	What is the way to cancel an /ignore?
Mar 12 00:34:52 <technomancy>	bpalmer: I think it makes sense to keep it consistent with previous behavior by default
Mar 12 00:34:55 <bpalmer>	in erc, /unignore
Mar 12 00:35:36 <quiliro>	I recently discovered /unignore too
Mar 12 00:35:54 <quiliro>	I usually do not need it!
Mar 12 00:36:39 <quiliro>	(since I close Emacs every day and I do not permanently ignore people)
**** BEGIN LOGGING AT Tue Mar 12 00:38:03 2024

Mar 12 00:38:02 *	Now talking on #emacs
Mar 12 00:38:02 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 12 00:38:02 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 12 00:38:30 <quiliro>	you could use customize also, mwnaylor
Mar 12 00:40:30 <mwnaylor>	quiliro: had to rejoin #emacs. Pls explain customize. Assuming there's a timeout custom variable in the erc package?
**** BEGIN LOGGING AT Tue Mar 12 00:55:46 2024

Mar 12 00:55:44 *	Now talking on #emacs
Mar 12 00:55:44 *	Topic for #emacs is: Beware the IDEs of March. | Before helping, we need your Emacs/OS version & Kit | Emacs questions take priority over chit-chat | pastebin: https://bpa.st/+emacs-lisp | No Public Logging, racism, sexism, xenophobia, botwanking, or other asshattery
Mar 12 00:55:44 *	Topic for #emacs set by e1f!~user@user/e1f (Tue Mar  5 16:12:43 2024)
Mar 12 00:55:56 <quiliro>	tested the value of `erc-ignore-list' after /ignore
Mar 12 00:56:01 <mwnaylor>	Since customize is a current topic, I'm looking into the use of the `defcustom' macro.
Mar 12 00:56:02 <quiliro>	but it is not modified
Mar 12 01:05:29 <edgar-rft>	,df defcustom
Mar 12 01:05:30 <fsbot>	defcustom is a Lisp macro in ‘custom.el’.
Mar 12 01:05:30 <fsbot>	(defcustom SYMBOL STANDARD DOC &rest ARGS)
Mar 12 01:05:30 <fsbot>	Declare SYMBOL as a customizable variable.
Mar 12 01:05:30 <fsbot>	SYMBOL is the variable name; it should not be quoted. ;;[ ,more / ,dump]
Mar 12 01:07:36 <edgar-rft>	defcustom in the Elisp manual -> https://www.gnu.org/software/emacs/manual/html_node/elisp/Variable-Definitions.html
Mar 12 01:09:08 <edgar-rft>	there's probably an info version of the Elisp manual coming with your Emacs but I have no info version here, so I leave it to others to fiddle out the link :-)
Mar 12 01:11:41 <quiliro>	(info "(elisp) Variable Definitions")
Mar 12 01:13:54 <edgar-rft>	thank you
Mar 12 01:14:16 <mwnaylor>	I'm reading the relevant portions of the elisp info. For a big topic like this, I've learned the hard way that skimming through just once is a recipe for failure.
Mar 12 01:16:33 <twb>	Can I "look up" foo.example.com on https://www.certificate-transparency.org/ and see a log of what was issued and when?
Mar 12 01:19:00 <RickAstley>	How to get rainbow parens to showup in org-src blocks?
Mar 12 01:23:51 <grym>	RickAstley: C-c ' perhaps
Mar 12 01:25:16 <bpalmer>	Good grief, people in excel just put up with functions like =SUBTOTAL(103, A1:a7)  where 103 is a magic number badly documented in some table
Mar 12 01:25:20 <RickAstley>	grym: I have that working, I mean in the src blocks itself
Mar 12 01:25:34 <RickAstley>	also anyone using clojure with org-babel literate programming? Not sure if any best practices
Mar 12 01:26:18 <bpalmer>	"103 is like 3 but ignores manually hidden cells"
Mar 12 01:27:27 <edgar-rft>	rudybot: tell bpalmer all about your secret numbers
Mar 12 01:27:27 <rudybot>	edgar-rft: yeah, the pythogoreans had to keep irrational numbers a secret.
Mar 12 01:28:11 <bpalmer>	that's only fair, as irrational numbers are proof of the universe's inherent insanity.
Mar 12 01:28:40 <grym>	irrationals are fine, it's the reals that are the real kicker
Mar 12 01:29:01 <mwnaylor>	bpalmer: working on my own major mode, extending org-mode, just to make dealing w/ spreadsheets more bearable. Hate excel & VBa, but have to deal with both when excel is the only option. VBa (excel and word) sucks so badly that I fall more in love with elisp extensions to any emacs major mode.
Mar 12 01:29:50 <grym>	huh, til "There is no standard notation for the set of irrational numbers, but the notations Q^_, R-Q, or R\Q, where the bar, minus sign, or backslash indicates the set complement of the rational numbers Q over the reals R, could all be used. "
Mar 12 01:30:23 <bpalmer>	I've never really used org-tbl  , as it's always seemed like it's cramming too much into a bit of text.
Mar 12 01:31:03 <grym>	i once heard someone describe \phi as "the most irrational irrational"
Mar 12 01:31:57 <bpalmer>	what was the argument?
Mar 12 01:31:58 <fsbot>	Yes, but we're standardizing on XML.
Mar 12 01:34:20 <grym>	the continued fraction expansion is really obviously "a screamingly recursive descent"
Mar 12 01:36:14 <bpalmer>	ah, right. ( https://blogs.sas.com/content/iml/2014/03/14/continued-fraction-expansion-of-pi.html )
Mar 12 01:37:18 <grym>	right, and \phi's is 1+ (1/ 1 + (1/ 1+ (....
Mar 12 01:37:39 <bpalmer>	(aye, that's mentioned at the very bottom, along with e and sqrt(2))
Mar 12 01:37:48 <grym>	ah, got it
Mar 12 01:37:53 <alephnull>	seems pretty rational to me
Mar 12 01:38:25 <kickingvegas>	2
Mar 12 01:38:31 <kickingvegas>	derp
Mar 12 01:39:29 <grym>	alephnull: you can't write that as a/b though
Mar 12 01:40:28 <alephnull>	It's just 1s. Almost rational then.
Mar 12 01:40:54 <grym>	in ohio, perhaps it's 1.61
Mar 12 01:41:37 <bpalmer>	judybot: in ohio,
Mar 12 01:41:39 <judybot>	bpalmer: a person is arrested if they ____ _____ ______ .
Mar 12 01:42:24 <grym>	hey at least it's not indiana
Mar 12 01:45:14 <bpalmer>	rudybot: which great lake's emanations produce the most erratic behavior?
Mar 12 01:45:15 <rudybot>	bpalmer: eh?  Try "rudybot: help".
Mar 12 01:46:28 <grym>	have you _been_ to gary
Mar 12 01:46:55 <weary-traveler>	bpalmer: is 103 a reference to a function?
Mar 12 01:48:14 <bpalmer>	weary-traveler: for the subtotal function, 3 is the value that says to use the "COUNTA" function.  100 + x means "X, but skip manually hidden cells"
Mar 12 01:48:48 <bpalmer>	SUBTOTAL apparently is what you use if there may be a filter on the table hiding rows.
Mar 12 01:49:54 <bpalmer>	So, all said, SUBTOTAL(103, A1:A100)  is used to count how many rows exist respecting automatic filters and manually hidden cells. For example, you might have a filter on the table to only show transactions within the year 2024, whereas the unfiltered table shows multiple  years
Mar 12 02:00:31 <weary-traveler>	right, so not only do we have numerical references to functions. offsets in said numerical references have special meaning. lovely.
Mar 12 02:02:09 <weary-traveler>	rudybot: it's all godel numbering and category theory anyway right?
Mar 12 02:02:10 <rudybot>	weary-traveler: I mean you could use godel numbering to encode something saner but at such cost!
Mar 12 02:04:38 *	edgar-rft prefers nudel numbering
Mar 12 02:05:22 <edgar-rft>	I think that's noodle numbering in english :-)
Mar 12 02:09:13 <Aurora_v_kosmose>	vterm is pretty nice. Sure is nice that Debian has packaged it now.
Mar 12 02:14:01 <grym>	then it can be old and out of date too!
Mar 12 02:14:02 <grym>	great
Mar 12 02:14:22 <weary-traveler>	M-x shell is helpful in that it provides a shell buffer with Emacs bindings and facilities. what's the advantage of things like vterm (as opposed to a regular terminal in, say, tmux)?
Mar 12 02:14:31 <Aurora_v_kosmose>	grym: Sure. Doesn't really matter, I'm mostly using it to handle legacy TUI programs.
Mar 12 02:15:02 <Aurora_v_kosmose>	weary-traveler: C-c C-t gives you back the read-only state with full Emacs binding.
Mar 12 02:15:57 <Aurora_v_kosmose>	Neither eshell or shell handle TUI particularly well. And while term technically does... it's *slow*.
Mar 12 02:16:14 <weary-traveler>	Aurora_v_kosmose: i see. so maybe a little more convenient than copying text over from tmux
Mar 12 02:16:59 <Aurora_v_kosmose>	weary-traveler: I would actually be more interested in dtach & detached.el as far as remote programs go, too.
Mar 12 02:17:33 <twb>	weary-traveler: I think the use case is "I'm already doing 95% of things in emacs, I don't want to start an external terminal emulator"
Mar 12 02:17:36 <Aurora_v_kosmose>	Persistent remote program management~
Mar 12 02:17:42 <weary-traveler>	remote? i use tmux locally
Mar 12 02:17:47 <twb>	weary-traveler: if you're already running *emacs* in a terminal emulator, then it's moot
Mar 12 02:18:01 <Aurora_v_kosmose>	weary-traveler: You can use it for local stuff too, of course.
Mar 12 02:18:27 <twb>	Also moot if all your CLI tools work in TERM=dumb (in which case M-x shell or eshell).
Mar 12 02:18:32 <Aurora_v_kosmose>	The "ssh + tmux attach" workflow is just common-enough that I mentioned it first.
Mar 12 02:18:33 <weary-traveler>	twb: i use graphical emacs, but usually have tilda or yaquake with tmux. which means proper terminal is a keybinding away
Mar 12 02:18:54 <twb>	weary-traveler: yeah IMO you're not the target market, then
Mar 12 02:19:34 <Aurora_v_kosmose>	In my case, Emacs does legitimately represent the majority of the UIs I use.
Mar 12 02:20:06 <Aurora_v_kosmose>	And once I finally finish setting up Guix to work with my setup, then Nyxt will be replacing much of Firefox's uses, so Emacs-like will cover nearly everything.
Mar 12 02:21:25 <Aurora_v_kosmose>	In truth I would like to have a truly Lisp-first environment like Interlisp was meant to provide but...  it seems unlikely I'll get that.
Mar 12 02:23:17 <weary-traveler>	twb: makes sense why i've never understood the appeal then
Mar 12 02:23:44 <Aurora_v_kosmose>	In short, you could say I use a unix-like system in spite for lack of better alternatives.
Mar 12 02:24:19 <weary-traveler>	Aurora_v_kosmose: i've been curious about nyxt, but enjoy my firefox addons too much
Mar 12 02:24:41 <weary-traveler>	teradactyl on firefox is good enough. coupled with emacs-edit-server
Mar 12 02:24:45 <Aurora_v_kosmose>	weary-traveler: Yeah, support for WebExtensions is upcoming, but not ready last I checked.
Mar 12 02:25:30 <Aurora_v_kosmose>	weary-traveler: I find myself limited in the functionality Firefox allows. The WebExtension APIs are purposely crippled and having day-long compile cycles just to fix a feature I want is completely unacceptable
Mar 12 02:25:41 <twb>	I mean... I don't care about extensions, except that "block ads" is an extension for some reason
Mar 12 02:25:45 <weary-traveler>	oh good to know they're working on webextensions support
Mar 12 02:26:09 <weary-traveler>	twb: what else would you want to browse the intertubes for after all
Mar 12 02:26:17 <Aurora_v_kosmose>	twb: Blocking ads and umatrix-like are the two main things I care about.
Mar 12 02:26:30 <Aurora_v_kosmose>	The latter could and probably should just be implemented in Common Lisp directly.
Mar 12 02:26:41 <twb>	"just"
Mar 12 02:27:18 <Aurora_v_kosmose>	twb: It helps that the hooks required to make it work are almost all implemented already.
Mar 12 02:27:18 <Aurora_v_kosmose>	What remains is the work of wiring things up together.
Mar 12 02:28:11 <weary-traveler>	Aurora_v_kosmose: what are some of the material restrictions in webextension api?
Mar 12 02:28:52 <Aurora_v_kosmose>	weary-traveler: You cannot initiate or listen to any network connections not based on HTTP, WebSockets or WebRTC.
Mar 12 02:29:07 <Aurora_v_kosmose>	weary-traveler: So if you want to do anything with databases or other p2p stuff? You're fucked.
Mar 12 02:29:59 <weary-traveler>	i'm not sure i'm convinced the browser would be the best place for "database or other p2p stuff"
Mar 12 02:32:13 <Aurora_v_kosmose>	weary-traveler: What about saving various documents you come across in a sane manner in a reliable & storage-rich location?
Mar 12 02:32:30 <twb>	Doesn't all browser-based ptp stuff actually work nowadays by pretending to be RTC
Mar 12 02:32:34 <twb>	Specifically because of those
Mar 12 02:33:22 <JordiGH>	I can't believe that Kingdom Hearts II has two Rikus?
Mar 12 02:34:18 <twb>	I'm still annoyed that "just play an H.265 UDP multicast stream" support was removed from browsers in favour of "download 2s snippets linked from an .m3u, over unicast tcp stream" *AND THEN* they dropped support for that *AS WELL* so you have to go reimplement it using client-side js
Mar 12 02:34:21 <weary-traveler>	detached.el looks interesting
Mar 12 02:36:23 <Aurora_v_kosmose>	twb: Yes, which makes it supremely annoying to interact with using anything non-browser based.
Mar 12 02:36:37 <Aurora_v_kosmose>	And having to implement things in JS is just gross.
Mar 12 02:36:53 <weary-traveler>	Aurora_v_kosmose: the save dialog / save link as not being sufficient why? i'm not sure i understand what's meant by "reliable & storage-rich location"
Mar 12 02:37:23 <Aurora_v_kosmose>	weary-traveler: Tagged/database filesystems never caught on.
Mar 12 02:37:34 <twb>	I quite like that htmx.js lets me *use* js without having to *write* js, for normal website stuff
Mar 12 02:37:39 <Aurora_v_kosmose>	So I get neither metadata that way nor any transactional reliability on IO.
Mar 12 02:38:47 <Aurora_v_kosmose>	Tagsistant and its ilk are nice but... they're nowhere near as good as an actual database filesystem.
Mar 12 02:39:24 <twb>	It does feel very weird that you're trying to implement, like, /bin/psql as a webext
Mar 12 02:39:38 <weary-traveler>	Aurora_v_kosmose: do you have an example of some of the metadata that you care about? i'm all in favor of a db as a fs. my db ends up being org files that may reference content that i've saved and note additional details
Mar 12 02:40:23 <Aurora_v_kosmose>	weary-traveler: Arbitrary tags and notes. Similar to Zotero.
Mar 12 02:41:00 <Aurora_v_kosmose>	With it not requiring persistent local storage.
Mar 12 02:41:09 <weary-traveler>	yeah, that goes in an org file as needed
Mar 12 02:41:47 <Aurora_v_kosmose>	org-files have some serious scalability issues past a few thousand lines.
Mar 12 02:41:54 <Aurora_v_kosmose>	org-roam would work a lot better if it was reworked to use sqlite as a backing store.
Mar 12 02:41:55 <weary-traveler>	huh interesting. my preference is to use local storage and then track it in git
Mar 12 02:42:48 <twb>	+1 for "sqlite all the things" as a default position
Mar 12 02:43:03 <twb>	https://www.sqlite.org/fasterthanfs.html
Mar 12 02:43:13 <mekeor>	make obarray a sqlite table xD
Mar 12 02:43:24 <twb>	You can also do version control on top of sqlite, but it's kind of dank.  https://fossil-scm.org/home/doc/trunk/www/hashpolicy.wiki
Mar 12 02:43:35 <weary-traveler>	pretty sure the scalability issues in org-files requires significantly more than a few thousand lines. i think it's at maybe a few hundred thousand lines
Mar 12 02:43:54 <Aurora_v_kosmose>	weary-traveler: On HDDs, no, they show up way earlier.
Mar 12 02:44:05 <twb>	Aurora_v_kosmose: HDDs as in spinning rust?
Mar 12 02:44:18 <Aurora_v_kosmose>	yes.
Mar 12 02:44:31 <weary-traveler>	Aurora_v_kosmose: on HDD should probably mmap the file first
Mar 12 02:44:52 <twb>	I've had good results in general by moving the dirents to SSD
Mar 12 02:44:59 <twb>	I don't use org tho
Mar 12 02:45:01 <Aurora_v_kosmose>	I hesitate as to whether org-roam should use the Emacs 29+ SQLite support or Emacsql, given the latter would also enable trivially switching over to conventional databases as needed.
Mar 12 02:45:32 <Aurora_v_kosmose>	weary-traveler: That works to a point. If you're trying to find entries related to a set of tags... it takes a while to traverse everything.
Mar 12 02:45:39 <twb>	https://manpages.debian.org/bookworm/zfsutils-linux/zpoolconcepts.7.en.html#special
Mar 12 02:46:13 <Aurora_v_kosmose>	My hacked up download manager for a few things manages to get faster responses despite storing significantly more data than I currently have in org files.
Mar 12 02:46:31 <Aurora_v_kosmose>	(Indexing matters)
Mar 12 02:46:46 <twb>	Aurora_v_kosmose: that sounds like the fundamental issue is "org lacks (or is bad at) indexing"
Mar 12 02:47:01 <twb>	snap
Mar 12 02:47:40 <xristos>	Org is not meant for indexing, you can build your own on top (I use sqlite)
Mar 12 02:47:45 <Aurora_v_kosmose>	twb: Well, org-roam (or something additional or parallel to it) could fairly easily add tags and whatnot to the database.
Mar 12 02:48:07 <xristos>	before I moved to sqlite, I was grepping ~50MB of org files which was fine
Mar 12 02:48:13 <twb>	xristos: IME org DOES all kinds of crazy shit, whether it was "meant to" or not :P
Mar 12 02:48:30 <Aurora_v_kosmose>	heh
Mar 12 02:49:01 <twb>	The largest dataset I regularly grep is about 1TB and I had to optimize the grep pipeline significantly to improve the time from 3 weeks to 3 hours
Mar 12 02:49:32 <Aurora_v_kosmose>	Still nontrivial
Mar 12 02:49:48 <twb>	If it was not text/plain but rather structured data, I think it'd be about 10-100TB
Mar 12 02:50:07 <twb>	But that's from memory and my memory is bad.  I haven't done a size estimate for a long time
Mar 12 02:50:19 <Aurora_v_kosmose>	zgrep-ish shenanigans?
Mar 12 02:51:05 <Aurora_v_kosmose>	Though some filesystems (namely btrfs) do have settings for transparent compression that can work even on databases.
Mar 12 02:51:17 <twb>	I'm using that already
Mar 12 02:52:57 <twb>	29M     du -h ~/.mozilla/firefox/*/places.sqlite; 70M     du -h ~/.mozilla/firefox/*/places.sqlite --apparent-size
Mar 12 02:54:13 <Aurora_v_kosmose>	What about compsize?
Mar 12 02:54:22 <Aurora_v_kosmose>	Since this tells you about sparse files, not transparent compression.
Mar 12 02:54:46 <twb>	That's with default settings.  Here's one that's actually tuned: 487M sudo du -sch /var/lib/mysql/; 1.5G sudo du --apparent-size -sch /var/lib/mysql/
Mar 12 02:54:47 <Aurora_v_kosmose>	(Unless your distro patched btrfs, I guess)
Mar 12 02:54:57 <twb>	Aurora_v_kosmose: no, that tells you about compression as well on ZFS
Mar 12 02:55:11 <weary-traveler>	ah zfs not btrfs
Mar 12 02:55:13 <Aurora_v_kosmose>	Ah, with btrfs it ignores compression.
Mar 12 02:55:19 <twb>	I can't be arsed running spaceanal.tcl
Mar 12 02:56:57 <twb>	If I ask zfs, I see this: https://paste.rs/lLPrn -- note journal and collectd (rrd)
Mar 12 02:58:45 <twb>	Obviously anything that's already compressed (e.g. movies, photos, music) will not benefit at all.
Mar 12 02:59:01 <Aurora_v_kosmose>	Some of those datasets compress notably better than others, with noticeable variance even between SQL servers.
Mar 12 03:00:03 <twb>	Aurora_v_kosmose: you can get 20% space saving in postgres just by reordering your columns
Mar 12 03:00:23 <Aurora_v_kosmose>	One of my gripes with ZFS is that it very much assumes enterprise budgets available to the user.
Mar 12 03:00:23 <Aurora_v_kosmose>	twb: Oh?
Mar 12 03:00:26 <twb>	Aurora_v_kosmose: if you *don't* do that, then you'd see an artificially high transparent compression ratio
Mar 12 03:00:29 <weary-traveler>	encryption is off on heavy but on on every subdir. is that because heavy is a mount-point or symlink?
Mar 12 03:00:53 <twb>	weary-traveler: "heavy" root dataset doesn't contain anything except other datasets, you can't mount it
Mar 12 03:01:10 <weary-traveler>	i see
Mar 12 03:01:30 <twb>	The naming scheme I'm using is "<host where the pool lives>/<host whose data this is>/..."
Mar 12 03:01:38 <weary-traveler>	is dataset a zfs term? something like btrfs subvolume?
Mar 12 03:02:09 <Aurora_v_kosmose>	weary-traveler: Yesn't. It *is* a proper term in ZFS parlance, but I was using it in a generic fashion.
Mar 12 03:02:10 <twb>	Whereas normally people has RPOOL/ and BPOOL/ and then RPOOL/ is the local host's data right away, which then makes things hard if you want to have backups of another host, with different policies
Mar 12 03:02:49 <twb>	weary-traveler: yes "dataset" includes both filesystems (containing files, equivalent to ext4 layer) and volumes (containing blocks, equivalent to LVM or md layer).
Mar 12 03:04:16 <twb>	Aurora_v_kosmose: you're absolutely right that ZFS doesn't scale down to 128MB eMMC
Mar 12 03:04:31 <twb>	Aurora_v_kosmose: it works perfectly fine on a pair of 2TB HDDs tho
Mar 12 03:05:12 <twb>	And I replaced btrfs with zfs on my single-disk laptop and have had fewer issues, although I was forced to manage the partition table by hand, like a SAVAGE
Mar 12 03:05:20 <weary-traveler>	okay citeproc, let's try and decipher your internals take#2
Mar 12 03:05:37 <twb>	So ZFS won't protect me from doing "sudo cp porn.iso /dev/nvme0n1" on my laptop
Mar 12 03:05:51 <weary-traveler>	btw, anyonw here familiar with how to use citeproc-render-item
Mar 12 03:06:07 <Aurora_v_kosmose>	twb: Not actually what I meant. It handles downgrades (from lack of budget sufficient to replace with same-size) horribly badly with significant persistent performance degradation.
Mar 12 03:06:23 <Aurora_v_kosmose>	twb: Its handling of slower drives without a *lot* of tuning is also subpar.
Mar 12 03:06:40 <Aurora_v_kosmose>	It also assumes sufficient money to upgrade whole vdevs at once.
Mar 12 03:07:07 <Aurora_v_kosmose>	Else it wastes the storage entirely.
Mar 12 03:07:52 <twb>	Ah yes you cannot move to a smaller drive at all AFAIK
Mar 12 03:07:53 <Aurora_v_kosmose>	btrfs' block-based slicing allows it to spread things on a gygabyte basis across the pool based on device policies.
Mar 12 03:08:13 <Aurora_v_kosmose>	*gigabyte
Mar 12 03:08:44 <Aurora_v_kosmose>	twb: You can now, with significant downsides.
Mar 12 03:09:34 <twb>	I don't think I've ever *wanted* to replace, say, a 2×1TB 5200rpm with a 2×512MB 7200rpm, or replace only 1 disk each year across 2 years
Mar 12 03:10:13 <Aurora_v_kosmose>	Nope, but having a sale on refurbished/used 8TBs or 12TBs means that you might well never be able to get a similarly good deal for the rest of the decade.
Mar 12 03:10:15 <twb>	To me that sounds like less of an "I'm poor" issue and more of an "I'm weird" issue :-)
Mar 12 03:10:29 <Aurora_v_kosmose>	And buying them new is an utterly unacceptable prospect.
Mar 12 03:11:04 <twb>	You'd buy an HDD with 5000 power-on hours already on the clock?
Mar 12 03:11:09 <twb>	That sounds super crazy to me
Mar 12 03:11:16 <twb>	*50,000
Mar 12 03:12:16 <Aurora_v_kosmose>	Drives that haven't failed before then usually aren't going to fail any time soon.
Mar 12 03:12:19 <Aurora_v_kosmose>	In contrast, a shit-ton of drives fail within their first year when new.
Mar 12 03:13:02 <Aurora_v_kosmose>	Considering how I don't really trust manufacturers not to keep copies of data for whatever reason, sending a faulty drive for repairs or replacement isn't an option.
Mar 12 03:13:03 <twb>	RMA them?
Mar 12 03:13:12 <twb>	Oh I see
Mar 12 03:13:28 <twb>	If the data in encrypted why would you care
Mar 12 03:13:57 <Aurora_v_kosmose>	Never know when a fatal flaw in commonly used encryption implementations might be found and vindicate cold storage of encrypted data.
Mar 12 03:14:55 <twb>	Fair.  PBKDF2 being cracked was a recent surprise to many
Mar 12 03:14:56 <Aurora_v_kosmose>	Going by historical precedent, that is a much more likely thing than the underlying cryptographic algorithms being directly broken.
Mar 12 03:15:10 <twb>	https://mjg59.dreamwidth.org/66429.html
Mar 12 03:15:53 <Aurora_v_kosmose>	Ah yeah. Though that was most likely bruteforced.
Mar 12 03:16:01 <Aurora_v_kosmose>	Not so much cracked, but indeed it has now become irrelevant security-wise.
Mar 12 03:16:10 <twb>	Yes it wasn't resistant to brute-force cracking
Mar 12 03:18:15 <Aurora_v_kosmose>	I wonder if various distros' packages of cryptsetup have been updated in response to this.
Mar 12 03:18:34 <Aurora_v_kosmose>	I've taken to just explicitly giving the argument to luksFormat just in case.
Mar 12 03:20:32 <Aurora_v_kosmose>	All drives I acquire though, whether new or not, I run through badblocks to see if they reasonably can be relied on to some degree.
Mar 12 03:20:45 <Aurora_v_kosmose>	That's hardly guaranteed to catch faults, but it'll at least eliminate the obviously broken.
Mar 12 03:21:35 <Aurora_v_kosmose>	SSDs (which I can't afford at useful sizes anyway) would complicate this, since wear-leveling would hide any such problem.
Mar 12 03:22:17 <weary-traveler>	doubt cryptsetup default would be updated to something that grub2 can't handle
Mar 12 03:22:37 <Aurora_v_kosmose>	Hm, grub sure needs to catch.
Mar 12 03:22:37 <Aurora_v_kosmose>	*catch up
Mar 12 03:23:56 <weary-traveler>	not really feasible. systemd-boot would be the more feasible approach
Mar 12 03:24:55 <weary-traveler>	grub2 doesn't even have the hardware acceleration for some of the primitives, which is why decrypting in grub2 takes quite a bit longer than via the initrd
Mar 12 03:24:57 <Aurora_v_kosmose>	Is that at least standalone?
Mar 12 03:25:42 <Aurora_v_kosmose>	That isn't really a problem, I think.
Mar 12 03:26:26 <weary-traveler>	it's not a problem. but it's indicative of how easily/quickly features can be added to grub2
Mar 12 03:27:23 <Aurora_v_kosmose>	I don't really get it. A pure software-based approach would be a lot faster to implement than bothering with portable hardware-accelerated code.
Mar 12 03:27:46 <Aurora_v_kosmose>	(Not faster to run, obviously)
Mar 12 03:31:32 <cowboy8625>	hey hey!
Mar 12 03:31:36 <Aurora_v_kosmose>	hewwo
Mar 12 03:31:50 <cowboy8625>	how goes it?
Mar 12 03:33:36 <Aurora_v_kosmose>	Not bad.
Mar 12 03:34:53 <hodapp>	https://thenewstack.io/nvidia-wants-to-rewrite-the-software-development-stack/ siiiiiiiiiigh
Mar 12 03:35:35 <twb>	with LLMs?
Mar 12 03:35:51 <hodapp>	yes
Mar 12 03:36:18 <Aurora_v_kosmose>	Because of course, *more* unreliability is exactly what we need⸮
Mar 12 03:36:41 <Aurora_v_kosmose>	Do they realize how farcical this makes them look?
Mar 12 03:36:43 <hodapp>	Aurora_v_kosmose: then who better to provide it than NVIDIA?
Mar 12 03:36:59 <twb>	Just replace "AI" with "bitcoin" in your mind
Mar 12 03:37:08 <Aurora_v_kosmose>	hodapp: Yeah, their reputation is already bad-enough without actively working to make it worse.
Mar 12 03:37:17 <hodapp>	would would I use my mind to do that when I could use an LLM to do it?
Mar 12 03:37:53 <twb>	hodapp: one hopes your neural net is bigger
Mar 12 03:38:22 <twb>	Obvious corrolary: steal babies and use them as neural nets for the LLM.  Can discard all but the head
Mar 12 03:38:34 <twb>	See also: the original plot of The Matrix
Mar 12 03:38:37 <Aurora_v_kosmose>	Doesn't just need to be bigger, also just better.
Mar 12 03:38:42 <Aurora_v_kosmose>	The average whale or elephant has *significantly* more brain mass than us apes.
Mar 12 03:38:47 <hodapp>	is The Matrix considered woke now?
Mar 12 03:38:55 <hodapp>	cuz the creators said it was all about being trans
Mar 12 03:39:10 <Aurora_v_kosmose>	"Why not both?"
Mar 12 03:40:11 <twb>	"mass" isn't the same as nuurons
Mar 12 03:41:14 <Aurora_v_kosmose>	twb: True, but in any case the number of interconnections is what seems to have an outsized impact.
Mar 12 03:41:30 <twb>	mmm
Mar 12 03:41:36 <weary-traveler>	is there already an ml-chain coin? if not, opportunity missed
Mar 12 03:41:41 <twb>	This is about where my subject-matter expertise breaks down
Mar 12 03:42:31 <Aurora_v_kosmose>	Mine as well, unfortunately.
Mar 12 03:43:19 <hodapp>	problem with biological neural networks is that there's all sorts of dumb rules about renting/buying them
Mar 12 03:43:35 <hodapp>	"blah blah blah you can't do that" "blah blah blah they need to sleep sometimes" "blah blah blah you hurt its feelings"
Mar 12 03:43:48 <Aurora_v_kosmose>	The hardware to make and use them is also absurdly expensive.
Mar 12 03:44:07 <hodapp>	yeah there's lots of weird rules about buying that too
Mar 12 03:44:17 <hodapp>	people get *really* touchy
Mar 12 03:44:18 <Aurora_v_kosmose>	hodapp: Sentients are already using that mass, make your own.
Mar 12 03:45:01 <twb>	https://qntm.org/lena
Mar 12 03:50:36 <Aurora_v_kosmose>	> English Is the New Programming Language | Holy shit abandon all hope. Have they not *seen* the absurd mess legal books are in attempting (in vain) to make the language non-ambiguous?
Mar 12 03:51:45 <Aurora_v_kosmose>	> “My point is that programming has changed in a way that is probably less valuable,” | Indeed, people write dead programs in static languages now, mostly.
Mar 12 03:52:34 <Aurora_v_kosmose>	AI isn't going to change that, it'll make it worse.
Mar 12 03:53:05 <Aurora_v_kosmose>	> Generative AI will be more of an operating system, and humans can tell computers in plain language to create applications. Large language models (LLMs) will help humans run their ideas through computers, Huang said. | Wow, it's like a knockoff Lisp Machine dreamed up by a drunk.
Mar 12 03:53:15 <weary-traveler>	tbf making it worse is changing
Mar 12 03:53:17 <Aurora_v_kosmose>	(Worse than the original thing in basically all ways.)
Mar 12 03:53:20 <weary-traveler>	https://news.opensuse.org/2023/12/20/systemd-fde/
Mar 12 03:53:48 <Aurora_v_kosmose>	Modernizing Lisp Machines would be a step forward.
